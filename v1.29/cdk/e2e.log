  I0713 12:23:24.993927      20 e2e.go:117] Starting e2e run "3e220ee5-a92f-4a3a-a791-6f42378595e8" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1720873404 - will randomize all specs

Will run 388 of 7408 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:77
  Jul 13 12:23:25.260: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 12:23:25.261: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Jul 13 12:23:25.292: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Jul 13 12:23:25.296: INFO: 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  Jul 13 12:23:25.296: INFO: e2e test version: v1.29.6
  Jul 13 12:23:25.297: INFO: kube-apiserver version: v1.29.6
  Jul 13 12:23:25.297: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 12:23:25.302: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.042 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 07/13/24 12:23:25.531
  Jul 13 12:23:25.531: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename hostport @ 07/13/24 12:23:25.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:23:25.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:23:25.55
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 07/13/24 12:23:25.556
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.37.214 on the node which pod1 resides and expect scheduled @ 07/13/24 12:23:29.583
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.37.214 but use UDP protocol on the node which pod2 resides @ 07/13/24 12:23:33.603
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 07/13/24 12:23:37.633
  Jul 13 12:23:37.633: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.37.214 http://127.0.0.1:54323/hostname] Namespace:hostport-6251 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 13 12:23:37.633: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 12:23:37.634: INFO: ExecWithOptions: Clientset creation
  Jul 13 12:23:37.634: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-6251/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.37.214+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.37.214, port: 54323 @ 07/13/24 12:23:37.693
  Jul 13 12:23:37.693: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.37.214:54323/hostname] Namespace:hostport-6251 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 13 12:23:37.693: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 12:23:37.694: INFO: ExecWithOptions: Clientset creation
  Jul 13 12:23:37.694: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-6251/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.37.214%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.37.214, port: 54323 UDP @ 07/13/24 12:23:37.744
  Jul 13 12:23:37.744: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.37.214 54323] Namespace:hostport-6251 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 13 12:23:37.744: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 12:23:37.745: INFO: ExecWithOptions: Clientset creation
  Jul 13 12:23:37.745: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-6251/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.37.214+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  Jul 13 12:23:42.794: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-6251" for this suite. @ 07/13/24 12:23:42.797
â€¢ [17.274 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 07/13/24 12:23:42.805
  Jul 13 12:23:42.805: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename deployment @ 07/13/24 12:23:42.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:23:42.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:23:42.823
  STEP: creating a Deployment @ 07/13/24 12:23:42.829
  STEP: waiting for Deployment to be created @ 07/13/24 12:23:42.833
  STEP: waiting for all Replicas to be Ready @ 07/13/24 12:23:42.834
  Jul 13 12:23:42.835: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jul 13 12:23:42.835: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jul 13 12:23:42.848: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jul 13 12:23:42.848: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jul 13 12:23:42.863: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jul 13 12:23:42.863: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jul 13 12:23:42.893: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jul 13 12:23:42.893: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jul 13 12:23:44.033: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Jul 13 12:23:44.034: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Jul 13 12:23:45.065: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 07/13/24 12:23:45.065
  Jul 13 12:23:45.074: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 07/13/24 12:23:45.074
  Jul 13 12:23:45.075: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 0
  Jul 13 12:23:45.075: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 0
  Jul 13 12:23:45.075: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 0
  Jul 13 12:23:45.075: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 0
  Jul 13 12:23:45.075: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 0
  Jul 13 12:23:45.076: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 0
  Jul 13 12:23:45.076: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 0
  Jul 13 12:23:45.076: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 0
  Jul 13 12:23:45.076: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 1
  Jul 13 12:23:45.076: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 1
  Jul 13 12:23:45.076: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 2
  Jul 13 12:23:45.076: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 2
  Jul 13 12:23:45.076: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 2
  Jul 13 12:23:45.076: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 2
  Jul 13 12:23:45.088: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 2
  Jul 13 12:23:45.088: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 2
  Jul 13 12:23:45.110: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 2
  Jul 13 12:23:45.110: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 2
  Jul 13 12:23:45.125: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 1
  Jul 13 12:23:45.125: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 1
  Jul 13 12:23:45.134: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 1
  Jul 13 12:23:45.134: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 1
  Jul 13 12:23:46.073: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 2
  Jul 13 12:23:46.073: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 2
  Jul 13 12:23:46.115: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 1
  STEP: listing Deployments @ 07/13/24 12:23:46.115
  Jul 13 12:23:46.118: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 07/13/24 12:23:46.118
  Jul 13 12:23:46.125: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 07/13/24 12:23:46.125
  Jul 13 12:23:46.130: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jul 13 12:23:46.143: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jul 13 12:23:46.166: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jul 13 12:23:46.198: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jul 13 12:23:46.207: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jul 13 12:23:47.070: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jul 13 12:23:49.089: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  Jul 13 12:23:49.116: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jul 13 12:23:49.137: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jul 13 12:23:52.086: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 07/13/24 12:23:52.109
  STEP: fetching the DeploymentStatus @ 07/13/24 12:23:52.115
  Jul 13 12:23:52.118: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 1
  Jul 13 12:23:52.118: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 1
  Jul 13 12:23:52.119: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 1
  Jul 13 12:23:52.119: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 1
  Jul 13 12:23:52.119: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 1
  Jul 13 12:23:52.119: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 2
  Jul 13 12:23:52.119: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 3
  Jul 13 12:23:52.119: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 2
  Jul 13 12:23:52.119: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 2
  Jul 13 12:23:52.119: INFO: observed Deployment test-deployment in namespace deployment-896 with ReadyReplicas 3
  STEP: deleting the Deployment @ 07/13/24 12:23:52.119
  Jul 13 12:23:52.128: INFO: observed event type MODIFIED
  Jul 13 12:23:52.128: INFO: observed event type MODIFIED
  Jul 13 12:23:52.128: INFO: observed event type MODIFIED
  Jul 13 12:23:52.128: INFO: observed event type MODIFIED
  Jul 13 12:23:52.128: INFO: observed event type MODIFIED
  Jul 13 12:23:52.128: INFO: observed event type MODIFIED
  Jul 13 12:23:52.128: INFO: observed event type MODIFIED
  Jul 13 12:23:52.128: INFO: observed event type MODIFIED
  Jul 13 12:23:52.128: INFO: observed event type MODIFIED
  Jul 13 12:23:52.129: INFO: observed event type MODIFIED
  Jul 13 12:23:52.129: INFO: observed event type MODIFIED
  Jul 13 12:23:52.129: INFO: observed event type MODIFIED
  Jul 13 12:23:52.129: INFO: observed event type MODIFIED
  Jul 13 12:23:52.132: INFO: Log out all the ReplicaSets if there is no deployment created
  Jul 13 12:23:52.137: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-896",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d6278b44-de45-4726-a44f-2e551ec480c7",
      ResourceVersion: (string) (len=4) "4690",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856470225,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "a364f4ad-3c0c-4551-8333-d9633b441de8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856470232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 61 33 36 34  66 34 61 64 2d 33 63 30  |":\"a364f4ad-3c0|
              00000130  63 2d 34 35 35 31 2d 38  33 33 33 2d 64 39 36 33  |c-4551-8333-d963|
              00000140  33 62 34 34 31 64 65 38  5c 22 7d 22 3a 7b 7d 7d  |3b441de8\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856470232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Jul 13 12:23:52.141: INFO: pod: "test-deployment-64fd565c98-wgtwr":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-wgtwr",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=14) "deployment-896",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "52507cea-ff55-4e48-a77f-f04184ee1a14",
      ResourceVersion: (string) (len=4) "4685",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856470226,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856470234,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "d6278b44-de45-4726-a44f-2e551ec480c7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856470226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  64 36 32 37 38 62 34 34  |uid\":\"d6278b44|
              000000a0  2d 64 65 34 35 2d 34 37  32 36 2d 61 34 34 66 2d  |-de45-4726-a44f-|
              000000b0  32 65 35 35 31 65 63 34  38 30 63 37 5c 22 7d 22  |2e551ec480c7\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856470227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 37 37  2e 31 39 38 5c 22 7d 22  |2.168.77.198\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sjvq7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sjvq7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-37-214",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856470227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856470226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856470227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856470227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856470226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.37.214",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.37.214"
        }
      },
      PodIP: (string) (len=14) "192.168.77.198",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.77.198"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856470226,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63856470226,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://c1cf4f06ebdae1c99ef4795861ecaed2eb67fafebe047db5013e2b94af33b569",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jul 13 12:23:52.143: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-896",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c4f76b5c-1ecc-4680-8990-b53f4fb02775",
      ResourceVersion: (string) (len=4) "4682",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856470226,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "a364f4ad-3c0c-4551-8333-d9633b441de8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856470229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 61 33 36 34  66 34 61 64 2d 33 63 30  |":\"a364f4ad-3c0|
              00000130  63 2d 34 35 35 31 2d 38  33 33 33 2d 64 39 36 33  |c-4551-8333-d963|
              00000140  33 62 34 34 31 64 65 38  5c 22 7d 22 3a 7b 7d 7d  |3b441de8\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856470232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Jul 13 12:23:52.152: INFO: pod: "test-deployment-79ff746c4-4rcnf":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-4rcnf",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=14) "deployment-896",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cc8ae8b3-f863-44b0-8a3d-46f6c3412724",
      ResourceVersion: (string) (len=4) "4681",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856470229,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "c4f76b5c-1ecc-4680-8990-b53f4fb02775",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856470229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  63 34 66 37 36 62 35 63  |uid\":\"c4f76b5c|
              000000a0  2d 31 65 63 63 2d 34 36  38 30 2d 38 39 39 30 2d  |-1ecc-4680-8990-|
              000000b0  62 35 33 66 34 66 62 30  32 37 37 35 5c 22 7d 22  |b53f4fb02775\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856470232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 37 37  2e 31 39 39 5c 22 7d 22  |2.168.77.199\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-clxh5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-clxh5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-37-214",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856470232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856470229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856470232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856470232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856470229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.37.214",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.37.214"
        }
      },
      PodIP: (string) (len=14) "192.168.77.199",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.77.199"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856470229,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63856470231,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2a2c4388adbf657d1ccb40c32e6b480a7268f724c22933371f297a059bad9f76",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jul 13 12:23:52.162: INFO: pod: "test-deployment-79ff746c4-nt8hq":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-nt8hq",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=14) "deployment-896",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "79e825eb-b1b4-43d7-b99a-34b4a5093e84",
      ResourceVersion: (string) (len=4) "4699",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856470226,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856470233,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "c4f76b5c-1ecc-4680-8990-b53f4fb02775",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856470226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  63 34 66 37 36 62 35 63  |uid\":\"c4f76b5c|
              000000a0  2d 31 65 63 63 2d 34 36  38 30 2d 38 39 39 30 2d  |-1ecc-4680-8990-|
              000000b0  62 35 33 66 34 66 62 30  32 37 37 35 5c 22 7d 22  |b53f4fb02775\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856470229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 36 37  2e 31 33 32 5c 22 7d 22  |2.168.67.132\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vqhvn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vqhvn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-89-122",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856470229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856470226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856470229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856470229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856470226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.89.122",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.89.122"
        }
      },
      PodIP: (string) (len=14) "192.168.67.132",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.67.132"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856470226,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63856470228,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://dd4c6f17c5dbb348ce7855417a6d47829b2bd33dca27ed086602c8e90f1bb2f3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jul 13 12:23:52.164: INFO: ReplicaSet "test-deployment-7fcc79b8c7":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-7fcc79b8c7",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-896",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "080cd89c-068b-4221-9c55-0ef67f6d1b7f",
      ResourceVersion: (string) (len=4) "4532",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856470222,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "a364f4ad-3c0c-4551-8333-d9633b441de8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856470226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 61 33 36 34  66 34 61 64 2d 33 63 30  |":\"a364f4ad-3c0|
              00000130  63 2d 34 35 35 31 2d 38  33 33 33 2d 64 39 36 33  |c-4551-8333-d963|
              00000140  33 62 34 34 31 64 65 38  5c 22 7d 22 3a 7b 7d 7d  |3b441de8\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856470226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Jul 13 12:23:52.168: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-896" for this suite. @ 07/13/24 12:23:52.171
â€¢ [9.373 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 07/13/24 12:23:52.178
  Jul 13 12:23:52.178: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/13/24 12:23:52.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:23:52.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:23:52.196
  Jul 13 12:23:52.197: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 12:23:52.734: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3877" for this suite. @ 07/13/24 12:23:52.739
â€¢ [0.569 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 07/13/24 12:23:52.747
  Jul 13 12:23:52.747: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename container-probe @ 07/13/24 12:23:52.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:23:52.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:23:52.764
  STEP: Creating pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221 @ 07/13/24 12:23:52.766
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/13/24 12:23:54.781
  Jul 13 12:23:54.784: INFO: Initial restart count of pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd is 0
  Jul 13 12:23:54.788: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:23:56.794: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:23:58.797: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:24:00.802: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:24:02.808: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:24:04.812: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:24:06.817: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:24:08.822: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:24:10.825: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:24:12.830: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:24:14.833: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:24:16.837: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:24:18.841: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:24:20.846: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:24:22.852: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:24:24.856: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:24:26.862: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:24:28.867: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:24:30.872: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:24:32.876: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:24:34.879: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:24:36.883: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:24:38.888: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:24:40.891: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:24:42.896: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:24:44.902: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:24:46.906: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:24:48.910: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:24:50.915: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:24:52.919: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:24:54.924: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:24:56.927: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:24:58.933: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:25:00.938: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:25:02.941: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:25:04.946: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:25:06.952: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:25:08.957: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:25:10.961: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:25:12.966: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:25:14.971: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:25:16.976: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:25:18.981: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:25:20.985: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:25:22.990: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:25:24.994: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:25:27.001: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:25:29.006: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:25:31.010: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:25:33.015: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:25:35.018: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:25:37.023: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:25:39.028: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:25:41.032: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:25:43.036: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:25:45.041: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:25:47.045: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:25:49.050: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:25:51.055: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:25:53.059: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:25:55.064: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:25:57.068: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:25:59.073: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:26:01.078: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:26:03.082: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:26:05.088: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:26:07.093: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:26:09.097: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:26:11.102: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:26:13.105: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:26:15.110: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:26:17.114: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:26:19.119: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:26:21.124: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:26:23.127: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:26:25.133: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:26:27.139: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:26:29.143: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:26:31.147: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:26:33.152: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:26:35.157: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:26:37.162: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:26:39.167: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:26:41.170: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:26:43.176: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:26:45.180: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:26:47.186: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:26:49.192: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:26:51.195: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:26:53.199: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:26:55.205: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:26:57.209: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:26:59.215: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:27:01.219: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:27:03.223: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:27:05.229: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:27:07.233: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:27:09.237: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:27:11.242: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:27:13.247: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:27:15.253: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:27:17.257: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:27:19.261: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:27:21.266: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:27:23.269: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:27:25.274: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:27:27.282: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:27:29.286: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:27:31.290: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:27:33.294: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:27:35.299: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:27:37.304: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:27:39.309: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:27:41.313: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:27:43.317: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:27:45.322: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:27:47.327: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:27:49.332: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:27:51.336: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  Jul 13 12:27:53.340: INFO: Get pod test-webserver-b2192e39-a446-47f2-8d16-c4cfd1c2dcfd in namespace container-probe-3221
  STEP: deleting the pod @ 07/13/24 12:27:55.341
  Jul 13 12:27:55.354: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3221" for this suite. @ 07/13/24 12:27:55.358
â€¢ [242.618 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 07/13/24 12:27:55.365
  Jul 13 12:27:55.365: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename projected @ 07/13/24 12:27:55.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:27:55.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:27:55.383
  STEP: Creating the pod @ 07/13/24 12:27:55.386
  Jul 13 12:27:57.935: INFO: Successfully updated pod "labelsupdateaf6e04d4-aa91-41cf-8690-54808d537c9c"
  Jul 13 12:28:01.959: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9249" for this suite. @ 07/13/24 12:28:01.962
â€¢ [6.604 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 07/13/24 12:28:01.969
  Jul 13 12:28:01.969: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename dns @ 07/13/24 12:28:01.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:28:01.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:28:01.986
  STEP: Creating a test headless service @ 07/13/24 12:28:01.988
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4270.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-4270.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4270.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-4270.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4270.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-4270.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4270.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-4270.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4270.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-4270.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4270.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-4270.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 158.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.158_udp@PTR;check="$$(dig +tcp +noall +answer +search 158.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.158_tcp@PTR;sleep 1; done
   @ 07/13/24 12:28:02.004
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4270.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4270.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4270.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4270.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4270.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-4270.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4270.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-4270.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4270.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-4270.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4270.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-4270.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 158.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.158_udp@PTR;check="$$(dig +tcp +noall +answer +search 158.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.158_tcp@PTR;sleep 1; done
   @ 07/13/24 12:28:02.004
  STEP: creating a pod to probe DNS @ 07/13/24 12:28:02.004
  STEP: submitting the pod to kubernetes @ 07/13/24 12:28:02.004
  STEP: retrieving the pod @ 07/13/24 12:28:08.035
  STEP: looking for the results for each expected name from probers @ 07/13/24 12:28:08.038
  Jul 13 12:28:08.043: INFO: Unable to read wheezy_udp@dns-test-service.dns-4270.svc.cluster.local from pod dns-4270/dns-test-6c5ad115-c6ef-4112-b0e3-769ab06cad0a: the server could not find the requested resource (get pods dns-test-6c5ad115-c6ef-4112-b0e3-769ab06cad0a)
  Jul 13 12:28:08.047: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4270.svc.cluster.local from pod dns-4270/dns-test-6c5ad115-c6ef-4112-b0e3-769ab06cad0a: the server could not find the requested resource (get pods dns-test-6c5ad115-c6ef-4112-b0e3-769ab06cad0a)
  Jul 13 12:28:08.050: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4270.svc.cluster.local from pod dns-4270/dns-test-6c5ad115-c6ef-4112-b0e3-769ab06cad0a: the server could not find the requested resource (get pods dns-test-6c5ad115-c6ef-4112-b0e3-769ab06cad0a)
  Jul 13 12:28:08.055: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4270.svc.cluster.local from pod dns-4270/dns-test-6c5ad115-c6ef-4112-b0e3-769ab06cad0a: the server could not find the requested resource (get pods dns-test-6c5ad115-c6ef-4112-b0e3-769ab06cad0a)
  Jul 13 12:28:08.095: INFO: Lookups using dns-4270/dns-test-6c5ad115-c6ef-4112-b0e3-769ab06cad0a failed for: [wheezy_udp@dns-test-service.dns-4270.svc.cluster.local wheezy_tcp@dns-test-service.dns-4270.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-4270.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4270.svc.cluster.local]

  Jul 13 12:28:08.101: INFO: Pod client logs for webserver: 
  Jul 13 12:28:08.107: INFO: Pod client logs for querier: 
  Jul 13 12:28:08.113: INFO: Pod client logs for jessie-querier: 
  Jul 13 12:28:13.099: INFO: DNS probes using dns-4270/dns-test-6c5ad115-c6ef-4112-b0e3-769ab06cad0a succeeded

  STEP: deleting the pod @ 07/13/24 12:28:13.1
  STEP: deleting the test service @ 07/13/24 12:28:13.119
  STEP: deleting the test headless service @ 07/13/24 12:28:13.134
  Jul 13 12:28:13.145: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4270" for this suite. @ 07/13/24 12:28:13.148
â€¢ [11.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1863
  STEP: Creating a kubernetes client @ 07/13/24 12:28:13.154
  Jul 13 12:28:13.154: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename kubectl @ 07/13/24 12:28:13.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:28:13.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:28:13.17
  STEP: Starting the proxy @ 07/13/24 12:28:13.172
  Jul 13 12:28:13.173: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-6243 proxy --unix-socket=/tmp/kubectl-proxy-unix2444980426/test'
  STEP: retrieving proxy /api/ output @ 07/13/24 12:28:13.205
  Jul 13 12:28:13.205: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6243" for this suite. @ 07/13/24 12:28:13.209
â€¢ [0.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 07/13/24 12:28:13.216
  Jul 13 12:28:13.216: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename prestop @ 07/13/24 12:28:13.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:28:13.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:28:13.231
  STEP: Creating server pod server in namespace prestop-9393 @ 07/13/24 12:28:13.233
  STEP: Waiting for pods to come up. @ 07/13/24 12:28:13.24
  STEP: Creating tester pod tester in namespace prestop-9393 @ 07/13/24 12:28:15.25
  STEP: Deleting pre-stop pod @ 07/13/24 12:28:17.267
  Jul 13 12:28:22.279: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 07/13/24 12:28:22.28
  Jul 13 12:28:22.291: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-9393" for this suite. @ 07/13/24 12:28:22.294
â€¢ [9.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 07/13/24 12:28:22.301
  Jul 13 12:28:22.301: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename projected @ 07/13/24 12:28:22.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:28:22.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:28:22.323
  STEP: Creating configMap with name projected-configmap-test-volume-map-f8f9ecbf-c2ec-460c-ac53-de339ba02c3c @ 07/13/24 12:28:22.324
  STEP: Creating a pod to test consume configMaps @ 07/13/24 12:28:22.329
  STEP: Saw pod success @ 07/13/24 12:28:26.35
  Jul 13 12:28:26.353: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-projected-configmaps-c96f74a9-c6a0-42ba-93b6-ce282191ac60 container agnhost-container: <nil>
  STEP: delete the pod @ 07/13/24 12:28:26.36
  Jul 13 12:28:26.373: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9599" for this suite. @ 07/13/24 12:28:26.376
â€¢ [4.080 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 07/13/24 12:28:26.381
  Jul 13 12:28:26.381: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename var-expansion @ 07/13/24 12:28:26.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:28:26.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:28:26.399
  STEP: Creating a pod to test substitution in volume subpath @ 07/13/24 12:28:26.401
  STEP: Saw pod success @ 07/13/24 12:28:30.422
  Jul 13 12:28:30.424: INFO: Trying to get logs from node ip-172-31-37-214 pod var-expansion-8fb0e82b-8845-48ab-891b-d87b56e6585c container dapi-container: <nil>
  STEP: delete the pod @ 07/13/24 12:28:30.431
  Jul 13 12:28:30.446: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2719" for this suite. @ 07/13/24 12:28:30.45
â€¢ [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 07/13/24 12:28:30.456
  Jul 13 12:28:30.456: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename watch @ 07/13/24 12:28:30.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:28:30.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:28:30.474
  STEP: creating a watch on configmaps with a certain label @ 07/13/24 12:28:30.476
  STEP: creating a new configmap @ 07/13/24 12:28:30.476
  STEP: modifying the configmap once @ 07/13/24 12:28:30.481
  STEP: changing the label value of the configmap @ 07/13/24 12:28:30.488
  STEP: Expecting to observe a delete notification for the watched object @ 07/13/24 12:28:30.494
  Jul 13 12:28:30.494: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5807  d3c7723a-0708-4df4-9c05-9510213d4a0d 5598 0 2024-07-13 12:28:30 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-13 12:28:30 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 13 12:28:30.495: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5807  d3c7723a-0708-4df4-9c05-9510213d4a0d 5599 0 2024-07-13 12:28:30 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-13 12:28:30 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 13 12:28:30.495: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5807  d3c7723a-0708-4df4-9c05-9510213d4a0d 5600 0 2024-07-13 12:28:30 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-13 12:28:30 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 07/13/24 12:28:30.495
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 07/13/24 12:28:30.502
  STEP: changing the label value of the configmap back @ 07/13/24 12:28:40.502
  STEP: modifying the configmap a third time @ 07/13/24 12:28:40.513
  STEP: deleting the configmap @ 07/13/24 12:28:40.521
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 07/13/24 12:28:40.527
  Jul 13 12:28:40.527: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5807  d3c7723a-0708-4df4-9c05-9510213d4a0d 5644 0 2024-07-13 12:28:30 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-13 12:28:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 13 12:28:40.527: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5807  d3c7723a-0708-4df4-9c05-9510213d4a0d 5645 0 2024-07-13 12:28:30 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-13 12:28:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 13 12:28:40.527: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5807  d3c7723a-0708-4df4-9c05-9510213d4a0d 5646 0 2024-07-13 12:28:30 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-13 12:28:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 13 12:28:40.528: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5807" for this suite. @ 07/13/24 12:28:40.531
â€¢ [10.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 07/13/24 12:28:40.536
  Jul 13 12:28:40.536: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename downward-api @ 07/13/24 12:28:40.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:28:40.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:28:40.556
  STEP: Creating the pod @ 07/13/24 12:28:40.559
  Jul 13 12:28:43.100: INFO: Successfully updated pod "annotationupdate77f01038-f7e1-4b03-8d8f-869c1ade6aa5"
  Jul 13 12:28:45.116: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8245" for this suite. @ 07/13/24 12:28:45.119
â€¢ [4.590 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1373
  STEP: Creating a kubernetes client @ 07/13/24 12:28:45.127
  Jul 13 12:28:45.127: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename kubectl @ 07/13/24 12:28:45.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:28:45.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:28:45.144
  STEP: validating cluster-info @ 07/13/24 12:28:45.146
  Jul 13 12:28:45.146: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-3881 cluster-info'
  Jul 13 12:28:45.194: INFO: stderr: ""
  Jul 13 12:28:45.194: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Jul 13 12:28:45.194: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3881" for this suite. @ 07/13/24 12:28:45.198
â€¢ [0.076 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 07/13/24 12:28:45.203
  Jul 13 12:28:45.203: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename gc @ 07/13/24 12:28:45.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:28:45.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:28:45.219
  STEP: create the rc @ 07/13/24 12:28:45.225
  W0713 12:28:45.229842      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 07/13/24 12:28:51.235
  STEP: wait for the rc to be deleted @ 07/13/24 12:28:51.241
  Jul 13 12:28:52.257: INFO: 80 pods remaining
  Jul 13 12:28:52.257: INFO: 80 pods has nil DeletionTimestamp
  Jul 13 12:28:52.257: INFO: 
  Jul 13 12:28:53.287: INFO: 71 pods remaining
  Jul 13 12:28:53.287: INFO: 71 pods has nil DeletionTimestamp
  Jul 13 12:28:53.287: INFO: 
  Jul 13 12:28:54.252: INFO: 60 pods remaining
  Jul 13 12:28:54.252: INFO: 60 pods has nil DeletionTimestamp
  Jul 13 12:28:54.252: INFO: 
  Jul 13 12:28:55.251: INFO: 40 pods remaining
  Jul 13 12:28:55.251: INFO: 40 pods has nil DeletionTimestamp
  Jul 13 12:28:55.251: INFO: 
  Jul 13 12:28:56.250: INFO: 31 pods remaining
  Jul 13 12:28:56.250: INFO: 31 pods has nil DeletionTimestamp
  Jul 13 12:28:56.250: INFO: 
  Jul 13 12:28:57.250: INFO: 20 pods remaining
  Jul 13 12:28:57.250: INFO: 20 pods has nil DeletionTimestamp
  Jul 13 12:28:57.250: INFO: 
  STEP: Gathering metrics @ 07/13/24 12:28:58.248
  W0713 12:28:58.253960      20 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jul 13 12:28:58.254: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jul 13 12:28:58.254: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3484" for this suite. @ 07/13/24 12:28:58.259
â€¢ [13.065 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 07/13/24 12:28:58.269
  Jul 13 12:28:58.269: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename container-probe @ 07/13/24 12:28:58.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:28:58.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:28:58.301
  STEP: Creating pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415 @ 07/13/24 12:28:58.31
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/13/24 12:29:00.334
  Jul 13 12:29:00.338: INFO: Initial restart count of pod liveness-6f390548-7028-433d-96bf-94729f238092 is 0
  Jul 13 12:29:00.342: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:29:02.345: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:29:04.350: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:29:06.355: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:29:08.359: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:29:10.364: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:29:12.370: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:29:14.375: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:29:16.380: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:29:18.384: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:29:20.389: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:29:20.389: INFO: Restart count of pod container-probe-8415/liveness-6f390548-7028-433d-96bf-94729f238092 is now 1 (20.050617373s elapsed)
  Jul 13 12:29:22.394: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:29:24.398: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:29:26.403: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:29:28.408: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:29:30.414: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:29:32.419: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:29:34.423: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:29:36.426: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:29:38.431: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:29:40.435: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:29:40.435: INFO: Restart count of pod container-probe-8415/liveness-6f390548-7028-433d-96bf-94729f238092 is now 2 (40.09672852s elapsed)
  Jul 13 12:29:42.440: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:29:44.445: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:29:46.450: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:29:48.455: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:29:50.461: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:29:52.465: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:29:54.469: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:29:56.473: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:29:58.478: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:30:00.483: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:30:00.483: INFO: Restart count of pod container-probe-8415/liveness-6f390548-7028-433d-96bf-94729f238092 is now 3 (1m0.144823269s elapsed)
  Jul 13 12:30:02.488: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:30:04.492: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:30:06.497: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:30:08.502: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:30:10.505: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:30:12.511: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:30:14.515: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:30:16.519: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:30:18.525: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:30:20.529: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:30:20.529: INFO: Restart count of pod container-probe-8415/liveness-6f390548-7028-433d-96bf-94729f238092 is now 4 (1m20.190944641s elapsed)
  Jul 13 12:30:22.535: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:30:24.539: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:30:26.544: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:30:28.549: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:30:30.553: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:30:32.558: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:30:34.563: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:30:36.566: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:30:38.571: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:30:40.576: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:30:42.582: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:30:44.587: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:30:46.592: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:30:48.597: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:30:50.601: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:30:52.606: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:30:54.611: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:30:56.617: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:30:58.621: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:31:00.626: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:31:02.631: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:31:04.635: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:31:06.640: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:31:08.646: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:31:10.650: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:31:12.656: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:31:14.660: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:31:16.664: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:31:18.671: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:31:20.674: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:31:22.678: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:31:24.683: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:31:26.687: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:31:28.693: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:31:30.698: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:31:32.702: INFO: Get pod liveness-6f390548-7028-433d-96bf-94729f238092 in namespace container-probe-8415
  Jul 13 12:31:32.702: INFO: Restart count of pod container-probe-8415/liveness-6f390548-7028-433d-96bf-94729f238092 is now 5 (2m32.36454092s elapsed)
  STEP: deleting the pod @ 07/13/24 12:31:32.703
  Jul 13 12:31:32.718: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8415" for this suite. @ 07/13/24 12:31:32.722
â€¢ [154.459 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 07/13/24 12:31:32.727
  Jul 13 12:31:32.727: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename configmap @ 07/13/24 12:31:32.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:31:32.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:31:32.748
  STEP: Creating configMap with name configmap-test-volume-619b295e-3e57-47ff-ad10-6ed7e6371614 @ 07/13/24 12:31:32.75
  STEP: Creating a pod to test consume configMaps @ 07/13/24 12:31:32.754
  STEP: Saw pod success @ 07/13/24 12:31:36.777
  Jul 13 12:31:36.780: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-configmaps-e94d8642-e7c6-4a89-a589-016fc7270ed1 container agnhost-container: <nil>
  STEP: delete the pod @ 07/13/24 12:31:36.791
  Jul 13 12:31:36.807: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2355" for this suite. @ 07/13/24 12:31:36.81
â€¢ [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 07/13/24 12:31:36.816
  Jul 13 12:31:36.816: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename endpointslice @ 07/13/24 12:31:36.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:31:36.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:31:36.834
  STEP: getting /apis @ 07/13/24 12:31:36.836
  STEP: getting /apis/discovery.k8s.io @ 07/13/24 12:31:36.838
  STEP: getting /apis/discovery.k8s.iov1 @ 07/13/24 12:31:36.839
  STEP: creating @ 07/13/24 12:31:36.839
  STEP: getting @ 07/13/24 12:31:36.853
  STEP: listing @ 07/13/24 12:31:36.856
  STEP: watching @ 07/13/24 12:31:36.859
  Jul 13 12:31:36.859: INFO: starting watch
  STEP: cluster-wide listing @ 07/13/24 12:31:36.859
  STEP: cluster-wide watching @ 07/13/24 12:31:36.862
  Jul 13 12:31:36.862: INFO: starting watch
  STEP: patching @ 07/13/24 12:31:36.863
  STEP: updating @ 07/13/24 12:31:36.868
  Jul 13 12:31:36.874: INFO: waiting for watch events with expected annotations
  Jul 13 12:31:36.874: INFO: saw patched and updated annotations
  STEP: deleting @ 07/13/24 12:31:36.874
  STEP: deleting a collection @ 07/13/24 12:31:36.884
  Jul 13 12:31:36.898: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3526" for this suite. @ 07/13/24 12:31:36.901
â€¢ [0.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:627
  STEP: Creating a kubernetes client @ 07/13/24 12:31:36.909
  Jul 13 12:31:36.909: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename job @ 07/13/24 12:31:36.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:31:36.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:31:36.925
  STEP: Creating a job @ 07/13/24 12:31:36.927
  STEP: Ensuring active pods == parallelism @ 07/13/24 12:31:36.933
  STEP: delete a job @ 07/13/24 12:31:38.938
  STEP: deleting Job.batch foo in namespace job-7065, will wait for the garbage collector to delete the pods @ 07/13/24 12:31:38.938
  Jul 13 12:31:38.998: INFO: Deleting Job.batch foo took: 6.705122ms
  Jul 13 12:31:39.098: INFO: Terminating Job.batch foo pods took: 100.056638ms
  STEP: Ensuring job was deleted @ 07/13/24 12:31:40.398
  Jul 13 12:31:40.400: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7065" for this suite. @ 07/13/24 12:31:40.403
â€¢ [3.501 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 07/13/24 12:31:40.41
  Jul 13 12:31:40.410: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename server-version @ 07/13/24 12:31:40.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:31:40.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:31:40.427
  STEP: Request ServerVersion @ 07/13/24 12:31:40.429
  STEP: Confirm major version @ 07/13/24 12:31:40.429
  Jul 13 12:31:40.429: INFO: Major version: 1
  STEP: Confirm minor version @ 07/13/24 12:31:40.429
  Jul 13 12:31:40.429: INFO: cleanMinorVersion: 29
  Jul 13 12:31:40.429: INFO: Minor version: 29
  Jul 13 12:31:40.430: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-5587" for this suite. @ 07/13/24 12:31:40.433
â€¢ [0.028 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 07/13/24 12:31:40.438
  Jul 13 12:31:40.438: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename init-container @ 07/13/24 12:31:40.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:31:40.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:31:40.455
  STEP: creating the pod @ 07/13/24 12:31:40.457
  Jul 13 12:31:40.457: INFO: PodSpec: initContainers in spec.initContainers
  Jul 13 12:31:45.013: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4962" for this suite. @ 07/13/24 12:31:45.018
â€¢ [4.585 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 07/13/24 12:31:45.024
  Jul 13 12:31:45.024: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename disruption @ 07/13/24 12:31:45.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:31:45.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:31:45.04
  STEP: Waiting for the pdb to be processed @ 07/13/24 12:31:45.048
  STEP: Updating PodDisruptionBudget status @ 07/13/24 12:31:45.052
  STEP: Waiting for all pods to be running @ 07/13/24 12:31:45.061
  Jul 13 12:31:45.064: INFO: running pods: 0 < 1
  STEP: locating a running pod @ 07/13/24 12:31:47.067
  STEP: Waiting for the pdb to be processed @ 07/13/24 12:31:47.076
  STEP: Patching PodDisruptionBudget status @ 07/13/24 12:31:47.084
  STEP: Waiting for the pdb to be processed @ 07/13/24 12:31:47.094
  Jul 13 12:31:47.097: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5658" for this suite. @ 07/13/24 12:31:47.099
â€¢ [2.081 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 07/13/24 12:31:47.104
  Jul 13 12:31:47.104: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename emptydir @ 07/13/24 12:31:47.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:31:47.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:31:47.124
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 07/13/24 12:31:47.125
  STEP: Saw pod success @ 07/13/24 12:31:49.141
  Jul 13 12:31:49.145: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-94007672-6ba5-4b81-854c-d31675641df1 container test-container: <nil>
  STEP: delete the pod @ 07/13/24 12:31:49.152
  Jul 13 12:31:49.164: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4078" for this suite. @ 07/13/24 12:31:49.168
â€¢ [2.077 seconds]
------------------------------
S
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 07/13/24 12:31:49.182
  Jul 13 12:31:49.182: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename container-runtime @ 07/13/24 12:31:49.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:31:49.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:31:49.2
  STEP: create the container @ 07/13/24 12:31:49.201
  W0713 12:31:49.208912      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 07/13/24 12:31:49.209
  STEP: get the container status @ 07/13/24 12:31:52.225
  STEP: the container should be terminated @ 07/13/24 12:31:52.228
  STEP: the termination message should be set @ 07/13/24 12:31:52.228
  Jul 13 12:31:52.228: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 07/13/24 12:31:52.228
  Jul 13 12:31:52.243: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7287" for this suite. @ 07/13/24 12:31:52.253
â€¢ [3.077 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 07/13/24 12:31:52.259
  Jul 13 12:31:52.259: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename security-context @ 07/13/24 12:31:52.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:31:52.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:31:52.282
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 07/13/24 12:31:52.283
  STEP: Saw pod success @ 07/13/24 12:31:56.305
  Jul 13 12:31:56.308: INFO: Trying to get logs from node ip-172-31-89-122 pod security-context-60d68f9f-4034-4f2e-8822-36a78218877b container test-container: <nil>
  STEP: delete the pod @ 07/13/24 12:31:56.322
  Jul 13 12:31:56.338: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-5500" for this suite. @ 07/13/24 12:31:56.342
â€¢ [4.091 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 07/13/24 12:31:56.35
  Jul 13 12:31:56.350: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename var-expansion @ 07/13/24 12:31:56.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:31:56.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:31:56.369
  STEP: creating the pod @ 07/13/24 12:31:56.371
  STEP: waiting for pod running @ 07/13/24 12:31:56.378
  STEP: creating a file in subpath @ 07/13/24 12:31:58.389
  Jul 13 12:31:58.391: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-4822 PodName:var-expansion-ed6d31e2-21df-4a64-be90-e623bb6fd97a ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 13 12:31:58.391: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 12:31:58.392: INFO: ExecWithOptions: Clientset creation
  Jul 13 12:31:58.392: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-4822/pods/var-expansion-ed6d31e2-21df-4a64-be90-e623bb6fd97a/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 07/13/24 12:31:58.443
  Jul 13 12:31:58.447: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-4822 PodName:var-expansion-ed6d31e2-21df-4a64-be90-e623bb6fd97a ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 13 12:31:58.447: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 12:31:58.447: INFO: ExecWithOptions: Clientset creation
  Jul 13 12:31:58.447: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-4822/pods/var-expansion-ed6d31e2-21df-4a64-be90-e623bb6fd97a/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 07/13/24 12:31:58.498
  Jul 13 12:31:59.011: INFO: Successfully updated pod "var-expansion-ed6d31e2-21df-4a64-be90-e623bb6fd97a"
  STEP: waiting for annotated pod running @ 07/13/24 12:31:59.011
  STEP: deleting the pod gracefully @ 07/13/24 12:31:59.016
  Jul 13 12:31:59.016: INFO: Deleting pod "var-expansion-ed6d31e2-21df-4a64-be90-e623bb6fd97a" in namespace "var-expansion-4822"
  Jul 13 12:31:59.028: INFO: Wait up to 5m0s for pod "var-expansion-ed6d31e2-21df-4a64-be90-e623bb6fd97a" to be fully deleted
  Jul 13 12:32:31.101: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4822" for this suite. @ 07/13/24 12:32:31.105
â€¢ [34.760 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 07/13/24 12:32:31.11
  Jul 13 12:32:31.110: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename replicaset @ 07/13/24 12:32:31.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:32:31.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:32:31.129
  STEP: Create a Replicaset @ 07/13/24 12:32:31.133
  STEP: Verify that the required pods have come up. @ 07/13/24 12:32:31.137
  Jul 13 12:32:31.140: INFO: Pod name sample-pod: Found 0 pods out of 1
  Jul 13 12:32:36.144: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/13/24 12:32:36.144
  STEP: Getting /status @ 07/13/24 12:32:36.144
  Jul 13 12:32:36.149: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 07/13/24 12:32:36.149
  Jul 13 12:32:36.156: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 07/13/24 12:32:36.156
  Jul 13 12:32:36.157: INFO: Observed &ReplicaSet event: ADDED
  Jul 13 12:32:36.157: INFO: Observed &ReplicaSet event: MODIFIED
  Jul 13 12:32:36.157: INFO: Observed &ReplicaSet event: MODIFIED
  Jul 13 12:32:36.157: INFO: Observed &ReplicaSet event: MODIFIED
  Jul 13 12:32:36.157: INFO: Found replicaset test-rs in namespace replicaset-7885 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jul 13 12:32:36.158: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 07/13/24 12:32:36.158
  Jul 13 12:32:36.158: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jul 13 12:32:36.164: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 07/13/24 12:32:36.164
  Jul 13 12:32:36.165: INFO: Observed &ReplicaSet event: ADDED
  Jul 13 12:32:36.165: INFO: Observed &ReplicaSet event: MODIFIED
  Jul 13 12:32:36.165: INFO: Observed &ReplicaSet event: MODIFIED
  Jul 13 12:32:36.166: INFO: Observed &ReplicaSet event: MODIFIED
  Jul 13 12:32:36.166: INFO: Observed replicaset test-rs in namespace replicaset-7885 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jul 13 12:32:36.166: INFO: Observed &ReplicaSet event: MODIFIED
  Jul 13 12:32:36.166: INFO: Found replicaset test-rs in namespace replicaset-7885 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Jul 13 12:32:36.166: INFO: Replicaset test-rs has a patched status
  Jul 13 12:32:36.166: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7885" for this suite. @ 07/13/24 12:32:36.17
â€¢ [5.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 07/13/24 12:32:36.178
  Jul 13 12:32:36.178: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename svcaccounts @ 07/13/24 12:32:36.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:32:36.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:32:36.196
  STEP: creating a ServiceAccount @ 07/13/24 12:32:36.197
  STEP: watching for the ServiceAccount to be added @ 07/13/24 12:32:36.208
  STEP: patching the ServiceAccount @ 07/13/24 12:32:36.208
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 07/13/24 12:32:36.212
  STEP: deleting the ServiceAccount @ 07/13/24 12:32:36.215
  Jul 13 12:32:36.235: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-676" for this suite. @ 07/13/24 12:32:36.239
â€¢ [0.068 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 07/13/24 12:32:36.246
  Jul 13 12:32:36.246: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename downward-api @ 07/13/24 12:32:36.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:32:36.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:32:36.263
  STEP: Creating a pod to test downward API volume plugin @ 07/13/24 12:32:36.265
  STEP: Saw pod success @ 07/13/24 12:32:40.288
  Jul 13 12:32:40.290: INFO: Trying to get logs from node ip-172-31-89-122 pod downwardapi-volume-7ec52349-d992-43ce-9356-0f0b94a40d11 container client-container: <nil>
  STEP: delete the pod @ 07/13/24 12:32:40.297
  Jul 13 12:32:40.312: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5775" for this suite. @ 07/13/24 12:32:40.316
â€¢ [4.075 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 07/13/24 12:32:40.322
  Jul 13 12:32:40.322: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename pods @ 07/13/24 12:32:40.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:32:40.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:32:40.34
  STEP: creating the pod @ 07/13/24 12:32:40.342
  STEP: submitting the pod to kubernetes @ 07/13/24 12:32:40.342
  STEP: verifying QOS class is set on the pod @ 07/13/24 12:32:40.352
  Jul 13 12:32:40.355: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3956" for this suite. @ 07/13/24 12:32:40.358
â€¢ [0.043 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 07/13/24 12:32:40.366
  Jul 13 12:32:40.366: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename disruption @ 07/13/24 12:32:40.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:32:40.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:32:40.382
  STEP: Waiting for the pdb to be processed @ 07/13/24 12:32:40.391
  STEP: Waiting for all pods to be running @ 07/13/24 12:32:40.413
  Jul 13 12:32:40.419: INFO: running pods: 0 < 3
  Jul 13 12:32:42.422: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6251" for this suite. @ 07/13/24 12:32:42.425
â€¢ [2.065 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1053
  STEP: Creating a kubernetes client @ 07/13/24 12:32:42.431
  Jul 13 12:32:42.431: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename kubectl @ 07/13/24 12:32:42.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:32:42.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:32:42.452
  STEP: create deployment with httpd image @ 07/13/24 12:32:42.454
  Jul 13 12:32:42.454: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-6765 create -f -'
  Jul 13 12:32:42.524: INFO: stderr: ""
  Jul 13 12:32:42.524: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 07/13/24 12:32:42.524
  Jul 13 12:32:42.524: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-6765 diff -f -'
  Jul 13 12:32:42.606: INFO: rc: 1
  Jul 13 12:32:42.606: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-6765 delete -f -'
  Jul 13 12:32:42.651: INFO: stderr: ""
  Jul 13 12:32:42.651: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Jul 13 12:32:42.651: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6765" for this suite. @ 07/13/24 12:32:42.657
â€¢ [0.231 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:357
  STEP: Creating a kubernetes client @ 07/13/24 12:32:42.662
  Jul 13 12:32:42.662: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename kubectl @ 07/13/24 12:32:42.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:32:42.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:32:42.68
  STEP: creating a replication controller @ 07/13/24 12:32:42.681
  Jul 13 12:32:42.681: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-2620 create -f -'
  Jul 13 12:32:42.770: INFO: stderr: ""
  Jul 13 12:32:42.770: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/13/24 12:32:42.77
  Jul 13 12:32:42.770: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-2620 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jul 13 12:32:42.816: INFO: stderr: ""
  Jul 13 12:32:42.816: INFO: stdout: "update-demo-nautilus-lbl57 update-demo-nautilus-xpztq "
  Jul 13 12:32:42.816: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-2620 get pods update-demo-nautilus-lbl57 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jul 13 12:32:42.859: INFO: stderr: ""
  Jul 13 12:32:42.859: INFO: stdout: ""
  Jul 13 12:32:42.859: INFO: update-demo-nautilus-lbl57 is created but not running
  Jul 13 12:32:47.861: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-2620 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jul 13 12:32:47.911: INFO: stderr: ""
  Jul 13 12:32:47.911: INFO: stdout: "update-demo-nautilus-lbl57 update-demo-nautilus-xpztq "
  Jul 13 12:32:47.911: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-2620 get pods update-demo-nautilus-lbl57 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jul 13 12:32:47.963: INFO: stderr: ""
  Jul 13 12:32:47.963: INFO: stdout: "true"
  Jul 13 12:32:47.963: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-2620 get pods update-demo-nautilus-lbl57 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jul 13 12:32:48.006: INFO: stderr: ""
  Jul 13 12:32:48.006: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jul 13 12:32:48.006: INFO: validating pod update-demo-nautilus-lbl57
  Jul 13 12:32:48.012: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jul 13 12:32:48.012: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jul 13 12:32:48.012: INFO: update-demo-nautilus-lbl57 is verified up and running
  Jul 13 12:32:48.012: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-2620 get pods update-demo-nautilus-xpztq -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jul 13 12:32:48.055: INFO: stderr: ""
  Jul 13 12:32:48.055: INFO: stdout: "true"
  Jul 13 12:32:48.055: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-2620 get pods update-demo-nautilus-xpztq -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jul 13 12:32:48.096: INFO: stderr: ""
  Jul 13 12:32:48.096: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jul 13 12:32:48.096: INFO: validating pod update-demo-nautilus-xpztq
  Jul 13 12:32:48.100: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jul 13 12:32:48.100: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jul 13 12:32:48.100: INFO: update-demo-nautilus-xpztq is verified up and running
  STEP: scaling down the replication controller @ 07/13/24 12:32:48.1
  Jul 13 12:32:48.101: INFO: scanned /root for discovery docs: <nil>
  Jul 13 12:32:48.101: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-2620 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  Jul 13 12:32:49.158: INFO: stderr: ""
  Jul 13 12:32:49.158: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/13/24 12:32:49.158
  Jul 13 12:32:49.159: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-2620 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jul 13 12:32:49.205: INFO: stderr: ""
  Jul 13 12:32:49.205: INFO: stdout: "update-demo-nautilus-lbl57 "
  Jul 13 12:32:49.205: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-2620 get pods update-demo-nautilus-lbl57 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jul 13 12:32:49.245: INFO: stderr: ""
  Jul 13 12:32:49.245: INFO: stdout: "true"
  Jul 13 12:32:49.245: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-2620 get pods update-demo-nautilus-lbl57 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jul 13 12:32:49.286: INFO: stderr: ""
  Jul 13 12:32:49.286: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jul 13 12:32:49.286: INFO: validating pod update-demo-nautilus-lbl57
  Jul 13 12:32:49.291: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jul 13 12:32:49.291: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jul 13 12:32:49.291: INFO: update-demo-nautilus-lbl57 is verified up and running
  STEP: scaling up the replication controller @ 07/13/24 12:32:49.291
  Jul 13 12:32:49.292: INFO: scanned /root for discovery docs: <nil>
  Jul 13 12:32:49.292: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-2620 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  Jul 13 12:32:50.353: INFO: stderr: ""
  Jul 13 12:32:50.353: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/13/24 12:32:50.353
  Jul 13 12:32:50.353: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-2620 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jul 13 12:32:50.398: INFO: stderr: ""
  Jul 13 12:32:50.398: INFO: stdout: "update-demo-nautilus-glnz2 update-demo-nautilus-lbl57 "
  Jul 13 12:32:50.398: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-2620 get pods update-demo-nautilus-glnz2 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jul 13 12:32:50.442: INFO: stderr: ""
  Jul 13 12:32:50.442: INFO: stdout: "true"
  Jul 13 12:32:50.442: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-2620 get pods update-demo-nautilus-glnz2 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jul 13 12:32:50.482: INFO: stderr: ""
  Jul 13 12:32:50.482: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jul 13 12:32:50.482: INFO: validating pod update-demo-nautilus-glnz2
  Jul 13 12:32:50.486: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jul 13 12:32:50.486: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jul 13 12:32:50.486: INFO: update-demo-nautilus-glnz2 is verified up and running
  Jul 13 12:32:50.486: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-2620 get pods update-demo-nautilus-lbl57 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jul 13 12:32:50.527: INFO: stderr: ""
  Jul 13 12:32:50.527: INFO: stdout: "true"
  Jul 13 12:32:50.527: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-2620 get pods update-demo-nautilus-lbl57 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jul 13 12:32:50.569: INFO: stderr: ""
  Jul 13 12:32:50.569: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jul 13 12:32:50.569: INFO: validating pod update-demo-nautilus-lbl57
  Jul 13 12:32:50.573: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jul 13 12:32:50.573: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jul 13 12:32:50.573: INFO: update-demo-nautilus-lbl57 is verified up and running
  STEP: using delete to clean up resources @ 07/13/24 12:32:50.573
  Jul 13 12:32:50.573: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-2620 delete --grace-period=0 --force -f -'
  Jul 13 12:32:50.617: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jul 13 12:32:50.617: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Jul 13 12:32:50.617: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-2620 get rc,svc -l name=update-demo --no-headers'
  Jul 13 12:32:50.665: INFO: stderr: "No resources found in kubectl-2620 namespace.\n"
  Jul 13 12:32:50.665: INFO: stdout: ""
  Jul 13 12:32:50.665: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-2620 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jul 13 12:32:50.706: INFO: stderr: ""
  Jul 13 12:32:50.706: INFO: stdout: ""
  Jul 13 12:32:50.706: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2620" for this suite. @ 07/13/24 12:32:50.708
â€¢ [8.051 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 07/13/24 12:32:50.713
  Jul 13 12:32:50.713: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/13/24 12:32:50.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:32:50.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:32:50.731
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 07/13/24 12:32:50.733
  Jul 13 12:32:50.733: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 12:32:52.102: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 12:32:57.005: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-513" for this suite. @ 07/13/24 12:32:57.011
â€¢ [6.306 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 07/13/24 12:32:57.019
  Jul 13 12:32:57.019: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename container-probe @ 07/13/24 12:32:57.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:32:57.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:32:57.036
  STEP: Creating pod liveness-000902ce-06d1-4bdc-83d2-4164be159308 in namespace container-probe-8735 @ 07/13/24 12:32:57.038
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/13/24 12:32:59.057
  Jul 13 12:32:59.060: INFO: Initial restart count of pod liveness-000902ce-06d1-4bdc-83d2-4164be159308 is 0
  Jul 13 12:32:59.064: INFO: Get pod liveness-000902ce-06d1-4bdc-83d2-4164be159308 in namespace container-probe-8735
  Jul 13 12:33:01.068: INFO: Get pod liveness-000902ce-06d1-4bdc-83d2-4164be159308 in namespace container-probe-8735
  Jul 13 12:33:03.072: INFO: Get pod liveness-000902ce-06d1-4bdc-83d2-4164be159308 in namespace container-probe-8735
  Jul 13 12:33:05.077: INFO: Get pod liveness-000902ce-06d1-4bdc-83d2-4164be159308 in namespace container-probe-8735
  Jul 13 12:33:07.080: INFO: Get pod liveness-000902ce-06d1-4bdc-83d2-4164be159308 in namespace container-probe-8735
  Jul 13 12:33:09.085: INFO: Get pod liveness-000902ce-06d1-4bdc-83d2-4164be159308 in namespace container-probe-8735
  Jul 13 12:33:11.090: INFO: Get pod liveness-000902ce-06d1-4bdc-83d2-4164be159308 in namespace container-probe-8735
  Jul 13 12:33:13.093: INFO: Get pod liveness-000902ce-06d1-4bdc-83d2-4164be159308 in namespace container-probe-8735
  Jul 13 12:33:15.097: INFO: Get pod liveness-000902ce-06d1-4bdc-83d2-4164be159308 in namespace container-probe-8735
  Jul 13 12:33:17.103: INFO: Get pod liveness-000902ce-06d1-4bdc-83d2-4164be159308 in namespace container-probe-8735
  Jul 13 12:33:19.107: INFO: Get pod liveness-000902ce-06d1-4bdc-83d2-4164be159308 in namespace container-probe-8735
  Jul 13 12:33:19.107: INFO: Restart count of pod container-probe-8735/liveness-000902ce-06d1-4bdc-83d2-4164be159308 is now 1 (20.046764688s elapsed)
  STEP: deleting the pod @ 07/13/24 12:33:19.107
  Jul 13 12:33:19.125: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8735" for this suite. @ 07/13/24 12:33:19.128
â€¢ [22.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 07/13/24 12:33:19.137
  Jul 13 12:33:19.137: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename services @ 07/13/24 12:33:19.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:33:19.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:33:19.155
  STEP: creating service multi-endpoint-test in namespace services-4685 @ 07/13/24 12:33:19.157
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4685 to expose endpoints map[] @ 07/13/24 12:33:19.165
  Jul 13 12:33:19.168: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  Jul 13 12:33:20.178: INFO: successfully validated that service multi-endpoint-test in namespace services-4685 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-4685 @ 07/13/24 12:33:20.178
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4685 to expose endpoints map[pod1:[100]] @ 07/13/24 12:33:22.196
  Jul 13 12:33:22.204: INFO: successfully validated that service multi-endpoint-test in namespace services-4685 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-4685 @ 07/13/24 12:33:22.204
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4685 to expose endpoints map[pod1:[100] pod2:[101]] @ 07/13/24 12:33:24.221
  Jul 13 12:33:24.234: INFO: successfully validated that service multi-endpoint-test in namespace services-4685 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 07/13/24 12:33:24.234
  Jul 13 12:33:24.234: INFO: Creating new exec pod
  Jul 13 12:33:27.248: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-4685 exec execpodftvb2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Jul 13 12:33:27.365: INFO: stderr: "+ nc -v -t -w 2 multi-endpoint-test 80\n+ echo hostName\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Jul 13 12:33:27.366: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 13 12:33:27.366: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-4685 exec execpodftvb2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.97 80'
  Jul 13 12:33:27.476: INFO: stderr: "+ nc -v -t -w 2 10.152.183.97 80\nConnection to 10.152.183.97 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Jul 13 12:33:27.476: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 13 12:33:27.476: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-4685 exec execpodftvb2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Jul 13 12:33:27.671: INFO: stderr: "+ nc -v -t -w 2 multi-endpoint-test 81\n+ echo hostName\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Jul 13 12:33:27.671: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 13 12:33:27.671: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-4685 exec execpodftvb2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.97 81'
  Jul 13 12:33:27.817: INFO: stderr: "+ nc -v -t -w 2 10.152.183.97 81\n+ echo hostName\nConnection to 10.152.183.97 81 port [tcp/*] succeeded!\n"
  Jul 13 12:33:27.817: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-4685 @ 07/13/24 12:33:27.818
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4685 to expose endpoints map[pod2:[101]] @ 07/13/24 12:33:27.829
  Jul 13 12:33:27.842: INFO: successfully validated that service multi-endpoint-test in namespace services-4685 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-4685 @ 07/13/24 12:33:27.842
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4685 to expose endpoints map[] @ 07/13/24 12:33:27.857
  Jul 13 12:33:28.874: INFO: successfully validated that service multi-endpoint-test in namespace services-4685 exposes endpoints map[]
  Jul 13 12:33:28.890: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4685" for this suite. @ 07/13/24 12:33:28.893
â€¢ [9.764 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3154
  STEP: Creating a kubernetes client @ 07/13/24 12:33:28.901
  Jul 13 12:33:28.901: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename services @ 07/13/24 12:33:28.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:33:28.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:33:28.919
  STEP: creating an Endpoint @ 07/13/24 12:33:28.924
  STEP: waiting for available Endpoint @ 07/13/24 12:33:28.929
  STEP: listing all Endpoints @ 07/13/24 12:33:28.93
  STEP: updating the Endpoint @ 07/13/24 12:33:28.932
  STEP: fetching the Endpoint @ 07/13/24 12:33:28.938
  STEP: patching the Endpoint @ 07/13/24 12:33:28.94
  STEP: fetching the Endpoint @ 07/13/24 12:33:28.946
  STEP: deleting the Endpoint by Collection @ 07/13/24 12:33:28.949
  STEP: waiting for Endpoint deletion @ 07/13/24 12:33:28.956
  STEP: fetching the Endpoint @ 07/13/24 12:33:28.957
  Jul 13 12:33:28.958: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9022" for this suite. @ 07/13/24 12:33:28.962
â€¢ [0.067 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 07/13/24 12:33:28.968
  Jul 13 12:33:28.968: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename webhook @ 07/13/24 12:33:28.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:33:28.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:33:28.982
  STEP: Setting up server cert @ 07/13/24 12:33:29.005
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/13/24 12:33:29.119
  STEP: Deploying the webhook pod @ 07/13/24 12:33:29.127
  STEP: Wait for the deployment to be ready @ 07/13/24 12:33:29.139
  Jul 13 12:33:29.146: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/13/24 12:33:31.157
  STEP: Verifying the service has paired with the endpoint @ 07/13/24 12:33:31.166
  Jul 13 12:33:32.167: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 07/13/24 12:33:32.237
  STEP: Creating a configMap that should be mutated @ 07/13/24 12:33:32.25
  STEP: Deleting the collection of validation webhooks @ 07/13/24 12:33:32.276
  STEP: Creating a configMap that should not be mutated @ 07/13/24 12:33:32.326
  Jul 13 12:33:32.371: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3823" for this suite. @ 07/13/24 12:33:32.374
  STEP: Destroying namespace "webhook-markers-9578" for this suite. @ 07/13/24 12:33:32.384
â€¢ [3.429 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 07/13/24 12:33:32.398
  Jul 13 12:33:32.398: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename dns @ 07/13/24 12:33:32.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:33:32.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:33:32.443
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 07/13/24 12:33:32.444
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 07/13/24 12:33:32.444
  STEP: creating a pod to probe DNS @ 07/13/24 12:33:32.444
  STEP: submitting the pod to kubernetes @ 07/13/24 12:33:32.444
  STEP: retrieving the pod @ 07/13/24 12:33:34.466
  STEP: looking for the results for each expected name from probers @ 07/13/24 12:33:34.469
  Jul 13 12:33:34.485: INFO: DNS probes using dns-7843/dns-test-a4ba516b-79ff-4603-9b50-ced931aa1fe4 succeeded

  STEP: deleting the pod @ 07/13/24 12:33:34.485
  Jul 13 12:33:34.498: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7843" for this suite. @ 07/13/24 12:33:34.501
â€¢ [2.107 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 07/13/24 12:33:34.505
  Jul 13 12:33:34.505: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename csistoragecapacity @ 07/13/24 12:33:34.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:33:34.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:33:34.523
  STEP: getting /apis @ 07/13/24 12:33:34.525
  STEP: getting /apis/storage.k8s.io @ 07/13/24 12:33:34.527
  STEP: getting /apis/storage.k8s.io/v1 @ 07/13/24 12:33:34.528
  STEP: creating @ 07/13/24 12:33:34.529
  STEP: watching @ 07/13/24 12:33:34.543
  Jul 13 12:33:34.543: INFO: starting watch
  STEP: getting @ 07/13/24 12:33:34.547
  STEP: listing in namespace @ 07/13/24 12:33:34.55
  STEP: listing across namespaces @ 07/13/24 12:33:34.552
  STEP: patching @ 07/13/24 12:33:34.555
  STEP: updating @ 07/13/24 12:33:34.559
  Jul 13 12:33:34.569: INFO: waiting for watch events with expected annotations in namespace
  Jul 13 12:33:34.569: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 07/13/24 12:33:34.569
  STEP: deleting a collection @ 07/13/24 12:33:34.58
  Jul 13 12:33:34.595: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-5756" for this suite. @ 07/13/24 12:33:34.599
â€¢ [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 07/13/24 12:33:34.604
  Jul 13 12:33:34.604: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename emptydir @ 07/13/24 12:33:34.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:33:34.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:33:34.628
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 07/13/24 12:33:34.629
  STEP: Saw pod success @ 07/13/24 12:33:38.648
  Jul 13 12:33:38.651: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-ff7c8947-c29b-4e7a-8079-ca9c2c000f10 container test-container: <nil>
  STEP: delete the pod @ 07/13/24 12:33:38.667
  Jul 13 12:33:38.679: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5160" for this suite. @ 07/13/24 12:33:38.682
â€¢ [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 07/13/24 12:33:38.687
  Jul 13 12:33:38.688: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename configmap @ 07/13/24 12:33:38.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:33:38.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:33:38.706
  STEP: Creating configMap with name configmap-test-volume-map-1418ee68-e314-4ffb-bfc4-72552120fb23 @ 07/13/24 12:33:38.707
  STEP: Creating a pod to test consume configMaps @ 07/13/24 12:33:38.712
  STEP: Saw pod success @ 07/13/24 12:33:42.732
  Jul 13 12:33:42.736: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-configmaps-148d820c-f2b7-49b4-82b5-4cc24a256cb5 container agnhost-container: <nil>
  STEP: delete the pod @ 07/13/24 12:33:42.743
  Jul 13 12:33:42.758: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8986" for this suite. @ 07/13/24 12:33:42.76
â€¢ [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 07/13/24 12:33:42.768
  Jul 13 12:33:42.768: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename replication-controller @ 07/13/24 12:33:42.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:33:42.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:33:42.788
  STEP: Creating ReplicationController "e2e-rc-qbtlm" @ 07/13/24 12:33:42.79
  Jul 13 12:33:42.796: INFO: Get Replication Controller "e2e-rc-qbtlm" to confirm replicas
  Jul 13 12:33:43.796: INFO: Get Replication Controller "e2e-rc-qbtlm" to confirm replicas
  Jul 13 12:33:43.799: INFO: Found 1 replicas for "e2e-rc-qbtlm" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-qbtlm" @ 07/13/24 12:33:43.799
  STEP: Updating a scale subresource @ 07/13/24 12:33:43.803
  STEP: Verifying replicas where modified for replication controller "e2e-rc-qbtlm" @ 07/13/24 12:33:43.807
  Jul 13 12:33:43.807: INFO: Get Replication Controller "e2e-rc-qbtlm" to confirm replicas
  Jul 13 12:33:44.808: INFO: Get Replication Controller "e2e-rc-qbtlm" to confirm replicas
  Jul 13 12:33:44.812: INFO: Found 2 replicas for "e2e-rc-qbtlm" replication controller
  Jul 13 12:33:44.812: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6244" for this suite. @ 07/13/24 12:33:44.816
â€¢ [2.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 07/13/24 12:33:44.824
  Jul 13 12:33:44.824: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename projected @ 07/13/24 12:33:44.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:33:44.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:33:44.842
  STEP: Creating a pod to test downward API volume plugin @ 07/13/24 12:33:44.843
  STEP: Saw pod success @ 07/13/24 12:33:48.868
  Jul 13 12:33:48.872: INFO: Trying to get logs from node ip-172-31-37-214 pod downwardapi-volume-1ef4547d-b7a9-4d73-9309-bb84a0c49d6f container client-container: <nil>
  STEP: delete the pod @ 07/13/24 12:33:48.878
  Jul 13 12:33:48.891: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6813" for this suite. @ 07/13/24 12:33:48.893
â€¢ [4.075 seconds]
------------------------------
SS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 07/13/24 12:33:48.899
  Jul 13 12:33:48.899: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename cronjob @ 07/13/24 12:33:48.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:33:48.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:33:48.915
  STEP: Creating a cronjob @ 07/13/24 12:33:48.916
  STEP: creating @ 07/13/24 12:33:48.916
  STEP: getting @ 07/13/24 12:33:48.922
  STEP: listing @ 07/13/24 12:33:48.925
  STEP: watching @ 07/13/24 12:33:48.928
  Jul 13 12:33:48.928: INFO: starting watch
  STEP: cluster-wide listing @ 07/13/24 12:33:48.928
  STEP: cluster-wide watching @ 07/13/24 12:33:48.931
  Jul 13 12:33:48.931: INFO: starting watch
  STEP: patching @ 07/13/24 12:33:48.931
  STEP: updating @ 07/13/24 12:33:48.938
  Jul 13 12:33:48.944: INFO: waiting for watch events with expected annotations
  Jul 13 12:33:48.944: INFO: saw patched and updated annotations
  STEP: patching /status @ 07/13/24 12:33:48.944
  STEP: updating /status @ 07/13/24 12:33:48.95
  STEP: get /status @ 07/13/24 12:33:48.955
  STEP: deleting @ 07/13/24 12:33:48.959
  STEP: deleting a collection @ 07/13/24 12:33:48.969
  Jul 13 12:33:48.978: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-685" for this suite. @ 07/13/24 12:33:48.981
â€¢ [0.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 07/13/24 12:33:48.989
  Jul 13 12:33:48.989: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename emptydir @ 07/13/24 12:33:48.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:33:49.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:33:49.008
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 07/13/24 12:33:49.009
  STEP: Saw pod success @ 07/13/24 12:33:53.028
  Jul 13 12:33:53.031: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-1299631e-fa55-4756-8c81-638884b0af1a container test-container: <nil>
  STEP: delete the pod @ 07/13/24 12:33:53.037
  Jul 13 12:33:53.052: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7509" for this suite. @ 07/13/24 12:33:53.055
â€¢ [4.073 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 07/13/24 12:33:53.062
  Jul 13 12:33:53.062: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename crd-webhook @ 07/13/24 12:33:53.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:33:53.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:33:53.08
  STEP: Setting up server cert @ 07/13/24 12:33:53.081
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 07/13/24 12:33:53.297
  STEP: Deploying the custom resource conversion webhook pod @ 07/13/24 12:33:53.301
  STEP: Wait for the deployment to be ready @ 07/13/24 12:33:53.314
  Jul 13 12:33:53.320: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/13/24 12:33:55.33
  STEP: Verifying the service has paired with the endpoint @ 07/13/24 12:33:55.339
  Jul 13 12:33:56.339: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Jul 13 12:33:56.346: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Creating a v1 custom resource @ 07/13/24 12:33:58.916
  STEP: Create a v2 custom resource @ 07/13/24 12:33:58.931
  STEP: List CRs in v1 @ 07/13/24 12:33:58.96
  STEP: List CRs in v2 @ 07/13/24 12:33:58.964
  Jul 13 12:33:59.525: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-9900" for this suite. @ 07/13/24 12:33:59.529
â€¢ [6.477 seconds]
------------------------------
SSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 07/13/24 12:33:59.54
  Jul 13 12:33:59.540: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename downward-api @ 07/13/24 12:33:59.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:33:59.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:33:59.558
  STEP: Creating a pod to test downward api env vars @ 07/13/24 12:33:59.562
  STEP: Saw pod success @ 07/13/24 12:34:03.585
  Jul 13 12:34:03.589: INFO: Trying to get logs from node ip-172-31-37-214 pod downward-api-8e6375eb-7fdd-47c2-b0a3-7bc0e1ba49b8 container dapi-container: <nil>
  STEP: delete the pod @ 07/13/24 12:34:03.594
  Jul 13 12:34:03.608: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5803" for this suite. @ 07/13/24 12:34:03.611
â€¢ [4.079 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 07/13/24 12:34:03.619
  Jul 13 12:34:03.619: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename field-validation @ 07/13/24 12:34:03.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:34:03.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:34:03.64
  STEP: apply creating a deployment @ 07/13/24 12:34:03.641
  Jul 13 12:34:03.653: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4724" for this suite. @ 07/13/24 12:34:03.657
â€¢ [0.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:47
  STEP: Creating a kubernetes client @ 07/13/24 12:34:03.664
  Jul 13 12:34:03.664: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename secrets @ 07/13/24 12:34:03.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:34:03.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:34:03.681
  STEP: Creating secret with name secret-test-14b1666d-1325-48b3-8cb8-193eb61d53bf @ 07/13/24 12:34:03.683
  STEP: Creating a pod to test consume secrets @ 07/13/24 12:34:03.687
  STEP: Saw pod success @ 07/13/24 12:34:07.705
  Jul 13 12:34:07.708: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-secrets-4864181a-dc57-4bdd-ac87-2ab07a7a3d3a container secret-env-test: <nil>
  STEP: delete the pod @ 07/13/24 12:34:07.715
  Jul 13 12:34:07.730: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2088" for this suite. @ 07/13/24 12:34:07.733
â€¢ [4.076 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 07/13/24 12:34:07.74
  Jul 13 12:34:07.740: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename replicaset @ 07/13/24 12:34:07.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:34:07.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:34:07.76
  Jul 13 12:34:07.761: INFO: Creating ReplicaSet my-hostname-basic-2a50f4ff-fb56-400c-a333-5d2f77a1deb7
  Jul 13 12:34:07.771: INFO: Pod name my-hostname-basic-2a50f4ff-fb56-400c-a333-5d2f77a1deb7: Found 0 pods out of 1
  Jul 13 12:34:12.777: INFO: Pod name my-hostname-basic-2a50f4ff-fb56-400c-a333-5d2f77a1deb7: Found 1 pods out of 1
  Jul 13 12:34:12.777: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-2a50f4ff-fb56-400c-a333-5d2f77a1deb7" is running
  Jul 13 12:34:12.780: INFO: Pod "my-hostname-basic-2a50f4ff-fb56-400c-a333-5d2f77a1deb7-slk7l" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-13 12:34:09 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-13 12:34:07 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-13 12:34:09 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-13 12:34:09 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-13 12:34:07 +0000 UTC Reason: Message:}])
  Jul 13 12:34:12.780: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 07/13/24 12:34:12.78
  Jul 13 12:34:12.789: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6844" for this suite. @ 07/13/24 12:34:12.793
â€¢ [5.059 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 07/13/24 12:34:12.799
  Jul 13 12:34:12.799: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename secrets @ 07/13/24 12:34:12.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:34:12.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:34:12.819
  STEP: Creating secret with name secret-test-map-25149cdd-8294-4072-9f21-d8ca623bef67 @ 07/13/24 12:34:12.821
  STEP: Creating a pod to test consume secrets @ 07/13/24 12:34:12.826
  STEP: Saw pod success @ 07/13/24 12:34:14.841
  Jul 13 12:34:14.845: INFO: Trying to get logs from node ip-172-31-89-122 pod pod-secrets-407fea84-6bad-4439-b4a9-815e9743d3bb container secret-volume-test: <nil>
  STEP: delete the pod @ 07/13/24 12:34:14.854
  Jul 13 12:34:14.872: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3559" for this suite. @ 07/13/24 12:34:14.875
â€¢ [2.083 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 07/13/24 12:34:14.883
  Jul 13 12:34:14.883: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename webhook @ 07/13/24 12:34:14.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:34:14.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:34:14.906
  STEP: Setting up server cert @ 07/13/24 12:34:14.928
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/13/24 12:34:15.131
  STEP: Deploying the webhook pod @ 07/13/24 12:34:15.139
  STEP: Wait for the deployment to be ready @ 07/13/24 12:34:15.149
  Jul 13 12:34:15.157: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/13/24 12:34:17.167
  STEP: Verifying the service has paired with the endpoint @ 07/13/24 12:34:17.176
  Jul 13 12:34:18.176: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 07/13/24 12:34:18.183
  STEP: create a namespace for the webhook @ 07/13/24 12:34:18.195
  STEP: create a configmap should be unconditionally rejected by the webhook @ 07/13/24 12:34:18.222
  Jul 13 12:34:18.294: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7479" for this suite. @ 07/13/24 12:34:18.299
  STEP: Destroying namespace "webhook-markers-7336" for this suite. @ 07/13/24 12:34:18.307
  STEP: Destroying namespace "fail-closed-namespace-5449" for this suite. @ 07/13/24 12:34:18.313
â€¢ [3.436 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:153
  STEP: Creating a kubernetes client @ 07/13/24 12:34:18.319
  Jul 13 12:34:18.319: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/13/24 12:34:18.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:34:18.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:34:18.336
  STEP: create the container to handle the HTTPGet hook request. @ 07/13/24 12:34:18.342
  STEP: create the pod with lifecycle hook @ 07/13/24 12:34:20.364
  STEP: delete the pod with lifecycle hook @ 07/13/24 12:34:22.379
  STEP: check prestop hook @ 07/13/24 12:34:24.396
  Jul 13 12:34:24.402: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4148" for this suite. @ 07/13/24 12:34:24.405
â€¢ [6.092 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 07/13/24 12:34:24.412
  Jul 13 12:34:24.412: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename pods @ 07/13/24 12:34:24.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:34:24.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:34:24.431
  STEP: Create a pod @ 07/13/24 12:34:24.433
  STEP: patching /status @ 07/13/24 12:34:26.453
  Jul 13 12:34:26.464: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Jul 13 12:34:26.465: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3775" for this suite. @ 07/13/24 12:34:26.468
â€¢ [2.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 07/13/24 12:34:26.475
  Jul 13 12:34:26.475: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename projected @ 07/13/24 12:34:26.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:34:26.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:34:26.495
  STEP: Creating projection with secret that has name projected-secret-test-map-ef334835-8b70-4a58-9ac2-5a9663e68bbb @ 07/13/24 12:34:26.499
  STEP: Creating a pod to test consume secrets @ 07/13/24 12:34:26.508
  STEP: Saw pod success @ 07/13/24 12:34:28.526
  Jul 13 12:34:28.530: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-projected-secrets-3a3e5158-b0b5-4dd8-9436-c60f0f476067 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/13/24 12:34:28.536
  Jul 13 12:34:28.549: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7065" for this suite. @ 07/13/24 12:34:28.553
â€¢ [2.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 07/13/24 12:34:28.56
  Jul 13 12:34:28.560: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename kubelet-test @ 07/13/24 12:34:28.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:34:28.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:34:28.58
  Jul 13 12:34:28.611: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4750" for this suite. @ 07/13/24 12:34:28.613
â€¢ [0.059 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 07/13/24 12:34:28.62
  Jul 13 12:34:28.620: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename resourcequota @ 07/13/24 12:34:28.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:34:28.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:34:28.64
  STEP: Counting existing ResourceQuota @ 07/13/24 12:34:28.642
  STEP: Creating a ResourceQuota @ 07/13/24 12:34:33.646
  STEP: Ensuring resource quota status is calculated @ 07/13/24 12:34:33.652
  STEP: Creating a Pod that fits quota @ 07/13/24 12:34:35.656
  STEP: Ensuring ResourceQuota status captures the pod usage @ 07/13/24 12:34:35.669
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 07/13/24 12:34:37.675
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 07/13/24 12:34:37.677
  STEP: Ensuring a pod cannot update its resource requirements @ 07/13/24 12:34:37.678
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 07/13/24 12:34:37.683
  STEP: Deleting the pod @ 07/13/24 12:34:39.687
  STEP: Ensuring resource quota status released the pod usage @ 07/13/24 12:34:39.703
  Jul 13 12:34:41.708: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4970" for this suite. @ 07/13/24 12:34:41.713
â€¢ [13.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:902
  STEP: Creating a kubernetes client @ 07/13/24 12:34:41.721
  Jul 13 12:34:41.721: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename statefulset @ 07/13/24 12:34:41.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:34:41.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:34:41.742
  STEP: Creating service test in namespace statefulset-4008 @ 07/13/24 12:34:41.743
  STEP: Creating statefulset ss in namespace statefulset-4008 @ 07/13/24 12:34:41.749
  Jul 13 12:34:41.759: INFO: Found 0 stateful pods, waiting for 1
  Jul 13 12:34:51.762: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 07/13/24 12:34:51.769
  STEP: updating a scale subresource @ 07/13/24 12:34:51.771
  STEP: verifying the statefulset Spec.Replicas was modified @ 07/13/24 12:34:51.777
  STEP: Patch a scale subresource @ 07/13/24 12:34:51.78
  STEP: verifying the statefulset Spec.Replicas was modified @ 07/13/24 12:34:51.786
  Jul 13 12:34:51.792: INFO: Deleting all statefulset in ns statefulset-4008
  Jul 13 12:34:51.795: INFO: Scaling statefulset ss to 0
  Jul 13 12:35:01.815: INFO: Waiting for statefulset status.replicas updated to 0
  Jul 13 12:35:01.817: INFO: Deleting statefulset ss
  Jul 13 12:35:01.830: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4008" for this suite. @ 07/13/24 12:35:01.832
â€¢ [20.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 07/13/24 12:35:01.84
  Jul 13 12:35:01.840: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename projected @ 07/13/24 12:35:01.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:35:01.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:35:01.854
  STEP: Creating configMap with name projected-configmap-test-volume-1eeb74ef-ed21-466d-87cc-aecdf2c1c5da @ 07/13/24 12:35:01.856
  STEP: Creating a pod to test consume configMaps @ 07/13/24 12:35:01.859
  STEP: Saw pod success @ 07/13/24 12:35:05.882
  Jul 13 12:35:05.887: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-projected-configmaps-1005bb67-fc5f-4a7e-a546-212220f4fa30 container agnhost-container: <nil>
  STEP: delete the pod @ 07/13/24 12:35:05.893
  Jul 13 12:35:05.908: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1236" for this suite. @ 07/13/24 12:35:05.911
â€¢ [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 07/13/24 12:35:05.919
  Jul 13 12:35:05.919: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename chunking @ 07/13/24 12:35:05.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:35:05.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:35:05.938
  STEP: creating a large number of resources @ 07/13/24 12:35:05.939
  STEP: retrieving the first page @ 07/13/24 12:35:23.624
  Jul 13 12:35:23.674: INFO: Retrieved 40/40 results with rv 11375 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzNzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 07/13/24 12:35:23.674
  Jul 13 12:35:43.681: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzNzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 13 12:36:03.683: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzNzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 13 12:36:23.681: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzNzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 13 12:36:43.679: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzNzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 13 12:37:03.679: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzNzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 13 12:37:23.679: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzNzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 13 12:37:43.683: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzNzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 13 12:38:03.678: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzNzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 13 12:38:23.679: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzNzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 13 12:38:43.680: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzNzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 13 12:39:03.682: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzNzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 13 12:39:23.680: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzNzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 13 12:39:43.678: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzNzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 13 12:40:03.681: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzNzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 13 12:40:23.679: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTEzNzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Jul 13 12:40:43.681: INFO: got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  Jul 13 12:40:43.681: INFO: Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 07/13/24 12:40:43.681
  STEP: retrieving all remaining pages @ 07/13/24 12:40:43.686
  Jul 13 12:40:43.689: INFO: Retrieved 40/40 results with rv 11985 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE5ODUsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  Jul 13 12:40:43.692: INFO: Retrieved 40/40 results with rv 11985 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE5ODUsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  Jul 13 12:40:43.697: INFO: Retrieved 40/40 results with rv 11985 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE5ODUsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  Jul 13 12:40:43.700: INFO: Retrieved 40/40 results with rv 11985 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE5ODUsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  Jul 13 12:40:43.703: INFO: Retrieved 40/40 results with rv 11985 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE5ODUsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  Jul 13 12:40:43.707: INFO: Retrieved 40/40 results with rv 11985 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE5ODUsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  Jul 13 12:40:43.710: INFO: Retrieved 40/40 results with rv 11985 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE5ODUsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  Jul 13 12:40:43.713: INFO: Retrieved 40/40 results with rv 11985 and continue 
  Jul 13 12:40:43.713: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-4554" for this suite. @ 07/13/24 12:40:43.716
â€¢ [337.803 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 07/13/24 12:40:43.722
  Jul 13 12:40:43.722: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename namespaces @ 07/13/24 12:40:43.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:40:43.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:40:43.74
  STEP: Creating a test namespace @ 07/13/24 12:40:43.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:40:43.756
  STEP: Creating a pod in the namespace @ 07/13/24 12:40:43.758
  STEP: Waiting for the pod to have running status @ 07/13/24 12:40:43.766
  STEP: Deleting the namespace @ 07/13/24 12:40:45.775
  STEP: Waiting for the namespace to be removed. @ 07/13/24 12:40:45.781
  STEP: Recreating the namespace @ 07/13/24 12:40:56.785
  STEP: Verifying there are no pods in the namespace @ 07/13/24 12:40:56.803
  Jul 13 12:40:56.811: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7246" for this suite. @ 07/13/24 12:40:56.815
  STEP: Destroying namespace "nsdeletetest-48" for this suite. @ 07/13/24 12:40:56.824
  Jul 13 12:40:56.826: INFO: Namespace nsdeletetest-48 was already deleted
  STEP: Destroying namespace "nsdeletetest-8859" for this suite. @ 07/13/24 12:40:56.826
â€¢ [13.110 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 07/13/24 12:40:56.834
  Jul 13 12:40:56.834: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename projected @ 07/13/24 12:40:56.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:40:56.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:40:56.85
  STEP: Creating configMap with name projected-configmap-test-volume-1d524f75-e64c-45f1-a68c-293cf85e373e @ 07/13/24 12:40:56.852
  STEP: Creating a pod to test consume configMaps @ 07/13/24 12:40:56.856
  STEP: Saw pod success @ 07/13/24 12:41:00.876
  Jul 13 12:41:00.879: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-projected-configmaps-5fdb94aa-0199-456d-807f-5d9442f75c3d container agnhost-container: <nil>
  STEP: delete the pod @ 07/13/24 12:41:00.896
  Jul 13 12:41:00.912: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-512" for this suite. @ 07/13/24 12:41:00.915
â€¢ [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 07/13/24 12:41:00.922
  Jul 13 12:41:00.922: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename webhook @ 07/13/24 12:41:00.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:41:00.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:41:00.941
  STEP: Setting up server cert @ 07/13/24 12:41:00.962
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/13/24 12:41:01.164
  STEP: Deploying the webhook pod @ 07/13/24 12:41:01.173
  STEP: Wait for the deployment to be ready @ 07/13/24 12:41:01.184
  Jul 13 12:41:01.190: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 07/13/24 12:41:03.201
  STEP: Verifying the service has paired with the endpoint @ 07/13/24 12:41:03.211
  Jul 13 12:41:04.211: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 07/13/24 12:41:04.277
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/13/24 12:41:04.302
  STEP: Deleting the collection of validation webhooks @ 07/13/24 12:41:04.324
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/13/24 12:41:04.38
  Jul 13 12:41:04.421: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4105" for this suite. @ 07/13/24 12:41:04.425
  STEP: Destroying namespace "webhook-markers-8354" for this suite. @ 07/13/24 12:41:04.432
â€¢ [3.516 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 07/13/24 12:41:04.438
  Jul 13 12:41:04.438: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename secrets @ 07/13/24 12:41:04.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:41:04.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:41:04.467
  Jul 13 12:41:04.503: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7993" for this suite. @ 07/13/24 12:41:04.505
â€¢ [0.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 07/13/24 12:41:04.511
  Jul 13 12:41:04.511: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename disruption @ 07/13/24 12:41:04.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:41:04.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:41:04.536
  STEP: Creating a kubernetes client @ 07/13/24 12:41:04.538
  Jul 13 12:41:04.538: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename disruption-2 @ 07/13/24 12:41:04.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:41:04.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:41:04.558
  STEP: Waiting for the pdb to be processed @ 07/13/24 12:41:04.564
  STEP: Waiting for the pdb to be processed @ 07/13/24 12:41:06.572
  STEP: Waiting for the pdb to be processed @ 07/13/24 12:41:08.579
  STEP: listing a collection of PDBs across all namespaces @ 07/13/24 12:41:10.583
  STEP: listing a collection of PDBs in namespace disruption-731 @ 07/13/24 12:41:10.587
  STEP: deleting a collection of PDBs @ 07/13/24 12:41:10.59
  STEP: Waiting for the PDB collection to be deleted @ 07/13/24 12:41:10.601
  Jul 13 12:41:10.604: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-988" for this suite. @ 07/13/24 12:41:10.612
  Jul 13 12:41:10.618: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-731" for this suite. @ 07/13/24 12:41:10.621
â€¢ [6.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 07/13/24 12:41:10.629
  Jul 13 12:41:10.629: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename secrets @ 07/13/24 12:41:10.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:41:10.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:41:10.646
  STEP: Creating secret with name secret-test-7cfbf830-e832-4a26-898a-71700a87e2aa @ 07/13/24 12:41:10.647
  STEP: Creating a pod to test consume secrets @ 07/13/24 12:41:10.651
  STEP: Saw pod success @ 07/13/24 12:41:14.672
  Jul 13 12:41:14.675: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-secrets-34e96c3c-ac48-41e3-9368-530bf1bd6eb6 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/13/24 12:41:14.682
  Jul 13 12:41:14.696: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9042" for this suite. @ 07/13/24 12:41:14.699
â€¢ [4.076 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 07/13/24 12:41:14.706
  Jul 13 12:41:14.706: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename sched-preemption @ 07/13/24 12:41:14.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:41:14.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:41:14.728
  Jul 13 12:41:14.742: INFO: Waiting up to 1m0s for all nodes to be ready
  Jul 13 12:42:14.746: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 07/13/24 12:42:14.748
  Jul 13 12:42:14.765: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Jul 13 12:42:14.772: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Jul 13 12:42:14.789: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Jul 13 12:42:14.796: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Jul 13 12:42:14.813: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Jul 13 12:42:14.819: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 07/13/24 12:42:14.819
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 07/13/24 12:42:16.84
  Jul 13 12:42:20.932: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1517" for this suite. @ 07/13/24 12:42:20.935
â€¢ [66.235 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 07/13/24 12:42:20.941
  Jul 13 12:42:20.941: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename containers @ 07/13/24 12:42:20.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:42:20.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:42:20.96
  STEP: Creating a pod to test override arguments @ 07/13/24 12:42:20.961
  STEP: Saw pod success @ 07/13/24 12:42:24.986
  Jul 13 12:42:24.988: INFO: Trying to get logs from node ip-172-31-37-214 pod client-containers-df016c1c-c1af-4e0a-9fbe-0d66013b46ed container agnhost-container: <nil>
  STEP: delete the pod @ 07/13/24 12:42:24.997
  Jul 13 12:42:25.014: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2613" for this suite. @ 07/13/24 12:42:25.016
â€¢ [4.081 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 07/13/24 12:42:25.023
  Jul 13 12:42:25.023: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename watch @ 07/13/24 12:42:25.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:42:25.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:42:25.045
  STEP: getting a starting resourceVersion @ 07/13/24 12:42:25.047
  STEP: starting a background goroutine to produce watch events @ 07/13/24 12:42:25.05
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 07/13/24 12:42:25.05
  Jul 13 12:42:27.831: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2970" for this suite. @ 07/13/24 12:42:27.878
â€¢ [2.909 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 07/13/24 12:42:27.932
  Jul 13 12:42:27.932: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename webhook @ 07/13/24 12:42:27.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:42:27.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:42:27.951
  STEP: Setting up server cert @ 07/13/24 12:42:27.975
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/13/24 12:42:28.242
  STEP: Deploying the webhook pod @ 07/13/24 12:42:28.249
  STEP: Wait for the deployment to be ready @ 07/13/24 12:42:28.259
  Jul 13 12:42:28.267: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/13/24 12:42:30.277
  STEP: Verifying the service has paired with the endpoint @ 07/13/24 12:42:30.287
  Jul 13 12:42:31.287: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 07/13/24 12:42:31.293
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 07/13/24 12:42:31.294
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 07/13/24 12:42:31.294
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 07/13/24 12:42:31.294
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 07/13/24 12:42:31.295
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 07/13/24 12:42:31.295
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 07/13/24 12:42:31.295
  Jul 13 12:42:31.335: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-347" for this suite. @ 07/13/24 12:42:31.338
  STEP: Destroying namespace "webhook-markers-2190" for this suite. @ 07/13/24 12:42:31.346
â€¢ [3.419 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1031
  STEP: Creating a kubernetes client @ 07/13/24 12:42:31.352
  Jul 13 12:42:31.352: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename statefulset @ 07/13/24 12:42:31.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:42:31.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:42:31.371
  STEP: Creating service test in namespace statefulset-3257 @ 07/13/24 12:42:31.372
  STEP: Creating statefulset ss in namespace statefulset-3257 @ 07/13/24 12:42:31.383
  Jul 13 12:42:31.391: INFO: Found 0 stateful pods, waiting for 1
  Jul 13 12:42:41.395: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 07/13/24 12:42:41.4
  STEP: Getting /status @ 07/13/24 12:42:41.408
  Jul 13 12:42:41.412: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 07/13/24 12:42:41.412
  Jul 13 12:42:41.421: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 07/13/24 12:42:41.421
  Jul 13 12:42:41.422: INFO: Observed &StatefulSet event: ADDED
  Jul 13 12:42:41.422: INFO: Found Statefulset ss in namespace statefulset-3257 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jul 13 12:42:41.422: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 07/13/24 12:42:41.422
  Jul 13 12:42:41.422: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jul 13 12:42:41.429: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 07/13/24 12:42:41.429
  Jul 13 12:42:41.430: INFO: Observed &StatefulSet event: ADDED
  Jul 13 12:42:41.430: INFO: Deleting all statefulset in ns statefulset-3257
  Jul 13 12:42:41.432: INFO: Scaling statefulset ss to 0
  Jul 13 12:42:51.445: INFO: Waiting for statefulset status.replicas updated to 0
  Jul 13 12:42:51.448: INFO: Deleting statefulset ss
  Jul 13 12:42:51.460: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3257" for this suite. @ 07/13/24 12:42:51.462
â€¢ [20.118 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 07/13/24 12:42:51.471
  Jul 13 12:42:51.471: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/13/24 12:42:51.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:42:51.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:42:51.488
  STEP: fetching the /apis discovery document @ 07/13/24 12:42:51.49
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 07/13/24 12:42:51.49
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 07/13/24 12:42:51.49
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 07/13/24 12:42:51.49
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 07/13/24 12:42:51.491
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 07/13/24 12:42:51.491
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 07/13/24 12:42:51.492
  Jul 13 12:42:51.492: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9383" for this suite. @ 07/13/24 12:42:51.495
â€¢ [0.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 07/13/24 12:42:51.501
  Jul 13 12:42:51.501: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename namespaces @ 07/13/24 12:42:51.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:42:51.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:42:51.519
  STEP: Updating Namespace "namespaces-7851" @ 07/13/24 12:42:51.521
  Jul 13 12:42:51.529: INFO: Namespace "namespaces-7851" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"3e220ee5-a92f-4a3a-a791-6f42378595e8", "kubernetes.io/metadata.name":"namespaces-7851", "namespaces-7851":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Jul 13 12:42:51.529: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7851" for this suite. @ 07/13/24 12:42:51.533
â€¢ [0.037 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 07/13/24 12:42:51.538
  Jul 13 12:42:51.538: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename svcaccounts @ 07/13/24 12:42:51.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:42:51.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:42:51.556
  Jul 13 12:42:51.570: INFO: created pod
  STEP: Saw pod success @ 07/13/24 12:42:55.581
  Jul 13 12:43:25.581: INFO: polling logs
  Jul 13 12:43:25.589: INFO: Pod logs: 
  I0713 12:42:52.150914       1 log.go:245] OK: Got token
  I0713 12:42:52.150964       1 log.go:245] validating with in-cluster discovery
  I0713 12:42:52.151121       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I0713 12:42:52.151134       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-8165:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000236f60), NotBefore:(*jwt.NumericDate)(0xc000237048), IssuedAt:(*jwt.NumericDate)(0xc000236f70), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8165", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"70b4e1ed-3e3f-4506-af23-110efca748d5"}}}
  I0713 12:42:52.159480       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0713 12:42:52.163857       1 log.go:245] OK: Validated signature on JWT
  I0713 12:42:52.163957       1 log.go:245] OK: Got valid claims from token!
  I0713 12:42:52.163991       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-8165:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0002b7818), NotBefore:(*jwt.NumericDate)(0xc0002b7840), IssuedAt:(*jwt.NumericDate)(0xc0002b7820), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8165", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"70b4e1ed-3e3f-4506-af23-110efca748d5"}}}

  Jul 13 12:43:25.589: INFO: completed pod
  Jul 13 12:43:25.595: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8165" for this suite. @ 07/13/24 12:43:25.599
â€¢ [34.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 07/13/24 12:43:25.606
  Jul 13 12:43:25.606: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename proxy @ 07/13/24 12:43:25.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:43:25.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:43:25.625
  Jul 13 12:43:25.626: INFO: Creating pod...
  Jul 13 12:43:27.643: INFO: Creating service...
  Jul 13 12:43:27.652: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4583/pods/agnhost/proxy/some/path/with/DELETE
  Jul 13 12:43:27.658: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jul 13 12:43:27.658: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4583/pods/agnhost/proxy/some/path/with/GET
  Jul 13 12:43:27.661: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Jul 13 12:43:27.661: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4583/pods/agnhost/proxy/some/path/with/HEAD
  Jul 13 12:43:27.665: INFO: http.Client request:HEAD | StatusCode:200
  Jul 13 12:43:27.665: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4583/pods/agnhost/proxy/some/path/with/OPTIONS
  Jul 13 12:43:27.669: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jul 13 12:43:27.669: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4583/pods/agnhost/proxy/some/path/with/PATCH
  Jul 13 12:43:27.672: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jul 13 12:43:27.672: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4583/pods/agnhost/proxy/some/path/with/POST
  Jul 13 12:43:27.676: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jul 13 12:43:27.676: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4583/pods/agnhost/proxy/some/path/with/PUT
  Jul 13 12:43:27.680: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jul 13 12:43:27.680: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4583/services/test-service/proxy/some/path/with/DELETE
  Jul 13 12:43:27.685: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jul 13 12:43:27.685: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4583/services/test-service/proxy/some/path/with/GET
  Jul 13 12:43:27.690: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Jul 13 12:43:27.690: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4583/services/test-service/proxy/some/path/with/HEAD
  Jul 13 12:43:27.695: INFO: http.Client request:HEAD | StatusCode:200
  Jul 13 12:43:27.696: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4583/services/test-service/proxy/some/path/with/OPTIONS
  Jul 13 12:43:27.700: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jul 13 12:43:27.700: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4583/services/test-service/proxy/some/path/with/PATCH
  Jul 13 12:43:27.705: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jul 13 12:43:27.706: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4583/services/test-service/proxy/some/path/with/POST
  Jul 13 12:43:27.711: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jul 13 12:43:27.711: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4583/services/test-service/proxy/some/path/with/PUT
  Jul 13 12:43:27.715: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jul 13 12:43:27.715: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4583" for this suite. @ 07/13/24 12:43:27.718
â€¢ [2.120 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 07/13/24 12:43:27.726
  Jul 13 12:43:27.726: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename var-expansion @ 07/13/24 12:43:27.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:43:27.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:43:27.744
  STEP: Creating a pod to test substitution in container's args @ 07/13/24 12:43:27.746
  STEP: Saw pod success @ 07/13/24 12:43:31.768
  Jul 13 12:43:31.771: INFO: Trying to get logs from node ip-172-31-37-214 pod var-expansion-cfe6161a-9011-46a5-b7a5-be2d1df7a98f container dapi-container: <nil>
  STEP: delete the pod @ 07/13/24 12:43:31.78
  Jul 13 12:43:31.796: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9391" for this suite. @ 07/13/24 12:43:31.8
â€¢ [4.079 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 07/13/24 12:43:31.805
  Jul 13 12:43:31.805: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename webhook @ 07/13/24 12:43:31.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:43:31.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:43:31.824
  STEP: Setting up server cert @ 07/13/24 12:43:31.848
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/13/24 12:43:32.126
  STEP: Deploying the webhook pod @ 07/13/24 12:43:32.134
  STEP: Wait for the deployment to be ready @ 07/13/24 12:43:32.145
  Jul 13 12:43:32.152: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/13/24 12:43:34.162
  STEP: Verifying the service has paired with the endpoint @ 07/13/24 12:43:34.175
  Jul 13 12:43:35.175: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jul 13 12:43:35.183: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4331-crds.webhook.example.com via the AdmissionRegistration API @ 07/13/24 12:43:35.695
  STEP: Creating a custom resource that should be mutated by the webhook @ 07/13/24 12:43:35.707
  Jul 13 12:43:38.290: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2823" for this suite. @ 07/13/24 12:43:38.294
  STEP: Destroying namespace "webhook-markers-2362" for this suite. @ 07/13/24 12:43:38.299
â€¢ [6.500 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 07/13/24 12:43:38.306
  Jul 13 12:43:38.306: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename replicaset @ 07/13/24 12:43:38.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:43:38.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:43:38.323
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 07/13/24 12:43:38.324
  Jul 13 12:43:38.332: INFO: Pod name sample-pod: Found 0 pods out of 1
  Jul 13 12:43:43.338: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/13/24 12:43:43.338
  STEP: getting scale subresource @ 07/13/24 12:43:43.338
  STEP: updating a scale subresource @ 07/13/24 12:43:43.341
  STEP: verifying the replicaset Spec.Replicas was modified @ 07/13/24 12:43:43.347
  STEP: Patch a scale subresource @ 07/13/24 12:43:43.35
  Jul 13 12:43:43.358: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4223" for this suite. @ 07/13/24 12:43:43.361
â€¢ [5.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 07/13/24 12:43:43.371
  Jul 13 12:43:43.371: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename services @ 07/13/24 12:43:43.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:43:43.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:43:43.394
  STEP: creating service nodeport-test with type=NodePort in namespace services-4633 @ 07/13/24 12:43:43.396
  STEP: creating replication controller nodeport-test in namespace services-4633 @ 07/13/24 12:43:43.415
  I0713 12:43:43.420633      20 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-4633, replica count: 2
  I0713 12:43:46.471505      20 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jul 13 12:43:46.471: INFO: Creating new exec pod
  Jul 13 12:43:49.494: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-4633 exec execpod74x5v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Jul 13 12:43:49.597: INFO: stderr: "+ nc -v -t -w 2 nodeport-test 80\n+ echo hostName\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Jul 13 12:43:49.597: INFO: stdout: "nodeport-test-v69pn"
  Jul 13 12:43:49.597: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-4633 exec execpod74x5v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.189 80'
  Jul 13 12:43:49.687: INFO: stderr: "+ nc -v -t -w 2 10.152.183.189 80\nConnection to 10.152.183.189 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Jul 13 12:43:49.687: INFO: stdout: ""
  Jul 13 12:43:50.597: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-4633 exec execpod74x5v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.189 80'
  Jul 13 12:43:50.683: INFO: stderr: "+ nc -v -t -w 2 10.152.183.189 80\nConnection to 10.152.183.189 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Jul 13 12:43:50.683: INFO: stdout: "nodeport-test-v69pn"
  Jul 13 12:43:50.683: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-4633 exec execpod74x5v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.15.91 32043'
  Jul 13 12:43:50.786: INFO: stderr: "+ nc -v -t -w 2 172.31.15.91 32043\n+ echo hostName\nConnection to 172.31.15.91 32043 port [tcp/*] succeeded!\n"
  Jul 13 12:43:50.786: INFO: stdout: "nodeport-test-q74z8"
  Jul 13 12:43:50.786: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-4633 exec execpod74x5v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.37.214 32043'
  Jul 13 12:43:50.875: INFO: stderr: "+ nc -v -t -w 2 172.31.37.214 32043\nConnection to 172.31.37.214 32043 port [tcp/*] succeeded!\n+ echo hostName\n"
  Jul 13 12:43:50.875: INFO: stdout: "nodeport-test-v69pn"
  Jul 13 12:43:50.875: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4633" for this suite. @ 07/13/24 12:43:50.879
â€¢ [7.515 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1838
  STEP: Creating a kubernetes client @ 07/13/24 12:43:50.886
  Jul 13 12:43:50.886: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename kubectl @ 07/13/24 12:43:50.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:43:50.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:43:50.904
  STEP: starting the proxy server @ 07/13/24 12:43:50.906
  Jul 13 12:43:50.906: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-9163 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 07/13/24 12:43:50.936
  Jul 13 12:43:50.941: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9163" for this suite. @ 07/13/24 12:43:50.945
â€¢ [0.065 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 07/13/24 12:43:50.951
  Jul 13 12:43:50.951: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename container-runtime @ 07/13/24 12:43:50.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:43:50.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:43:50.969
  STEP: create the container @ 07/13/24 12:43:50.971
  W0713 12:43:50.980036      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 07/13/24 12:43:50.98
  STEP: get the container status @ 07/13/24 12:43:54
  STEP: the container should be terminated @ 07/13/24 12:43:54.003
  STEP: the termination message should be set @ 07/13/24 12:43:54.003
  Jul 13 12:43:54.003: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 07/13/24 12:43:54.003
  Jul 13 12:43:54.018: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1688" for this suite. @ 07/13/24 12:43:54.02
â€¢ [3.075 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 07/13/24 12:43:54.027
  Jul 13 12:43:54.027: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 07/13/24 12:43:54.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:43:54.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:43:54.044
  STEP: creating a target pod @ 07/13/24 12:43:54.046
  STEP: adding an ephemeral container @ 07/13/24 12:43:56.064
  STEP: checking pod container endpoints @ 07/13/24 12:43:58.083
  Jul 13 12:43:58.083: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-7649 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 13 12:43:58.083: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 12:43:58.084: INFO: ExecWithOptions: Clientset creation
  Jul 13 12:43:58.084: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-7649/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Jul 13 12:43:58.134: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 07/13/24 12:43:58.147
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 07/13/24 12:43:58.153
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 07/13/24 12:43:58.163
  Jul 13 12:43:58.165: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-7649" for this suite. @ 07/13/24 12:43:58.169
â€¢ [4.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 07/13/24 12:43:58.174
  Jul 13 12:43:58.174: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename emptydir @ 07/13/24 12:43:58.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:43:58.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:43:58.193
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 07/13/24 12:43:58.194
  STEP: Saw pod success @ 07/13/24 12:44:02.214
  Jul 13 12:44:02.217: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-14c7d4bb-5acf-4a85-bb9d-43c843e3a79b container test-container: <nil>
  STEP: delete the pod @ 07/13/24 12:44:02.223
  Jul 13 12:44:02.239: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-257" for this suite. @ 07/13/24 12:44:02.243
â€¢ [4.075 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 07/13/24 12:44:02.249
  Jul 13 12:44:02.249: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename secrets @ 07/13/24 12:44:02.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:44:02.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:44:02.269
  STEP: Creating secret with name secret-test-ce0ad7b8-9128-46a6-bfcf-72ceaee8c87c @ 07/13/24 12:44:02.271
  STEP: Creating a pod to test consume secrets @ 07/13/24 12:44:02.275
  STEP: Saw pod success @ 07/13/24 12:44:06.298
  Jul 13 12:44:06.300: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-secrets-85057d22-2551-4d7a-a665-984986674b1f container secret-volume-test: <nil>
  STEP: delete the pod @ 07/13/24 12:44:06.307
  Jul 13 12:44:06.321: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8942" for this suite. @ 07/13/24 12:44:06.324
â€¢ [4.084 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 07/13/24 12:44:06.334
  Jul 13 12:44:06.334: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename configmap @ 07/13/24 12:44:06.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:44:06.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:44:06.356
  STEP: Creating configMap with name configmap-test-upd-3037e5de-24b6-4f4c-b70a-5bf1dedf40f4 @ 07/13/24 12:44:06.361
  STEP: Creating the pod @ 07/13/24 12:44:06.365
  STEP: Waiting for pod with text data @ 07/13/24 12:44:08.382
  STEP: Waiting for pod with binary data @ 07/13/24 12:44:08.389
  Jul 13 12:44:08.394: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6901" for this suite. @ 07/13/24 12:44:08.399
â€¢ [2.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1632
  STEP: Creating a kubernetes client @ 07/13/24 12:44:08.408
  Jul 13 12:44:08.408: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename kubectl @ 07/13/24 12:44:08.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:44:08.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:44:08.431
  STEP: creating the pod @ 07/13/24 12:44:08.433
  Jul 13 12:44:08.433: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-3253 create -f -'
  Jul 13 12:44:08.523: INFO: stderr: ""
  Jul 13 12:44:08.523: INFO: stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 07/13/24 12:44:10.533
  Jul 13 12:44:10.533: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-3253 label pods pause testing-label=testing-label-value'
  Jul 13 12:44:10.584: INFO: stderr: ""
  Jul 13 12:44:10.584: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 07/13/24 12:44:10.584
  Jul 13 12:44:10.584: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-3253 get pod pause -L testing-label'
  Jul 13 12:44:10.632: INFO: stderr: ""
  Jul 13 12:44:10.632: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 07/13/24 12:44:10.633
  Jul 13 12:44:10.633: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-3253 label pods pause testing-label-'
  Jul 13 12:44:10.682: INFO: stderr: ""
  Jul 13 12:44:10.682: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 07/13/24 12:44:10.682
  Jul 13 12:44:10.682: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-3253 get pod pause -L testing-label'
  Jul 13 12:44:10.726: INFO: stderr: ""
  Jul 13 12:44:10.726: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 07/13/24 12:44:10.726
  Jul 13 12:44:10.726: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-3253 delete --grace-period=0 --force -f -'
  Jul 13 12:44:10.778: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jul 13 12:44:10.778: INFO: stdout: "pod \"pause\" force deleted\n"
  Jul 13 12:44:10.778: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-3253 get rc,svc -l name=pause --no-headers'
  Jul 13 12:44:10.824: INFO: stderr: "No resources found in kubectl-3253 namespace.\n"
  Jul 13 12:44:10.824: INFO: stdout: ""
  Jul 13 12:44:10.824: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-3253 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jul 13 12:44:10.864: INFO: stderr: ""
  Jul 13 12:44:10.864: INFO: stdout: ""
  Jul 13 12:44:10.864: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3253" for this suite. @ 07/13/24 12:44:10.867
â€¢ [2.466 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 07/13/24 12:44:10.874
  Jul 13 12:44:10.874: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename secrets @ 07/13/24 12:44:10.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:44:10.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:44:10.891
  STEP: Creating secret with name secret-test-map-6546b704-e3e9-4fe1-b341-82411739cd10 @ 07/13/24 12:44:10.893
  STEP: Creating a pod to test consume secrets @ 07/13/24 12:44:10.896
  STEP: Saw pod success @ 07/13/24 12:44:14.919
  Jul 13 12:44:14.922: INFO: Trying to get logs from node ip-172-31-89-122 pod pod-secrets-07701a0a-08d4-4421-a4ae-4112b5707660 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/13/24 12:44:14.929
  Jul 13 12:44:14.944: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6939" for this suite. @ 07/13/24 12:44:14.947
â€¢ [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 07/13/24 12:44:14.953
  Jul 13 12:44:14.953: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename subpath @ 07/13/24 12:44:14.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:44:14.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:44:14.973
  STEP: Setting up data @ 07/13/24 12:44:14.975
  STEP: Creating pod pod-subpath-test-secret-k99f @ 07/13/24 12:44:14.983
  STEP: Creating a pod to test atomic-volume-subpath @ 07/13/24 12:44:14.983
  STEP: Saw pod success @ 07/13/24 12:44:39.05
  Jul 13 12:44:39.053: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-subpath-test-secret-k99f container test-container-subpath-secret-k99f: <nil>
  STEP: delete the pod @ 07/13/24 12:44:39.061
  STEP: Deleting pod pod-subpath-test-secret-k99f @ 07/13/24 12:44:39.076
  Jul 13 12:44:39.076: INFO: Deleting pod "pod-subpath-test-secret-k99f" in namespace "subpath-7492"
  Jul 13 12:44:39.080: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7492" for this suite. @ 07/13/24 12:44:39.084
â€¢ [24.136 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 07/13/24 12:44:39.089
  Jul 13 12:44:39.089: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename configmap @ 07/13/24 12:44:39.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:44:39.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:44:39.109
  STEP: Creating configMap with name configmap-test-upd-aa2f9419-ac6a-41f2-b56a-cdc4081d2b79 @ 07/13/24 12:44:39.113
  STEP: Creating the pod @ 07/13/24 12:44:39.118
  STEP: Updating configmap configmap-test-upd-aa2f9419-ac6a-41f2-b56a-cdc4081d2b79 @ 07/13/24 12:44:41.142
  STEP: waiting to observe update in volume @ 07/13/24 12:44:41.147
  Jul 13 12:45:43.429: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5985" for this suite. @ 07/13/24 12:45:43.432
â€¢ [64.352 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 07/13/24 12:45:43.441
  Jul 13 12:45:43.441: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename endpointslice @ 07/13/24 12:45:43.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:45:43.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:45:43.46
  Jul 13 12:45:47.505: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1445" for this suite. @ 07/13/24 12:45:47.508
â€¢ [4.073 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:611
  STEP: Creating a kubernetes client @ 07/13/24 12:45:47.514
  Jul 13 12:45:47.514: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename security-context-test @ 07/13/24 12:45:47.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:45:47.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:45:47.53
  Jul 13 12:45:51.562: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6665" for this suite. @ 07/13/24 12:45:51.567
â€¢ [4.060 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 07/13/24 12:45:51.575
  Jul 13 12:45:51.575: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename configmap @ 07/13/24 12:45:51.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:45:51.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:45:51.595
  STEP: Creating configMap with name configmap-test-volume-2b5d661c-f536-41f7-93f9-be8d0f4f5bde @ 07/13/24 12:45:51.596
  STEP: Creating a pod to test consume configMaps @ 07/13/24 12:45:51.6
  STEP: Saw pod success @ 07/13/24 12:45:55.62
  Jul 13 12:45:55.622: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-configmaps-776943e5-a1b4-4dc8-98e7-83167409c63d container agnhost-container: <nil>
  STEP: delete the pod @ 07/13/24 12:45:55.63
  Jul 13 12:45:55.645: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5386" for this suite. @ 07/13/24 12:45:55.648
â€¢ [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 07/13/24 12:45:55.653
  Jul 13 12:45:55.653: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename projected @ 07/13/24 12:45:55.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:45:55.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:45:55.674
  STEP: Creating a pod to test downward API volume plugin @ 07/13/24 12:45:55.676
  STEP: Saw pod success @ 07/13/24 12:45:57.699
  Jul 13 12:45:57.702: INFO: Trying to get logs from node ip-172-31-37-214 pod downwardapi-volume-3bc1fa2e-1f7e-494b-9f60-869e19137eee container client-container: <nil>
  STEP: delete the pod @ 07/13/24 12:45:57.71
  Jul 13 12:45:57.725: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3324" for this suite. @ 07/13/24 12:45:57.727
â€¢ [2.080 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 07/13/24 12:45:57.733
  Jul 13 12:45:57.733: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename taint-single-pod @ 07/13/24 12:45:57.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:45:57.75
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:45:57.752
  Jul 13 12:45:57.754: INFO: Waiting up to 1m0s for all nodes to be ready
  Jul 13 12:46:57.754: INFO: Waiting for terminating namespaces to be deleted...
  Jul 13 12:46:57.757: INFO: Starting informer...
  STEP: Starting pod... @ 07/13/24 12:46:57.757
  Jul 13 12:46:57.970: INFO: Pod is running on ip-172-31-37-214. Tainting Node
  STEP: Trying to apply a taint on the Node @ 07/13/24 12:46:57.971
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/13/24 12:46:57.979
  STEP: Waiting short time to make sure Pod is queued for deletion @ 07/13/24 12:46:57.983
  Jul 13 12:46:57.983: INFO: Pod wasn't evicted. Proceeding
  Jul 13 12:46:57.983: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/13/24 12:46:57.992
  STEP: Waiting some time to make sure that toleration time passed. @ 07/13/24 12:46:57.995
  Jul 13 12:48:12.997: INFO: Pod wasn't evicted. Test successful
  Jul 13 12:48:12.997: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-2891" for this suite. @ 07/13/24 12:48:13.001
â€¢ [135.274 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 07/13/24 12:48:13.007
  Jul 13 12:48:13.007: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename svcaccounts @ 07/13/24 12:48:13.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:48:13.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:48:13.026
  STEP: Creating a pod to test service account token:  @ 07/13/24 12:48:13.027
  STEP: Saw pod success @ 07/13/24 12:48:15.044
  Jul 13 12:48:15.047: INFO: Trying to get logs from node ip-172-31-89-122 pod test-pod-50ed379a-0465-487e-acce-b254e8a2a616 container agnhost-container: <nil>
  STEP: delete the pod @ 07/13/24 12:48:15.057
  Jul 13 12:48:15.069: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2066" for this suite. @ 07/13/24 12:48:15.072
â€¢ [2.072 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 07/13/24 12:48:15.079
  Jul 13 12:48:15.079: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename csi-storageclass @ 07/13/24 12:48:15.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:48:15.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:48:15.099
  STEP: Creating a StorageClass @ 07/13/24 12:48:15.1
  STEP: Get StorageClass "e2e-pj5xt" @ 07/13/24 12:48:15.105
  STEP: Patching the StorageClass "e2e-pj5xt" @ 07/13/24 12:48:15.108
  STEP: Delete StorageClass "e2e-pj5xt" @ 07/13/24 12:48:15.112
  STEP: Confirm deletion of StorageClass "e2e-pj5xt" @ 07/13/24 12:48:15.118
  STEP: Create a replacement StorageClass @ 07/13/24 12:48:15.12
  STEP: Updating StorageClass "e2e-v2-qfv2s" @ 07/13/24 12:48:15.123
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-qfv2s=updated" @ 07/13/24 12:48:15.129
  STEP: Deleting StorageClass "e2e-v2-qfv2s" via DeleteCollection @ 07/13/24 12:48:15.132
  STEP: Confirm deletion of StorageClass "e2e-v2-qfv2s" @ 07/13/24 12:48:15.139
  Jul 13 12:48:15.142: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-4141" for this suite. @ 07/13/24 12:48:15.145
â€¢ [0.072 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 07/13/24 12:48:15.152
  Jul 13 12:48:15.152: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename emptydir @ 07/13/24 12:48:15.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:48:15.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:48:15.166
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 07/13/24 12:48:15.167
  STEP: Saw pod success @ 07/13/24 12:48:19.187
  Jul 13 12:48:19.189: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-b5069c04-7947-4553-9682-e8ae9bda5650 container test-container: <nil>
  STEP: delete the pod @ 07/13/24 12:48:19.206
  Jul 13 12:48:19.222: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6069" for this suite. @ 07/13/24 12:48:19.225
â€¢ [4.080 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:784
  STEP: Creating a kubernetes client @ 07/13/24 12:48:19.232
  Jul 13 12:48:19.232: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename job @ 07/13/24 12:48:19.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:48:19.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:48:19.251
  STEP: Creating a job @ 07/13/24 12:48:19.252
  STEP: Ensure pods equal to parallelism count is attached to the job @ 07/13/24 12:48:19.258
  STEP: patching /status @ 07/13/24 12:48:21.263
  STEP: updating /status @ 07/13/24 12:48:21.27
  STEP: get /status @ 07/13/24 12:48:21.276
  Jul 13 12:48:21.279: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4521" for this suite. @ 07/13/24 12:48:21.282
â€¢ [2.055 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 07/13/24 12:48:21.287
  Jul 13 12:48:21.287: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename daemonsets @ 07/13/24 12:48:21.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:48:21.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:48:21.308
  Jul 13 12:48:21.328: INFO: Create a RollingUpdate DaemonSet
  Jul 13 12:48:21.331: INFO: Check that daemon pods launch on every node of the cluster
  Jul 13 12:48:21.334: INFO: DaemonSet pods can't tolerate node ip-172-31-73-21 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 12:48:21.334: INFO: DaemonSet pods can't tolerate node ip-172-31-93-88 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 12:48:21.338: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 13 12:48:21.338: INFO: Node ip-172-31-15-91 is running 0 daemon pod, expected 1
  Jul 13 12:48:22.337: INFO: DaemonSet pods can't tolerate node ip-172-31-73-21 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 12:48:22.337: INFO: DaemonSet pods can't tolerate node ip-172-31-93-88 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 12:48:22.340: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 13 12:48:22.340: INFO: Node ip-172-31-15-91 is running 0 daemon pod, expected 1
  Jul 13 12:48:23.335: INFO: DaemonSet pods can't tolerate node ip-172-31-73-21 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 12:48:23.335: INFO: DaemonSet pods can't tolerate node ip-172-31-93-88 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 12:48:23.339: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jul 13 12:48:23.339: INFO: Node ip-172-31-15-91 is running 0 daemon pod, expected 1
  Jul 13 12:48:24.335: INFO: DaemonSet pods can't tolerate node ip-172-31-73-21 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 12:48:24.335: INFO: DaemonSet pods can't tolerate node ip-172-31-93-88 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 12:48:24.338: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jul 13 12:48:24.338: INFO: Node ip-172-31-15-91 is running 0 daemon pod, expected 1
  Jul 13 12:48:25.337: INFO: DaemonSet pods can't tolerate node ip-172-31-73-21 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 12:48:25.337: INFO: DaemonSet pods can't tolerate node ip-172-31-93-88 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 12:48:25.340: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jul 13 12:48:25.340: INFO: Node ip-172-31-15-91 is running 0 daemon pod, expected 1
  Jul 13 12:48:26.335: INFO: DaemonSet pods can't tolerate node ip-172-31-73-21 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 12:48:26.335: INFO: DaemonSet pods can't tolerate node ip-172-31-93-88 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 12:48:26.338: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jul 13 12:48:26.338: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  Jul 13 12:48:26.338: INFO: Update the DaemonSet to trigger a rollout
  Jul 13 12:48:26.348: INFO: Updating DaemonSet daemon-set
  Jul 13 12:48:27.358: INFO: Roll back the DaemonSet before rollout is complete
  Jul 13 12:48:27.366: INFO: Updating DaemonSet daemon-set
  Jul 13 12:48:27.366: INFO: Make sure DaemonSet rollback is complete
  Jul 13 12:48:27.369: INFO: Wrong image for pod: daemon-set-ql58w. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Jul 13 12:48:27.369: INFO: Pod daemon-set-ql58w is not available
  Jul 13 12:48:27.373: INFO: DaemonSet pods can't tolerate node ip-172-31-73-21 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 12:48:27.373: INFO: DaemonSet pods can't tolerate node ip-172-31-93-88 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 12:48:28.374: INFO: DaemonSet pods can't tolerate node ip-172-31-73-21 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 12:48:28.374: INFO: DaemonSet pods can't tolerate node ip-172-31-93-88 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 12:48:29.370: INFO: Pod daemon-set-fkdlg is not available
  Jul 13 12:48:29.374: INFO: DaemonSet pods can't tolerate node ip-172-31-73-21 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 12:48:29.374: INFO: DaemonSet pods can't tolerate node ip-172-31-93-88 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 07/13/24 12:48:29.382
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3389, will wait for the garbage collector to delete the pods @ 07/13/24 12:48:29.382
  Jul 13 12:48:29.441: INFO: Deleting DaemonSet.extensions daemon-set took: 6.35978ms
  Jul 13 12:48:29.542: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.953397ms
  Jul 13 12:48:32.645: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 13 12:48:32.645: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jul 13 12:48:32.647: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"15276"},"items":null}

  Jul 13 12:48:32.649: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"15276"},"items":null}

  Jul 13 12:48:32.661: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3389" for this suite. @ 07/13/24 12:48:32.663
â€¢ [11.381 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 07/13/24 12:48:32.669
  Jul 13 12:48:32.669: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename sysctl @ 07/13/24 12:48:32.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:48:32.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:48:32.687
  STEP: Creating a pod with one valid and two invalid sysctls @ 07/13/24 12:48:32.689
  Jul 13 12:48:32.693: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-9106" for this suite. @ 07/13/24 12:48:32.696
â€¢ [0.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 07/13/24 12:48:32.703
  Jul 13 12:48:32.703: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename resourcequota @ 07/13/24 12:48:32.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:48:32.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:48:32.722
  STEP: Discovering how many secrets are in namespace by default @ 07/13/24 12:48:32.723
  STEP: Counting existing ResourceQuota @ 07/13/24 12:48:37.729
  STEP: Creating a ResourceQuota @ 07/13/24 12:48:42.732
  STEP: Ensuring resource quota status is calculated @ 07/13/24 12:48:42.738
  STEP: Creating a Secret @ 07/13/24 12:48:44.742
  STEP: Ensuring resource quota status captures secret creation @ 07/13/24 12:48:44.753
  STEP: Deleting a secret @ 07/13/24 12:48:46.758
  STEP: Ensuring resource quota status released usage @ 07/13/24 12:48:46.767
  Jul 13 12:48:48.771: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-811" for this suite. @ 07/13/24 12:48:48.775
â€¢ [16.078 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 07/13/24 12:48:48.782
  Jul 13 12:48:48.782: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename secrets @ 07/13/24 12:48:48.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:48:48.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:48:48.799
  STEP: Creating secret with name secret-test-569dff54-f7fc-40be-9e3a-b652f8e11183 @ 07/13/24 12:48:48.822
  STEP: Creating a pod to test consume secrets @ 07/13/24 12:48:48.829
  STEP: Saw pod success @ 07/13/24 12:48:50.841
  Jul 13 12:48:50.844: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-secrets-529d4d44-6c9a-4a0e-963f-a7e474602ea9 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/13/24 12:48:50.85
  Jul 13 12:48:50.865: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3744" for this suite. @ 07/13/24 12:48:50.868
  STEP: Destroying namespace "secret-namespace-3829" for this suite. @ 07/13/24 12:48:50.874
â€¢ [2.102 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 07/13/24 12:48:50.884
  Jul 13 12:48:50.884: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename secrets @ 07/13/24 12:48:50.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:48:50.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:48:50.899
  STEP: Creating secret with name secret-test-92ff24d8-77e9-472a-925b-554c026dbafc @ 07/13/24 12:48:50.901
  STEP: Creating a pod to test consume secrets @ 07/13/24 12:48:50.906
  STEP: Saw pod success @ 07/13/24 12:48:52.92
  Jul 13 12:48:52.923: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-secrets-a110b9fd-7cc7-4d0e-becc-81bd20033885 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/13/24 12:48:52.93
  Jul 13 12:48:52.945: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2755" for this suite. @ 07/13/24 12:48:52.947
â€¢ [2.069 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 07/13/24 12:48:52.953
  Jul 13 12:48:52.954: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename field-validation @ 07/13/24 12:48:52.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:48:52.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:48:52.973
  STEP: apply creating a deployment @ 07/13/24 12:48:52.974
  Jul 13 12:48:52.985: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8064" for this suite. @ 07/13/24 12:48:52.988
â€¢ [0.041 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 07/13/24 12:48:52.995
  Jul 13 12:48:52.995: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename services @ 07/13/24 12:48:52.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:48:53.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:48:53.015
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-544 @ 07/13/24 12:48:53.017
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 07/13/24 12:48:53.025
  STEP: creating service externalsvc in namespace services-544 @ 07/13/24 12:48:53.025
  STEP: creating replication controller externalsvc in namespace services-544 @ 07/13/24 12:48:53.038
  I0713 12:48:53.042689      20 runners.go:197] Created replication controller with name: externalsvc, namespace: services-544, replica count: 2
  I0713 12:48:56.094339      20 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 07/13/24 12:48:56.097
  Jul 13 12:48:56.110: INFO: Creating new exec pod
  Jul 13 12:48:58.124: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-544 exec execpod5p2bn -- /bin/sh -x -c nslookup clusterip-service.services-544.svc.cluster.local'
  Jul 13 12:48:58.248: INFO: stderr: "+ nslookup clusterip-service.services-544.svc.cluster.local\n"
  Jul 13 12:48:58.248: INFO: stdout: "Server:\t\t10.152.183.143\nAddress:\t10.152.183.143#53\n\nclusterip-service.services-544.svc.cluster.local\tcanonical name = externalsvc.services-544.svc.cluster.local.\nName:\texternalsvc.services-544.svc.cluster.local\nAddress: 10.152.183.205\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-544, will wait for the garbage collector to delete the pods @ 07/13/24 12:48:58.249
  Jul 13 12:48:58.309: INFO: Deleting ReplicationController externalsvc took: 5.774938ms
  Jul 13 12:48:58.410: INFO: Terminating ReplicationController externalsvc pods took: 100.588085ms
  Jul 13 12:49:01.028: INFO: Cleaning up the ClusterIP to ExternalName test service
  Jul 13 12:49:01.040: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-544" for this suite. @ 07/13/24 12:49:01.044
â€¢ [8.055 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:136
  STEP: Creating a kubernetes client @ 07/13/24 12:49:01.05
  Jul 13 12:49:01.050: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/13/24 12:49:01.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:49:01.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:49:01.068
  STEP: create the container to handle the HTTPGet hook request. @ 07/13/24 12:49:01.073
  STEP: create the pod with lifecycle hook @ 07/13/24 12:49:03.095
  STEP: check poststart hook @ 07/13/24 12:49:05.108
  STEP: delete the pod with lifecycle hook @ 07/13/24 12:49:05.122
  Jul 13 12:49:07.136: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-143" for this suite. @ 07/13/24 12:49:07.14
â€¢ [6.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 07/13/24 12:49:07.148
  Jul 13 12:49:07.148: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename namespaces @ 07/13/24 12:49:07.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:49:07.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:49:07.166
  STEP: creating a Namespace @ 07/13/24 12:49:07.167
  STEP: patching the Namespace @ 07/13/24 12:49:07.185
  STEP: get the Namespace and ensuring it has the label @ 07/13/24 12:49:07.192
  Jul 13 12:49:07.194: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8485" for this suite. @ 07/13/24 12:49:07.198
  STEP: Destroying namespace "nspatchtest-0d6cee38-5dc5-4d84-86db-6978bf4deac3-444" for this suite. @ 07/13/24 12:49:07.204
â€¢ [0.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:344
  STEP: Creating a kubernetes client @ 07/13/24 12:49:07.211
  Jul 13 12:49:07.211: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename kubectl @ 07/13/24 12:49:07.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:49:07.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:49:07.228
  STEP: creating a replication controller @ 07/13/24 12:49:07.229
  Jul 13 12:49:07.229: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-1850 create -f -'
  Jul 13 12:49:07.310: INFO: stderr: ""
  Jul 13 12:49:07.310: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/13/24 12:49:07.31
  Jul 13 12:49:07.310: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-1850 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jul 13 12:49:07.356: INFO: stderr: ""
  Jul 13 12:49:07.356: INFO: stdout: "update-demo-nautilus-p9ng9 update-demo-nautilus-r6pvf "
  Jul 13 12:49:07.356: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-1850 get pods update-demo-nautilus-p9ng9 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jul 13 12:49:07.397: INFO: stderr: ""
  Jul 13 12:49:07.397: INFO: stdout: ""
  Jul 13 12:49:07.397: INFO: update-demo-nautilus-p9ng9 is created but not running
  Jul 13 12:49:12.397: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-1850 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jul 13 12:49:12.468: INFO: stderr: ""
  Jul 13 12:49:12.468: INFO: stdout: "update-demo-nautilus-p9ng9 update-demo-nautilus-r6pvf "
  Jul 13 12:49:12.469: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-1850 get pods update-demo-nautilus-p9ng9 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jul 13 12:49:12.537: INFO: stderr: ""
  Jul 13 12:49:12.537: INFO: stdout: "true"
  Jul 13 12:49:12.537: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-1850 get pods update-demo-nautilus-p9ng9 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jul 13 12:49:12.627: INFO: stderr: ""
  Jul 13 12:49:12.627: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jul 13 12:49:12.627: INFO: validating pod update-demo-nautilus-p9ng9
  Jul 13 12:49:12.632: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jul 13 12:49:12.632: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jul 13 12:49:12.632: INFO: update-demo-nautilus-p9ng9 is verified up and running
  Jul 13 12:49:12.632: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-1850 get pods update-demo-nautilus-r6pvf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jul 13 12:49:12.675: INFO: stderr: ""
  Jul 13 12:49:12.675: INFO: stdout: "true"
  Jul 13 12:49:12.675: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-1850 get pods update-demo-nautilus-r6pvf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jul 13 12:49:12.720: INFO: stderr: ""
  Jul 13 12:49:12.720: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jul 13 12:49:12.720: INFO: validating pod update-demo-nautilus-r6pvf
  Jul 13 12:49:12.725: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jul 13 12:49:12.725: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jul 13 12:49:12.725: INFO: update-demo-nautilus-r6pvf is verified up and running
  STEP: using delete to clean up resources @ 07/13/24 12:49:12.725
  Jul 13 12:49:12.725: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-1850 delete --grace-period=0 --force -f -'
  Jul 13 12:49:12.777: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jul 13 12:49:12.777: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Jul 13 12:49:12.777: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-1850 get rc,svc -l name=update-demo --no-headers'
  Jul 13 12:49:12.833: INFO: stderr: "No resources found in kubectl-1850 namespace.\n"
  Jul 13 12:49:12.833: INFO: stdout: ""
  Jul 13 12:49:12.833: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-1850 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jul 13 12:49:12.896: INFO: stderr: ""
  Jul 13 12:49:12.896: INFO: stdout: ""
  Jul 13 12:49:12.896: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1850" for this suite. @ 07/13/24 12:49:12.902
â€¢ [5.697 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 07/13/24 12:49:12.907
  Jul 13 12:49:12.907: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename cronjob @ 07/13/24 12:49:12.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:49:12.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:49:12.928
  STEP: Creating a cronjob @ 07/13/24 12:49:12.93
  STEP: Ensuring more than one job is running at a time @ 07/13/24 12:49:12.933
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 07/13/24 12:51:00.939
  STEP: Removing cronjob @ 07/13/24 12:51:00.941
  Jul 13 12:51:00.947: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1707" for this suite. @ 07/13/24 12:51:00.951
â€¢ [108.050 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 07/13/24 12:51:00.957
  Jul 13 12:51:00.957: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename dns @ 07/13/24 12:51:00.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:51:00.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:51:00.979
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 07/13/24 12:51:00.98
  Jul 13 12:51:00.990: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-2980  619ad318-3d2f-4120-9cd6-c390c0057200 16056 0 2024-07-13 12:51:00 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-07-13 12:51:00 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-ksr6x,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-ksr6x,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 07/13/24 12:51:02.999
  Jul 13 12:51:02.999: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-2980 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 13 12:51:02.999: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 12:51:03.000: INFO: ExecWithOptions: Clientset creation
  Jul 13 12:51:03.000: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-2980/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 07/13/24 12:51:03.06
  Jul 13 12:51:03.060: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-2980 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 13 12:51:03.060: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 12:51:03.061: INFO: ExecWithOptions: Clientset creation
  Jul 13 12:51:03.061: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-2980/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jul 13 12:51:03.123: INFO: Deleting pod test-dns-nameservers...
  Jul 13 12:51:03.137: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2980" for this suite. @ 07/13/24 12:51:03.14
â€¢ [2.188 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 07/13/24 12:51:03.146
  Jul 13 12:51:03.146: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename subpath @ 07/13/24 12:51:03.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:51:03.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:51:03.163
  STEP: Setting up data @ 07/13/24 12:51:03.164
  STEP: Creating pod pod-subpath-test-configmap-85k8 @ 07/13/24 12:51:03.173
  STEP: Creating a pod to test atomic-volume-subpath @ 07/13/24 12:51:03.173
  STEP: Saw pod success @ 07/13/24 12:51:25.235
  Jul 13 12:51:25.239: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-subpath-test-configmap-85k8 container test-container-subpath-configmap-85k8: <nil>
  STEP: delete the pod @ 07/13/24 12:51:25.251
  STEP: Deleting pod pod-subpath-test-configmap-85k8 @ 07/13/24 12:51:25.263
  Jul 13 12:51:25.263: INFO: Deleting pod "pod-subpath-test-configmap-85k8" in namespace "subpath-1151"
  Jul 13 12:51:25.267: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1151" for this suite. @ 07/13/24 12:51:25.27
â€¢ [22.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 07/13/24 12:51:25.276
  Jul 13 12:51:25.276: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename webhook @ 07/13/24 12:51:25.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:51:25.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:51:25.294
  STEP: Setting up server cert @ 07/13/24 12:51:25.316
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/13/24 12:51:25.524
  STEP: Deploying the webhook pod @ 07/13/24 12:51:25.532
  STEP: Wait for the deployment to be ready @ 07/13/24 12:51:25.544
  Jul 13 12:51:25.550: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/13/24 12:51:27.56
  STEP: Verifying the service has paired with the endpoint @ 07/13/24 12:51:27.57
  Jul 13 12:51:28.571: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 07/13/24 12:51:28.577
  STEP: create a pod that should be denied by the webhook @ 07/13/24 12:51:28.59
  STEP: create a pod that causes the webhook to hang @ 07/13/24 12:51:28.6
  STEP: create a configmap that should be denied by the webhook @ 07/13/24 12:51:38.607
  STEP: create a configmap that should be admitted by the webhook @ 07/13/24 12:51:38.615
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 07/13/24 12:51:38.624
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 07/13/24 12:51:38.632
  STEP: create a namespace that bypass the webhook @ 07/13/24 12:51:38.638
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 07/13/24 12:51:38.651
  Jul 13 12:51:38.698: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1792" for this suite. @ 07/13/24 12:51:38.702
  STEP: Destroying namespace "webhook-markers-1850" for this suite. @ 07/13/24 12:51:38.708
  STEP: Destroying namespace "exempted-namespace-8382" for this suite. @ 07/13/24 12:51:38.715
â€¢ [13.444 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 07/13/24 12:51:38.721
  Jul 13 12:51:38.721: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename gc @ 07/13/24 12:51:38.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:51:38.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:51:38.737
  STEP: create the rc @ 07/13/24 12:51:38.739
  W0713 12:51:38.744634      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 07/13/24 12:51:43.75
  STEP: wait for all pods to be garbage collected @ 07/13/24 12:51:43.755
  STEP: Gathering metrics @ 07/13/24 12:51:48.765
  W0713 12:51:48.770356      20 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jul 13 12:51:48.770: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jul 13 12:51:48.771: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8744" for this suite. @ 07/13/24 12:51:48.774
â€¢ [10.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 07/13/24 12:51:48.78
  Jul 13 12:51:48.781: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename gc @ 07/13/24 12:51:48.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:51:48.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:51:48.799
  STEP: create the rc1 @ 07/13/24 12:51:48.804
  STEP: create the rc2 @ 07/13/24 12:51:48.809
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 07/13/24 12:51:54.82
  STEP: delete the rc simpletest-rc-to-be-deleted @ 07/13/24 12:51:55.215
  STEP: wait for the rc to be deleted @ 07/13/24 12:51:55.222
  Jul 13 12:52:00.232: INFO: 68 pods remaining
  Jul 13 12:52:00.232: INFO: 68 pods has nil DeletionTimestamp
  Jul 13 12:52:00.232: INFO: 
  STEP: Gathering metrics @ 07/13/24 12:52:05.232
  W0713 12:52:05.238252      20 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jul 13 12:52:05.238: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jul 13 12:52:05.238: INFO: Deleting pod "simpletest-rc-to-be-deleted-2mtqk" in namespace "gc-3444"
  Jul 13 12:52:05.253: INFO: Deleting pod "simpletest-rc-to-be-deleted-2rgpm" in namespace "gc-3444"
  Jul 13 12:52:05.263: INFO: Deleting pod "simpletest-rc-to-be-deleted-2rhsh" in namespace "gc-3444"
  Jul 13 12:52:05.275: INFO: Deleting pod "simpletest-rc-to-be-deleted-2wxbb" in namespace "gc-3444"
  Jul 13 12:52:05.288: INFO: Deleting pod "simpletest-rc-to-be-deleted-4bblm" in namespace "gc-3444"
  Jul 13 12:52:05.304: INFO: Deleting pod "simpletest-rc-to-be-deleted-4dsz7" in namespace "gc-3444"
  Jul 13 12:52:05.318: INFO: Deleting pod "simpletest-rc-to-be-deleted-4k7sx" in namespace "gc-3444"
  Jul 13 12:52:05.333: INFO: Deleting pod "simpletest-rc-to-be-deleted-4m5vd" in namespace "gc-3444"
  Jul 13 12:52:05.348: INFO: Deleting pod "simpletest-rc-to-be-deleted-4n6qq" in namespace "gc-3444"
  Jul 13 12:52:05.361: INFO: Deleting pod "simpletest-rc-to-be-deleted-4s9nl" in namespace "gc-3444"
  Jul 13 12:52:05.377: INFO: Deleting pod "simpletest-rc-to-be-deleted-5kff7" in namespace "gc-3444"
  Jul 13 12:52:05.396: INFO: Deleting pod "simpletest-rc-to-be-deleted-65gpz" in namespace "gc-3444"
  Jul 13 12:52:05.417: INFO: Deleting pod "simpletest-rc-to-be-deleted-688kl" in namespace "gc-3444"
  Jul 13 12:52:05.434: INFO: Deleting pod "simpletest-rc-to-be-deleted-6slk4" in namespace "gc-3444"
  Jul 13 12:52:05.450: INFO: Deleting pod "simpletest-rc-to-be-deleted-6v47s" in namespace "gc-3444"
  Jul 13 12:52:05.466: INFO: Deleting pod "simpletest-rc-to-be-deleted-79rdn" in namespace "gc-3444"
  Jul 13 12:52:05.480: INFO: Deleting pod "simpletest-rc-to-be-deleted-7bjt5" in namespace "gc-3444"
  Jul 13 12:52:05.493: INFO: Deleting pod "simpletest-rc-to-be-deleted-82qnd" in namespace "gc-3444"
  Jul 13 12:52:05.511: INFO: Deleting pod "simpletest-rc-to-be-deleted-86z8g" in namespace "gc-3444"
  Jul 13 12:52:05.534: INFO: Deleting pod "simpletest-rc-to-be-deleted-8cs6h" in namespace "gc-3444"
  Jul 13 12:52:05.547: INFO: Deleting pod "simpletest-rc-to-be-deleted-8dbnh" in namespace "gc-3444"
  Jul 13 12:52:05.559: INFO: Deleting pod "simpletest-rc-to-be-deleted-8xphz" in namespace "gc-3444"
  Jul 13 12:52:05.577: INFO: Deleting pod "simpletest-rc-to-be-deleted-929wg" in namespace "gc-3444"
  Jul 13 12:52:05.596: INFO: Deleting pod "simpletest-rc-to-be-deleted-9mtm4" in namespace "gc-3444"
  Jul 13 12:52:05.607: INFO: Deleting pod "simpletest-rc-to-be-deleted-9zwrh" in namespace "gc-3444"
  Jul 13 12:52:05.618: INFO: Deleting pod "simpletest-rc-to-be-deleted-bjsgl" in namespace "gc-3444"
  Jul 13 12:52:05.653: INFO: Deleting pod "simpletest-rc-to-be-deleted-bk7mb" in namespace "gc-3444"
  Jul 13 12:52:05.665: INFO: Deleting pod "simpletest-rc-to-be-deleted-blzqz" in namespace "gc-3444"
  Jul 13 12:52:05.677: INFO: Deleting pod "simpletest-rc-to-be-deleted-bxk99" in namespace "gc-3444"
  Jul 13 12:52:05.773: INFO: Deleting pod "simpletest-rc-to-be-deleted-c49tk" in namespace "gc-3444"
  Jul 13 12:52:05.796: INFO: Deleting pod "simpletest-rc-to-be-deleted-c5bcr" in namespace "gc-3444"
  Jul 13 12:52:05.811: INFO: Deleting pod "simpletest-rc-to-be-deleted-cfsm9" in namespace "gc-3444"
  Jul 13 12:52:05.826: INFO: Deleting pod "simpletest-rc-to-be-deleted-cpp4l" in namespace "gc-3444"
  Jul 13 12:52:05.845: INFO: Deleting pod "simpletest-rc-to-be-deleted-cs5bp" in namespace "gc-3444"
  Jul 13 12:52:05.882: INFO: Deleting pod "simpletest-rc-to-be-deleted-csmsl" in namespace "gc-3444"
  Jul 13 12:52:05.892: INFO: Deleting pod "simpletest-rc-to-be-deleted-cw8zd" in namespace "gc-3444"
  Jul 13 12:52:05.908: INFO: Deleting pod "simpletest-rc-to-be-deleted-dfc92" in namespace "gc-3444"
  Jul 13 12:52:05.920: INFO: Deleting pod "simpletest-rc-to-be-deleted-dg4fc" in namespace "gc-3444"
  Jul 13 12:52:05.932: INFO: Deleting pod "simpletest-rc-to-be-deleted-djrjw" in namespace "gc-3444"
  Jul 13 12:52:05.944: INFO: Deleting pod "simpletest-rc-to-be-deleted-ds4gc" in namespace "gc-3444"
  Jul 13 12:52:05.958: INFO: Deleting pod "simpletest-rc-to-be-deleted-dvt52" in namespace "gc-3444"
  Jul 13 12:52:05.972: INFO: Deleting pod "simpletest-rc-to-be-deleted-dwf89" in namespace "gc-3444"
  Jul 13 12:52:05.988: INFO: Deleting pod "simpletest-rc-to-be-deleted-f2hkl" in namespace "gc-3444"
  Jul 13 12:52:06.005: INFO: Deleting pod "simpletest-rc-to-be-deleted-fknnr" in namespace "gc-3444"
  Jul 13 12:52:06.014: INFO: Deleting pod "simpletest-rc-to-be-deleted-fvgp5" in namespace "gc-3444"
  Jul 13 12:52:06.030: INFO: Deleting pod "simpletest-rc-to-be-deleted-g7cd6" in namespace "gc-3444"
  Jul 13 12:52:06.040: INFO: Deleting pod "simpletest-rc-to-be-deleted-gfn5s" in namespace "gc-3444"
  Jul 13 12:52:06.053: INFO: Deleting pod "simpletest-rc-to-be-deleted-h26sx" in namespace "gc-3444"
  Jul 13 12:52:06.070: INFO: Deleting pod "simpletest-rc-to-be-deleted-h6nr9" in namespace "gc-3444"
  Jul 13 12:52:06.084: INFO: Deleting pod "simpletest-rc-to-be-deleted-h8tp2" in namespace "gc-3444"
  Jul 13 12:52:06.096: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3444" for this suite. @ 07/13/24 12:52:06.102
â€¢ [17.327 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 07/13/24 12:52:06.109
  Jul 13 12:52:06.109: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename resourcequota @ 07/13/24 12:52:06.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:52:06.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:52:06.134
  STEP: Counting existing ResourceQuota @ 07/13/24 12:52:06.138
  STEP: Creating a ResourceQuota @ 07/13/24 12:52:11.143
  STEP: Ensuring resource quota status is calculated @ 07/13/24 12:52:11.148
  STEP: Creating a Service @ 07/13/24 12:52:13.153
  STEP: Creating a NodePort Service @ 07/13/24 12:52:13.17
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 07/13/24 12:52:13.192
  STEP: Ensuring resource quota status captures service creation @ 07/13/24 12:52:13.213
  STEP: Deleting Services @ 07/13/24 12:52:15.218
  STEP: Ensuring resource quota status released usage @ 07/13/24 12:52:15.254
  Jul 13 12:52:17.259: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5720" for this suite. @ 07/13/24 12:52:17.263
â€¢ [11.161 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 07/13/24 12:52:17.27
  Jul 13 12:52:17.270: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename security-context @ 07/13/24 12:52:17.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:52:17.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:52:17.288
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 07/13/24 12:52:17.29
  STEP: Saw pod success @ 07/13/24 12:52:21.309
  Jul 13 12:52:21.311: INFO: Trying to get logs from node ip-172-31-37-214 pod security-context-8b4c14a9-2fb6-48df-b572-3506ad3a51b5 container test-container: <nil>
  STEP: delete the pod @ 07/13/24 12:52:21.318
  Jul 13 12:52:21.334: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-8177" for this suite. @ 07/13/24 12:52:21.337
â€¢ [4.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 07/13/24 12:52:21.344
  Jul 13 12:52:21.344: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename container-probe @ 07/13/24 12:52:21.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:52:21.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:52:21.364
  STEP: Creating pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500 @ 07/13/24 12:52:21.365
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/13/24 12:52:23.383
  Jul 13 12:52:23.385: INFO: Initial restart count of pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 is 0
  Jul 13 12:52:23.389: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:52:25.394: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:52:27.397: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:52:29.401: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:52:31.406: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:52:33.411: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:52:35.415: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:52:37.419: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:52:39.423: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:52:41.428: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:52:43.432: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:52:45.437: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:52:47.440: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:52:49.445: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:52:51.451: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:52:53.458: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:52:55.462: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:52:57.466: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:52:59.471: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:53:01.480: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:53:03.485: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:53:05.490: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:53:07.493: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:53:09.498: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:53:11.504: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:53:13.508: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:53:15.513: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:53:17.516: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:53:19.521: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:53:21.526: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:53:23.530: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:53:25.535: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:53:27.540: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:53:29.545: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:53:31.550: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:53:33.554: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:53:35.558: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:53:37.564: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:53:39.568: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:53:41.573: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:53:43.578: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:53:45.582: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:53:47.587: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:53:49.592: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:53:51.596: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:53:53.602: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:53:55.606: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:53:57.611: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:53:59.616: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:54:01.620: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:54:03.626: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:54:05.629: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:54:07.634: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:54:09.640: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:54:11.645: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:54:13.651: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:54:15.655: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:54:17.659: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:54:19.665: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:54:21.668: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:54:23.673: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:54:25.679: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:54:27.683: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:54:29.687: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:54:31.692: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:54:33.696: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:54:35.703: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:54:37.707: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:54:39.713: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:54:41.717: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:54:43.722: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:54:45.727: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:54:47.732: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:54:49.737: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:54:51.742: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:54:53.747: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:54:55.752: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:54:57.757: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:54:59.761: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:55:01.767: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:55:03.771: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:55:05.774: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:55:07.780: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:55:09.784: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:55:11.789: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:55:13.792: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:55:15.796: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:55:17.802: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:55:19.807: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:55:21.811: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:55:23.816: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:55:25.820: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:55:27.825: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:55:29.830: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:55:31.834: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:55:33.839: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:55:35.843: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:55:37.847: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:55:39.852: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:55:41.856: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:55:43.860: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:55:45.865: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:55:47.869: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:55:49.874: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:55:51.879: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:55:53.884: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:55:55.888: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:55:57.892: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:55:59.897: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:56:01.900: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:56:03.904: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:56:05.910: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:56:07.914: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:56:09.919: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:56:11.924: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:56:13.928: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:56:15.933: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:56:17.937: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:56:19.941: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  Jul 13 12:56:21.947: INFO: Get pod liveness-a4e02153-d9e6-4c01-957f-73cb232e4d13 in namespace container-probe-6500
  STEP: deleting the pod @ 07/13/24 12:56:23.948
  Jul 13 12:56:23.963: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6500" for this suite. @ 07/13/24 12:56:23.966
â€¢ [242.629 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 07/13/24 12:56:23.973
  Jul 13 12:56:23.973: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename disruption @ 07/13/24 12:56:23.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:56:23.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:56:23.991
  STEP: creating the pdb @ 07/13/24 12:56:23.992
  STEP: Waiting for the pdb to be processed @ 07/13/24 12:56:23.996
  STEP: updating the pdb @ 07/13/24 12:56:26
  STEP: Waiting for the pdb to be processed @ 07/13/24 12:56:26.007
  STEP: patching the pdb @ 07/13/24 12:56:28.011
  STEP: Waiting for the pdb to be processed @ 07/13/24 12:56:28.02
  STEP: Waiting for the pdb to be deleted @ 07/13/24 12:56:30.03
  Jul 13 12:56:30.033: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3232" for this suite. @ 07/13/24 12:56:30.036
â€¢ [6.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1798
  STEP: Creating a kubernetes client @ 07/13/24 12:56:30.041
  Jul 13 12:56:30.041: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename kubectl @ 07/13/24 12:56:30.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:56:30.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:56:30.058
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/13/24 12:56:30.059
  Jul 13 12:56:30.060: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-8408 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Jul 13 12:56:30.115: INFO: stderr: ""
  Jul 13 12:56:30.115: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 07/13/24 12:56:30.115
  STEP: verifying the pod e2e-test-httpd-pod was created @ 07/13/24 12:56:35.166
  Jul 13 12:56:35.166: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-8408 get pod e2e-test-httpd-pod -o json'
  Jul 13 12:56:35.210: INFO: stderr: ""
  Jul 13 12:56:35.210: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-07-13T12:56:30Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-8408\",\n        \"resourceVersion\": \"19541\",\n        \"uid\": \"f62a2115-9bc1-485f-a5fa-6b18a186429d\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-zbb97\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-37-214\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-zbb97\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-07-13T12:56:31Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-07-13T12:56:30Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-07-13T12:56:31Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-07-13T12:56:31Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-07-13T12:56:30Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://cc74cb6ec49e796c309688f8c3c65cd397ece41c9c50da2fb77e8592278731fb\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-07-13T12:56:30Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.37.214\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.37.214\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.77.238\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.77.238\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-07-13T12:56:30Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 07/13/24 12:56:35.21
  Jul 13 12:56:35.210: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-8408 replace -f -'
  Jul 13 12:56:35.296: INFO: stderr: ""
  Jul 13 12:56:35.296: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 07/13/24 12:56:35.296
  Jul 13 12:56:35.300: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-8408 delete pods e2e-test-httpd-pod'
  Jul 13 12:56:37.248: INFO: stderr: ""
  Jul 13 12:56:37.248: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jul 13 12:56:37.248: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8408" for this suite. @ 07/13/24 12:56:37.253
â€¢ [7.219 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 07/13/24 12:56:37.261
  Jul 13 12:56:37.261: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename kubectl-logs @ 07/13/24 12:56:37.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:56:37.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:56:37.276
  STEP: creating an pod @ 07/13/24 12:56:37.278
  Jul 13 12:56:37.278: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-logs-6323 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Jul 13 12:56:37.325: INFO: stderr: ""
  Jul 13 12:56:37.325: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 07/13/24 12:56:37.325
  Jul 13 12:56:37.325: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  Jul 13 12:56:39.335: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 07/13/24 12:56:39.335
  Jul 13 12:56:39.335: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-logs-6323 logs logs-generator logs-generator'
  Jul 13 12:56:39.397: INFO: stderr: ""
  Jul 13 12:56:39.397: INFO: stdout: "I0713 12:56:38.198924       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/kube-system/pods/xgkm 202\nI0713 12:56:38.399255       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/default/pods/p5r 345\nI0713 12:56:38.599555       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/prv 574\nI0713 12:56:38.799948       1 logs_generator.go:76] 3 GET /api/v1/namespaces/ns/pods/qkwz 516\nI0713 12:56:38.999238       1 logs_generator.go:76] 4 POST /api/v1/namespaces/kube-system/pods/ndw 261\nI0713 12:56:39.199530       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/ns/pods/v6l2 320\n"
  STEP: limiting log lines @ 07/13/24 12:56:39.397
  Jul 13 12:56:39.397: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-logs-6323 logs logs-generator logs-generator --tail=1'
  Jul 13 12:56:39.446: INFO: stderr: ""
  Jul 13 12:56:39.446: INFO: stdout: "I0713 12:56:39.399822       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/lq2f 528\n"
  Jul 13 12:56:39.446: INFO: got output "I0713 12:56:39.399822       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/lq2f 528\n"
  STEP: limiting log bytes @ 07/13/24 12:56:39.446
  Jul 13 12:56:39.446: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-logs-6323 logs logs-generator logs-generator --limit-bytes=1'
  Jul 13 12:56:39.501: INFO: stderr: ""
  Jul 13 12:56:39.501: INFO: stdout: "I"
  Jul 13 12:56:39.501: INFO: got output "I"
  STEP: exposing timestamps @ 07/13/24 12:56:39.501
  Jul 13 12:56:39.501: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-logs-6323 logs logs-generator logs-generator --tail=1 --timestamps'
  Jul 13 12:56:39.550: INFO: stderr: ""
  Jul 13 12:56:39.550: INFO: stdout: "2024-07-13T12:56:39.399913913Z I0713 12:56:39.399822       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/lq2f 528\n"
  Jul 13 12:56:39.550: INFO: got output "2024-07-13T12:56:39.399913913Z I0713 12:56:39.399822       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/lq2f 528\n"
  STEP: restricting to a time range @ 07/13/24 12:56:39.55
  Jul 13 12:56:42.051: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-logs-6323 logs logs-generator logs-generator --since=1s'
  Jul 13 12:56:42.101: INFO: stderr: ""
  Jul 13 12:56:42.101: INFO: stdout: "I0713 12:56:41.199296       1 logs_generator.go:76] 15 GET /api/v1/namespaces/kube-system/pods/96jv 358\nI0713 12:56:41.399602       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/default/pods/2jbf 553\nI0713 12:56:41.599948       1 logs_generator.go:76] 17 GET /api/v1/namespaces/default/pods/7mjp 392\nI0713 12:56:41.799245       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/28ss 338\nI0713 12:56:41.999574       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/9ng 351\n"
  Jul 13 12:56:42.102: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-logs-6323 logs logs-generator logs-generator --since=24h'
  Jul 13 12:56:42.152: INFO: stderr: ""
  Jul 13 12:56:42.152: INFO: stdout: "I0713 12:56:38.198924       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/kube-system/pods/xgkm 202\nI0713 12:56:38.399255       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/default/pods/p5r 345\nI0713 12:56:38.599555       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/prv 574\nI0713 12:56:38.799948       1 logs_generator.go:76] 3 GET /api/v1/namespaces/ns/pods/qkwz 516\nI0713 12:56:38.999238       1 logs_generator.go:76] 4 POST /api/v1/namespaces/kube-system/pods/ndw 261\nI0713 12:56:39.199530       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/ns/pods/v6l2 320\nI0713 12:56:39.399822       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/lq2f 528\nI0713 12:56:39.598996       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/rdm8 354\nI0713 12:56:39.799293       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/7nv 564\nI0713 12:56:39.999592       1 logs_generator.go:76] 9 GET /api/v1/namespaces/ns/pods/zs8v 432\nI0713 12:56:40.199974       1 logs_generator.go:76] 10 GET /api/v1/namespaces/ns/pods/j6v 531\nI0713 12:56:40.399266       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/default/pods/xxnv 526\nI0713 12:56:40.599560       1 logs_generator.go:76] 12 POST /api/v1/namespaces/default/pods/6l4p 406\nI0713 12:56:40.799873       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/default/pods/q97 372\nI0713 12:56:40.998998       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/default/pods/zr6r 202\nI0713 12:56:41.199296       1 logs_generator.go:76] 15 GET /api/v1/namespaces/kube-system/pods/96jv 358\nI0713 12:56:41.399602       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/default/pods/2jbf 553\nI0713 12:56:41.599948       1 logs_generator.go:76] 17 GET /api/v1/namespaces/default/pods/7mjp 392\nI0713 12:56:41.799245       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/28ss 338\nI0713 12:56:41.999574       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/9ng 351\n"
  Jul 13 12:56:42.152: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-logs-6323 delete pod logs-generator'
  Jul 13 12:56:43.261: INFO: stderr: ""
  Jul 13 12:56:43.261: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Jul 13 12:56:43.261: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-6323" for this suite. @ 07/13/24 12:56:43.265
â€¢ [6.013 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 07/13/24 12:56:43.274
  Jul 13 12:56:43.274: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/13/24 12:56:43.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:56:43.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:56:43.292
  STEP: set up a multi version CRD @ 07/13/24 12:56:43.294
  Jul 13 12:56:43.294: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: rename a version @ 07/13/24 12:56:46.315
  STEP: check the new version name is served @ 07/13/24 12:56:46.326
  STEP: check the old version name is removed @ 07/13/24 12:56:47.166
  STEP: check the other version is not changed @ 07/13/24 12:56:47.768
  Jul 13 12:56:50.167: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4280" for this suite. @ 07/13/24 12:56:50.174
â€¢ [6.908 seconds]
------------------------------
SSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 07/13/24 12:56:50.182
  Jul 13 12:56:50.182: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename events @ 07/13/24 12:56:50.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:56:50.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:56:50.198
  STEP: Create set of events @ 07/13/24 12:56:50.201
  STEP: get a list of Events with a label in the current namespace @ 07/13/24 12:56:50.215
  STEP: delete a list of events @ 07/13/24 12:56:50.218
  Jul 13 12:56:50.218: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 07/13/24 12:56:50.238
  Jul 13 12:56:50.241: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7095" for this suite. @ 07/13/24 12:56:50.245
â€¢ [0.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 07/13/24 12:56:50.253
  Jul 13 12:56:50.253: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename downward-api @ 07/13/24 12:56:50.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:56:50.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:56:50.269
  STEP: Creating a pod to test downward api env vars @ 07/13/24 12:56:50.271
  STEP: Saw pod success @ 07/13/24 12:56:54.295
  Jul 13 12:56:54.299: INFO: Trying to get logs from node ip-172-31-37-214 pod downward-api-f1957ceb-7bc1-42b2-9ac7-d35f4278699f container dapi-container: <nil>
  STEP: delete the pod @ 07/13/24 12:56:54.305
  Jul 13 12:56:54.320: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-637" for this suite. @ 07/13/24 12:56:54.324
â€¢ [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 07/13/24 12:56:54.33
  Jul 13 12:56:54.330: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename replication-controller @ 07/13/24 12:56:54.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:56:54.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:56:54.347
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 07/13/24 12:56:54.349
  STEP: When a replication controller with a matching selector is created @ 07/13/24 12:56:56.372
  STEP: Then the orphan pod is adopted @ 07/13/24 12:56:56.377
  Jul 13 12:56:57.384: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8569" for this suite. @ 07/13/24 12:56:57.389
â€¢ [3.067 seconds]
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 07/13/24 12:56:57.397
  Jul 13 12:56:57.397: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename gc @ 07/13/24 12:56:57.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:56:57.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:56:57.413
  STEP: create the rc @ 07/13/24 12:56:57.418
  W0713 12:56:57.422871      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 07/13/24 12:57:01.445
  STEP: wait for the rc to be deleted @ 07/13/24 12:57:01.475
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 07/13/24 12:57:06.481
  STEP: Gathering metrics @ 07/13/24 12:57:36.488
  W0713 12:57:36.494205      20 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jul 13 12:57:36.494: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jul 13 12:57:36.494: INFO: Deleting pod "simpletest.rc-25gzs" in namespace "gc-7155"
  Jul 13 12:57:36.508: INFO: Deleting pod "simpletest.rc-2fxk7" in namespace "gc-7155"
  Jul 13 12:57:36.519: INFO: Deleting pod "simpletest.rc-2rnvv" in namespace "gc-7155"
  Jul 13 12:57:36.531: INFO: Deleting pod "simpletest.rc-2snfx" in namespace "gc-7155"
  Jul 13 12:57:36.543: INFO: Deleting pod "simpletest.rc-496z6" in namespace "gc-7155"
  Jul 13 12:57:36.555: INFO: Deleting pod "simpletest.rc-4wb7w" in namespace "gc-7155"
  Jul 13 12:57:36.567: INFO: Deleting pod "simpletest.rc-5fzqq" in namespace "gc-7155"
  Jul 13 12:57:36.580: INFO: Deleting pod "simpletest.rc-5hzq5" in namespace "gc-7155"
  Jul 13 12:57:36.590: INFO: Deleting pod "simpletest.rc-5lg5d" in namespace "gc-7155"
  Jul 13 12:57:36.599: INFO: Deleting pod "simpletest.rc-5pvfm" in namespace "gc-7155"
  Jul 13 12:57:36.611: INFO: Deleting pod "simpletest.rc-5q4xz" in namespace "gc-7155"
  Jul 13 12:57:36.623: INFO: Deleting pod "simpletest.rc-5txsk" in namespace "gc-7155"
  Jul 13 12:57:36.635: INFO: Deleting pod "simpletest.rc-67qqz" in namespace "gc-7155"
  Jul 13 12:57:36.646: INFO: Deleting pod "simpletest.rc-68m48" in namespace "gc-7155"
  Jul 13 12:57:36.655: INFO: Deleting pod "simpletest.rc-6kn2t" in namespace "gc-7155"
  Jul 13 12:57:36.670: INFO: Deleting pod "simpletest.rc-6mddc" in namespace "gc-7155"
  Jul 13 12:57:36.680: INFO: Deleting pod "simpletest.rc-7gk68" in namespace "gc-7155"
  Jul 13 12:57:36.690: INFO: Deleting pod "simpletest.rc-7glmj" in namespace "gc-7155"
  Jul 13 12:57:36.707: INFO: Deleting pod "simpletest.rc-7hxn2" in namespace "gc-7155"
  Jul 13 12:57:36.716: INFO: Deleting pod "simpletest.rc-7lk9l" in namespace "gc-7155"
  Jul 13 12:57:36.726: INFO: Deleting pod "simpletest.rc-7x7wr" in namespace "gc-7155"
  Jul 13 12:57:36.738: INFO: Deleting pod "simpletest.rc-8qlwc" in namespace "gc-7155"
  Jul 13 12:57:36.749: INFO: Deleting pod "simpletest.rc-94dtq" in namespace "gc-7155"
  Jul 13 12:57:36.764: INFO: Deleting pod "simpletest.rc-97bcb" in namespace "gc-7155"
  Jul 13 12:57:36.800: INFO: Deleting pod "simpletest.rc-9cbnx" in namespace "gc-7155"
  Jul 13 12:57:36.814: INFO: Deleting pod "simpletest.rc-9hc6l" in namespace "gc-7155"
  Jul 13 12:57:36.829: INFO: Deleting pod "simpletest.rc-9qjxg" in namespace "gc-7155"
  Jul 13 12:57:36.845: INFO: Deleting pod "simpletest.rc-bdslv" in namespace "gc-7155"
  Jul 13 12:57:36.858: INFO: Deleting pod "simpletest.rc-bf2vv" in namespace "gc-7155"
  Jul 13 12:57:36.873: INFO: Deleting pod "simpletest.rc-bxlwd" in namespace "gc-7155"
  Jul 13 12:57:36.884: INFO: Deleting pod "simpletest.rc-c8jpv" in namespace "gc-7155"
  Jul 13 12:57:36.894: INFO: Deleting pod "simpletest.rc-cfprt" in namespace "gc-7155"
  Jul 13 12:57:36.905: INFO: Deleting pod "simpletest.rc-cgpt7" in namespace "gc-7155"
  Jul 13 12:57:36.918: INFO: Deleting pod "simpletest.rc-d466v" in namespace "gc-7155"
  Jul 13 12:57:36.931: INFO: Deleting pod "simpletest.rc-d8xkp" in namespace "gc-7155"
  Jul 13 12:57:36.941: INFO: Deleting pod "simpletest.rc-d9bt7" in namespace "gc-7155"
  Jul 13 12:57:36.964: INFO: Deleting pod "simpletest.rc-dh9fl" in namespace "gc-7155"
  Jul 13 12:57:36.975: INFO: Deleting pod "simpletest.rc-dvnfw" in namespace "gc-7155"
  Jul 13 12:57:36.990: INFO: Deleting pod "simpletest.rc-fpwbm" in namespace "gc-7155"
  Jul 13 12:57:37.002: INFO: Deleting pod "simpletest.rc-fq2lk" in namespace "gc-7155"
  Jul 13 12:57:37.017: INFO: Deleting pod "simpletest.rc-fwsch" in namespace "gc-7155"
  Jul 13 12:57:37.027: INFO: Deleting pod "simpletest.rc-fzt5g" in namespace "gc-7155"
  Jul 13 12:57:37.039: INFO: Deleting pod "simpletest.rc-g2j4d" in namespace "gc-7155"
  Jul 13 12:57:37.054: INFO: Deleting pod "simpletest.rc-gjgkp" in namespace "gc-7155"
  Jul 13 12:57:37.067: INFO: Deleting pod "simpletest.rc-gm4pd" in namespace "gc-7155"
  Jul 13 12:57:37.079: INFO: Deleting pod "simpletest.rc-gtnkk" in namespace "gc-7155"
  Jul 13 12:57:37.102: INFO: Deleting pod "simpletest.rc-gv5g9" in namespace "gc-7155"
  Jul 13 12:57:37.116: INFO: Deleting pod "simpletest.rc-h28c7" in namespace "gc-7155"
  Jul 13 12:57:37.128: INFO: Deleting pod "simpletest.rc-hkr9q" in namespace "gc-7155"
  Jul 13 12:57:37.139: INFO: Deleting pod "simpletest.rc-hmp57" in namespace "gc-7155"
  Jul 13 12:57:37.150: INFO: Deleting pod "simpletest.rc-jlkq5" in namespace "gc-7155"
  Jul 13 12:57:37.164: INFO: Deleting pod "simpletest.rc-jnsm9" in namespace "gc-7155"
  Jul 13 12:57:37.178: INFO: Deleting pod "simpletest.rc-jqqlb" in namespace "gc-7155"
  Jul 13 12:57:37.188: INFO: Deleting pod "simpletest.rc-jv2hg" in namespace "gc-7155"
  Jul 13 12:57:37.199: INFO: Deleting pod "simpletest.rc-jzf6k" in namespace "gc-7155"
  Jul 13 12:57:37.210: INFO: Deleting pod "simpletest.rc-k5vrh" in namespace "gc-7155"
  Jul 13 12:57:37.222: INFO: Deleting pod "simpletest.rc-k7cnj" in namespace "gc-7155"
  Jul 13 12:57:37.232: INFO: Deleting pod "simpletest.rc-k99t5" in namespace "gc-7155"
  Jul 13 12:57:37.244: INFO: Deleting pod "simpletest.rc-krtbf" in namespace "gc-7155"
  Jul 13 12:57:37.377: INFO: Deleting pod "simpletest.rc-ktqxn" in namespace "gc-7155"
  Jul 13 12:57:37.409: INFO: Deleting pod "simpletest.rc-l47t4" in namespace "gc-7155"
  Jul 13 12:57:37.421: INFO: Deleting pod "simpletest.rc-l99r6" in namespace "gc-7155"
  Jul 13 12:57:37.433: INFO: Deleting pod "simpletest.rc-lq4x8" in namespace "gc-7155"
  Jul 13 12:57:37.442: INFO: Deleting pod "simpletest.rc-lvj7w" in namespace "gc-7155"
  Jul 13 12:57:37.458: INFO: Deleting pod "simpletest.rc-mbfsw" in namespace "gc-7155"
  Jul 13 12:57:37.473: INFO: Deleting pod "simpletest.rc-mv7ck" in namespace "gc-7155"
  Jul 13 12:57:37.489: INFO: Deleting pod "simpletest.rc-n6prn" in namespace "gc-7155"
  Jul 13 12:57:37.501: INFO: Deleting pod "simpletest.rc-nldlh" in namespace "gc-7155"
  Jul 13 12:57:37.512: INFO: Deleting pod "simpletest.rc-nvbj6" in namespace "gc-7155"
  Jul 13 12:57:37.542: INFO: Deleting pod "simpletest.rc-nvmmc" in namespace "gc-7155"
  Jul 13 12:57:37.594: INFO: Deleting pod "simpletest.rc-nxsm2" in namespace "gc-7155"
  Jul 13 12:57:37.664: INFO: Deleting pod "simpletest.rc-psrpm" in namespace "gc-7155"
  Jul 13 12:57:37.706: INFO: Deleting pod "simpletest.rc-pvqdt" in namespace "gc-7155"
  Jul 13 12:57:37.751: INFO: Deleting pod "simpletest.rc-q2z9n" in namespace "gc-7155"
  Jul 13 12:57:37.799: INFO: Deleting pod "simpletest.rc-q6t9w" in namespace "gc-7155"
  Jul 13 12:57:37.869: INFO: Deleting pod "simpletest.rc-qkl6k" in namespace "gc-7155"
  Jul 13 12:57:37.899: INFO: Deleting pod "simpletest.rc-ql9fn" in namespace "gc-7155"
  Jul 13 12:57:37.966: INFO: Deleting pod "simpletest.rc-r6l8g" in namespace "gc-7155"
  Jul 13 12:57:37.993: INFO: Deleting pod "simpletest.rc-r6rxh" in namespace "gc-7155"
  Jul 13 12:57:38.042: INFO: Deleting pod "simpletest.rc-rl9jc" in namespace "gc-7155"
  Jul 13 12:57:38.098: INFO: Deleting pod "simpletest.rc-rr8j8" in namespace "gc-7155"
  Jul 13 12:57:38.156: INFO: Deleting pod "simpletest.rc-rxjh7" in namespace "gc-7155"
  Jul 13 12:57:38.194: INFO: Deleting pod "simpletest.rc-s9jjk" in namespace "gc-7155"
  Jul 13 12:57:38.242: INFO: Deleting pod "simpletest.rc-sclpz" in namespace "gc-7155"
  Jul 13 12:57:38.292: INFO: Deleting pod "simpletest.rc-sh59d" in namespace "gc-7155"
  Jul 13 12:57:38.345: INFO: Deleting pod "simpletest.rc-srn58" in namespace "gc-7155"
  Jul 13 12:57:38.393: INFO: Deleting pod "simpletest.rc-tncw5" in namespace "gc-7155"
  Jul 13 12:57:38.441: INFO: Deleting pod "simpletest.rc-tqshc" in namespace "gc-7155"
  Jul 13 12:57:38.494: INFO: Deleting pod "simpletest.rc-tzbwm" in namespace "gc-7155"
  Jul 13 12:57:38.544: INFO: Deleting pod "simpletest.rc-v48nc" in namespace "gc-7155"
  Jul 13 12:57:38.591: INFO: Deleting pod "simpletest.rc-vc7hh" in namespace "gc-7155"
  Jul 13 12:57:38.645: INFO: Deleting pod "simpletest.rc-vgmg9" in namespace "gc-7155"
  Jul 13 12:57:38.692: INFO: Deleting pod "simpletest.rc-vrkqk" in namespace "gc-7155"
  Jul 13 12:57:38.741: INFO: Deleting pod "simpletest.rc-vvkdk" in namespace "gc-7155"
  Jul 13 12:57:38.799: INFO: Deleting pod "simpletest.rc-vvwlw" in namespace "gc-7155"
  Jul 13 12:57:38.850: INFO: Deleting pod "simpletest.rc-x47tv" in namespace "gc-7155"
  Jul 13 12:57:38.897: INFO: Deleting pod "simpletest.rc-x4p78" in namespace "gc-7155"
  Jul 13 12:57:38.942: INFO: Deleting pod "simpletest.rc-xgdqt" in namespace "gc-7155"
  Jul 13 12:57:38.994: INFO: Deleting pod "simpletest.rc-z44qq" in namespace "gc-7155"
  Jul 13 12:57:39.044: INFO: Deleting pod "simpletest.rc-zmk7x" in namespace "gc-7155"
  Jul 13 12:57:39.105: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7155" for this suite. @ 07/13/24 12:57:39.146
â€¢ [41.793 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1538
  STEP: Creating a kubernetes client @ 07/13/24 12:57:39.191
  Jul 13 12:57:39.191: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename kubectl @ 07/13/24 12:57:39.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:57:39.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:57:39.241
  STEP: creating Agnhost RC @ 07/13/24 12:57:39.264
  Jul 13 12:57:39.264: INFO: namespace kubectl-250
  Jul 13 12:57:39.265: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-250 create -f -'
  Jul 13 12:57:39.740: INFO: stderr: ""
  Jul 13 12:57:39.740: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/13/24 12:57:39.74
  Jul 13 12:57:40.745: INFO: Selector matched 1 pods for map[app:agnhost]
  Jul 13 12:57:40.745: INFO: Found 0 / 1
  Jul 13 12:57:41.745: INFO: Selector matched 1 pods for map[app:agnhost]
  Jul 13 12:57:41.745: INFO: Found 0 / 1
  Jul 13 12:57:42.746: INFO: Selector matched 1 pods for map[app:agnhost]
  Jul 13 12:57:42.746: INFO: Found 1 / 1
  Jul 13 12:57:42.746: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Jul 13 12:57:42.748: INFO: Selector matched 1 pods for map[app:agnhost]
  Jul 13 12:57:42.748: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jul 13 12:57:42.748: INFO: wait on agnhost-primary startup in kubectl-250 
  Jul 13 12:57:42.748: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-250 logs agnhost-primary-jt4nd agnhost-primary'
  Jul 13 12:57:42.798: INFO: stderr: ""
  Jul 13 12:57:42.798: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 07/13/24 12:57:42.798
  Jul 13 12:57:42.798: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-250 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Jul 13 12:57:42.854: INFO: stderr: ""
  Jul 13 12:57:42.854: INFO: stdout: "service/rm2 exposed\n"
  Jul 13 12:57:42.861: INFO: Service rm2 in namespace kubectl-250 found.
  STEP: exposing service @ 07/13/24 12:57:44.869
  Jul 13 12:57:44.869: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-250 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Jul 13 12:57:44.927: INFO: stderr: ""
  Jul 13 12:57:44.927: INFO: stdout: "service/rm3 exposed\n"
  Jul 13 12:57:44.934: INFO: Service rm3 in namespace kubectl-250 found.
  Jul 13 12:57:46.943: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-250" for this suite. @ 07/13/24 12:57:46.946
â€¢ [7.761 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 07/13/24 12:57:46.953
  Jul 13 12:57:46.953: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename projected @ 07/13/24 12:57:46.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:57:46.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:57:46.972
  STEP: Creating a pod to test downward API volume plugin @ 07/13/24 12:57:46.976
  STEP: Saw pod success @ 07/13/24 12:57:50.995
  Jul 13 12:57:50.998: INFO: Trying to get logs from node ip-172-31-37-214 pod downwardapi-volume-f61f4ef5-288c-4a57-b633-976c3fd6dfa8 container client-container: <nil>
  STEP: delete the pod @ 07/13/24 12:57:51.004
  Jul 13 12:57:51.018: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4744" for this suite. @ 07/13/24 12:57:51.021
â€¢ [4.073 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 07/13/24 12:57:51.026
  Jul 13 12:57:51.026: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename apf @ 07/13/24 12:57:51.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:57:51.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:57:51.043
  STEP: getting /apis @ 07/13/24 12:57:51.046
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 07/13/24 12:57:51.048
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 07/13/24 12:57:51.049
  STEP: creating @ 07/13/24 12:57:51.05
  STEP: getting @ 07/13/24 12:57:51.071
  STEP: listing @ 07/13/24 12:57:51.075
  STEP: watching @ 07/13/24 12:57:51.079
  Jul 13 12:57:51.079: INFO: starting watch
  STEP: patching @ 07/13/24 12:57:51.08
  STEP: updating @ 07/13/24 12:57:51.085
  Jul 13 12:57:51.092: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 07/13/24 12:57:51.092
  STEP: patching /status @ 07/13/24 12:57:51.096
  STEP: updating /status @ 07/13/24 12:57:51.105
  STEP: deleting @ 07/13/24 12:57:51.133
  STEP: deleting a collection @ 07/13/24 12:57:51.148
  Jul 13 12:57:51.166: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-6174" for this suite. @ 07/13/24 12:57:51.171
â€¢ [0.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2177
  STEP: Creating a kubernetes client @ 07/13/24 12:57:51.178
  Jul 13 12:57:51.178: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename services @ 07/13/24 12:57:51.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:57:51.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:57:51.193
  STEP: creating service in namespace services-8038 @ 07/13/24 12:57:51.195
  STEP: creating service affinity-clusterip in namespace services-8038 @ 07/13/24 12:57:51.195
  STEP: creating replication controller affinity-clusterip in namespace services-8038 @ 07/13/24 12:57:51.208
  I0713 12:57:51.216108      20 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-8038, replica count: 3
  I0713 12:57:54.267444      20 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0713 12:57:57.267657      20 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jul 13 12:57:57.273: INFO: Creating new exec pod
  Jul 13 12:58:00.290: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-8038 exec execpod-affinity88gf2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Jul 13 12:58:00.391: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Jul 13 12:58:00.391: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 13 12:58:00.391: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-8038 exec execpod-affinity88gf2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.228 80'
  Jul 13 12:58:00.482: INFO: stderr: "+ nc -v -t -w 2 10.152.183.228 80\n+ echo hostName\nConnection to 10.152.183.228 80 port [tcp/http] succeeded!\n"
  Jul 13 12:58:00.482: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 13 12:58:00.482: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-8038 exec execpod-affinity88gf2 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.228:80/ ; done'
  Jul 13 12:58:00.676: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.228:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.228:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.228:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.228:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.228:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.228:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.228:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.228:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.228:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.228:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.228:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.228:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.228:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.228:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.228:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.228:80/\n"
  Jul 13 12:58:00.676: INFO: stdout: "\naffinity-clusterip-spwtd\naffinity-clusterip-spwtd\naffinity-clusterip-spwtd\naffinity-clusterip-spwtd\naffinity-clusterip-spwtd\naffinity-clusterip-spwtd\naffinity-clusterip-spwtd\naffinity-clusterip-spwtd\naffinity-clusterip-spwtd\naffinity-clusterip-spwtd\naffinity-clusterip-spwtd\naffinity-clusterip-spwtd\naffinity-clusterip-spwtd\naffinity-clusterip-spwtd\naffinity-clusterip-spwtd\naffinity-clusterip-spwtd"
  Jul 13 12:58:00.676: INFO: Received response from host: affinity-clusterip-spwtd
  Jul 13 12:58:00.676: INFO: Received response from host: affinity-clusterip-spwtd
  Jul 13 12:58:00.676: INFO: Received response from host: affinity-clusterip-spwtd
  Jul 13 12:58:00.676: INFO: Received response from host: affinity-clusterip-spwtd
  Jul 13 12:58:00.676: INFO: Received response from host: affinity-clusterip-spwtd
  Jul 13 12:58:00.676: INFO: Received response from host: affinity-clusterip-spwtd
  Jul 13 12:58:00.676: INFO: Received response from host: affinity-clusterip-spwtd
  Jul 13 12:58:00.676: INFO: Received response from host: affinity-clusterip-spwtd
  Jul 13 12:58:00.676: INFO: Received response from host: affinity-clusterip-spwtd
  Jul 13 12:58:00.676: INFO: Received response from host: affinity-clusterip-spwtd
  Jul 13 12:58:00.676: INFO: Received response from host: affinity-clusterip-spwtd
  Jul 13 12:58:00.676: INFO: Received response from host: affinity-clusterip-spwtd
  Jul 13 12:58:00.676: INFO: Received response from host: affinity-clusterip-spwtd
  Jul 13 12:58:00.676: INFO: Received response from host: affinity-clusterip-spwtd
  Jul 13 12:58:00.676: INFO: Received response from host: affinity-clusterip-spwtd
  Jul 13 12:58:00.676: INFO: Received response from host: affinity-clusterip-spwtd
  Jul 13 12:58:00.677: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-8038, will wait for the garbage collector to delete the pods @ 07/13/24 12:58:00.693
  Jul 13 12:58:00.754: INFO: Deleting ReplicationController affinity-clusterip took: 7.798038ms
  Jul 13 12:58:00.854: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.654019ms
  Jul 13 12:58:06.673: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8038" for this suite. @ 07/13/24 12:58:06.678
â€¢ [15.506 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:447
  STEP: Creating a kubernetes client @ 07/13/24 12:58:06.685
  Jul 13 12:58:06.685: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename sched-pred @ 07/13/24 12:58:06.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:58:06.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:58:06.715
  Jul 13 12:58:06.717: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jul 13 12:58:06.723: INFO: Waiting for terminating namespaces to be deleted...
  Jul 13 12:58:06.726: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-15-91 before test
  Jul 13 12:58:06.730: INFO: nginx-ingress-controller-kubernetes-worker-mp6fl from ingress-nginx-kubernetes-worker started at 2024-07-13 12:16:24 +0000 UTC (1 container statuses recorded)
  Jul 13 12:58:06.730: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul 13 12:58:06.730: INFO: calico-kube-controllers-566f48f4bc-zln57 from kube-system started at 2024-07-13 12:19:27 +0000 UTC (1 container statuses recorded)
  Jul 13 12:58:06.730: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Jul 13 12:58:06.730: INFO: calico-node-6r9cg from kube-system started at 2024-07-13 12:17:37 +0000 UTC (1 container statuses recorded)
  Jul 13 12:58:06.730: INFO: 	Container calico-node ready: true, restart count 0
  Jul 13 12:58:06.730: INFO: coredns-bddfd76d7-qc4pt from kube-system started at 2024-07-13 12:16:24 +0000 UTC (1 container statuses recorded)
  Jul 13 12:58:06.730: INFO: 	Container coredns ready: true, restart count 0
  Jul 13 12:58:06.730: INFO: kube-state-metrics-6f48cdd76-kj8mn from kube-system started at 2024-07-13 12:16:24 +0000 UTC (1 container statuses recorded)
  Jul 13 12:58:06.730: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Jul 13 12:58:06.730: INFO: metrics-server-v0.6.3-69d7fbfdf8-bj7mr from kube-system started at 2024-07-13 12:16:24 +0000 UTC (2 container statuses recorded)
  Jul 13 12:58:06.730: INFO: 	Container metrics-server ready: true, restart count 0
  Jul 13 12:58:06.730: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Jul 13 12:58:06.730: INFO: dashboard-metrics-scraper-5dd7cb5fc-cdqmc from kubernetes-dashboard started at 2024-07-13 12:16:24 +0000 UTC (1 container statuses recorded)
  Jul 13 12:58:06.730: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Jul 13 12:58:06.730: INFO: kubernetes-dashboard-7b899cb9d9-tx78d from kubernetes-dashboard started at 2024-07-13 12:16:24 +0000 UTC (1 container statuses recorded)
  Jul 13 12:58:06.730: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Jul 13 12:58:06.730: INFO: sonobuoy-systemd-logs-daemon-set-4e460315498c4029-66grn from sonobuoy started at 2024-07-13 12:23:14 +0000 UTC (2 container statuses recorded)
  Jul 13 12:58:06.730: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 13 12:58:06.730: INFO: 	Container systemd-logs ready: true, restart count 0
  Jul 13 12:58:06.730: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-37-214 before test
  Jul 13 12:58:06.735: INFO: nginx-ingress-controller-kubernetes-worker-kxd2r from ingress-nginx-kubernetes-worker started at 2024-07-13 12:47:09 +0000 UTC (1 container statuses recorded)
  Jul 13 12:58:06.735: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul 13 12:58:06.735: INFO: calico-node-j2tjq from kube-system started at 2024-07-13 12:19:25 +0000 UTC (1 container statuses recorded)
  Jul 13 12:58:06.735: INFO: 	Container calico-node ready: true, restart count 0
  Jul 13 12:58:06.735: INFO: sonobuoy from sonobuoy started at 2024-07-13 12:23:12 +0000 UTC (1 container statuses recorded)
  Jul 13 12:58:06.735: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jul 13 12:58:06.735: INFO: sonobuoy-systemd-logs-daemon-set-4e460315498c4029-7d9z2 from sonobuoy started at 2024-07-13 12:23:14 +0000 UTC (2 container statuses recorded)
  Jul 13 12:58:06.735: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 13 12:58:06.735: INFO: 	Container systemd-logs ready: true, restart count 0
  Jul 13 12:58:06.735: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-89-122 before test
  Jul 13 12:58:06.741: INFO: nginx-ingress-controller-kubernetes-worker-qcj2m from ingress-nginx-kubernetes-worker started at 2024-07-13 12:19:48 +0000 UTC (1 container statuses recorded)
  Jul 13 12:58:06.742: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul 13 12:58:06.742: INFO: calico-node-79mrk from kube-system started at 2024-07-13 12:19:27 +0000 UTC (1 container statuses recorded)
  Jul 13 12:58:06.742: INFO: 	Container calico-node ready: true, restart count 0
  Jul 13 12:58:06.742: INFO: sonobuoy-e2e-job-542cce46194140ad from sonobuoy started at 2024-07-13 12:23:14 +0000 UTC (2 container statuses recorded)
  Jul 13 12:58:06.742: INFO: 	Container e2e ready: true, restart count 0
  Jul 13 12:58:06.742: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 13 12:58:06.742: INFO: sonobuoy-systemd-logs-daemon-set-4e460315498c4029-tw5hd from sonobuoy started at 2024-07-13 12:23:14 +0000 UTC (2 container statuses recorded)
  Jul 13 12:58:06.742: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 13 12:58:06.742: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 07/13/24 12:58:06.742
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17e1c7233afc6659], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.] @ 07/13/24 12:58:06.765
  Jul 13 12:58:07.765: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8287" for this suite. @ 07/13/24 12:58:07.77
â€¢ [1.091 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:470
  STEP: Creating a kubernetes client @ 07/13/24 12:58:07.776
  Jul 13 12:58:07.776: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename sched-pred @ 07/13/24 12:58:07.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:58:07.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:58:07.792
  Jul 13 12:58:07.794: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jul 13 12:58:07.803: INFO: Waiting for terminating namespaces to be deleted...
  Jul 13 12:58:07.805: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-15-91 before test
  Jul 13 12:58:07.810: INFO: nginx-ingress-controller-kubernetes-worker-mp6fl from ingress-nginx-kubernetes-worker started at 2024-07-13 12:16:24 +0000 UTC (1 container statuses recorded)
  Jul 13 12:58:07.810: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul 13 12:58:07.810: INFO: calico-kube-controllers-566f48f4bc-zln57 from kube-system started at 2024-07-13 12:19:27 +0000 UTC (1 container statuses recorded)
  Jul 13 12:58:07.810: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Jul 13 12:58:07.810: INFO: calico-node-6r9cg from kube-system started at 2024-07-13 12:17:37 +0000 UTC (1 container statuses recorded)
  Jul 13 12:58:07.810: INFO: 	Container calico-node ready: true, restart count 0
  Jul 13 12:58:07.810: INFO: coredns-bddfd76d7-qc4pt from kube-system started at 2024-07-13 12:16:24 +0000 UTC (1 container statuses recorded)
  Jul 13 12:58:07.810: INFO: 	Container coredns ready: true, restart count 0
  Jul 13 12:58:07.810: INFO: kube-state-metrics-6f48cdd76-kj8mn from kube-system started at 2024-07-13 12:16:24 +0000 UTC (1 container statuses recorded)
  Jul 13 12:58:07.810: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Jul 13 12:58:07.810: INFO: metrics-server-v0.6.3-69d7fbfdf8-bj7mr from kube-system started at 2024-07-13 12:16:24 +0000 UTC (2 container statuses recorded)
  Jul 13 12:58:07.810: INFO: 	Container metrics-server ready: true, restart count 0
  Jul 13 12:58:07.810: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Jul 13 12:58:07.810: INFO: dashboard-metrics-scraper-5dd7cb5fc-cdqmc from kubernetes-dashboard started at 2024-07-13 12:16:24 +0000 UTC (1 container statuses recorded)
  Jul 13 12:58:07.810: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Jul 13 12:58:07.810: INFO: kubernetes-dashboard-7b899cb9d9-tx78d from kubernetes-dashboard started at 2024-07-13 12:16:24 +0000 UTC (1 container statuses recorded)
  Jul 13 12:58:07.810: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Jul 13 12:58:07.810: INFO: sonobuoy-systemd-logs-daemon-set-4e460315498c4029-66grn from sonobuoy started at 2024-07-13 12:23:14 +0000 UTC (2 container statuses recorded)
  Jul 13 12:58:07.810: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 13 12:58:07.810: INFO: 	Container systemd-logs ready: true, restart count 0
  Jul 13 12:58:07.811: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-37-214 before test
  Jul 13 12:58:07.816: INFO: nginx-ingress-controller-kubernetes-worker-kxd2r from ingress-nginx-kubernetes-worker started at 2024-07-13 12:47:09 +0000 UTC (1 container statuses recorded)
  Jul 13 12:58:07.816: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul 13 12:58:07.816: INFO: calico-node-j2tjq from kube-system started at 2024-07-13 12:19:25 +0000 UTC (1 container statuses recorded)
  Jul 13 12:58:07.816: INFO: 	Container calico-node ready: true, restart count 0
  Jul 13 12:58:07.816: INFO: sonobuoy from sonobuoy started at 2024-07-13 12:23:12 +0000 UTC (1 container statuses recorded)
  Jul 13 12:58:07.816: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jul 13 12:58:07.816: INFO: sonobuoy-systemd-logs-daemon-set-4e460315498c4029-7d9z2 from sonobuoy started at 2024-07-13 12:23:14 +0000 UTC (2 container statuses recorded)
  Jul 13 12:58:07.816: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 13 12:58:07.816: INFO: 	Container systemd-logs ready: true, restart count 0
  Jul 13 12:58:07.816: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-89-122 before test
  Jul 13 12:58:07.819: INFO: nginx-ingress-controller-kubernetes-worker-qcj2m from ingress-nginx-kubernetes-worker started at 2024-07-13 12:19:48 +0000 UTC (1 container statuses recorded)
  Jul 13 12:58:07.820: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul 13 12:58:07.820: INFO: calico-node-79mrk from kube-system started at 2024-07-13 12:19:27 +0000 UTC (1 container statuses recorded)
  Jul 13 12:58:07.820: INFO: 	Container calico-node ready: true, restart count 0
  Jul 13 12:58:07.820: INFO: sonobuoy-e2e-job-542cce46194140ad from sonobuoy started at 2024-07-13 12:23:14 +0000 UTC (2 container statuses recorded)
  Jul 13 12:58:07.820: INFO: 	Container e2e ready: true, restart count 0
  Jul 13 12:58:07.820: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 13 12:58:07.820: INFO: sonobuoy-systemd-logs-daemon-set-4e460315498c4029-tw5hd from sonobuoy started at 2024-07-13 12:23:14 +0000 UTC (2 container statuses recorded)
  Jul 13 12:58:07.820: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 13 12:58:07.820: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/13/24 12:58:07.82
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/13/24 12:58:09.84
  STEP: Trying to apply a random label on the found node. @ 07/13/24 12:58:09.849
  STEP: verifying the node has the label kubernetes.io/e2e-8ff68663-7d99-4fb4-a73a-9a70ad0a02f1 42 @ 07/13/24 12:58:09.858
  STEP: Trying to relaunch the pod, now with labels. @ 07/13/24 12:58:09.863
  STEP: removing the label kubernetes.io/e2e-8ff68663-7d99-4fb4-a73a-9a70ad0a02f1 off the node ip-172-31-37-214 @ 07/13/24 12:58:11.883
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-8ff68663-7d99-4fb4-a73a-9a70ad0a02f1 @ 07/13/24 12:58:11.894
  Jul 13 12:58:11.900: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5049" for this suite. @ 07/13/24 12:58:11.903
â€¢ [4.134 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:751
  STEP: Creating a kubernetes client @ 07/13/24 12:58:11.91
  Jul 13 12:58:11.910: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename statefulset @ 07/13/24 12:58:11.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:58:11.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:58:11.927
  STEP: Creating service test in namespace statefulset-7122 @ 07/13/24 12:58:11.931
  STEP: Creating stateful set ss in namespace statefulset-7122 @ 07/13/24 12:58:11.937
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-7122 @ 07/13/24 12:58:11.945
  Jul 13 12:58:11.949: INFO: Found 0 stateful pods, waiting for 1
  Jul 13 12:58:21.951: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 07/13/24 12:58:21.951
  Jul 13 12:58:21.953: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=statefulset-7122 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jul 13 12:58:22.050: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul 13 12:58:22.050: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul 13 12:58:22.050: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jul 13 12:58:22.054: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Jul 13 12:58:32.054: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jul 13 12:58:32.054: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jul 13 12:58:32.069: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
  Jul 13 12:58:32.069: INFO: ss-0  ip-172-31-37-214  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-07-13 12:58:13 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-13 12:58:11 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-13 12:58:22 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-13 12:58:22 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-13 12:58:11 +0000 UTC  }]
  Jul 13 12:58:32.069: INFO: 
  Jul 13 12:58:32.069: INFO: StatefulSet ss has not reached scale 3, at 1
  Jul 13 12:58:33.074: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.994860572s
  Jul 13 12:58:34.077: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.990861281s
  Jul 13 12:58:35.082: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.987723772s
  Jul 13 12:58:36.089: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.982866488s
  Jul 13 12:58:37.094: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.975932845s
  Jul 13 12:58:38.097: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.970886336s
  Jul 13 12:58:39.102: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.967013119s
  Jul 13 12:58:40.106: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.962637303s
  Jul 13 12:58:41.110: INFO: Verifying statefulset ss doesn't scale past 3 for another 958.521652ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-7122 @ 07/13/24 12:58:42.11
  Jul 13 12:58:42.115: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=statefulset-7122 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jul 13 12:58:42.211: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jul 13 12:58:42.211: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jul 13 12:58:42.211: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jul 13 12:58:42.211: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=statefulset-7122 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jul 13 12:58:42.301: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Jul 13 12:58:42.301: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jul 13 12:58:42.301: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jul 13 12:58:42.301: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=statefulset-7122 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jul 13 12:58:42.394: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Jul 13 12:58:42.394: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jul 13 12:58:42.394: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jul 13 12:58:42.398: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jul 13 12:58:42.398: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Jul 13 12:58:42.398: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 07/13/24 12:58:42.398
  Jul 13 12:58:42.402: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=statefulset-7122 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jul 13 12:58:42.488: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul 13 12:58:42.488: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul 13 12:58:42.488: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jul 13 12:58:42.488: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=statefulset-7122 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jul 13 12:58:42.579: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul 13 12:58:42.579: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul 13 12:58:42.579: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jul 13 12:58:42.579: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=statefulset-7122 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jul 13 12:58:42.665: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul 13 12:58:42.665: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul 13 12:58:42.665: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jul 13 12:58:42.665: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jul 13 12:58:42.668: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  Jul 13 12:58:52.674: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jul 13 12:58:52.674: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Jul 13 12:58:52.674: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Jul 13 12:58:52.685: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
  Jul 13 12:58:52.685: INFO: ss-0  ip-172-31-37-214  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-07-13 12:58:13 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-13 12:58:11 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-13 12:58:43 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-13 12:58:43 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-13 12:58:11 +0000 UTC  }]
  Jul 13 12:58:52.685: INFO: ss-1  ip-172-31-89-122  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-07-13 12:58:33 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-13 12:58:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-13 12:58:43 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-13 12:58:43 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-13 12:58:32 +0000 UTC  }]
  Jul 13 12:58:52.685: INFO: ss-2  ip-172-31-15-91   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-07-13 12:58:33 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-13 12:58:32 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-13 12:58:43 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-13 12:58:43 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-13 12:58:32 +0000 UTC  }]
  Jul 13 12:58:52.685: INFO: 
  Jul 13 12:58:52.685: INFO: StatefulSet ss has not reached scale 0, at 3
  Jul 13 12:58:53.690: INFO: POD   NODE              PHASE      GRACE  CONDITIONS
  Jul 13 12:58:53.690: INFO: ss-1  ip-172-31-89-122  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-07-13 12:58:52 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-13 12:58:32 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-13 12:58:43 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-13 12:58:43 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-13 12:58:32 +0000 UTC  }]
  Jul 13 12:58:53.690: INFO: ss-2  ip-172-31-15-91   Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-07-13 12:58:52 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-13 12:58:32 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-13 12:58:43 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-13 12:58:43 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-13 12:58:32 +0000 UTC  }]
  Jul 13 12:58:53.690: INFO: 
  Jul 13 12:58:53.690: INFO: StatefulSet ss has not reached scale 0, at 2
  Jul 13 12:58:54.695: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.99072743s
  Jul 13 12:58:55.699: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.986511715s
  Jul 13 12:58:56.704: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.982776037s
  Jul 13 12:58:57.707: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.977419422s
  Jul 13 12:58:58.712: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.974271339s
  Jul 13 12:58:59.717: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.969957851s
  Jul 13 12:59:00.721: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.963788312s
  Jul 13 12:59:01.727: INFO: Verifying statefulset ss doesn't scale past 0 for another 959.281603ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-7122 @ 07/13/24 12:59:02.727
  Jul 13 12:59:02.732: INFO: Scaling statefulset ss to 0
  Jul 13 12:59:02.739: INFO: Waiting for statefulset status.replicas updated to 0
  Jul 13 12:59:02.742: INFO: Deleting all statefulset in ns statefulset-7122
  Jul 13 12:59:02.744: INFO: Scaling statefulset ss to 0
  Jul 13 12:59:02.751: INFO: Waiting for statefulset status.replicas updated to 0
  Jul 13 12:59:02.754: INFO: Deleting statefulset ss
  Jul 13 12:59:02.764: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7122" for this suite. @ 07/13/24 12:59:02.768
â€¢ [50.863 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 07/13/24 12:59:02.774
  Jul 13 12:59:02.774: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename emptydir @ 07/13/24 12:59:02.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:59:02.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:59:02.791
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 07/13/24 12:59:02.793
  STEP: Saw pod success @ 07/13/24 12:59:04.813
  Jul 13 12:59:04.817: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-bb48f56d-c585-4e19-9d32-6e8ec6cea221 container test-container: <nil>
  STEP: delete the pod @ 07/13/24 12:59:04.823
  Jul 13 12:59:04.848: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2975" for this suite. @ 07/13/24 12:59:04.852
â€¢ [2.085 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 07/13/24 12:59:04.859
  Jul 13 12:59:04.859: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/13/24 12:59:04.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:59:04.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:59:04.88
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 07/13/24 12:59:04.884
  Jul 13 12:59:04.884: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 12:59:06.176: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 12:59:11.090: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5725" for this suite. @ 07/13/24 12:59:11.096
â€¢ [6.246 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 07/13/24 12:59:11.106
  Jul 13 12:59:11.106: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename emptydir @ 07/13/24 12:59:11.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:59:11.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:59:11.123
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 07/13/24 12:59:11.125
  STEP: Saw pod success @ 07/13/24 12:59:15.145
  Jul 13 12:59:15.149: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-f30bc6fa-d7fe-423b-a12b-d01315dfafd0 container test-container: <nil>
  STEP: delete the pod @ 07/13/24 12:59:15.16
  Jul 13 12:59:15.175: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6864" for this suite. @ 07/13/24 12:59:15.178
â€¢ [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 07/13/24 12:59:15.185
  Jul 13 12:59:15.185: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/13/24 12:59:15.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:59:15.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:59:15.202
  Jul 13 12:59:15.204: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/13/24 12:59:16.495
  Jul 13 12:59:16.495: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=crd-publish-openapi-9755 --namespace=crd-publish-openapi-9755 create -f -'
  Jul 13 12:59:18.553: INFO: stderr: ""
  Jul 13 12:59:18.553: INFO: stdout: "e2e-test-crd-publish-openapi-9750-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Jul 13 12:59:18.553: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=crd-publish-openapi-9755 --namespace=crd-publish-openapi-9755 delete e2e-test-crd-publish-openapi-9750-crds test-cr'
  Jul 13 12:59:18.610: INFO: stderr: ""
  Jul 13 12:59:18.610: INFO: stdout: "e2e-test-crd-publish-openapi-9750-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Jul 13 12:59:18.610: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=crd-publish-openapi-9755 --namespace=crd-publish-openapi-9755 apply -f -'
  Jul 13 12:59:18.661: INFO: stderr: ""
  Jul 13 12:59:18.661: INFO: stdout: "e2e-test-crd-publish-openapi-9750-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Jul 13 12:59:18.661: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=crd-publish-openapi-9755 --namespace=crd-publish-openapi-9755 delete e2e-test-crd-publish-openapi-9750-crds test-cr'
  Jul 13 12:59:18.710: INFO: stderr: ""
  Jul 13 12:59:18.710: INFO: stdout: "e2e-test-crd-publish-openapi-9750-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 07/13/24 12:59:18.71
  Jul 13 12:59:18.710: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=crd-publish-openapi-9755 explain e2e-test-crd-publish-openapi-9750-crds'
  Jul 13 12:59:18.749: INFO: stderr: ""
  Jul 13 12:59:18.749: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-9750-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Jul 13 12:59:19.955: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9755" for this suite. @ 07/13/24 12:59:19.96
â€¢ [4.782 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 07/13/24 12:59:19.967
  Jul 13 12:59:19.967: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename resourcequota @ 07/13/24 12:59:19.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:59:19.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:59:19.99
  STEP: Creating a ResourceQuota @ 07/13/24 12:59:19.991
  STEP: Getting a ResourceQuota @ 07/13/24 12:59:19.995
  STEP: Listing all ResourceQuotas with LabelSelector @ 07/13/24 12:59:19.997
  STEP: Patching the ResourceQuota @ 07/13/24 12:59:20.001
  STEP: Deleting a Collection of ResourceQuotas @ 07/13/24 12:59:20.005
  STEP: Verifying the deleted ResourceQuota @ 07/13/24 12:59:20.016
  Jul 13 12:59:20.019: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3662" for this suite. @ 07/13/24 12:59:20.021
â€¢ [0.059 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 07/13/24 12:59:20.026
  Jul 13 12:59:20.026: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename projected @ 07/13/24 12:59:20.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:59:20.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:59:20.043
  STEP: Creating configMap with name projected-configmap-test-volume-map-39a2982d-7f99-40c7-ae9a-5eb2b256fd38 @ 07/13/24 12:59:20.044
  STEP: Creating a pod to test consume configMaps @ 07/13/24 12:59:20.05
  STEP: Saw pod success @ 07/13/24 12:59:24.071
  Jul 13 12:59:24.075: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-projected-configmaps-c8fa28a3-e2f5-4fb3-abd6-4731ea3273dd container agnhost-container: <nil>
  STEP: delete the pod @ 07/13/24 12:59:24.082
  Jul 13 12:59:24.095: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2941" for this suite. @ 07/13/24 12:59:24.097
â€¢ [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 07/13/24 12:59:24.104
  Jul 13 12:59:24.104: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename proxy @ 07/13/24 12:59:24.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:59:24.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:59:24.123
  STEP: starting an echo server on multiple ports @ 07/13/24 12:59:24.133
  STEP: creating replication controller proxy-service-848pj in namespace proxy-4950 @ 07/13/24 12:59:24.133
  I0713 12:59:24.141959      20 runners.go:197] Created replication controller with name: proxy-service-848pj, namespace: proxy-4950, replica count: 1
  I0713 12:59:25.193066      20 runners.go:197] proxy-service-848pj Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0713 12:59:26.193966      20 runners.go:197] proxy-service-848pj Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jul 13 12:59:26.197: INFO: setup took 2.072599203s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 07/13/24 12:59:26.197
  Jul 13 12:59:26.208: INFO: (0) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/rewriteme">... (200; 10.851219ms)
  Jul 13 12:59:26.210: INFO: (0) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname1/proxy/: foo (200; 12.853732ms)
  Jul 13 12:59:26.210: INFO: (0) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/rewriteme">test<... (200; 12.881701ms)
  Jul 13 12:59:26.210: INFO: (0) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname2/proxy/: bar (200; 12.967378ms)
  Jul 13 12:59:26.210: INFO: (0) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/rewriteme">test</a> (200; 12.912003ms)
  Jul 13 12:59:26.211: INFO: (0) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname2/proxy/: tls qux (200; 14.35942ms)
  Jul 13 12:59:26.212: INFO: (0) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:462/proxy/: tls qux (200; 14.745815ms)
  Jul 13 12:59:26.212: INFO: (0) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname1/proxy/: tls baz (200; 14.765599ms)
  Jul 13 12:59:26.212: INFO: (0) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/tlsrewritem... (200; 15.167541ms)
  Jul 13 12:59:26.212: INFO: (0) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:460/proxy/: tls baz (200; 15.151499ms)
  Jul 13 12:59:26.212: INFO: (0) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname2/proxy/: bar (200; 15.035514ms)
  Jul 13 12:59:26.213: INFO: (0) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:162/proxy/: bar (200; 15.454917ms)
  Jul 13 12:59:26.213: INFO: (0) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:162/proxy/: bar (200; 15.588053ms)
  Jul 13 12:59:26.213: INFO: (0) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:160/proxy/: foo (200; 15.522543ms)
  Jul 13 12:59:26.213: INFO: (0) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:160/proxy/: foo (200; 15.57305ms)
  Jul 13 12:59:26.213: INFO: (0) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname1/proxy/: foo (200; 15.697397ms)
  Jul 13 12:59:26.218: INFO: (1) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:162/proxy/: bar (200; 4.350913ms)
  Jul 13 12:59:26.218: INFO: (1) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:162/proxy/: bar (200; 4.741111ms)
  Jul 13 12:59:26.218: INFO: (1) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:160/proxy/: foo (200; 4.94947ms)
  Jul 13 12:59:26.218: INFO: (1) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/rewriteme">... (200; 5.114698ms)
  Jul 13 12:59:26.219: INFO: (1) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:160/proxy/: foo (200; 5.727717ms)
  Jul 13 12:59:26.219: INFO: (1) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:462/proxy/: tls qux (200; 5.812309ms)
  Jul 13 12:59:26.219: INFO: (1) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:460/proxy/: tls baz (200; 5.666089ms)
  Jul 13 12:59:26.219: INFO: (1) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname1/proxy/: tls baz (200; 5.686474ms)
  Jul 13 12:59:26.220: INFO: (1) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname1/proxy/: foo (200; 6.809785ms)
  Jul 13 12:59:26.221: INFO: (1) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/rewriteme">test<... (200; 7.248474ms)
  Jul 13 12:59:26.221: INFO: (1) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/tlsrewritem... (200; 7.496574ms)
  Jul 13 12:59:26.221: INFO: (1) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname1/proxy/: foo (200; 7.911344ms)
  Jul 13 12:59:26.221: INFO: (1) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/rewriteme">test</a> (200; 7.815152ms)
  Jul 13 12:59:26.221: INFO: (1) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname2/proxy/: tls qux (200; 8.045198ms)
  Jul 13 12:59:26.221: INFO: (1) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname2/proxy/: bar (200; 7.788186ms)
  Jul 13 12:59:26.222: INFO: (1) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname2/proxy/: bar (200; 8.320341ms)
  Jul 13 12:59:26.226: INFO: (2) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/rewriteme">test</a> (200; 4.065547ms)
  Jul 13 12:59:26.226: INFO: (2) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/rewriteme">test<... (200; 4.346838ms)
  Jul 13 12:59:26.227: INFO: (2) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:460/proxy/: tls baz (200; 5.376376ms)
  Jul 13 12:59:26.228: INFO: (2) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:462/proxy/: tls qux (200; 5.832575ms)
  Jul 13 12:59:26.229: INFO: (2) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:160/proxy/: foo (200; 7.532106ms)
  Jul 13 12:59:26.229: INFO: (2) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:162/proxy/: bar (200; 7.566706ms)
  Jul 13 12:59:26.230: INFO: (2) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/rewriteme">... (200; 7.685993ms)
  Jul 13 12:59:26.230: INFO: (2) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname1/proxy/: foo (200; 8.020759ms)
  Jul 13 12:59:26.231: INFO: (2) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname1/proxy/: tls baz (200; 9.526416ms)
  Jul 13 12:59:26.232: INFO: (2) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname1/proxy/: foo (200; 10.237468ms)
  Jul 13 12:59:26.233: INFO: (2) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname2/proxy/: bar (200; 10.730723ms)
  Jul 13 12:59:26.233: INFO: (2) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:162/proxy/: bar (200; 10.873328ms)
  Jul 13 12:59:26.233: INFO: (2) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:160/proxy/: foo (200; 10.913515ms)
  Jul 13 12:59:26.233: INFO: (2) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/tlsrewritem... (200; 11.003486ms)
  Jul 13 12:59:26.235: INFO: (2) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname2/proxy/: tls qux (200; 13.491885ms)
  Jul 13 12:59:26.236: INFO: (2) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname2/proxy/: bar (200; 13.593954ms)
  Jul 13 12:59:26.245: INFO: (3) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/rewriteme">test</a> (200; 8.953899ms)
  Jul 13 12:59:26.245: INFO: (3) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/tlsrewritem... (200; 9.542615ms)
  Jul 13 12:59:26.245: INFO: (3) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:462/proxy/: tls qux (200; 9.378081ms)
  Jul 13 12:59:26.246: INFO: (3) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:162/proxy/: bar (200; 10.005411ms)
  Jul 13 12:59:26.247: INFO: (3) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:162/proxy/: bar (200; 10.972829ms)
  Jul 13 12:59:26.247: INFO: (3) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname2/proxy/: bar (200; 10.94265ms)
  Jul 13 12:59:26.247: INFO: (3) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/rewriteme">test<... (200; 11.165076ms)
  Jul 13 12:59:26.247: INFO: (3) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:160/proxy/: foo (200; 11.10412ms)
  Jul 13 12:59:26.248: INFO: (3) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/rewriteme">... (200; 12.091355ms)
  Jul 13 12:59:26.248: INFO: (3) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:460/proxy/: tls baz (200; 12.087ms)
  Jul 13 12:59:26.248: INFO: (3) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname2/proxy/: tls qux (200; 12.195703ms)
  Jul 13 12:59:26.248: INFO: (3) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:160/proxy/: foo (200; 12.423856ms)
  Jul 13 12:59:26.248: INFO: (3) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname1/proxy/: tls baz (200; 12.352971ms)
  Jul 13 12:59:26.248: INFO: (3) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname1/proxy/: foo (200; 12.641357ms)
  Jul 13 12:59:26.249: INFO: (3) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname1/proxy/: foo (200; 12.908724ms)
  Jul 13 12:59:26.249: INFO: (3) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname2/proxy/: bar (200; 13.514201ms)
  Jul 13 12:59:26.255: INFO: (4) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:462/proxy/: tls qux (200; 5.099922ms)
  Jul 13 12:59:26.255: INFO: (4) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/rewriteme">test<... (200; 5.429567ms)
  Jul 13 12:59:26.255: INFO: (4) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:162/proxy/: bar (200; 5.382101ms)
  Jul 13 12:59:26.256: INFO: (4) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/rewriteme">... (200; 5.995698ms)
  Jul 13 12:59:26.258: INFO: (4) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/tlsrewritem... (200; 8.538859ms)
  Jul 13 12:59:26.258: INFO: (4) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:160/proxy/: foo (200; 8.712013ms)
  Jul 13 12:59:26.259: INFO: (4) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:162/proxy/: bar (200; 8.816135ms)
  Jul 13 12:59:26.259: INFO: (4) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname2/proxy/: bar (200; 8.869556ms)
  Jul 13 12:59:26.259: INFO: (4) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname1/proxy/: tls baz (200; 9.29227ms)
  Jul 13 12:59:26.259: INFO: (4) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:160/proxy/: foo (200; 9.23422ms)
  Jul 13 12:59:26.259: INFO: (4) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/rewriteme">test</a> (200; 9.341297ms)
  Jul 13 12:59:26.259: INFO: (4) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname2/proxy/: tls qux (200; 9.49428ms)
  Jul 13 12:59:26.259: INFO: (4) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:460/proxy/: tls baz (200; 9.30533ms)
  Jul 13 12:59:26.259: INFO: (4) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname1/proxy/: foo (200; 9.85257ms)
  Jul 13 12:59:26.262: INFO: (4) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname2/proxy/: bar (200; 12.145959ms)
  Jul 13 12:59:26.266: INFO: (4) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname1/proxy/: foo (200; 15.787741ms)
  Jul 13 12:59:26.271: INFO: (5) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:162/proxy/: bar (200; 5.271981ms)
  Jul 13 12:59:26.272: INFO: (5) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:160/proxy/: foo (200; 5.546526ms)
  Jul 13 12:59:26.272: INFO: (5) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/rewriteme">... (200; 6.011719ms)
  Jul 13 12:59:26.273: INFO: (5) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:160/proxy/: foo (200; 7.363293ms)
  Jul 13 12:59:26.274: INFO: (5) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/rewriteme">test<... (200; 8.630518ms)
  Jul 13 12:59:26.275: INFO: (5) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:162/proxy/: bar (200; 8.530845ms)
  Jul 13 12:59:26.275: INFO: (5) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:460/proxy/: tls baz (200; 8.799178ms)
  Jul 13 12:59:26.276: INFO: (5) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/rewriteme">test</a> (200; 9.459391ms)
  Jul 13 12:59:26.276: INFO: (5) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:462/proxy/: tls qux (200; 9.676533ms)
  Jul 13 12:59:26.276: INFO: (5) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname1/proxy/: foo (200; 9.643213ms)
  Jul 13 12:59:26.276: INFO: (5) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/tlsrewritem... (200; 10.0266ms)
  Jul 13 12:59:26.276: INFO: (5) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname1/proxy/: foo (200; 9.938609ms)
  Jul 13 12:59:26.276: INFO: (5) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname2/proxy/: bar (200; 10.246957ms)
  Jul 13 12:59:26.276: INFO: (5) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname2/proxy/: bar (200; 10.397203ms)
  Jul 13 12:59:26.277: INFO: (5) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname2/proxy/: tls qux (200; 10.964728ms)
  Jul 13 12:59:26.277: INFO: (5) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname1/proxy/: tls baz (200; 11.526693ms)
  Jul 13 12:59:26.281: INFO: (6) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:462/proxy/: tls qux (200; 3.712159ms)
  Jul 13 12:59:26.283: INFO: (6) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/rewriteme">test<... (200; 5.881093ms)
  Jul 13 12:59:26.284: INFO: (6) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:160/proxy/: foo (200; 6.046625ms)
  Jul 13 12:59:26.284: INFO: (6) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:162/proxy/: bar (200; 5.961175ms)
  Jul 13 12:59:26.285: INFO: (6) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname2/proxy/: bar (200; 7.84465ms)
  Jul 13 12:59:26.286: INFO: (6) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/rewriteme">... (200; 8.080758ms)
  Jul 13 12:59:26.286: INFO: (6) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:162/proxy/: bar (200; 8.258205ms)
  Jul 13 12:59:26.286: INFO: (6) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:160/proxy/: foo (200; 8.166314ms)
  Jul 13 12:59:26.286: INFO: (6) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/tlsrewritem... (200; 8.147817ms)
  Jul 13 12:59:26.286: INFO: (6) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname2/proxy/: tls qux (200; 8.385747ms)
  Jul 13 12:59:26.286: INFO: (6) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname1/proxy/: foo (200; 8.442994ms)
  Jul 13 12:59:26.287: INFO: (6) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:460/proxy/: tls baz (200; 8.877502ms)
  Jul 13 12:59:26.287: INFO: (6) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/rewriteme">test</a> (200; 9.061649ms)
  Jul 13 12:59:26.287: INFO: (6) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname2/proxy/: bar (200; 9.25297ms)
  Jul 13 12:59:26.287: INFO: (6) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname1/proxy/: tls baz (200; 9.334161ms)
  Jul 13 12:59:26.288: INFO: (6) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname1/proxy/: foo (200; 10.117163ms)
  Jul 13 12:59:26.295: INFO: (7) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/rewriteme">test</a> (200; 6.84976ms)
  Jul 13 12:59:26.295: INFO: (7) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:160/proxy/: foo (200; 6.86219ms)
  Jul 13 12:59:26.295: INFO: (7) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/rewriteme">... (200; 7.201087ms)
  Jul 13 12:59:26.299: INFO: (7) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname2/proxy/: bar (200; 11.447872ms)
  Jul 13 12:59:26.299: INFO: (7) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:162/proxy/: bar (200; 11.426699ms)
  Jul 13 12:59:26.300: INFO: (7) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname2/proxy/: tls qux (200; 12.55919ms)
  Jul 13 12:59:26.300: INFO: (7) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:460/proxy/: tls baz (200; 12.393688ms)
  Jul 13 12:59:26.301: INFO: (7) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:160/proxy/: foo (200; 12.639755ms)
  Jul 13 12:59:26.301: INFO: (7) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname1/proxy/: foo (200; 12.594929ms)
  Jul 13 12:59:26.301: INFO: (7) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname1/proxy/: tls baz (200; 12.656518ms)
  Jul 13 12:59:26.301: INFO: (7) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/tlsrewritem... (200; 12.623405ms)
  Jul 13 12:59:26.301: INFO: (7) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname2/proxy/: bar (200; 12.908225ms)
  Jul 13 12:59:26.301: INFO: (7) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:162/proxy/: bar (200; 13.026128ms)
  Jul 13 12:59:26.301: INFO: (7) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:462/proxy/: tls qux (200; 12.944905ms)
  Jul 13 12:59:26.301: INFO: (7) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/rewriteme">test<... (200; 12.742729ms)
  Jul 13 12:59:26.301: INFO: (7) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname1/proxy/: foo (200; 12.932474ms)
  Jul 13 12:59:26.308: INFO: (8) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:160/proxy/: foo (200; 6.710268ms)
  Jul 13 12:59:26.308: INFO: (8) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/rewriteme">test<... (200; 6.829076ms)
  Jul 13 12:59:26.308: INFO: (8) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:162/proxy/: bar (200; 7.250937ms)
  Jul 13 12:59:26.308: INFO: (8) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/tlsrewritem... (200; 7.013032ms)
  Jul 13 12:59:26.309: INFO: (8) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname1/proxy/: foo (200; 7.59547ms)
  Jul 13 12:59:26.309: INFO: (8) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/rewriteme">test</a> (200; 7.52733ms)
  Jul 13 12:59:26.309: INFO: (8) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:162/proxy/: bar (200; 7.560291ms)
  Jul 13 12:59:26.309: INFO: (8) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/rewriteme">... (200; 7.494819ms)
  Jul 13 12:59:26.309: INFO: (8) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:460/proxy/: tls baz (200; 7.713575ms)
  Jul 13 12:59:26.309: INFO: (8) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:160/proxy/: foo (200; 8.067452ms)
  Jul 13 12:59:26.310: INFO: (8) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:462/proxy/: tls qux (200; 8.7248ms)
  Jul 13 12:59:26.310: INFO: (8) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname2/proxy/: bar (200; 8.374399ms)
  Jul 13 12:59:26.310: INFO: (8) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname2/proxy/: tls qux (200; 8.895761ms)
  Jul 13 12:59:26.311: INFO: (8) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname1/proxy/: tls baz (200; 9.377608ms)
  Jul 13 12:59:26.311: INFO: (8) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname2/proxy/: bar (200; 9.725261ms)
  Jul 13 12:59:26.312: INFO: (8) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname1/proxy/: foo (200; 10.384676ms)
  Jul 13 12:59:26.318: INFO: (9) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/rewriteme">test</a> (200; 5.730002ms)
  Jul 13 12:59:26.318: INFO: (9) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/rewriteme">test<... (200; 5.904827ms)
  Jul 13 12:59:26.318: INFO: (9) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:162/proxy/: bar (200; 6.050172ms)
  Jul 13 12:59:26.318: INFO: (9) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/tlsrewritem... (200; 5.866248ms)
  Jul 13 12:59:26.319: INFO: (9) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:160/proxy/: foo (200; 7.527336ms)
  Jul 13 12:59:26.320: INFO: (9) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/rewriteme">... (200; 7.981003ms)
  Jul 13 12:59:26.320: INFO: (9) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:462/proxy/: tls qux (200; 7.949182ms)
  Jul 13 12:59:26.320: INFO: (9) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:162/proxy/: bar (200; 8.102143ms)
  Jul 13 12:59:26.320: INFO: (9) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:460/proxy/: tls baz (200; 8.369015ms)
  Jul 13 12:59:26.320: INFO: (9) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname1/proxy/: foo (200; 8.339482ms)
  Jul 13 12:59:26.320: INFO: (9) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:160/proxy/: foo (200; 8.413978ms)
  Jul 13 12:59:26.321: INFO: (9) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname2/proxy/: bar (200; 9.229442ms)
  Jul 13 12:59:26.321: INFO: (9) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname1/proxy/: foo (200; 9.171062ms)
  Jul 13 12:59:26.321: INFO: (9) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname2/proxy/: tls qux (200; 9.407527ms)
  Jul 13 12:59:26.321: INFO: (9) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname2/proxy/: bar (200; 9.535055ms)
  Jul 13 12:59:26.322: INFO: (9) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname1/proxy/: tls baz (200; 10.623919ms)
  Jul 13 12:59:26.327: INFO: (10) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:162/proxy/: bar (200; 3.956815ms)
  Jul 13 12:59:26.327: INFO: (10) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/rewriteme">... (200; 4.332606ms)
  Jul 13 12:59:26.327: INFO: (10) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/tlsrewritem... (200; 4.57197ms)
  Jul 13 12:59:26.329: INFO: (10) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname1/proxy/: foo (200; 5.906588ms)
  Jul 13 12:59:26.329: INFO: (10) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/rewriteme">test</a> (200; 6.080247ms)
  Jul 13 12:59:26.329: INFO: (10) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:160/proxy/: foo (200; 6.092087ms)
  Jul 13 12:59:26.329: INFO: (10) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/rewriteme">test<... (200; 6.437096ms)
  Jul 13 12:59:26.329: INFO: (10) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:462/proxy/: tls qux (200; 6.602892ms)
  Jul 13 12:59:26.329: INFO: (10) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:162/proxy/: bar (200; 6.423445ms)
  Jul 13 12:59:26.330: INFO: (10) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname2/proxy/: bar (200; 6.84321ms)
  Jul 13 12:59:26.330: INFO: (10) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:160/proxy/: foo (200; 7.649138ms)
  Jul 13 12:59:26.330: INFO: (10) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname1/proxy/: foo (200; 7.801828ms)
  Jul 13 12:59:26.330: INFO: (10) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:460/proxy/: tls baz (200; 7.76357ms)
  Jul 13 12:59:26.331: INFO: (10) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname2/proxy/: tls qux (200; 8.158555ms)
  Jul 13 12:59:26.331: INFO: (10) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname1/proxy/: tls baz (200; 8.984164ms)
  Jul 13 12:59:26.333: INFO: (10) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname2/proxy/: bar (200; 9.957065ms)
  Jul 13 12:59:26.336: INFO: (11) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/tlsrewritem... (200; 3.648547ms)
  Jul 13 12:59:26.337: INFO: (11) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:160/proxy/: foo (200; 3.992249ms)
  Jul 13 12:59:26.337: INFO: (11) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:162/proxy/: bar (200; 4.194605ms)
  Jul 13 12:59:26.337: INFO: (11) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:162/proxy/: bar (200; 4.155489ms)
  Jul 13 12:59:26.339: INFO: (11) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:460/proxy/: tls baz (200; 6.141429ms)
  Jul 13 12:59:26.339: INFO: (11) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname1/proxy/: foo (200; 6.416432ms)
  Jul 13 12:59:26.339: INFO: (11) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/rewriteme">test<... (200; 6.149229ms)
  Jul 13 12:59:26.339: INFO: (11) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:462/proxy/: tls qux (200; 6.127711ms)
  Jul 13 12:59:26.340: INFO: (11) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/rewriteme">... (200; 6.688234ms)
  Jul 13 12:59:26.340: INFO: (11) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:160/proxy/: foo (200; 7.201574ms)
  Jul 13 12:59:26.340: INFO: (11) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/rewriteme">test</a> (200; 7.128651ms)
  Jul 13 12:59:26.340: INFO: (11) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname1/proxy/: foo (200; 7.348582ms)
  Jul 13 12:59:26.341: INFO: (11) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname2/proxy/: bar (200; 8.042573ms)
  Jul 13 12:59:26.342: INFO: (11) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname1/proxy/: tls baz (200; 8.792531ms)
  Jul 13 12:59:26.343: INFO: (11) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname2/proxy/: tls qux (200; 9.665306ms)
  Jul 13 12:59:26.345: INFO: (11) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname2/proxy/: bar (200; 12.336748ms)
  Jul 13 12:59:26.349: INFO: (12) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:462/proxy/: tls qux (200; 3.356632ms)
  Jul 13 12:59:26.350: INFO: (12) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/rewriteme">... (200; 4.013734ms)
  Jul 13 12:59:26.350: INFO: (12) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:460/proxy/: tls baz (200; 5.041036ms)
  Jul 13 12:59:26.351: INFO: (12) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/rewriteme">test<... (200; 4.888859ms)
  Jul 13 12:59:26.351: INFO: (12) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:162/proxy/: bar (200; 4.869126ms)
  Jul 13 12:59:26.351: INFO: (12) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname1/proxy/: foo (200; 5.850008ms)
  Jul 13 12:59:26.352: INFO: (12) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/tlsrewritem... (200; 5.962465ms)
  Jul 13 12:59:26.352: INFO: (12) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:162/proxy/: bar (200; 6.352177ms)
  Jul 13 12:59:26.352: INFO: (12) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname1/proxy/: tls baz (200; 6.485969ms)
  Jul 13 12:59:26.352: INFO: (12) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname1/proxy/: foo (200; 6.572513ms)
  Jul 13 12:59:26.352: INFO: (12) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:160/proxy/: foo (200; 6.700554ms)
  Jul 13 12:59:26.352: INFO: (12) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname2/proxy/: bar (200; 6.747264ms)
  Jul 13 12:59:26.353: INFO: (12) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/rewriteme">test</a> (200; 7.311618ms)
  Jul 13 12:59:26.353: INFO: (12) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:160/proxy/: foo (200; 7.326513ms)
  Jul 13 12:59:26.353: INFO: (12) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname2/proxy/: bar (200; 7.53649ms)
  Jul 13 12:59:26.353: INFO: (12) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname2/proxy/: tls qux (200; 7.928533ms)
  Jul 13 12:59:26.357: INFO: (13) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:162/proxy/: bar (200; 3.489264ms)
  Jul 13 12:59:26.358: INFO: (13) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/rewriteme">... (200; 4.070338ms)
  Jul 13 12:59:26.358: INFO: (13) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:460/proxy/: tls baz (200; 4.346135ms)
  Jul 13 12:59:26.358: INFO: (13) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:162/proxy/: bar (200; 4.60493ms)
  Jul 13 12:59:26.359: INFO: (13) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:462/proxy/: tls qux (200; 5.621929ms)
  Jul 13 12:59:26.360: INFO: (13) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:160/proxy/: foo (200; 5.75655ms)
  Jul 13 12:59:26.360: INFO: (13) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:160/proxy/: foo (200; 6.564456ms)
  Jul 13 12:59:26.360: INFO: (13) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/rewriteme">test</a> (200; 6.653018ms)
  Jul 13 12:59:26.361: INFO: (13) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/tlsrewritem... (200; 7.031471ms)
  Jul 13 12:59:26.361: INFO: (13) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/rewriteme">test<... (200; 6.959662ms)
  Jul 13 12:59:26.361: INFO: (13) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname1/proxy/: foo (200; 7.198055ms)
  Jul 13 12:59:26.361: INFO: (13) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname2/proxy/: bar (200; 7.877523ms)
  Jul 13 12:59:26.362: INFO: (13) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname2/proxy/: tls qux (200; 7.712897ms)
  Jul 13 12:59:26.362: INFO: (13) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname1/proxy/: foo (200; 7.888599ms)
  Jul 13 12:59:26.362: INFO: (13) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname1/proxy/: tls baz (200; 8.174228ms)
  Jul 13 12:59:26.362: INFO: (13) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname2/proxy/: bar (200; 8.429933ms)
  Jul 13 12:59:26.366: INFO: (14) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/rewriteme">test<... (200; 3.370811ms)
  Jul 13 12:59:26.366: INFO: (14) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:460/proxy/: tls baz (200; 3.997549ms)
  Jul 13 12:59:26.367: INFO: (14) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:162/proxy/: bar (200; 4.782159ms)
  Jul 13 12:59:26.367: INFO: (14) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/rewriteme">test</a> (200; 4.901716ms)
  Jul 13 12:59:26.368: INFO: (14) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname1/proxy/: foo (200; 5.1524ms)
  Jul 13 12:59:26.368: INFO: (14) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:160/proxy/: foo (200; 5.39873ms)
  Jul 13 12:59:26.368: INFO: (14) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:162/proxy/: bar (200; 6.017782ms)
  Jul 13 12:59:26.369: INFO: (14) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname1/proxy/: tls baz (200; 6.396709ms)
  Jul 13 12:59:26.369: INFO: (14) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/rewriteme">... (200; 6.417356ms)
  Jul 13 12:59:26.369: INFO: (14) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/tlsrewritem... (200; 6.508507ms)
  Jul 13 12:59:26.369: INFO: (14) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:160/proxy/: foo (200; 6.586935ms)
  Jul 13 12:59:26.369: INFO: (14) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:462/proxy/: tls qux (200; 6.956092ms)
  Jul 13 12:59:26.369: INFO: (14) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname2/proxy/: bar (200; 7.044707ms)
  Jul 13 12:59:26.369: INFO: (14) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname2/proxy/: tls qux (200; 7.072079ms)
  Jul 13 12:59:26.371: INFO: (14) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname2/proxy/: bar (200; 8.221142ms)
  Jul 13 12:59:26.371: INFO: (14) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname1/proxy/: foo (200; 8.634985ms)
  Jul 13 12:59:26.374: INFO: (15) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:462/proxy/: tls qux (200; 2.958896ms)
  Jul 13 12:59:26.375: INFO: (15) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/rewriteme">... (200; 3.664884ms)
  Jul 13 12:59:26.375: INFO: (15) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:460/proxy/: tls baz (200; 3.875556ms)
  Jul 13 12:59:26.376: INFO: (15) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/rewriteme">test</a> (200; 4.403022ms)
  Jul 13 12:59:26.376: INFO: (15) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/tlsrewritem... (200; 4.221201ms)
  Jul 13 12:59:26.376: INFO: (15) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:160/proxy/: foo (200; 5.066214ms)
  Jul 13 12:59:26.376: INFO: (15) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/rewriteme">test<... (200; 5.165985ms)
  Jul 13 12:59:26.377: INFO: (15) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:160/proxy/: foo (200; 5.57356ms)
  Jul 13 12:59:26.377: INFO: (15) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname2/proxy/: bar (200; 6.037126ms)
  Jul 13 12:59:26.378: INFO: (15) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:162/proxy/: bar (200; 6.449723ms)
  Jul 13 12:59:26.378: INFO: (15) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname1/proxy/: foo (200; 6.840117ms)
  Jul 13 12:59:26.378: INFO: (15) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:162/proxy/: bar (200; 6.930962ms)
  Jul 13 12:59:26.378: INFO: (15) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname1/proxy/: tls baz (200; 7.203777ms)
  Jul 13 12:59:26.379: INFO: (15) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname2/proxy/: tls qux (200; 7.565603ms)
  Jul 13 12:59:26.379: INFO: (15) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname1/proxy/: foo (200; 7.972282ms)
  Jul 13 12:59:26.380: INFO: (15) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname2/proxy/: bar (200; 8.731336ms)
  Jul 13 12:59:26.384: INFO: (16) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:162/proxy/: bar (200; 3.431778ms)
  Jul 13 12:59:26.384: INFO: (16) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/tlsrewritem... (200; 3.399957ms)
  Jul 13 12:59:26.384: INFO: (16) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/rewriteme">... (200; 4.067344ms)
  Jul 13 12:59:26.385: INFO: (16) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:460/proxy/: tls baz (200; 4.923291ms)
  Jul 13 12:59:26.386: INFO: (16) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:462/proxy/: tls qux (200; 5.083455ms)
  Jul 13 12:59:26.386: INFO: (16) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/rewriteme">test<... (200; 5.417213ms)
  Jul 13 12:59:26.386: INFO: (16) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:162/proxy/: bar (200; 5.313047ms)
  Jul 13 12:59:26.386: INFO: (16) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:160/proxy/: foo (200; 5.763406ms)
  Jul 13 12:59:26.386: INFO: (16) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:160/proxy/: foo (200; 5.524489ms)
  Jul 13 12:59:26.386: INFO: (16) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/rewriteme">test</a> (200; 5.563549ms)
  Jul 13 12:59:26.386: INFO: (16) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname2/proxy/: bar (200; 6.014095ms)
  Jul 13 12:59:26.387: INFO: (16) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname1/proxy/: foo (200; 7.054349ms)
  Jul 13 12:59:26.388: INFO: (16) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname2/proxy/: bar (200; 7.38447ms)
  Jul 13 12:59:26.388: INFO: (16) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname1/proxy/: foo (200; 7.124049ms)
  Jul 13 12:59:26.388: INFO: (16) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname2/proxy/: tls qux (200; 7.41426ms)
  Jul 13 12:59:26.388: INFO: (16) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname1/proxy/: tls baz (200; 7.98394ms)
  Jul 13 12:59:26.391: INFO: (17) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:462/proxy/: tls qux (200; 2.991159ms)
  Jul 13 12:59:26.393: INFO: (17) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:162/proxy/: bar (200; 4.419192ms)
  Jul 13 12:59:26.394: INFO: (17) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:162/proxy/: bar (200; 5.05031ms)
  Jul 13 12:59:26.394: INFO: (17) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:160/proxy/: foo (200; 5.448796ms)
  Jul 13 12:59:26.394: INFO: (17) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/tlsrewritem... (200; 5.568153ms)
  Jul 13 12:59:26.394: INFO: (17) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/rewriteme">... (200; 5.757408ms)
  Jul 13 12:59:26.394: INFO: (17) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/rewriteme">test</a> (200; 5.806515ms)
  Jul 13 12:59:26.395: INFO: (17) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname2/proxy/: bar (200; 6.270738ms)
  Jul 13 12:59:26.395: INFO: (17) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname2/proxy/: tls qux (200; 6.141237ms)
  Jul 13 12:59:26.395: INFO: (17) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:160/proxy/: foo (200; 6.231274ms)
  Jul 13 12:59:26.395: INFO: (17) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/rewriteme">test<... (200; 6.491367ms)
  Jul 13 12:59:26.395: INFO: (17) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname1/proxy/: foo (200; 6.794625ms)
  Jul 13 12:59:26.396: INFO: (17) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:460/proxy/: tls baz (200; 6.888504ms)
  Jul 13 12:59:26.396: INFO: (17) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname1/proxy/: tls baz (200; 7.47719ms)
  Jul 13 12:59:26.397: INFO: (17) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname2/proxy/: bar (200; 8.266502ms)
  Jul 13 12:59:26.397: INFO: (17) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname1/proxy/: foo (200; 8.343737ms)
  Jul 13 12:59:26.400: INFO: (18) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:162/proxy/: bar (200; 3.144186ms)
  Jul 13 12:59:26.401: INFO: (18) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/rewriteme">test</a> (200; 4.040863ms)
  Jul 13 12:59:26.402: INFO: (18) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:162/proxy/: bar (200; 4.926742ms)
  Jul 13 12:59:26.402: INFO: (18) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/rewriteme">... (200; 5.073571ms)
  Jul 13 12:59:26.402: INFO: (18) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:160/proxy/: foo (200; 5.037137ms)
  Jul 13 12:59:26.403: INFO: (18) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname2/proxy/: bar (200; 6.272524ms)
  Jul 13 12:59:26.403: INFO: (18) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:462/proxy/: tls qux (200; 6.273167ms)
  Jul 13 12:59:26.403: INFO: (18) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname2/proxy/: tls qux (200; 6.278469ms)
  Jul 13 12:59:26.404: INFO: (18) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/rewriteme">test<... (200; 6.654476ms)
  Jul 13 12:59:26.404: INFO: (18) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/tlsrewritem... (200; 7.153775ms)
  Jul 13 12:59:26.405: INFO: (18) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:460/proxy/: tls baz (200; 7.599643ms)
  Jul 13 12:59:26.405: INFO: (18) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname1/proxy/: foo (200; 7.737238ms)
  Jul 13 12:59:26.405: INFO: (18) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:160/proxy/: foo (200; 7.655362ms)
  Jul 13 12:59:26.405: INFO: (18) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname1/proxy/: foo (200; 7.908841ms)
  Jul 13 12:59:26.405: INFO: (18) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname2/proxy/: bar (200; 8.038865ms)
  Jul 13 12:59:26.406: INFO: (18) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname1/proxy/: tls baz (200; 9.083498ms)
  Jul 13 12:59:26.409: INFO: (19) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:162/proxy/: bar (200; 3.25594ms)
  Jul 13 12:59:26.410: INFO: (19) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:162/proxy/: bar (200; 3.883058ms)
  Jul 13 12:59:26.410: INFO: (19) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg/proxy/rewriteme">test</a> (200; 3.93379ms)
  Jul 13 12:59:26.411: INFO: (19) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:160/proxy/: foo (200; 4.803059ms)
  Jul 13 12:59:26.411: INFO: (19) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:160/proxy/: foo (200; 4.712493ms)
  Jul 13 12:59:26.412: INFO: (19) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:462/proxy/: tls qux (200; 5.587822ms)
  Jul 13 12:59:26.412: INFO: (19) /api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/http:proxy-service-848pj-dwrjg:1080/proxy/rewriteme">... (200; 6.025841ms)
  Jul 13 12:59:26.413: INFO: (19) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:460/proxy/: tls baz (200; 6.165411ms)
  Jul 13 12:59:26.413: INFO: (19) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname1/proxy/: foo (200; 6.393559ms)
  Jul 13 12:59:26.413: INFO: (19) /api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/proxy-service-848pj-dwrjg:1080/proxy/rewriteme">test<... (200; 6.320462ms)
  Jul 13 12:59:26.413: INFO: (19) /api/v1/namespaces/proxy-4950/services/proxy-service-848pj:portname2/proxy/: bar (200; 6.764678ms)
  Jul 13 12:59:26.413: INFO: (19) /api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/: <a href="/api/v1/namespaces/proxy-4950/pods/https:proxy-service-848pj-dwrjg:443/proxy/tlsrewritem... (200; 6.68496ms)
  Jul 13 12:59:26.413: INFO: (19) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname1/proxy/: foo (200; 6.802921ms)
  Jul 13 12:59:26.414: INFO: (19) /api/v1/namespaces/proxy-4950/services/http:proxy-service-848pj:portname2/proxy/: bar (200; 7.319073ms)
  Jul 13 12:59:26.414: INFO: (19) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname2/proxy/: tls qux (200; 7.30686ms)
  Jul 13 12:59:26.414: INFO: (19) /api/v1/namespaces/proxy-4950/services/https:proxy-service-848pj:tlsportname1/proxy/: tls baz (200; 7.840693ms)
  STEP: deleting ReplicationController proxy-service-848pj in namespace proxy-4950, will wait for the garbage collector to delete the pods @ 07/13/24 12:59:26.414
  Jul 13 12:59:26.474: INFO: Deleting ReplicationController proxy-service-848pj took: 6.254534ms
  Jul 13 12:59:26.575: INFO: Terminating ReplicationController proxy-service-848pj pods took: 100.946517ms
  Jul 13 12:59:28.675: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4950" for this suite. @ 07/13/24 12:59:28.68
â€¢ [4.582 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 07/13/24 12:59:28.686
  Jul 13 12:59:28.686: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename svcaccounts @ 07/13/24 12:59:28.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:59:28.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:59:28.707
  STEP: Creating ServiceAccount "e2e-sa-2p6wk"  @ 07/13/24 12:59:28.709
  Jul 13 12:59:28.713: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-2p6wk"  @ 07/13/24 12:59:28.713
  Jul 13 12:59:28.719: INFO: AutomountServiceAccountToken: true
  Jul 13 12:59:28.719: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2441" for this suite. @ 07/13/24 12:59:28.723
â€¢ [0.042 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3565
  STEP: Creating a kubernetes client @ 07/13/24 12:59:28.728
  Jul 13 12:59:28.728: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename services @ 07/13/24 12:59:28.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:59:28.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:59:28.755
  STEP: creating a collection of services @ 07/13/24 12:59:28.756
  Jul 13 12:59:28.756: INFO: Creating e2e-svc-a-2tfxx
  Jul 13 12:59:28.767: INFO: Creating e2e-svc-b-6w45q
  Jul 13 12:59:28.779: INFO: Creating e2e-svc-c-gdk58
  STEP: deleting service collection @ 07/13/24 12:59:28.789
  Jul 13 12:59:28.816: INFO: Collection of services has been deleted
  Jul 13 12:59:28.816: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3657" for this suite. @ 07/13/24 12:59:28.818
â€¢ [0.094 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 07/13/24 12:59:28.823
  Jul 13 12:59:28.823: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename deployment @ 07/13/24 12:59:28.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:59:28.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:59:28.839
  STEP: creating a Deployment @ 07/13/24 12:59:28.843
  Jul 13 12:59:28.843: INFO: Creating simple deployment test-deployment-szz8m
  Jul 13 12:59:28.854: INFO: deployment "test-deployment-szz8m" doesn't have the required revision set
  STEP: Getting /status @ 07/13/24 12:59:30.865
  Jul 13 12:59:30.868: INFO: Deployment test-deployment-szz8m has Conditions: [{Available True 2024-07-13 12:59:29 +0000 UTC 2024-07-13 12:59:29 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-07-13 12:59:29 +0000 UTC 2024-07-13 12:59:28 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-szz8m-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 07/13/24 12:59:30.868
  Jul 13 12:59:30.880: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 13, 12, 59, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 13, 12, 59, 29, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 13, 12, 59, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 13, 12, 59, 28, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-szz8m-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 07/13/24 12:59:30.88
  Jul 13 12:59:30.883: INFO: Observed &Deployment event: ADDED
  Jul 13 12:59:30.883: INFO: Observed Deployment test-deployment-szz8m in namespace deployment-7324 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-13 12:59:28 +0000 UTC 2024-07-13 12:59:28 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-szz8m-5d576bd769"}
  Jul 13 12:59:30.883: INFO: Observed &Deployment event: MODIFIED
  Jul 13 12:59:30.883: INFO: Observed Deployment test-deployment-szz8m in namespace deployment-7324 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-13 12:59:28 +0000 UTC 2024-07-13 12:59:28 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-szz8m-5d576bd769"}
  Jul 13 12:59:30.883: INFO: Observed Deployment test-deployment-szz8m in namespace deployment-7324 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-07-13 12:59:28 +0000 UTC 2024-07-13 12:59:28 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jul 13 12:59:30.883: INFO: Observed &Deployment event: MODIFIED
  Jul 13 12:59:30.883: INFO: Observed Deployment test-deployment-szz8m in namespace deployment-7324 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-07-13 12:59:28 +0000 UTC 2024-07-13 12:59:28 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jul 13 12:59:30.883: INFO: Observed Deployment test-deployment-szz8m in namespace deployment-7324 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-13 12:59:28 +0000 UTC 2024-07-13 12:59:28 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-szz8m-5d576bd769" is progressing.}
  Jul 13 12:59:30.883: INFO: Observed &Deployment event: MODIFIED
  Jul 13 12:59:30.883: INFO: Observed Deployment test-deployment-szz8m in namespace deployment-7324 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-07-13 12:59:29 +0000 UTC 2024-07-13 12:59:29 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jul 13 12:59:30.883: INFO: Observed Deployment test-deployment-szz8m in namespace deployment-7324 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-13 12:59:29 +0000 UTC 2024-07-13 12:59:28 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-szz8m-5d576bd769" has successfully progressed.}
  Jul 13 12:59:30.883: INFO: Observed &Deployment event: MODIFIED
  Jul 13 12:59:30.883: INFO: Observed Deployment test-deployment-szz8m in namespace deployment-7324 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-07-13 12:59:29 +0000 UTC 2024-07-13 12:59:29 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jul 13 12:59:30.883: INFO: Observed Deployment test-deployment-szz8m in namespace deployment-7324 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-13 12:59:29 +0000 UTC 2024-07-13 12:59:28 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-szz8m-5d576bd769" has successfully progressed.}
  Jul 13 12:59:30.883: INFO: Found Deployment test-deployment-szz8m in namespace deployment-7324 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jul 13 12:59:30.883: INFO: Deployment test-deployment-szz8m has an updated status
  STEP: patching the Statefulset Status @ 07/13/24 12:59:30.883
  Jul 13 12:59:30.884: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jul 13 12:59:30.892: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 07/13/24 12:59:30.892
  Jul 13 12:59:30.894: INFO: Observed &Deployment event: ADDED
  Jul 13 12:59:30.894: INFO: Observed deployment test-deployment-szz8m in namespace deployment-7324 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-13 12:59:28 +0000 UTC 2024-07-13 12:59:28 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-szz8m-5d576bd769"}
  Jul 13 12:59:30.894: INFO: Observed &Deployment event: MODIFIED
  Jul 13 12:59:30.894: INFO: Observed deployment test-deployment-szz8m in namespace deployment-7324 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-13 12:59:28 +0000 UTC 2024-07-13 12:59:28 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-szz8m-5d576bd769"}
  Jul 13 12:59:30.894: INFO: Observed deployment test-deployment-szz8m in namespace deployment-7324 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-07-13 12:59:28 +0000 UTC 2024-07-13 12:59:28 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jul 13 12:59:30.894: INFO: Observed &Deployment event: MODIFIED
  Jul 13 12:59:30.894: INFO: Observed deployment test-deployment-szz8m in namespace deployment-7324 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-07-13 12:59:28 +0000 UTC 2024-07-13 12:59:28 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jul 13 12:59:30.894: INFO: Observed deployment test-deployment-szz8m in namespace deployment-7324 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-13 12:59:28 +0000 UTC 2024-07-13 12:59:28 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-szz8m-5d576bd769" is progressing.}
  Jul 13 12:59:30.894: INFO: Observed &Deployment event: MODIFIED
  Jul 13 12:59:30.894: INFO: Observed deployment test-deployment-szz8m in namespace deployment-7324 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-07-13 12:59:29 +0000 UTC 2024-07-13 12:59:29 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jul 13 12:59:30.894: INFO: Observed deployment test-deployment-szz8m in namespace deployment-7324 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-13 12:59:29 +0000 UTC 2024-07-13 12:59:28 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-szz8m-5d576bd769" has successfully progressed.}
  Jul 13 12:59:30.894: INFO: Observed &Deployment event: MODIFIED
  Jul 13 12:59:30.894: INFO: Observed deployment test-deployment-szz8m in namespace deployment-7324 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-07-13 12:59:29 +0000 UTC 2024-07-13 12:59:29 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jul 13 12:59:30.894: INFO: Observed deployment test-deployment-szz8m in namespace deployment-7324 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-13 12:59:29 +0000 UTC 2024-07-13 12:59:28 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-szz8m-5d576bd769" has successfully progressed.}
  Jul 13 12:59:30.895: INFO: Observed deployment test-deployment-szz8m in namespace deployment-7324 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jul 13 12:59:30.895: INFO: Observed &Deployment event: MODIFIED
  Jul 13 12:59:30.895: INFO: Found deployment test-deployment-szz8m in namespace deployment-7324 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Jul 13 12:59:30.895: INFO: Deployment test-deployment-szz8m has a patched status
  Jul 13 12:59:30.900: INFO: Deployment "test-deployment-szz8m":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-szz8m",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7324",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "45f1ff4b-d9a2-493b-9da3-3b0b23b6569e",
      ResourceVersion: (string) (len=5) "23264",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856472368,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856472368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856472370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856472370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856472370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856472370,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-szz8m-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jul 13 12:59:30.909: INFO: New ReplicaSet "test-deployment-szz8m-5d576bd769" of Deployment "test-deployment-szz8m":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-szz8m-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7324",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bea56591-265d-4764-8cf3-bab3160c9bd9",
      ResourceVersion: (string) (len=5) "23258",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856472368,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-szz8m",
          UID: (types.UID) (len=36) "45f1ff4b-d9a2-493b-9da3-3b0b23b6569e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856472368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 34 35 66  |k:{\"uid\":\"45f|
              00000120  31 66 66 34 62 2d 64 39  61 32 2d 34 39 33 62 2d  |1ff4b-d9a2-493b-|
              00000130  39 64 61 33 2d 33 62 30  62 32 33 62 36 35 36 39  |9da3-3b0b23b6569|
              00000140  65 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |e\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856472369,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul 13 12:59:30.917: INFO: Pod "test-deployment-szz8m-5d576bd769-zp467" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-szz8m-5d576bd769-zp467",
      GenerateName: (string) (len=33) "test-deployment-szz8m-5d576bd769-",
      Namespace: (string) (len=15) "deployment-7324",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "344f5ab9-be37-4667-a9c0-218797ef72cc",
      ResourceVersion: (string) (len=5) "23257",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856472368,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-szz8m-5d576bd769",
          UID: (types.UID) (len=36) "bea56591-265d-4764-8cf3-bab3160c9bd9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856472368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 62 65 61 35 36 35 39  31 2d 32 36 35 64 2d 34  |"bea56591-265d-4|
              000000a0  37 36 34 2d 38 63 66 33  2d 62 61 62 33 31 36 30  |764-8cf3-bab3160|
              000000b0  63 39 62 64 39 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |c9bd9\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856472369,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 37 37  2e 32 30 31 5c 22 7d 22  |2.168.77.201\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zjvg9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zjvg9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-37-214",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856472369,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856472368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856472369,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856472369,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856472368,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.37.214",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.37.214"
        }
      },
      PodIP: (string) (len=14) "192.168.77.201",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.77.201"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856472368,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63856472369,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2e62e1bb49c85f55978b4ca87ea09c7bd45aa4352c9b3b2369e04268a687fa02",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 13 12:59:30.922: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7324" for this suite. @ 07/13/24 12:59:30.931
â€¢ [2.115 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 07/13/24 12:59:30.938
  Jul 13 12:59:30.938: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename sched-preemption @ 07/13/24 12:59:30.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 12:59:30.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 12:59:30.957
  Jul 13 12:59:30.969: INFO: Waiting up to 1m0s for all nodes to be ready
  Jul 13 13:00:30.972: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 07/13/24 13:00:30.975
  Jul 13 13:00:30.975: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename sched-preemption-path @ 07/13/24 13:00:30.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:00:30.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:00:30.992
  Jul 13 13:00:31.005: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Jul 13 13:00:31.012: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Jul 13 13:00:31.077: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-912" for this suite. @ 07/13/24 13:00:31.08
  Jul 13 13:00:31.085: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1138" for this suite. @ 07/13/24 13:00:31.089
â€¢ [60.156 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 07/13/24 13:00:31.095
  Jul 13 13:00:31.095: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename tables @ 07/13/24 13:00:31.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:00:31.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:00:31.113
  Jul 13 13:00:31.116: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-2261" for this suite. @ 07/13/24 13:00:31.118
â€¢ [0.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 07/13/24 13:00:31.125
  Jul 13 13:00:31.125: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename configmap @ 07/13/24 13:00:31.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:00:31.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:00:31.142
  STEP: Creating configMap with name configmap-test-volume-4e8b5643-ef06-4b6e-a669-cf289af9137d @ 07/13/24 13:00:31.143
  STEP: Creating a pod to test consume configMaps @ 07/13/24 13:00:31.148
  STEP: Saw pod success @ 07/13/24 13:00:35.171
  Jul 13 13:00:35.175: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-configmaps-50a67e65-8863-4850-ad02-966d3cc10c76 container agnhost-container: <nil>
  STEP: delete the pod @ 07/13/24 13:00:35.185
  Jul 13 13:00:35.216: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9050" for this suite. @ 07/13/24 13:00:35.22
â€¢ [4.101 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 07/13/24 13:00:35.226
  Jul 13 13:00:35.226: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename downward-api @ 07/13/24 13:00:35.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:00:35.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:00:35.243
  STEP: Creating the pod @ 07/13/24 13:00:35.244
  Jul 13 13:00:37.780: INFO: Successfully updated pod "labelsupdate594dbbdd-6cee-4400-92b6-d7675057edaa"
  Jul 13 13:00:41.802: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7403" for this suite. @ 07/13/24 13:00:41.806
â€¢ [6.586 seconds]
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2214
  STEP: Creating a kubernetes client @ 07/13/24 13:00:41.812
  Jul 13 13:00:41.812: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename services @ 07/13/24 13:00:41.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:00:41.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:00:41.832
  STEP: creating service in namespace services-2993 @ 07/13/24 13:00:41.833
  STEP: creating service affinity-nodeport in namespace services-2993 @ 07/13/24 13:00:41.833
  STEP: creating replication controller affinity-nodeport in namespace services-2993 @ 07/13/24 13:00:41.847
  I0713 13:00:41.855722      20 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-2993, replica count: 3
  I0713 13:00:44.906811      20 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jul 13 13:00:44.918: INFO: Creating new exec pod
  Jul 13 13:00:47.935: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-2993 exec execpod-affinityrkp2w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Jul 13 13:00:48.033: INFO: stderr: "+ nc -v -t -w 2 affinity-nodeport 80\n+ echo hostName\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Jul 13 13:00:48.033: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 13 13:00:48.033: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-2993 exec execpod-affinityrkp2w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.205 80'
  Jul 13 13:00:48.128: INFO: stderr: "+ nc -v -t -w 2 10.152.183.205 80\nConnection to 10.152.183.205 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Jul 13 13:00:48.128: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 13 13:00:48.128: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-2993 exec execpod-affinityrkp2w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.37.214 31830'
  Jul 13 13:00:48.220: INFO: stderr: "+ nc -v -t -w 2 172.31.37.214 31830\nConnection to 172.31.37.214 31830 port [tcp/*] succeeded!\n+ echo hostName\n"
  Jul 13 13:00:48.220: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 13 13:00:48.220: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-2993 exec execpod-affinityrkp2w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.89.122 31830'
  Jul 13 13:00:48.314: INFO: stderr: "+ nc -v -t -w 2 172.31.89.122 31830\n+ echo hostName\nConnection to 172.31.89.122 31830 port [tcp/*] succeeded!\n"
  Jul 13 13:00:48.314: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 13 13:00:48.315: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-2993 exec execpod-affinityrkp2w -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.15.91:31830/ ; done'
  Jul 13 13:00:48.472: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:31830/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:31830/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:31830/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:31830/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:31830/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:31830/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:31830/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:31830/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:31830/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:31830/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:31830/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:31830/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:31830/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:31830/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:31830/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:31830/\n"
  Jul 13 13:00:48.472: INFO: stdout: "\naffinity-nodeport-ggv72\naffinity-nodeport-ggv72\naffinity-nodeport-ggv72\naffinity-nodeport-ggv72\naffinity-nodeport-ggv72\naffinity-nodeport-ggv72\naffinity-nodeport-ggv72\naffinity-nodeport-ggv72\naffinity-nodeport-ggv72\naffinity-nodeport-ggv72\naffinity-nodeport-ggv72\naffinity-nodeport-ggv72\naffinity-nodeport-ggv72\naffinity-nodeport-ggv72\naffinity-nodeport-ggv72\naffinity-nodeport-ggv72"
  Jul 13 13:00:48.472: INFO: Received response from host: affinity-nodeport-ggv72
  Jul 13 13:00:48.472: INFO: Received response from host: affinity-nodeport-ggv72
  Jul 13 13:00:48.472: INFO: Received response from host: affinity-nodeport-ggv72
  Jul 13 13:00:48.472: INFO: Received response from host: affinity-nodeport-ggv72
  Jul 13 13:00:48.472: INFO: Received response from host: affinity-nodeport-ggv72
  Jul 13 13:00:48.472: INFO: Received response from host: affinity-nodeport-ggv72
  Jul 13 13:00:48.472: INFO: Received response from host: affinity-nodeport-ggv72
  Jul 13 13:00:48.472: INFO: Received response from host: affinity-nodeport-ggv72
  Jul 13 13:00:48.472: INFO: Received response from host: affinity-nodeport-ggv72
  Jul 13 13:00:48.472: INFO: Received response from host: affinity-nodeport-ggv72
  Jul 13 13:00:48.472: INFO: Received response from host: affinity-nodeport-ggv72
  Jul 13 13:00:48.472: INFO: Received response from host: affinity-nodeport-ggv72
  Jul 13 13:00:48.472: INFO: Received response from host: affinity-nodeport-ggv72
  Jul 13 13:00:48.472: INFO: Received response from host: affinity-nodeport-ggv72
  Jul 13 13:00:48.472: INFO: Received response from host: affinity-nodeport-ggv72
  Jul 13 13:00:48.472: INFO: Received response from host: affinity-nodeport-ggv72
  Jul 13 13:00:48.472: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-2993, will wait for the garbage collector to delete the pods @ 07/13/24 13:00:48.486
  Jul 13 13:00:48.548: INFO: Deleting ReplicationController affinity-nodeport took: 7.872738ms
  Jul 13 13:00:48.649: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.880233ms
  Jul 13 13:00:51.769: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2993" for this suite. @ 07/13/24 13:00:51.771
â€¢ [9.965 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 07/13/24 13:00:51.78
  Jul 13 13:00:51.780: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename dns @ 07/13/24 13:00:51.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:00:51.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:00:51.796
  STEP: Creating a test externalName service @ 07/13/24 13:00:51.798
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6116.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-6116.svc.cluster.local; sleep 1; done
   @ 07/13/24 13:00:51.804
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6116.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-6116.svc.cluster.local; sleep 1; done
   @ 07/13/24 13:00:51.804
  STEP: creating a pod to probe DNS @ 07/13/24 13:00:51.804
  STEP: submitting the pod to kubernetes @ 07/13/24 13:00:51.804
  STEP: retrieving the pod @ 07/13/24 13:00:53.82
  STEP: looking for the results for each expected name from probers @ 07/13/24 13:00:53.823
  Jul 13 13:00:53.833: INFO: DNS probes using dns-test-50d05ff1-b520-4048-8038-acc6b7673303 succeeded

  STEP: changing the externalName to bar.example.com @ 07/13/24 13:00:53.833
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6116.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-6116.svc.cluster.local; sleep 1; done
   @ 07/13/24 13:00:53.84
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6116.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-6116.svc.cluster.local; sleep 1; done
   @ 07/13/24 13:00:53.84
  STEP: creating a second pod to probe DNS @ 07/13/24 13:00:53.84
  STEP: submitting the pod to kubernetes @ 07/13/24 13:00:53.84
  STEP: retrieving the pod @ 07/13/24 13:00:59.869
  STEP: looking for the results for each expected name from probers @ 07/13/24 13:00:59.873
  Jul 13 13:00:59.879: INFO: DNS probes using dns-test-38be1179-2201-4264-973e-66f5b815b03c succeeded

  STEP: changing the service to type=ClusterIP @ 07/13/24 13:00:59.879
  W0713 13:00:59.892456      20 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6116.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-6116.svc.cluster.local; sleep 1; done
   @ 07/13/24 13:00:59.892
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6116.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-6116.svc.cluster.local; sleep 1; done
   @ 07/13/24 13:00:59.892
  STEP: creating a third pod to probe DNS @ 07/13/24 13:00:59.892
  STEP: submitting the pod to kubernetes @ 07/13/24 13:00:59.896
  STEP: retrieving the pod @ 07/13/24 13:01:01.914
  STEP: looking for the results for each expected name from probers @ 07/13/24 13:01:01.917
  Jul 13 13:01:01.926: INFO: DNS probes using dns-test-6493a54f-34cd-474d-8317-7c4d0b46df49 succeeded

  STEP: deleting the pod @ 07/13/24 13:01:01.927
  STEP: deleting the pod @ 07/13/24 13:01:01.942
  STEP: deleting the pod @ 07/13/24 13:01:01.959
  STEP: deleting the test externalName service @ 07/13/24 13:01:01.976
  Jul 13 13:01:01.989: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6116" for this suite. @ 07/13/24 13:01:01.992
â€¢ [10.218 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 07/13/24 13:01:01.999
  Jul 13 13:01:01.999: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename resourcequota @ 07/13/24 13:01:01.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:01:02.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:01:02.015
  STEP: Counting existing ResourceQuota @ 07/13/24 13:01:02.016
  STEP: Creating a ResourceQuota @ 07/13/24 13:01:07.019
  STEP: Ensuring resource quota status is calculated @ 07/13/24 13:01:07.023
  Jul 13 13:01:09.028: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2605" for this suite. @ 07/13/24 13:01:09.032
â€¢ [7.041 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 07/13/24 13:01:09.04
  Jul 13 13:01:09.040: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename projected @ 07/13/24 13:01:09.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:01:09.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:01:09.057
  STEP: Creating configMap with name projected-configmap-test-volume-map-367d6f77-007a-4626-8958-8b513090bc6a @ 07/13/24 13:01:09.059
  STEP: Creating a pod to test consume configMaps @ 07/13/24 13:01:09.063
  STEP: Saw pod success @ 07/13/24 13:01:13.081
  Jul 13 13:01:13.085: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-projected-configmaps-1e85825f-d907-4a75-8f18-a9e723107574 container agnhost-container: <nil>
  STEP: delete the pod @ 07/13/24 13:01:13.09
  Jul 13 13:01:13.107: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3217" for this suite. @ 07/13/24 13:01:13.111
â€¢ [4.077 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 07/13/24 13:01:13.117
  Jul 13 13:01:13.117: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/13/24 13:01:13.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:01:13.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:01:13.137
  Jul 13 13:01:13.138: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/13/24 13:01:14.355
  Jul 13 13:01:14.355: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=crd-publish-openapi-7236 --namespace=crd-publish-openapi-7236 create -f -'
  Jul 13 13:01:16.414: INFO: stderr: ""
  Jul 13 13:01:16.414: INFO: stdout: "e2e-test-crd-publish-openapi-2190-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Jul 13 13:01:16.414: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=crd-publish-openapi-7236 --namespace=crd-publish-openapi-7236 delete e2e-test-crd-publish-openapi-2190-crds test-cr'
  Jul 13 13:01:16.472: INFO: stderr: ""
  Jul 13 13:01:16.472: INFO: stdout: "e2e-test-crd-publish-openapi-2190-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Jul 13 13:01:16.473: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=crd-publish-openapi-7236 --namespace=crd-publish-openapi-7236 apply -f -'
  Jul 13 13:01:16.524: INFO: stderr: ""
  Jul 13 13:01:16.524: INFO: stdout: "e2e-test-crd-publish-openapi-2190-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Jul 13 13:01:16.524: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=crd-publish-openapi-7236 --namespace=crd-publish-openapi-7236 delete e2e-test-crd-publish-openapi-2190-crds test-cr'
  Jul 13 13:01:16.574: INFO: stderr: ""
  Jul 13 13:01:16.574: INFO: stdout: "e2e-test-crd-publish-openapi-2190-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 07/13/24 13:01:16.574
  Jul 13 13:01:16.574: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=crd-publish-openapi-7236 explain e2e-test-crd-publish-openapi-2190-crds'
  Jul 13 13:01:16.612: INFO: stderr: ""
  Jul 13 13:01:16.612: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-2190-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  Jul 13 13:01:17.857: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7236" for this suite. @ 07/13/24 13:01:17.864
â€¢ [4.755 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 07/13/24 13:01:17.873
  Jul 13 13:01:17.873: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename subpath @ 07/13/24 13:01:17.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:01:17.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:01:17.89
  STEP: Setting up data @ 07/13/24 13:01:17.892
  STEP: Creating pod pod-subpath-test-projected-zd2t @ 07/13/24 13:01:17.898
  STEP: Creating a pod to test atomic-volume-subpath @ 07/13/24 13:01:17.898
  STEP: Saw pod success @ 07/13/24 13:01:41.97
  Jul 13 13:01:41.975: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-subpath-test-projected-zd2t container test-container-subpath-projected-zd2t: <nil>
  STEP: delete the pod @ 07/13/24 13:01:41.993
  STEP: Deleting pod pod-subpath-test-projected-zd2t @ 07/13/24 13:01:42.013
  Jul 13 13:01:42.013: INFO: Deleting pod "pod-subpath-test-projected-zd2t" in namespace "subpath-5804"
  Jul 13 13:01:42.016: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5804" for this suite. @ 07/13/24 13:01:42.019
â€¢ [24.152 seconds]
------------------------------
SSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 07/13/24 13:01:42.025
  Jul 13 13:01:42.025: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename sysctl @ 07/13/24 13:01:42.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:01:42.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:01:42.04
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 07/13/24 13:01:42.042
  STEP: Watching for error events or started pod @ 07/13/24 13:01:42.048
  STEP: Waiting for pod completion @ 07/13/24 13:01:44.053
  STEP: Checking that the pod succeeded @ 07/13/24 13:01:44.06
  STEP: Getting logs from the pod @ 07/13/24 13:01:44.06
  STEP: Checking that the sysctl is actually updated @ 07/13/24 13:01:44.067
  Jul 13 13:01:44.067: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-2922" for this suite. @ 07/13/24 13:01:44.07
â€¢ [2.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 07/13/24 13:01:44.077
  Jul 13 13:01:44.077: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename webhook @ 07/13/24 13:01:44.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:01:44.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:01:44.094
  STEP: Setting up server cert @ 07/13/24 13:01:44.116
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/13/24 13:01:44.436
  STEP: Deploying the webhook pod @ 07/13/24 13:01:44.445
  STEP: Wait for the deployment to be ready @ 07/13/24 13:01:44.456
  Jul 13 13:01:44.465: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/13/24 13:01:46.477
  STEP: Verifying the service has paired with the endpoint @ 07/13/24 13:01:46.492
  Jul 13 13:01:47.493: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 07/13/24 13:01:47.503
  STEP: create a pod @ 07/13/24 13:01:47.517
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 07/13/24 13:01:49.531
  Jul 13 13:01:49.531: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=webhook-7815 attach --namespace=webhook-7815 to-be-attached-pod -i -c=container1'
  Jul 13 13:01:49.584: INFO: rc: 1
  Jul 13 13:01:49.639: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7815" for this suite. @ 07/13/24 13:01:49.643
  STEP: Destroying namespace "webhook-markers-1078" for this suite. @ 07/13/24 13:01:49.65
â€¢ [5.581 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 07/13/24 13:01:49.658
  Jul 13 13:01:49.658: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename projected @ 07/13/24 13:01:49.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:01:49.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:01:49.672
  STEP: Creating a pod to test downward API volume plugin @ 07/13/24 13:01:49.675
  STEP: Saw pod success @ 07/13/24 13:01:53.697
  Jul 13 13:01:53.701: INFO: Trying to get logs from node ip-172-31-37-214 pod downwardapi-volume-0b3ddffe-b0e3-4559-8738-1826c88686e9 container client-container: <nil>
  STEP: delete the pod @ 07/13/24 13:01:53.708
  Jul 13 13:01:53.721: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1876" for this suite. @ 07/13/24 13:01:53.724
â€¢ [4.072 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 07/13/24 13:01:53.731
  Jul 13 13:01:53.731: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename svcaccounts @ 07/13/24 13:01:53.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:01:53.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:01:53.745
  STEP: reading a file in the container @ 07/13/24 13:01:55.773
  Jul 13 13:01:55.773: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8820 pod-service-account-274059fd-7efb-41b7-9751-653be9a80935 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 07/13/24 13:01:55.859
  Jul 13 13:01:55.859: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8820 pod-service-account-274059fd-7efb-41b7-9751-653be9a80935 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 07/13/24 13:01:55.947
  Jul 13 13:01:55.947: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8820 pod-service-account-274059fd-7efb-41b7-9751-653be9a80935 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Jul 13 13:01:56.040: INFO: Got root ca configmap in namespace "svcaccounts-8820"
  Jul 13 13:01:56.042: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8820" for this suite. @ 07/13/24 13:01:56.045
â€¢ [2.321 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 07/13/24 13:01:56.052
  Jul 13 13:01:56.052: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename emptydir @ 07/13/24 13:01:56.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:01:56.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:01:56.067
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 07/13/24 13:01:56.069
  STEP: Saw pod success @ 07/13/24 13:02:00.091
  Jul 13 13:02:00.094: INFO: Trying to get logs from node ip-172-31-89-122 pod pod-edad3e39-1170-4550-908a-ad590c171474 container test-container: <nil>
  STEP: delete the pod @ 07/13/24 13:02:00.108
  Jul 13 13:02:00.121: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1741" for this suite. @ 07/13/24 13:02:00.125
â€¢ [4.079 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 07/13/24 13:02:00.131
  Jul 13 13:02:00.131: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename container-probe @ 07/13/24 13:02:00.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:02:00.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:02:00.146
  STEP: Creating pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222 @ 07/13/24 13:02:00.149
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/13/24 13:02:02.167
  Jul 13 13:02:02.169: INFO: Initial restart count of pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe is 0
  Jul 13 13:02:02.173: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:02:04.178: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:02:06.183: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:02:08.188: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:02:10.192: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:02:12.198: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:02:14.202: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:02:16.205: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:02:18.211: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:02:20.217: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:02:22.221: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:02:24.227: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:02:26.232: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:02:28.237: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:02:30.242: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:02:32.246: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:02:34.250: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:02:36.256: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:02:38.260: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:02:40.265: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:02:42.269: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:02:44.273: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:02:46.277: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:02:48.281: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:02:50.285: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:02:52.290: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:02:54.294: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:02:56.297: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:02:58.303: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:03:00.307: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:03:02.310: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:03:04.316: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:03:06.320: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:03:08.326: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:03:10.333: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:03:12.337: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:03:14.344: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:03:16.349: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:03:18.354: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:03:20.360: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:03:22.365: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:03:24.371: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:03:26.377: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:03:28.382: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:03:30.387: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:03:32.393: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:03:34.397: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:03:36.401: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:03:38.406: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:03:40.412: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:03:42.418: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:03:44.423: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:03:46.428: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:03:48.432: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:03:50.436: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:03:52.442: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:03:54.448: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:03:56.453: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:03:58.459: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:04:00.466: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:04:02.470: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:04:04.475: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:04:06.479: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:04:08.485: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:04:10.489: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:04:12.495: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:04:14.499: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:04:16.503: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:04:18.508: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:04:20.511: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:04:22.517: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:04:24.523: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:04:26.529: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:04:28.533: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:04:30.538: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:04:32.543: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:04:34.548: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:04:36.552: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:04:38.559: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:04:40.564: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:04:42.569: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:04:44.575: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:04:46.581: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:04:48.585: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:04:50.589: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:04:52.593: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:04:54.599: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:04:56.604: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:04:58.609: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:05:00.614: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:05:02.618: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:05:04.623: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:05:06.626: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:05:08.631: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:05:10.634: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:05:12.640: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:05:14.645: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:05:16.649: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:05:18.655: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:05:20.660: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:05:22.665: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:05:24.671: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:05:26.678: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:05:28.682: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:05:30.688: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:05:32.692: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:05:34.697: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:05:36.702: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:05:38.708: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:05:40.713: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:05:42.718: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:05:44.724: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:05:46.730: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:05:48.736: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:05:50.741: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:05:52.745: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:05:54.751: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:05:56.758: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:05:58.763: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  Jul 13 13:06:00.768: INFO: Get pod busybox-66b92481-140c-4c35-8a77-c763cfe337fe in namespace container-probe-3222
  STEP: deleting the pod @ 07/13/24 13:06:02.768
  Jul 13 13:06:02.783: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3222" for this suite. @ 07/13/24 13:06:02.789
â€¢ [242.665 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 07/13/24 13:06:02.796
  Jul 13 13:06:02.796: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename sched-preemption @ 07/13/24 13:06:02.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:06:02.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:06:02.812
  Jul 13 13:06:02.826: INFO: Waiting up to 1m0s for all nodes to be ready
  Jul 13 13:07:02.832: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 07/13/24 13:07:02.836
  Jul 13 13:07:02.836: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename sched-preemption-path @ 07/13/24 13:07:02.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:07:02.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:07:02.855
  STEP: Finding an available node @ 07/13/24 13:07:02.857
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/13/24 13:07:02.857
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/13/24 13:07:04.877
  Jul 13 13:07:04.888: INFO: found a healthy node: ip-172-31-37-214
  Jul 13 13:07:10.945: INFO: pods created so far: [1 1 1]
  Jul 13 13:07:10.945: INFO: length of pods created so far: 3
  Jul 13 13:07:12.957: INFO: pods created so far: [2 2 1]
  Jul 13 13:07:20.022: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-2209" for this suite. @ 07/13/24 13:07:20.025
  Jul 13 13:07:20.030: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9576" for this suite. @ 07/13/24 13:07:20.034
â€¢ [77.245 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:855
  STEP: Creating a kubernetes client @ 07/13/24 13:07:20.041
  Jul 13 13:07:20.041: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename job @ 07/13/24 13:07:20.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:07:20.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:07:20.059
  STEP: Creating a suspended job @ 07/13/24 13:07:20.066
  STEP: Patching the Job @ 07/13/24 13:07:20.072
  STEP: Watching for Job to be patched @ 07/13/24 13:07:20.089
  Jul 13 13:07:20.090: INFO: Event ADDED observed for Job e2e-6jdz9 in namespace job-2949 with labels: map[e2e-job-label:e2e-6jdz9] and annotations: map[]
  Jul 13 13:07:20.090: INFO: Event MODIFIED observed for Job e2e-6jdz9 in namespace job-2949 with labels: map[e2e-job-label:e2e-6jdz9] and annotations: map[]
  Jul 13 13:07:20.090: INFO: Event MODIFIED found for Job e2e-6jdz9 in namespace job-2949 with labels: map[e2e-6jdz9:patched e2e-job-label:e2e-6jdz9] and annotations: map[]
  STEP: Updating the job @ 07/13/24 13:07:20.09
  STEP: Watching for Job to be updated @ 07/13/24 13:07:20.099
  Jul 13 13:07:20.100: INFO: Event MODIFIED found for Job e2e-6jdz9 in namespace job-2949 with labels: map[e2e-6jdz9:patched e2e-job-label:e2e-6jdz9] and annotations: map[updated:true]
  Jul 13 13:07:20.100: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 07/13/24 13:07:20.1
  Jul 13 13:07:20.103: INFO: Job: e2e-6jdz9 as labels: map[e2e-6jdz9:patched e2e-job-label:e2e-6jdz9]
  STEP: Waiting for job to complete @ 07/13/24 13:07:20.103
  STEP: Delete a job collection with a labelselector @ 07/13/24 13:07:28.107
  STEP: Watching for Job to be deleted @ 07/13/24 13:07:28.117
  Jul 13 13:07:28.119: INFO: Event MODIFIED observed for Job e2e-6jdz9 in namespace job-2949 with labels: map[e2e-6jdz9:patched e2e-job-label:e2e-6jdz9] and annotations: map[updated:true]
  Jul 13 13:07:28.119: INFO: Event MODIFIED observed for Job e2e-6jdz9 in namespace job-2949 with labels: map[e2e-6jdz9:patched e2e-job-label:e2e-6jdz9] and annotations: map[updated:true]
  Jul 13 13:07:28.119: INFO: Event MODIFIED observed for Job e2e-6jdz9 in namespace job-2949 with labels: map[e2e-6jdz9:patched e2e-job-label:e2e-6jdz9] and annotations: map[updated:true]
  Jul 13 13:07:28.119: INFO: Event MODIFIED observed for Job e2e-6jdz9 in namespace job-2949 with labels: map[e2e-6jdz9:patched e2e-job-label:e2e-6jdz9] and annotations: map[updated:true]
  Jul 13 13:07:28.119: INFO: Event MODIFIED observed for Job e2e-6jdz9 in namespace job-2949 with labels: map[e2e-6jdz9:patched e2e-job-label:e2e-6jdz9] and annotations: map[updated:true]
  Jul 13 13:07:28.119: INFO: Event DELETED found for Job e2e-6jdz9 in namespace job-2949 with labels: map[e2e-6jdz9:patched e2e-job-label:e2e-6jdz9] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 07/13/24 13:07:28.119
  Jul 13 13:07:28.131: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2949" for this suite. @ 07/13/24 13:07:28.138
â€¢ [8.106 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 07/13/24 13:07:28.148
  Jul 13 13:07:28.148: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename pod-network-test @ 07/13/24 13:07:28.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:07:28.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:07:28.164
  STEP: Performing setup for networking test in namespace pod-network-test-6166 @ 07/13/24 13:07:28.166
  STEP: creating a selector @ 07/13/24 13:07:28.166
  STEP: Creating the service pods in kubernetes @ 07/13/24 13:07:28.166
  Jul 13 13:07:28.166: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 07/13/24 13:07:50.282
  Jul 13 13:07:52.316: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jul 13 13:07:52.316: INFO: Going to poll 192.168.145.190 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Jul 13 13:07:52.320: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.145.190 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6166 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 13 13:07:52.320: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 13:07:52.320: INFO: ExecWithOptions: Clientset creation
  Jul 13 13:07:52.320: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6166/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.145.190+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jul 13 13:07:53.377: INFO: Found all 1 expected endpoints: [netserver-0]
  Jul 13 13:07:53.377: INFO: Going to poll 192.168.77.222 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Jul 13 13:07:53.382: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.77.222 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6166 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 13 13:07:53.382: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 13:07:53.383: INFO: ExecWithOptions: Clientset creation
  Jul 13 13:07:53.383: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6166/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.77.222+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jul 13 13:07:54.432: INFO: Found all 1 expected endpoints: [netserver-1]
  Jul 13 13:07:54.432: INFO: Going to poll 192.168.67.168 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Jul 13 13:07:54.435: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.67.168 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6166 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 13 13:07:54.435: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 13:07:54.435: INFO: ExecWithOptions: Clientset creation
  Jul 13 13:07:54.435: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6166/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.67.168+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jul 13 13:07:55.488: INFO: Found all 1 expected endpoints: [netserver-2]
  Jul 13 13:07:55.489: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6166" for this suite. @ 07/13/24 13:07:55.492
â€¢ [27.351 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 07/13/24 13:07:55.499
  Jul 13 13:07:55.499: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename dns @ 07/13/24 13:07:55.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:07:55.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:07:55.519
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4639.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-4639.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 07/13/24 13:07:55.521
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4639.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-4639.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 07/13/24 13:07:55.521
  STEP: creating a pod to probe /etc/hosts @ 07/13/24 13:07:55.521
  STEP: submitting the pod to kubernetes @ 07/13/24 13:07:55.521
  STEP: retrieving the pod @ 07/13/24 13:07:57.541
  STEP: looking for the results for each expected name from probers @ 07/13/24 13:07:57.545
  Jul 13 13:07:57.561: INFO: DNS probes using dns-4639/dns-test-35df8e0b-1a38-4dfd-81da-2028f2a09ee3 succeeded

  STEP: deleting the pod @ 07/13/24 13:07:57.561
  Jul 13 13:07:57.577: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4639" for this suite. @ 07/13/24 13:07:57.58
â€¢ [2.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 07/13/24 13:07:57.588
  Jul 13 13:07:57.593: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename var-expansion @ 07/13/24 13:07:57.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:07:57.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:07:57.614
  STEP: Creating a pod to test substitution in container's command @ 07/13/24 13:07:57.617
  STEP: Saw pod success @ 07/13/24 13:08:01.653
  Jul 13 13:08:01.656: INFO: Trying to get logs from node ip-172-31-89-122 pod var-expansion-179f6ae0-f974-4a38-95d1-c7277b4aed03 container dapi-container: <nil>
  STEP: delete the pod @ 07/13/24 13:08:01.668
  Jul 13 13:08:01.689: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4518" for this suite. @ 07/13/24 13:08:01.693
â€¢ [4.111 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 07/13/24 13:08:01.699
  Jul 13 13:08:01.699: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename projected @ 07/13/24 13:08:01.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:08:01.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:08:01.715
  STEP: Creating a pod to test downward API volume plugin @ 07/13/24 13:08:01.718
  STEP: Saw pod success @ 07/13/24 13:08:03.735
  Jul 13 13:08:03.738: INFO: Trying to get logs from node ip-172-31-37-214 pod downwardapi-volume-54cf8ae0-9236-4e10-8698-1da1f6f40d4a container client-container: <nil>
  STEP: delete the pod @ 07/13/24 13:08:03.759
  Jul 13 13:08:03.776: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9475" for this suite. @ 07/13/24 13:08:03.78
â€¢ [2.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 07/13/24 13:08:03.787
  Jul 13 13:08:03.787: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename replicaset @ 07/13/24 13:08:03.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:08:03.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:08:03.805
  Jul 13 13:08:03.817: INFO: Pod name sample-pod: Found 0 pods out of 1
  Jul 13 13:08:08.825: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/13/24 13:08:08.825
  STEP: Scaling up "test-rs" replicaset @ 07/13/24 13:08:08.825
  Jul 13 13:08:08.835: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 07/13/24 13:08:08.835
  Jul 13 13:08:08.843: INFO: observed ReplicaSet test-rs in namespace replicaset-875 with ReadyReplicas 1, AvailableReplicas 1
  Jul 13 13:08:08.862: INFO: observed ReplicaSet test-rs in namespace replicaset-875 with ReadyReplicas 1, AvailableReplicas 1
  Jul 13 13:08:08.886: INFO: observed ReplicaSet test-rs in namespace replicaset-875 with ReadyReplicas 1, AvailableReplicas 1
  Jul 13 13:08:08.897: INFO: observed ReplicaSet test-rs in namespace replicaset-875 with ReadyReplicas 1, AvailableReplicas 1
  Jul 13 13:08:09.582: INFO: observed ReplicaSet test-rs in namespace replicaset-875 with ReadyReplicas 2, AvailableReplicas 2
  Jul 13 13:08:09.636: INFO: observed Replicaset test-rs in namespace replicaset-875 with ReadyReplicas 3 found true
  Jul 13 13:08:09.636: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-875" for this suite. @ 07/13/24 13:08:09.639
â€¢ [5.858 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 07/13/24 13:08:09.645
  Jul 13 13:08:09.645: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename projected @ 07/13/24 13:08:09.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:08:09.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:08:09.661
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-7219ef88-4b90-4b5a-b932-7c96c908a5a6 @ 07/13/24 13:08:09.667
  STEP: Creating the pod @ 07/13/24 13:08:09.673
  STEP: Updating configmap projected-configmap-test-upd-7219ef88-4b90-4b5a-b932-7c96c908a5a6 @ 07/13/24 13:08:11.702
  STEP: waiting to observe update in volume @ 07/13/24 13:08:11.706
  Jul 13 13:09:40.106: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4971" for this suite. @ 07/13/24 13:09:40.11
â€¢ [90.473 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 07/13/24 13:09:40.118
  Jul 13 13:09:40.118: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 07/13/24 13:09:40.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:09:40.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:09:40.137
  STEP: Setting up the test @ 07/13/24 13:09:40.139
  STEP: Creating hostNetwork=false pod @ 07/13/24 13:09:40.139
  STEP: Creating hostNetwork=true pod @ 07/13/24 13:09:42.171
  STEP: Running the test @ 07/13/24 13:09:44.189
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 07/13/24 13:09:44.189
  Jul 13 13:09:44.189: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6688 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 13 13:09:44.189: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 13:09:44.189: INFO: ExecWithOptions: Clientset creation
  Jul 13 13:09:44.189: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6688/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jul 13 13:09:44.238: INFO: Exec stderr: ""
  Jul 13 13:09:44.238: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6688 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 13 13:09:44.238: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 13:09:44.238: INFO: ExecWithOptions: Clientset creation
  Jul 13 13:09:44.238: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6688/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jul 13 13:09:44.289: INFO: Exec stderr: ""
  Jul 13 13:09:44.289: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6688 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 13 13:09:44.289: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 13:09:44.289: INFO: ExecWithOptions: Clientset creation
  Jul 13 13:09:44.289: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6688/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jul 13 13:09:44.326: INFO: Exec stderr: ""
  Jul 13 13:09:44.326: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6688 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 13 13:09:44.326: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 13:09:44.326: INFO: ExecWithOptions: Clientset creation
  Jul 13 13:09:44.326: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6688/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jul 13 13:09:44.373: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 07/13/24 13:09:44.373
  Jul 13 13:09:44.373: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6688 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 13 13:09:44.373: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 13:09:44.374: INFO: ExecWithOptions: Clientset creation
  Jul 13 13:09:44.374: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6688/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Jul 13 13:09:44.401: INFO: Exec stderr: ""
  Jul 13 13:09:44.401: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6688 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 13 13:09:44.401: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 13:09:44.401: INFO: ExecWithOptions: Clientset creation
  Jul 13 13:09:44.401: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6688/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Jul 13 13:09:44.441: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 07/13/24 13:09:44.441
  Jul 13 13:09:44.441: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6688 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 13 13:09:44.441: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 13:09:44.442: INFO: ExecWithOptions: Clientset creation
  Jul 13 13:09:44.442: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6688/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jul 13 13:09:44.494: INFO: Exec stderr: ""
  Jul 13 13:09:44.494: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6688 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 13 13:09:44.494: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 13:09:44.494: INFO: ExecWithOptions: Clientset creation
  Jul 13 13:09:44.494: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6688/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jul 13 13:09:44.537: INFO: Exec stderr: ""
  Jul 13 13:09:44.537: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6688 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 13 13:09:44.537: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 13:09:44.538: INFO: ExecWithOptions: Clientset creation
  Jul 13 13:09:44.538: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6688/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jul 13 13:09:44.585: INFO: Exec stderr: ""
  Jul 13 13:09:44.585: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6688 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 13 13:09:44.585: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 13:09:44.586: INFO: ExecWithOptions: Clientset creation
  Jul 13 13:09:44.586: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6688/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jul 13 13:09:44.618: INFO: Exec stderr: ""
  Jul 13 13:09:44.618: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-6688" for this suite. @ 07/13/24 13:09:44.623
â€¢ [4.513 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 07/13/24 13:09:44.631
  Jul 13 13:09:44.631: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename webhook @ 07/13/24 13:09:44.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:09:44.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:09:44.653
  STEP: Setting up server cert @ 07/13/24 13:09:44.678
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/13/24 13:09:44.925
  STEP: Deploying the webhook pod @ 07/13/24 13:09:44.934
  STEP: Wait for the deployment to be ready @ 07/13/24 13:09:44.946
  Jul 13 13:09:44.953: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 07/13/24 13:09:46.964
  STEP: Verifying the service has paired with the endpoint @ 07/13/24 13:09:46.976
  Jul 13 13:09:47.976: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 07/13/24 13:09:47.982
  STEP: Creating a custom resource definition that should be denied by the webhook @ 07/13/24 13:09:47.995
  Jul 13 13:09:47.995: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 13:09:48.051: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-145" for this suite. @ 07/13/24 13:09:48.055
  STEP: Destroying namespace "webhook-markers-2463" for this suite. @ 07/13/24 13:09:48.062
â€¢ [3.435 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 07/13/24 13:09:48.067
  Jul 13 13:09:48.067: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename field-validation @ 07/13/24 13:09:48.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:09:48.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:09:48.083
  Jul 13 13:09:48.086: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 13:09:51.165: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7416" for this suite. @ 07/13/24 13:09:51.168
â€¢ [3.108 seconds]
------------------------------
SSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 07/13/24 13:09:51.175
  Jul 13 13:09:51.175: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 07/13/24 13:09:51.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:09:51.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:09:51.192
  STEP: creating a target pod @ 07/13/24 13:09:51.195
  STEP: adding an ephemeral container @ 07/13/24 13:09:53.21
  STEP: checking pod container endpoints @ 07/13/24 13:09:55.226
  Jul 13 13:09:55.226: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-9060 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 13 13:09:55.226: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 13:09:55.226: INFO: ExecWithOptions: Clientset creation
  Jul 13 13:09:55.226: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-9060/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Jul 13 13:09:55.271: INFO: Exec stderr: ""
  Jul 13 13:09:55.279: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-9060" for this suite. @ 07/13/24 13:09:55.283
â€¢ [4.115 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 07/13/24 13:09:55.29
  Jul 13 13:09:55.290: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename downward-api @ 07/13/24 13:09:55.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:09:55.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:09:55.308
  STEP: Creating a pod to test downward API volume plugin @ 07/13/24 13:09:55.31
  STEP: Saw pod success @ 07/13/24 13:09:59.331
  Jul 13 13:09:59.340: INFO: Trying to get logs from node ip-172-31-37-214 pod downwardapi-volume-f0d5b3a6-5397-4296-b8ed-4bd50f12d33c container client-container: <nil>
  STEP: delete the pod @ 07/13/24 13:09:59.347
  Jul 13 13:09:59.360: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3578" for this suite. @ 07/13/24 13:09:59.365
â€¢ [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 07/13/24 13:09:59.37
  Jul 13 13:09:59.370: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename sched-preemption @ 07/13/24 13:09:59.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:09:59.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:09:59.387
  Jul 13 13:09:59.401: INFO: Waiting up to 1m0s for all nodes to be ready
  Jul 13 13:10:59.405: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 07/13/24 13:10:59.408
  Jul 13 13:10:59.428: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Jul 13 13:10:59.436: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Jul 13 13:10:59.452: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Jul 13 13:10:59.462: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Jul 13 13:10:59.480: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Jul 13 13:10:59.489: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 07/13/24 13:10:59.489
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 07/13/24 13:11:01.512
  Jul 13 13:11:05.610: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3113" for this suite. @ 07/13/24 13:11:05.614
â€¢ [66.252 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:46
  STEP: Creating a kubernetes client @ 07/13/24 13:11:05.623
  Jul 13 13:11:05.623: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename configmap @ 07/13/24 13:11:05.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:11:05.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:11:05.646
  STEP: Creating configMap configmap-5344/configmap-test-58ba11f4-66e6-4891-b572-23b7225233ea @ 07/13/24 13:11:05.653
  STEP: Creating a pod to test consume configMaps @ 07/13/24 13:11:05.658
  STEP: Saw pod success @ 07/13/24 13:11:09.683
  Jul 13 13:11:09.686: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-configmaps-449d17dd-58ca-4a3b-a53b-df55087e8719 container env-test: <nil>
  STEP: delete the pod @ 07/13/24 13:11:09.693
  Jul 13 13:11:09.710: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5344" for this suite. @ 07/13/24 13:11:09.714
â€¢ [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 07/13/24 13:11:09.722
  Jul 13 13:11:09.722: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename crd-watch @ 07/13/24 13:11:09.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:11:09.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:11:09.738
  Jul 13 13:11:09.740: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Creating first CR  @ 07/13/24 13:11:12.275
  Jul 13 13:11:12.281: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-13T13:11:12Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-13T13:11:12Z]] name:name1 resourceVersion:26674 uid:4fb2bffa-835e-44bb-b740-fd5e390413f8] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 07/13/24 13:11:22.282
  Jul 13 13:11:22.289: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-13T13:11:22Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-13T13:11:22Z]] name:name2 resourceVersion:26709 uid:2adf1d16-051f-4268-9714-cd6d5a7a7be7] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 07/13/24 13:11:32.291
  Jul 13 13:11:32.296: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-13T13:11:12Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-13T13:11:32Z]] name:name1 resourceVersion:26728 uid:4fb2bffa-835e-44bb-b740-fd5e390413f8] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 07/13/24 13:11:42.297
  Jul 13 13:11:42.303: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-13T13:11:22Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-13T13:11:42Z]] name:name2 resourceVersion:26749 uid:2adf1d16-051f-4268-9714-cd6d5a7a7be7] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 07/13/24 13:11:52.303
  Jul 13 13:11:52.312: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-13T13:11:12Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-13T13:11:32Z]] name:name1 resourceVersion:26769 uid:4fb2bffa-835e-44bb-b740-fd5e390413f8] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 07/13/24 13:12:02.313
  Jul 13 13:12:02.322: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-13T13:11:22Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-13T13:11:42Z]] name:name2 resourceVersion:26793 uid:2adf1d16-051f-4268-9714-cd6d5a7a7be7] num:map[num1:9223372036854775807 num2:1000000]]}
  Jul 13 13:12:12.838: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-586" for this suite. @ 07/13/24 13:12:12.843
â€¢ [63.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 07/13/24 13:12:12.851
  Jul 13 13:12:12.851: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename projected @ 07/13/24 13:12:12.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:12:12.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:12:12.882
  STEP: Creating a pod to test downward API volume plugin @ 07/13/24 13:12:12.884
  STEP: Saw pod success @ 07/13/24 13:12:16.906
  Jul 13 13:12:16.910: INFO: Trying to get logs from node ip-172-31-37-214 pod downwardapi-volume-18b1c7eb-2446-439f-9cd5-d2ffc8ae84d7 container client-container: <nil>
  STEP: delete the pod @ 07/13/24 13:12:16.916
  Jul 13 13:12:16.930: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8811" for this suite. @ 07/13/24 13:12:16.934
â€¢ [4.088 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 07/13/24 13:12:16.939
  Jul 13 13:12:16.939: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename gc @ 07/13/24 13:12:16.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:12:16.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:12:16.958
  STEP: create the deployment @ 07/13/24 13:12:16.961
  W0713 13:12:16.966631      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 07/13/24 13:12:16.966
  STEP: delete the deployment @ 07/13/24 13:12:16.972
  STEP: wait for all rs to be garbage collected @ 07/13/24 13:12:16.98
  STEP: expected 0 rs, got 1 rs @ 07/13/24 13:12:16.99
  STEP: expected 0 pods, got 2 pods @ 07/13/24 13:12:16.999
  STEP: Gathering metrics @ 07/13/24 13:12:17.487
  W0713 13:12:17.492271      20 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jul 13 13:12:17.492: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jul 13 13:12:17.492: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8751" for this suite. @ 07/13/24 13:12:17.495
â€¢ [0.561 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 07/13/24 13:12:17.501
  Jul 13 13:12:17.501: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename subjectreview @ 07/13/24 13:12:17.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:12:17.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:12:17.518
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-8405" @ 07/13/24 13:12:17.523
  Jul 13 13:12:17.527: INFO: saUsername: "system:serviceaccount:subjectreview-8405:e2e"
  Jul 13 13:12:17.527: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-8405"}
  Jul 13 13:12:17.527: INFO: saUID: "f75e4f1a-1ea5-4519-b090-ba2f25359708"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-8405:e2e" @ 07/13/24 13:12:17.527
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-8405:e2e" @ 07/13/24 13:12:17.527
  Jul 13 13:12:17.528: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-8405:e2e" api 'list' configmaps in "subjectreview-8405" namespace @ 07/13/24 13:12:17.529
  Jul 13 13:12:17.530: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-8405:e2e" @ 07/13/24 13:12:17.53
  Jul 13 13:12:17.531: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Jul 13 13:12:17.531: INFO: LocalSubjectAccessReview has been verified
  Jul 13 13:12:17.531: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-8405" for this suite. @ 07/13/24 13:12:17.535
â€¢ [0.041 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 07/13/24 13:12:17.542
  Jul 13 13:12:17.542: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename projected @ 07/13/24 13:12:17.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:12:17.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:12:17.557
  STEP: Creating projection with secret that has name projected-secret-test-05ae36e0-851c-45a3-9645-317cf4da458c @ 07/13/24 13:12:17.559
  STEP: Creating a pod to test consume secrets @ 07/13/24 13:12:17.564
  STEP: Saw pod success @ 07/13/24 13:12:21.588
  Jul 13 13:12:21.592: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-projected-secrets-e9eceeb8-d3f4-44cc-9ac5-ea942e13e1f2 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/13/24 13:12:21.597
  Jul 13 13:12:21.612: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6247" for this suite. @ 07/13/24 13:12:21.615
â€¢ [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 07/13/24 13:12:21.622
  Jul 13 13:12:21.622: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename resourcequota @ 07/13/24 13:12:21.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:12:21.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:12:21.639
  STEP: Counting existing ResourceQuota @ 07/13/24 13:12:38.646
  STEP: Creating a ResourceQuota @ 07/13/24 13:12:43.652
  STEP: Ensuring resource quota status is calculated @ 07/13/24 13:12:43.658
  STEP: Creating a ConfigMap @ 07/13/24 13:12:45.663
  STEP: Ensuring resource quota status captures configMap creation @ 07/13/24 13:12:45.673
  STEP: Deleting a ConfigMap @ 07/13/24 13:12:47.678
  STEP: Ensuring resource quota status released usage @ 07/13/24 13:12:47.685
  Jul 13 13:12:49.688: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2824" for this suite. @ 07/13/24 13:12:49.693
â€¢ [28.079 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 07/13/24 13:12:49.701
  Jul 13 13:12:49.701: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename limitrange @ 07/13/24 13:12:49.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:12:49.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:12:49.718
  STEP: Creating a LimitRange @ 07/13/24 13:12:49.721
  STEP: Setting up watch @ 07/13/24 13:12:49.721
  STEP: Submitting a LimitRange @ 07/13/24 13:12:49.824
  STEP: Verifying LimitRange creation was observed @ 07/13/24 13:12:49.83
  STEP: Fetching the LimitRange to ensure it has proper values @ 07/13/24 13:12:49.83
  Jul 13 13:12:49.833: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Jul 13 13:12:49.833: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 07/13/24 13:12:49.833
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 07/13/24 13:12:49.838
  Jul 13 13:12:49.842: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Jul 13 13:12:49.842: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 07/13/24 13:12:49.842
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 07/13/24 13:12:49.846
  Jul 13 13:12:49.850: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Jul 13 13:12:49.850: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 07/13/24 13:12:49.85
  STEP: Failing to create a Pod with more than max resources @ 07/13/24 13:12:49.852
  STEP: Updating a LimitRange @ 07/13/24 13:12:49.853
  STEP: Verifying LimitRange updating is effective @ 07/13/24 13:12:49.859
  STEP: Creating a Pod with less than former min resources @ 07/13/24 13:12:51.865
  STEP: Failing to create a Pod with more than max resources @ 07/13/24 13:12:51.87
  STEP: Deleting a LimitRange @ 07/13/24 13:12:51.872
  STEP: Verifying the LimitRange was deleted @ 07/13/24 13:12:51.881
  Jul 13 13:12:56.886: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 07/13/24 13:12:56.886
  Jul 13 13:12:56.893: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-5488" for this suite. @ 07/13/24 13:12:56.899
â€¢ [7.205 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 07/13/24 13:12:56.908
  Jul 13 13:12:56.908: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename downward-api @ 07/13/24 13:12:56.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:12:56.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:12:56.927
  STEP: Creating a pod to test downward API volume plugin @ 07/13/24 13:12:56.929
  STEP: Saw pod success @ 07/13/24 13:13:00.954
  Jul 13 13:13:00.957: INFO: Trying to get logs from node ip-172-31-37-214 pod downwardapi-volume-515ae832-b556-45fd-98ff-01383274a643 container client-container: <nil>
  STEP: delete the pod @ 07/13/24 13:13:00.964
  Jul 13 13:13:00.978: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9491" for this suite. @ 07/13/24 13:13:00.981
â€¢ [4.081 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 07/13/24 13:13:00.988
  Jul 13 13:13:00.988: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename projected @ 07/13/24 13:13:00.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:13:01.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:13:01.005
  STEP: Creating secret with name projected-secret-test-71585276-bafa-46c0-ba78-e51190c7c0ad @ 07/13/24 13:13:01.007
  STEP: Creating a pod to test consume secrets @ 07/13/24 13:13:01.011
  STEP: Saw pod success @ 07/13/24 13:13:05.034
  Jul 13 13:13:05.039: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-projected-secrets-f8360c93-7b08-4a4f-8e70-0b69d52c730d container secret-volume-test: <nil>
  STEP: delete the pod @ 07/13/24 13:13:05.05
  Jul 13 13:13:05.065: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2991" for this suite. @ 07/13/24 13:13:05.068
â€¢ [4.086 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 07/13/24 13:13:05.075
  Jul 13 13:13:05.075: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename pv @ 07/13/24 13:13:05.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:13:05.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:13:05.092
  STEP: Creating initial PV and PVC @ 07/13/24 13:13:05.094
  Jul 13 13:13:05.094: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-1888" @ 07/13/24 13:13:05.107
  STEP: Listing PVCs in namespace "pv-1888" @ 07/13/24 13:13:05.115
  STEP: Patching the PV "pv-1888-b8lqw" @ 07/13/24 13:13:05.117
  STEP: Patching the PVC "pvc-rtmkr" @ 07/13/24 13:13:05.126
  STEP: Getting PV "pv-1888-b8lqw" @ 07/13/24 13:13:05.134
  STEP: Getting PVC "pvc-rtmkr" @ 07/13/24 13:13:05.136
  STEP: Deleting PVC "pvc-rtmkr" @ 07/13/24 13:13:05.139
  STEP: Confirm deletion of PVC "pvc-rtmkr" @ 07/13/24 13:13:05.148
  STEP: Deleting PV "pv-1888-b8lqw" @ 07/13/24 13:13:07.157
  STEP: Confirm deletion of PV "pv-1888-b8lqw" @ 07/13/24 13:13:07.166
  STEP: Recreating another PV & PVC @ 07/13/24 13:13:09.172
  Jul 13 13:13:09.172: INFO: Creating a PV followed by a PVC
  STEP: Updating the PV "pv-1888-4lwjz" @ 07/13/24 13:13:09.183
  STEP: Updating the PVC "pvc-xkj8d" @ 07/13/24 13:13:09.192
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-xkj8d=updated" @ 07/13/24 13:13:09.202
  STEP: Deleting PVC "pvc-xkj8d" via DeleteCollection @ 07/13/24 13:13:09.205
  STEP: Confirm deletion of PVC "pvc-xkj8d" @ 07/13/24 13:13:09.226
  STEP: Deleting PV "pv-1888-4lwjz" via DeleteCollection @ 07/13/24 13:13:11.235
  STEP: Confirm deletion of PV "pv-1888-4lwjz" @ 07/13/24 13:13:11.245
  Jul 13 13:13:13.252: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Jul 13 13:13:13.252: INFO: Deleting PersistentVolumeClaim "pvc-xkj8d"
  Jul 13 13:13:13.254: INFO: Deleting PersistentVolume "pv-1888-4lwjz"
  Jul 13 13:13:13.257: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-1888" for this suite. @ 07/13/24 13:13:13.262
â€¢ [8.195 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 07/13/24 13:13:13.27
  Jul 13 13:13:13.270: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename daemonsets @ 07/13/24 13:13:13.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:13:13.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:13:13.288
  STEP: Creating a simple DaemonSet "daemon-set" @ 07/13/24 13:13:13.396
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/13/24 13:13:13.402
  Jul 13 13:13:13.405: INFO: DaemonSet pods can't tolerate node ip-172-31-73-21 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 13:13:13.405: INFO: DaemonSet pods can't tolerate node ip-172-31-93-88 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 13:13:13.409: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 13 13:13:13.409: INFO: Node ip-172-31-15-91 is running 0 daemon pod, expected 1
  Jul 13 13:13:14.407: INFO: DaemonSet pods can't tolerate node ip-172-31-73-21 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 13:13:14.407: INFO: DaemonSet pods can't tolerate node ip-172-31-93-88 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 13:13:14.410: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jul 13 13:13:14.410: INFO: Node ip-172-31-89-122 is running 0 daemon pod, expected 1
  Jul 13 13:13:15.406: INFO: DaemonSet pods can't tolerate node ip-172-31-73-21 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 13:13:15.406: INFO: DaemonSet pods can't tolerate node ip-172-31-93-88 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 13:13:15.409: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jul 13 13:13:15.409: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 07/13/24 13:13:15.412
  Jul 13 13:13:15.430: INFO: DaemonSet pods can't tolerate node ip-172-31-73-21 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 13:13:15.430: INFO: DaemonSet pods can't tolerate node ip-172-31-93-88 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 13:13:15.433: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jul 13 13:13:15.433: INFO: Node ip-172-31-37-214 is running 0 daemon pod, expected 1
  Jul 13 13:13:16.428: INFO: DaemonSet pods can't tolerate node ip-172-31-73-21 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 13:13:16.428: INFO: DaemonSet pods can't tolerate node ip-172-31-93-88 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 13:13:16.431: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jul 13 13:13:16.431: INFO: Node ip-172-31-37-214 is running 0 daemon pod, expected 1
  Jul 13 13:13:17.429: INFO: DaemonSet pods can't tolerate node ip-172-31-73-21 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 13:13:17.429: INFO: DaemonSet pods can't tolerate node ip-172-31-93-88 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 13:13:17.434: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jul 13 13:13:17.434: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 07/13/24 13:13:17.434
  STEP: Deleting DaemonSet "daemon-set" @ 07/13/24 13:13:17.44
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9180, will wait for the garbage collector to delete the pods @ 07/13/24 13:13:17.44
  Jul 13 13:13:17.501: INFO: Deleting DaemonSet.extensions daemon-set took: 8.004851ms
  Jul 13 13:13:17.602: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.282467ms
  Jul 13 13:13:19.106: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 13 13:13:19.106: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jul 13 13:13:19.110: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"27349"},"items":null}

  Jul 13 13:13:19.113: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"27349"},"items":null}

  Jul 13 13:13:19.126: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9180" for this suite. @ 07/13/24 13:13:19.13
â€¢ [5.867 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 07/13/24 13:13:19.137
  Jul 13 13:13:19.137: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename init-container @ 07/13/24 13:13:19.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:13:19.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:13:19.153
  STEP: creating the pod @ 07/13/24 13:13:19.155
  Jul 13 13:13:19.155: INFO: PodSpec: initContainers in spec.initContainers
  Jul 13 13:13:22.187: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9051" for this suite. @ 07/13/24 13:13:22.194
â€¢ [3.064 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 07/13/24 13:13:22.202
  Jul 13 13:13:22.202: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename secrets @ 07/13/24 13:13:22.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:13:22.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:13:22.22
  STEP: Creating secret with name s-test-opt-del-63819819-407e-4d71-b242-b44da7e6199f @ 07/13/24 13:13:22.228
  STEP: Creating secret with name s-test-opt-upd-e33d97df-2586-445b-96f9-4867fffb0703 @ 07/13/24 13:13:22.232
  STEP: Creating the pod @ 07/13/24 13:13:22.237
  STEP: Deleting secret s-test-opt-del-63819819-407e-4d71-b242-b44da7e6199f @ 07/13/24 13:13:24.282
  STEP: Updating secret s-test-opt-upd-e33d97df-2586-445b-96f9-4867fffb0703 @ 07/13/24 13:13:24.288
  STEP: Creating secret with name s-test-opt-create-de31d7db-85f9-4a98-9f2a-d4c2cdadf0a1 @ 07/13/24 13:13:24.294
  STEP: waiting to observe update in volume @ 07/13/24 13:13:24.298
  Jul 13 13:14:42.676: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6165" for this suite. @ 07/13/24 13:14:42.681
â€¢ [80.487 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 07/13/24 13:14:42.689
  Jul 13 13:14:42.689: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename pods @ 07/13/24 13:14:42.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:14:42.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:14:42.706
  STEP: creating the pod @ 07/13/24 13:14:42.709
  STEP: submitting the pod to kubernetes @ 07/13/24 13:14:42.709
  W0713 13:14:42.718296      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 07/13/24 13:14:44.73
  STEP: updating the pod @ 07/13/24 13:14:44.735
  Jul 13 13:14:45.247: INFO: Successfully updated pod "pod-update-activedeadlineseconds-25d51682-715d-40bf-af76-b5383dedb967"
  Jul 13 13:14:49.257: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2393" for this suite. @ 07/13/24 13:14:49.26
â€¢ [6.577 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 07/13/24 13:14:49.266
  Jul 13 13:14:49.266: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename var-expansion @ 07/13/24 13:14:49.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:14:49.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:14:49.282
  Jul 13 13:14:51.306: INFO: Deleting pod "var-expansion-89fb501e-cec1-4c84-9d60-265f28a11bae" in namespace "var-expansion-263"
  Jul 13 13:14:51.313: INFO: Wait up to 5m0s for pod "var-expansion-89fb501e-cec1-4c84-9d60-265f28a11bae" to be fully deleted
  Jul 13 13:14:53.322: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-263" for this suite. @ 07/13/24 13:14:53.327
â€¢ [4.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 07/13/24 13:14:53.335
  Jul 13 13:14:53.335: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename emptydir @ 07/13/24 13:14:53.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:14:53.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:14:53.35
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 07/13/24 13:14:53.355
  STEP: Saw pod success @ 07/13/24 13:14:55.373
  Jul 13 13:14:55.376: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-8412780a-7ea1-42ae-9def-2270413a6a0d container test-container: <nil>
  STEP: delete the pod @ 07/13/24 13:14:55.384
  Jul 13 13:14:55.397: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2506" for this suite. @ 07/13/24 13:14:55.4
â€¢ [2.072 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 07/13/24 13:14:55.407
  Jul 13 13:14:55.407: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename subpath @ 07/13/24 13:14:55.407
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:14:55.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:14:55.422
  STEP: Setting up data @ 07/13/24 13:14:55.425
  STEP: Creating pod pod-subpath-test-configmap-jptm @ 07/13/24 13:14:55.433
  STEP: Creating a pod to test atomic-volume-subpath @ 07/13/24 13:14:55.433
  STEP: Saw pod success @ 07/13/24 13:15:17.498
  Jul 13 13:15:17.502: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-subpath-test-configmap-jptm container test-container-subpath-configmap-jptm: <nil>
  STEP: delete the pod @ 07/13/24 13:15:17.511
  STEP: Deleting pod pod-subpath-test-configmap-jptm @ 07/13/24 13:15:17.523
  Jul 13 13:15:17.523: INFO: Deleting pod "pod-subpath-test-configmap-jptm" in namespace "subpath-3456"
  Jul 13 13:15:17.526: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3456" for this suite. @ 07/13/24 13:15:17.528
â€¢ [22.129 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 07/13/24 13:15:17.535
  Jul 13 13:15:17.535: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename webhook @ 07/13/24 13:15:17.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:15:17.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:15:17.552
  STEP: Setting up server cert @ 07/13/24 13:15:17.577
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/13/24 13:15:17.732
  STEP: Deploying the webhook pod @ 07/13/24 13:15:17.743
  STEP: Wait for the deployment to be ready @ 07/13/24 13:15:17.756
  Jul 13 13:15:17.764: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/13/24 13:15:19.775
  STEP: Verifying the service has paired with the endpoint @ 07/13/24 13:15:19.792
  Jul 13 13:15:20.792: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jul 13 13:15:20.799: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-1865-crds.webhook.example.com via the AdmissionRegistration API @ 07/13/24 13:15:21.308
  STEP: Creating a custom resource that should be mutated by the webhook @ 07/13/24 13:15:21.322
  Jul 13 13:15:23.922: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6474" for this suite. @ 07/13/24 13:15:23.926
  STEP: Destroying namespace "webhook-markers-3148" for this suite. @ 07/13/24 13:15:23.933
â€¢ [6.404 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 07/13/24 13:15:23.939
  Jul 13 13:15:23.939: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename resourcequota @ 07/13/24 13:15:23.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:15:23.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:15:23.956
  STEP: Counting existing ResourceQuota @ 07/13/24 13:15:23.958
  STEP: Creating a ResourceQuota @ 07/13/24 13:15:28.961
  STEP: Ensuring resource quota status is calculated @ 07/13/24 13:15:28.967
  STEP: Creating a ReplicationController @ 07/13/24 13:15:30.972
  STEP: Ensuring resource quota status captures replication controller creation @ 07/13/24 13:15:30.982
  STEP: Deleting a ReplicationController @ 07/13/24 13:15:32.987
  STEP: Ensuring resource quota status released usage @ 07/13/24 13:15:32.993
  Jul 13 13:15:34.997: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5917" for this suite. @ 07/13/24 13:15:34.999
â€¢ [11.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 07/13/24 13:15:35.005
  Jul 13 13:15:35.005: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename replication-controller @ 07/13/24 13:15:35.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:15:35.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:15:35.022
  STEP: creating a ReplicationController @ 07/13/24 13:15:35.028
  STEP: waiting for RC to be added @ 07/13/24 13:15:35.033
  STEP: waiting for available Replicas @ 07/13/24 13:15:35.033
  STEP: patching ReplicationController @ 07/13/24 13:15:36.282
  STEP: waiting for RC to be modified @ 07/13/24 13:15:36.291
  STEP: patching ReplicationController status @ 07/13/24 13:15:36.291
  STEP: waiting for RC to be modified @ 07/13/24 13:15:36.295
  STEP: waiting for available Replicas @ 07/13/24 13:15:36.296
  STEP: fetching ReplicationController status @ 07/13/24 13:15:36.302
  STEP: patching ReplicationController scale @ 07/13/24 13:15:36.306
  STEP: waiting for RC to be modified @ 07/13/24 13:15:36.31
  STEP: waiting for ReplicationController's scale to be the max amount @ 07/13/24 13:15:36.311
  STEP: fetching ReplicationController; ensuring that it's patched @ 07/13/24 13:15:37.244
  STEP: updating ReplicationController status @ 07/13/24 13:15:37.246
  STEP: waiting for RC to be modified @ 07/13/24 13:15:37.253
  STEP: listing all ReplicationControllers @ 07/13/24 13:15:37.253
  STEP: checking that ReplicationController has expected values @ 07/13/24 13:15:37.255
  STEP: deleting ReplicationControllers by collection @ 07/13/24 13:15:37.255
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 07/13/24 13:15:37.263
  Jul 13 13:15:37.293: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0713 13:15:37.293467      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-6530" for this suite. @ 07/13/24 13:15:37.297
â€¢ [2.298 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 07/13/24 13:15:37.304
  Jul 13 13:15:37.304: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename webhook @ 07/13/24 13:15:37.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:15:37.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:15:37.32
  STEP: Setting up server cert @ 07/13/24 13:15:37.341
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/13/24 13:15:37.683
  STEP: Deploying the webhook pod @ 07/13/24 13:15:37.69
  STEP: Wait for the deployment to be ready @ 07/13/24 13:15:37.702
  Jul 13 13:15:37.717: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0713 13:15:38.293829      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:15:39.293922      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/13/24 13:15:39.729
  STEP: Verifying the service has paired with the endpoint @ 07/13/24 13:15:39.742
  E0713 13:15:40.294030      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:15:40.743: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 07/13/24 13:15:40.75
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 07/13/24 13:15:40.763
  STEP: Creating a dummy validating-webhook-configuration object @ 07/13/24 13:15:40.78
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 07/13/24 13:15:40.788
  STEP: Creating a dummy mutating-webhook-configuration object @ 07/13/24 13:15:40.795
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 07/13/24 13:15:40.803
  Jul 13 13:15:40.859: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5076" for this suite. @ 07/13/24 13:15:40.863
  STEP: Destroying namespace "webhook-markers-5470" for this suite. @ 07/13/24 13:15:40.868
â€¢ [3.570 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 07/13/24 13:15:40.875
  Jul 13 13:15:40.875: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename container-probe @ 07/13/24 13:15:40.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:15:40.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:15:40.89
  STEP: Creating pod test-grpc-2aef0d36-3ca4-49c9-ae1d-3e48f374b52b in namespace container-probe-2160 @ 07/13/24 13:15:40.892
  E0713 13:15:41.294122      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:15:42.294889      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/13/24 13:15:42.905
  Jul 13 13:15:42.908: INFO: Initial restart count of pod test-grpc-2aef0d36-3ca4-49c9-ae1d-3e48f374b52b is 0
  Jul 13 13:15:42.911: INFO: Get pod test-grpc-2aef0d36-3ca4-49c9-ae1d-3e48f374b52b in namespace container-probe-2160
  E0713 13:15:43.295163      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:15:44.295359      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:15:44.914: INFO: Get pod test-grpc-2aef0d36-3ca4-49c9-ae1d-3e48f374b52b in namespace container-probe-2160
  E0713 13:15:45.296265      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:15:46.296376      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:15:46.919: INFO: Get pod test-grpc-2aef0d36-3ca4-49c9-ae1d-3e48f374b52b in namespace container-probe-2160
  E0713 13:15:47.297143      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:15:48.297223      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:15:48.923: INFO: Get pod test-grpc-2aef0d36-3ca4-49c9-ae1d-3e48f374b52b in namespace container-probe-2160
  E0713 13:15:49.298100      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:15:50.298192      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:15:50.927: INFO: Get pod test-grpc-2aef0d36-3ca4-49c9-ae1d-3e48f374b52b in namespace container-probe-2160
  E0713 13:15:51.298835      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:15:52.299134      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:15:52.931: INFO: Get pod test-grpc-2aef0d36-3ca4-49c9-ae1d-3e48f374b52b in namespace container-probe-2160
  E0713 13:15:53.300019      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:15:54.300643      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:15:54.935: INFO: Get pod test-grpc-2aef0d36-3ca4-49c9-ae1d-3e48f374b52b in namespace container-probe-2160
  E0713 13:15:55.301518      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:15:56.302120      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:15:56.940: INFO: Get pod test-grpc-2aef0d36-3ca4-49c9-ae1d-3e48f374b52b in namespace container-probe-2160
  E0713 13:15:57.302435      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:15:58.302884      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:15:58.943: INFO: Get pod test-grpc-2aef0d36-3ca4-49c9-ae1d-3e48f374b52b in namespace container-probe-2160
  E0713 13:15:59.303562      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:16:00.303999      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:16:00.946: INFO: Get pod test-grpc-2aef0d36-3ca4-49c9-ae1d-3e48f374b52b in namespace container-probe-2160
  E0713 13:16:01.304886      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:16:02.305025      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:16:02.950: INFO: Get pod test-grpc-2aef0d36-3ca4-49c9-ae1d-3e48f374b52b in namespace container-probe-2160
  E0713 13:16:03.305122      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:16:04.305232      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:16:04.955: INFO: Get pod test-grpc-2aef0d36-3ca4-49c9-ae1d-3e48f374b52b in namespace container-probe-2160
  E0713 13:16:05.305432      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:16:06.305817      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:16:06.960: INFO: Get pod test-grpc-2aef0d36-3ca4-49c9-ae1d-3e48f374b52b in namespace container-probe-2160
  E0713 13:16:07.305996      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:16:08.306900      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:16:08.967: INFO: Get pod test-grpc-2aef0d36-3ca4-49c9-ae1d-3e48f374b52b in namespace container-probe-2160
  E0713 13:16:09.307424      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:16:10.307486      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:16:10.971: INFO: Get pod test-grpc-2aef0d36-3ca4-49c9-ae1d-3e48f374b52b in namespace container-probe-2160
  E0713 13:16:11.307971      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:16:12.308211      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:16:12.975: INFO: Get pod test-grpc-2aef0d36-3ca4-49c9-ae1d-3e48f374b52b in namespace container-probe-2160
  E0713 13:16:13.308303      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:16:14.308395      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:16:14.979: INFO: Get pod test-grpc-2aef0d36-3ca4-49c9-ae1d-3e48f374b52b in namespace container-probe-2160
  E0713 13:16:15.309015      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:16:16.309262      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:16:16.982: INFO: Get pod test-grpc-2aef0d36-3ca4-49c9-ae1d-3e48f374b52b in namespace container-probe-2160
  E0713 13:16:17.310073      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:16:18.310170      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:16:18.987: INFO: Get pod test-grpc-2aef0d36-3ca4-49c9-ae1d-3e48f374b52b in namespace container-probe-2160
  E0713 13:16:19.310863      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:16:20.310965      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:16:20.991: INFO: Get pod test-grpc-2aef0d36-3ca4-49c9-ae1d-3e48f374b52b in namespace container-probe-2160
  E0713 13:16:21.311388      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:16:22.311490      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:16:22.995: INFO: Get pod test-grpc-2aef0d36-3ca4-49c9-ae1d-3e48f374b52b in namespace container-probe-2160
  E0713 13:16:23.311495      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:16:24.311868      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:16:25.001: INFO: Get pod test-grpc-2aef0d36-3ca4-49c9-ae1d-3e48f374b52b in namespace container-probe-2160
  E0713 13:16:25.312304      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:16:26.312418      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:16:27.006: INFO: Get pod test-grpc-2aef0d36-3ca4-49c9-ae1d-3e48f374b52b in namespace container-probe-2160
  E0713 13:16:27.312682      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:16:28.312886      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:16:29.011: INFO: Get pod test-grpc-2aef0d36-3ca4-49c9-ae1d-3e48f374b52b in namespace container-probe-2160
  E0713 13:16:29.313600      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:16:30.314499      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:16:31.015: INFO: Get pod test-grpc-2aef0d36-3ca4-49c9-ae1d-3e48f374b52b in namespace container-probe-2160
  E0713 13:16:31.315280      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:16:32.315411      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:16:33.020: INFO: Get pod test-grpc-2aef0d36-3ca4-49c9-ae1d-3e48f374b52b in namespace container-probe-2160
  E0713 13:16:33.316118      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:16:34.316234      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:16:35.025: INFO: Get pod test-grpc-2aef0d36-3ca4-49c9-ae1d-3e48f374b52b in namespace container-probe-2160
  E0713 13:16:35.316845      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:16:36.316938      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:16:37.030: INFO: Get pod test-grpc-2aef0d36-3ca4-49c9-ae1d-3e48f374b52b in namespace container-probe-2160
  E0713 13:16:37.317556      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:16:38.317651      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:16:39.034: INFO: Get pod test-grpc-2aef0d36-3ca4-49c9-ae1d-3e48f374b52b in namespace container-probe-2160
  E0713 13:16:39.318072      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:16:40.318189      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:16:41.038: INFO: Get pod test-grpc-2aef0d36-3ca4-49c9-ae1d-3e48f374b52b in namespace container-probe-2160
  E0713 13:16:41.318785      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:16:42.319027      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:16:43.043: INFO: Get pod test-grpc-2aef0d36-3ca4-49c9-ae1d-3e48f374b52b in namespace container-probe-2160
  E0713 13:16:43.319761      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:16:44.319851      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:16:45.049: INFO: Get pod test-grpc-2aef0d36-3ca4-49c9-ae1d-3e48f374b52b in namespace container-probe-2160
  E0713 13:16:45.320471      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:16:46.320685      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:16:47.054: INFO: Get pod test-grpc-2aef0d36-3ca4-49c9-ae1d-3e48f374b52b in namespace container-probe-2160
  Jul 13 13:16:47.054: INFO: Restart count of pod container-probe-2160/test-grpc-2aef0d36-3ca4-49c9-ae1d-3e48f374b52b is now 1 (1m4.146416424s elapsed)
  STEP: deleting the pod @ 07/13/24 13:16:47.054
  Jul 13 13:16:47.066: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2160" for this suite. @ 07/13/24 13:16:47.07
â€¢ [66.205 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 07/13/24 13:16:47.08
  Jul 13 13:16:47.080: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename configmap @ 07/13/24 13:16:47.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:16:47.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:16:47.106
  Jul 13 13:16:47.158: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8349" for this suite. @ 07/13/24 13:16:47.161
â€¢ [0.089 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 07/13/24 13:16:47.17
  Jul 13 13:16:47.170: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename pod-network-test @ 07/13/24 13:16:47.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:16:47.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:16:47.185
  STEP: Performing setup for networking test in namespace pod-network-test-577 @ 07/13/24 13:16:47.187
  STEP: creating a selector @ 07/13/24 13:16:47.187
  STEP: Creating the service pods in kubernetes @ 07/13/24 13:16:47.187
  Jul 13 13:16:47.187: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0713 13:16:47.321026      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:16:48.321193      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:16:49.321577      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:16:50.322542      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:16:51.322752      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:16:52.322960      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:16:53.322987      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:16:54.323124      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:16:55.323312      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:16:56.323516      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:16:57.324455      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:16:58.324599      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 07/13/24 13:16:59.268
  E0713 13:16:59.325309      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:17:00.326351      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:17:01.285: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jul 13 13:17:01.286: INFO: Breadth first check of 192.168.145.189 on host 172.31.15.91...
  Jul 13 13:17:01.290: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.77.215:9080/dial?request=hostname&protocol=udp&host=192.168.145.189&port=8081&tries=1'] Namespace:pod-network-test-577 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 13 13:17:01.290: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 13:17:01.290: INFO: ExecWithOptions: Clientset creation
  Jul 13 13:17:01.290: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-577/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.77.215%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.145.189%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  E0713 13:17:01.326752      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:17:01.358: INFO: Waiting for responses: map[]
  Jul 13 13:17:01.358: INFO: reached 192.168.145.189 after 0/1 tries
  Jul 13 13:17:01.358: INFO: Breadth first check of 192.168.77.243 on host 172.31.37.214...
  Jul 13 13:17:01.361: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.77.215:9080/dial?request=hostname&protocol=udp&host=192.168.77.243&port=8081&tries=1'] Namespace:pod-network-test-577 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 13 13:17:01.361: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 13:17:01.361: INFO: ExecWithOptions: Clientset creation
  Jul 13 13:17:01.362: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-577/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.77.215%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.77.243%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jul 13 13:17:01.413: INFO: Waiting for responses: map[]
  Jul 13 13:17:01.413: INFO: reached 192.168.77.243 after 0/1 tries
  Jul 13 13:17:01.413: INFO: Breadth first check of 192.168.67.140 on host 172.31.89.122...
  Jul 13 13:17:01.417: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.77.215:9080/dial?request=hostname&protocol=udp&host=192.168.67.140&port=8081&tries=1'] Namespace:pod-network-test-577 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 13 13:17:01.417: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 13:17:01.417: INFO: ExecWithOptions: Clientset creation
  Jul 13 13:17:01.417: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-577/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.77.215%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.67.140%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jul 13 13:17:01.469: INFO: Waiting for responses: map[]
  Jul 13 13:17:01.469: INFO: reached 192.168.67.140 after 0/1 tries
  Jul 13 13:17:01.469: INFO: Going to retry 0 out of 3 pods....
  Jul 13 13:17:01.470: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-577" for this suite. @ 07/13/24 13:17:01.473
â€¢ [14.311 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 07/13/24 13:17:01.481
  Jul 13 13:17:01.481: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename namespaces @ 07/13/24 13:17:01.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:17:01.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:17:01.497
  STEP: Read namespace status @ 07/13/24 13:17:01.499
  Jul 13 13:17:01.502: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 07/13/24 13:17:01.502
  Jul 13 13:17:01.508: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 07/13/24 13:17:01.508
  Jul 13 13:17:01.516: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Jul 13 13:17:01.516: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2490" for this suite. @ 07/13/24 13:17:01.52
â€¢ [0.045 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 07/13/24 13:17:01.527
  Jul 13 13:17:01.527: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename svcaccounts @ 07/13/24 13:17:01.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:17:01.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:17:01.543
  Jul 13 13:17:01.565: INFO: created pod pod-service-account-defaultsa
  Jul 13 13:17:01.565: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Jul 13 13:17:01.571: INFO: created pod pod-service-account-mountsa
  Jul 13 13:17:01.571: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Jul 13 13:17:01.579: INFO: created pod pod-service-account-nomountsa
  Jul 13 13:17:01.579: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Jul 13 13:17:01.590: INFO: created pod pod-service-account-defaultsa-mountspec
  Jul 13 13:17:01.590: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Jul 13 13:17:01.597: INFO: created pod pod-service-account-mountsa-mountspec
  Jul 13 13:17:01.597: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Jul 13 13:17:01.606: INFO: created pod pod-service-account-nomountsa-mountspec
  Jul 13 13:17:01.606: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Jul 13 13:17:01.615: INFO: created pod pod-service-account-defaultsa-nomountspec
  Jul 13 13:17:01.615: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Jul 13 13:17:01.620: INFO: created pod pod-service-account-mountsa-nomountspec
  Jul 13 13:17:01.620: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Jul 13 13:17:01.629: INFO: created pod pod-service-account-nomountsa-nomountspec
  Jul 13 13:17:01.629: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Jul 13 13:17:01.629: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5271" for this suite. @ 07/13/24 13:17:01.636
â€¢ [0.117 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3129
  STEP: Creating a kubernetes client @ 07/13/24 13:17:01.644
  Jul 13 13:17:01.644: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename services @ 07/13/24 13:17:01.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:17:01.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:17:01.666
  STEP: fetching services @ 07/13/24 13:17:01.669
  Jul 13 13:17:01.672: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8524" for this suite. @ 07/13/24 13:17:01.678
â€¢ [0.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 07/13/24 13:17:01.684
  Jul 13 13:17:01.684: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename resourcequota @ 07/13/24 13:17:01.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:17:01.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:17:01.702
  STEP: Creating a ResourceQuota with terminating scope @ 07/13/24 13:17:01.704
  STEP: Ensuring ResourceQuota status is calculated @ 07/13/24 13:17:01.71
  E0713 13:17:02.327129      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:17:03.327250      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 07/13/24 13:17:03.714
  STEP: Ensuring ResourceQuota status is calculated @ 07/13/24 13:17:03.721
  E0713 13:17:04.328006      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:17:05.328209      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 07/13/24 13:17:05.726
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 07/13/24 13:17:05.74
  E0713 13:17:06.328305      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:17:07.328394      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 07/13/24 13:17:07.745
  E0713 13:17:08.329212      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:17:09.329311      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/13/24 13:17:09.748
  STEP: Ensuring resource quota status released the pod usage @ 07/13/24 13:17:09.762
  E0713 13:17:10.329410      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:17:11.329525      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 07/13/24 13:17:11.768
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 07/13/24 13:17:11.779
  E0713 13:17:12.329829      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:17:13.329860      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 07/13/24 13:17:13.784
  E0713 13:17:14.330860      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:17:15.331336      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/13/24 13:17:15.787
  STEP: Ensuring resource quota status released the pod usage @ 07/13/24 13:17:15.804
  E0713 13:17:16.331429      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:17:17.331519      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:17:17.809: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8668" for this suite. @ 07/13/24 13:17:17.812
â€¢ [16.134 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 07/13/24 13:17:17.818
  Jul 13 13:17:17.818: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename dns @ 07/13/24 13:17:17.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:17:17.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:17:17.835
  STEP: Creating a test headless service @ 07/13/24 13:17:17.837
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-393 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-393;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-393 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-393;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-393.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-393.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-393.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-393.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-393.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-393.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-393.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-393.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-393.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-393.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-393.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-393.svc;check="$$(dig +notcp +noall +answer +search 213.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.213_udp@PTR;check="$$(dig +tcp +noall +answer +search 213.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.213_tcp@PTR;sleep 1; done
   @ 07/13/24 13:17:17.854
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-393 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-393;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-393 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-393;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-393.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-393.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-393.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-393.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-393.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-393.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-393.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-393.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-393.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-393.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-393.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-393.svc;check="$$(dig +notcp +noall +answer +search 213.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.213_udp@PTR;check="$$(dig +tcp +noall +answer +search 213.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.213_tcp@PTR;sleep 1; done
   @ 07/13/24 13:17:17.854
  STEP: creating a pod to probe DNS @ 07/13/24 13:17:17.854
  STEP: submitting the pod to kubernetes @ 07/13/24 13:17:17.854
  E0713 13:17:18.331772      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:17:19.332079      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/13/24 13:17:19.877
  STEP: looking for the results for each expected name from probers @ 07/13/24 13:17:19.879
  Jul 13 13:17:19.885: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-393/dns-test-0ed2fcd2-a4d2-4701-857a-7cd65b0817ee: the server could not find the requested resource (get pods dns-test-0ed2fcd2-a4d2-4701-857a-7cd65b0817ee)
  Jul 13 13:17:19.890: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-393/dns-test-0ed2fcd2-a4d2-4701-857a-7cd65b0817ee: the server could not find the requested resource (get pods dns-test-0ed2fcd2-a4d2-4701-857a-7cd65b0817ee)
  Jul 13 13:17:19.893: INFO: Unable to read wheezy_udp@dns-test-service.dns-393 from pod dns-393/dns-test-0ed2fcd2-a4d2-4701-857a-7cd65b0817ee: the server could not find the requested resource (get pods dns-test-0ed2fcd2-a4d2-4701-857a-7cd65b0817ee)
  Jul 13 13:17:19.897: INFO: Unable to read wheezy_tcp@dns-test-service.dns-393 from pod dns-393/dns-test-0ed2fcd2-a4d2-4701-857a-7cd65b0817ee: the server could not find the requested resource (get pods dns-test-0ed2fcd2-a4d2-4701-857a-7cd65b0817ee)
  Jul 13 13:17:19.902: INFO: Unable to read wheezy_udp@dns-test-service.dns-393.svc from pod dns-393/dns-test-0ed2fcd2-a4d2-4701-857a-7cd65b0817ee: the server could not find the requested resource (get pods dns-test-0ed2fcd2-a4d2-4701-857a-7cd65b0817ee)
  Jul 13 13:17:19.905: INFO: Unable to read wheezy_tcp@dns-test-service.dns-393.svc from pod dns-393/dns-test-0ed2fcd2-a4d2-4701-857a-7cd65b0817ee: the server could not find the requested resource (get pods dns-test-0ed2fcd2-a4d2-4701-857a-7cd65b0817ee)
  Jul 13 13:17:19.909: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-393.svc from pod dns-393/dns-test-0ed2fcd2-a4d2-4701-857a-7cd65b0817ee: the server could not find the requested resource (get pods dns-test-0ed2fcd2-a4d2-4701-857a-7cd65b0817ee)
  Jul 13 13:17:19.914: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-393.svc from pod dns-393/dns-test-0ed2fcd2-a4d2-4701-857a-7cd65b0817ee: the server could not find the requested resource (get pods dns-test-0ed2fcd2-a4d2-4701-857a-7cd65b0817ee)
  Jul 13 13:17:19.933: INFO: Unable to read jessie_udp@dns-test-service from pod dns-393/dns-test-0ed2fcd2-a4d2-4701-857a-7cd65b0817ee: the server could not find the requested resource (get pods dns-test-0ed2fcd2-a4d2-4701-857a-7cd65b0817ee)
  Jul 13 13:17:19.938: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-393/dns-test-0ed2fcd2-a4d2-4701-857a-7cd65b0817ee: the server could not find the requested resource (get pods dns-test-0ed2fcd2-a4d2-4701-857a-7cd65b0817ee)
  Jul 13 13:17:19.941: INFO: Unable to read jessie_udp@dns-test-service.dns-393 from pod dns-393/dns-test-0ed2fcd2-a4d2-4701-857a-7cd65b0817ee: the server could not find the requested resource (get pods dns-test-0ed2fcd2-a4d2-4701-857a-7cd65b0817ee)
  Jul 13 13:17:19.945: INFO: Unable to read jessie_tcp@dns-test-service.dns-393 from pod dns-393/dns-test-0ed2fcd2-a4d2-4701-857a-7cd65b0817ee: the server could not find the requested resource (get pods dns-test-0ed2fcd2-a4d2-4701-857a-7cd65b0817ee)
  Jul 13 13:17:19.950: INFO: Unable to read jessie_udp@dns-test-service.dns-393.svc from pod dns-393/dns-test-0ed2fcd2-a4d2-4701-857a-7cd65b0817ee: the server could not find the requested resource (get pods dns-test-0ed2fcd2-a4d2-4701-857a-7cd65b0817ee)
  Jul 13 13:17:19.953: INFO: Unable to read jessie_tcp@dns-test-service.dns-393.svc from pod dns-393/dns-test-0ed2fcd2-a4d2-4701-857a-7cd65b0817ee: the server could not find the requested resource (get pods dns-test-0ed2fcd2-a4d2-4701-857a-7cd65b0817ee)
  Jul 13 13:17:19.958: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-393.svc from pod dns-393/dns-test-0ed2fcd2-a4d2-4701-857a-7cd65b0817ee: the server could not find the requested resource (get pods dns-test-0ed2fcd2-a4d2-4701-857a-7cd65b0817ee)
  Jul 13 13:17:19.963: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-393.svc from pod dns-393/dns-test-0ed2fcd2-a4d2-4701-857a-7cd65b0817ee: the server could not find the requested resource (get pods dns-test-0ed2fcd2-a4d2-4701-857a-7cd65b0817ee)
  Jul 13 13:17:19.977: INFO: Lookups using dns-393/dns-test-0ed2fcd2-a4d2-4701-857a-7cd65b0817ee failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-393 wheezy_tcp@dns-test-service.dns-393 wheezy_udp@dns-test-service.dns-393.svc wheezy_tcp@dns-test-service.dns-393.svc wheezy_udp@_http._tcp.dns-test-service.dns-393.svc wheezy_tcp@_http._tcp.dns-test-service.dns-393.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-393 jessie_tcp@dns-test-service.dns-393 jessie_udp@dns-test-service.dns-393.svc jessie_tcp@dns-test-service.dns-393.svc jessie_udp@_http._tcp.dns-test-service.dns-393.svc jessie_tcp@_http._tcp.dns-test-service.dns-393.svc]

  Jul 13 13:17:19.989: INFO: Pod client logs for webserver: 
  Jul 13 13:17:19.996: INFO: Pod client logs for querier: 
  Jul 13 13:17:20.002: INFO: Pod client logs for jessie-querier: 
  E0713 13:17:20.332934      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:17:21.333103      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:17:22.333208      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:17:23.333321      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:17:24.333895      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:17:24.977: INFO: DNS probes using dns-393/dns-test-0ed2fcd2-a4d2-4701-857a-7cd65b0817ee succeeded

  STEP: deleting the pod @ 07/13/24 13:17:24.978
  STEP: deleting the test service @ 07/13/24 13:17:25.002
  STEP: deleting the test headless service @ 07/13/24 13:17:25.025
  Jul 13 13:17:25.036: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-393" for this suite. @ 07/13/24 13:17:25.039
â€¢ [7.226 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:155
  STEP: Creating a kubernetes client @ 07/13/24 13:17:25.044
  Jul 13 13:17:25.044: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename secrets @ 07/13/24 13:17:25.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:17:25.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:17:25.063
  STEP: creating a secret @ 07/13/24 13:17:25.065
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 07/13/24 13:17:25.07
  STEP: patching the secret @ 07/13/24 13:17:25.074
  STEP: deleting the secret using a LabelSelector @ 07/13/24 13:17:25.082
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 07/13/24 13:17:25.089
  Jul 13 13:17:25.093: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8214" for this suite. @ 07/13/24 13:17:25.097
â€¢ [0.058 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 07/13/24 13:17:25.102
  Jul 13 13:17:25.102: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename downward-api @ 07/13/24 13:17:25.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:17:25.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:17:25.119
  STEP: Creating a pod to test downward API volume plugin @ 07/13/24 13:17:25.121
  E0713 13:17:25.334422      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:17:26.334534      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:17:27.335333      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:17:28.335448      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/13/24 13:17:29.143
  Jul 13 13:17:29.147: INFO: Trying to get logs from node ip-172-31-37-214 pod downwardapi-volume-48a9e7ad-e64b-436e-bd30-58711d9f8fa8 container client-container: <nil>
  STEP: delete the pod @ 07/13/24 13:17:29.155
  Jul 13 13:17:29.169: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1919" for this suite. @ 07/13/24 13:17:29.171
â€¢ [4.078 seconds]
------------------------------
SSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:139
  STEP: Creating a kubernetes client @ 07/13/24 13:17:29.18
  Jul 13 13:17:29.180: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename configmap @ 07/13/24 13:17:29.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:17:29.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:17:29.196
  STEP: Creating configMap that has name configmap-test-emptyKey-7e03dd49-7970-4ddb-86c9-25208ffe4245 @ 07/13/24 13:17:29.199
  Jul 13 13:17:29.200: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7179" for this suite. @ 07/13/24 13:17:29.204
â€¢ [0.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:399
  STEP: Creating a kubernetes client @ 07/13/24 13:17:29.21
  Jul 13 13:17:29.210: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename kubectl @ 07/13/24 13:17:29.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:17:29.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:17:29.227
  STEP: creating all guestbook components @ 07/13/24 13:17:29.229
  Jul 13 13:17:29.229: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Jul 13 13:17:29.229: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-6460 create -f -'
  Jul 13 13:17:29.322: INFO: stderr: ""
  Jul 13 13:17:29.322: INFO: stdout: "service/agnhost-replica created\n"
  Jul 13 13:17:29.322: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Jul 13 13:17:29.322: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-6460 create -f -'
  E0713 13:17:29.336120      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:17:29.416: INFO: stderr: ""
  Jul 13 13:17:29.416: INFO: stdout: "service/agnhost-primary created\n"
  Jul 13 13:17:29.416: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Jul 13 13:17:29.416: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-6460 create -f -'
  Jul 13 13:17:29.501: INFO: stderr: ""
  Jul 13 13:17:29.501: INFO: stdout: "service/frontend created\n"
  Jul 13 13:17:29.501: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Jul 13 13:17:29.501: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-6460 create -f -'
  Jul 13 13:17:29.561: INFO: stderr: ""
  Jul 13 13:17:29.561: INFO: stdout: "deployment.apps/frontend created\n"
  Jul 13 13:17:29.561: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Jul 13 13:17:29.561: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-6460 create -f -'
  Jul 13 13:17:29.630: INFO: stderr: ""
  Jul 13 13:17:29.630: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Jul 13 13:17:29.630: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Jul 13 13:17:29.630: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-6460 create -f -'
  Jul 13 13:17:29.692: INFO: stderr: ""
  Jul 13 13:17:29.692: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 07/13/24 13:17:29.692
  Jul 13 13:17:29.693: INFO: Waiting for all frontend pods to be Running.
  E0713 13:17:30.336754      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:17:31.337470      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:17:32.337814      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:17:33.337910      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:17:34.338804      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:17:34.744: INFO: Waiting for frontend to serve content.
  Jul 13 13:17:34.757: INFO: Trying to add a new entry to the guestbook.
  Jul 13 13:17:34.771: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 07/13/24 13:17:34.781
  Jul 13 13:17:34.781: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-6460 delete --grace-period=0 --force -f -'
  Jul 13 13:17:34.842: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jul 13 13:17:34.842: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 07/13/24 13:17:34.842
  Jul 13 13:17:34.842: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-6460 delete --grace-period=0 --force -f -'
  Jul 13 13:17:34.900: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jul 13 13:17:34.900: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 07/13/24 13:17:34.9
  Jul 13 13:17:34.900: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-6460 delete --grace-period=0 --force -f -'
  Jul 13 13:17:34.958: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jul 13 13:17:34.958: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 07/13/24 13:17:34.959
  Jul 13 13:17:34.959: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-6460 delete --grace-period=0 --force -f -'
  Jul 13 13:17:35.003: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jul 13 13:17:35.003: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 07/13/24 13:17:35.003
  Jul 13 13:17:35.003: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-6460 delete --grace-period=0 --force -f -'
  Jul 13 13:17:35.063: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jul 13 13:17:35.063: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 07/13/24 13:17:35.063
  Jul 13 13:17:35.063: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-6460 delete --grace-period=0 --force -f -'
  Jul 13 13:17:35.118: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jul 13 13:17:35.119: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Jul 13 13:17:35.119: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6460" for this suite. @ 07/13/24 13:17:35.122
â€¢ [5.921 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 07/13/24 13:17:35.131
  Jul 13 13:17:35.131: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename deployment @ 07/13/24 13:17:35.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:17:35.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:17:35.146
  Jul 13 13:17:35.162: INFO: Pod name rollover-pod: Found 0 pods out of 1
  E0713 13:17:35.339765      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:17:36.339857      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:17:37.340494      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:17:38.340604      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:17:39.341007      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:17:40.168: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/13/24 13:17:40.168
  Jul 13 13:17:40.168: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0713 13:17:40.341101      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:17:41.341270      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:17:42.174: INFO: Creating deployment "test-rollover-deployment"
  Jul 13 13:17:42.184: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  E0713 13:17:42.341350      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:17:43.341600      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:17:44.193: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Jul 13 13:17:44.199: INFO: Ensure that both replica sets have 1 created replica
  Jul 13 13:17:44.205: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Jul 13 13:17:44.215: INFO: Updating deployment test-rollover-deployment
  Jul 13 13:17:44.215: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0713 13:17:44.342204      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:17:45.342253      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:17:46.223: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Jul 13 13:17:46.229: INFO: Make sure deployment "test-rollover-deployment" is complete
  Jul 13 13:17:46.236: INFO: all replica sets need to contain the pod-template-hash label
  Jul 13 13:17:46.236: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 13, 13, 17, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 13, 13, 17, 42, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 13, 13, 17, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 13, 13, 17, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0713 13:17:46.343220      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:17:47.344221      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:17:48.243: INFO: all replica sets need to contain the pod-template-hash label
  Jul 13 13:17:48.243: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 13, 13, 17, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 13, 13, 17, 42, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 13, 13, 17, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 13, 13, 17, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0713 13:17:48.345038      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:17:49.345253      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:17:50.243: INFO: all replica sets need to contain the pod-template-hash label
  Jul 13 13:17:50.243: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 13, 13, 17, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 13, 13, 17, 42, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 13, 13, 17, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 13, 13, 17, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0713 13:17:50.345891      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:17:51.346889      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:17:52.245: INFO: all replica sets need to contain the pod-template-hash label
  Jul 13 13:17:52.245: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 13, 13, 17, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 13, 13, 17, 42, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 13, 13, 17, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 13, 13, 17, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0713 13:17:52.347785      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:17:53.347936      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:17:54.243: INFO: all replica sets need to contain the pod-template-hash label
  Jul 13 13:17:54.243: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 13, 13, 17, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 13, 13, 17, 42, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 13, 13, 17, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 13, 13, 17, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0713 13:17:54.348777      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:17:55.349004      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:17:56.245: INFO: 
  Jul 13 13:17:56.245: INFO: Ensure that both old replica sets have no replicas
  Jul 13 13:17:56.255: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3010",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "00643ff3-0cf4-4e57-bf80-cf6458d7ad1b",
      ResourceVersion: (string) (len=5) "29292",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856473462,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856473464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856473475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856473462,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856473462,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856473475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856473462,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-68774655d5\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jul 13 13:17:56.260: INFO: New ReplicaSet "test-rollover-deployment-68774655d5" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-68774655d5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3010",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f1059882-76d2-4a9b-ad5f-1027e35e6ed9",
      ResourceVersion: (string) (len=5) "29282",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856473464,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "00643ff3-0cf4-4e57-bf80-cf6458d7ad1b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856473464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 30 36 34 33 66  66 33 2d 30 63 66 34 2d  |\"00643ff3-0cf4-|
              00000120  34 65 35 37 2d 62 66 38  30 2d 63 66 36 34 35 38  |4e57-bf80-cf6458|
              00000130  64 37 61 64 31 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d7ad1b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856473475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul 13 13:17:56.264: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Jul 13 13:17:56.264: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3010",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0aea0d9d-ae7d-49ee-8607-d3f5d1b2097a",
      ResourceVersion: (string) (len=5) "29291",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856473455,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "00643ff3-0cf4-4e57-bf80-cf6458d7ad1b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856473455,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856473475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  30 30 36 34 33 66 66 33  2d 30 63 66 34 2d 34 65  |00643ff3-0cf4-4e|
              000000c0  35 37 2d 62 66 38 30 2d  63 66 36 34 35 38 64 37  |57-bf80-cf6458d7|
              000000d0  61 64 31 62 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |ad1b\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856473475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul 13 13:17:56.265: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3010",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "39861189-eb48-43b8-9bc6-8f99e5e9290b",
      ResourceVersion: (string) (len=5) "29239",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856473462,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "00643ff3-0cf4-4e57-bf80-cf6458d7ad1b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856473464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 30 36 34 33 66  66 33 2d 30 63 66 34 2d  |\"00643ff3-0cf4-|
              00000120  34 65 35 37 2d 62 66 38  30 2d 63 66 36 34 35 38  |4e57-bf80-cf6458|
              00000130  64 37 61 64 31 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d7ad1b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856473464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul 13 13:17:56.271: INFO: Pod "test-rollover-deployment-68774655d5-d6xqb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-68774655d5-d6xqb",
      GenerateName: (string) (len=36) "test-rollover-deployment-68774655d5-",
      Namespace: (string) (len=15) "deployment-3010",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2964e68e-81f8-4dae-97f0-8e798b146b72",
      ResourceVersion: (string) (len=5) "29259",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856473464,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-68774655d5",
          UID: (types.UID) (len=36) "f1059882-76d2-4a9b-ad5f-1027e35e6ed9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856473464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 31  30 35 39 38 38 32 2d 37  |d\":\"f1059882-7|
              00000090  36 64 32 2d 34 61 39 62  2d 61 64 35 66 2d 31 30  |6d2-4a9b-ad5f-10|
              000000a0  32 37 65 33 35 65 36 65  64 39 5c 22 7d 22 3a 7b  |27e35e6ed9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856473465,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 37 37  2e 32 31 32 5c 22 7d 22  |2.168.77.212\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6zmjc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6zmjc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-37-214",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856473465,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856473464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856473465,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856473465,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856473464,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.37.214",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.37.214"
        }
      },
      PodIP: (string) (len=14) "192.168.77.212",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.77.212"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856473464,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63856473464,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://287be3b76639180647a3eb26e5e6afb9677049323007d366bc23e6db50031139",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 13 13:17:56.273: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3010" for this suite. @ 07/13/24 13:17:56.276
â€¢ [21.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 07/13/24 13:17:56.284
  Jul 13 13:17:56.284: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename pod-network-test @ 07/13/24 13:17:56.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:17:56.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:17:56.305
  STEP: Performing setup for networking test in namespace pod-network-test-6611 @ 07/13/24 13:17:56.308
  STEP: creating a selector @ 07/13/24 13:17:56.308
  STEP: Creating the service pods in kubernetes @ 07/13/24 13:17:56.308
  Jul 13 13:17:56.308: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0713 13:17:56.349125      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:17:57.349275      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:17:58.350330      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:17:59.350916      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:00.351296      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:01.351880      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:02.351974      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:03.352065      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:04.352831      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:05.353555      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:06.353641      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:07.353972      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:08.354918      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 07/13/24 13:18:08.391
  E0713 13:18:09.355294      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:10.355375      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:18:10.410: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jul 13 13:18:10.410: INFO: Breadth first check of 192.168.145.183 on host 172.31.15.91...
  Jul 13 13:18:10.414: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.77.194:9080/dial?request=hostname&protocol=http&host=192.168.145.183&port=8083&tries=1'] Namespace:pod-network-test-6611 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 13 13:18:10.414: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 13:18:10.415: INFO: ExecWithOptions: Clientset creation
  Jul 13 13:18:10.415: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6611/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.77.194%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.145.183%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jul 13 13:18:10.471: INFO: Waiting for responses: map[]
  Jul 13 13:18:10.471: INFO: reached 192.168.145.183 after 0/1 tries
  Jul 13 13:18:10.471: INFO: Breadth first check of 192.168.77.203 on host 172.31.37.214...
  Jul 13 13:18:10.475: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.77.194:9080/dial?request=hostname&protocol=http&host=192.168.77.203&port=8083&tries=1'] Namespace:pod-network-test-6611 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 13 13:18:10.475: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 13:18:10.475: INFO: ExecWithOptions: Clientset creation
  Jul 13 13:18:10.475: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6611/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.77.194%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.77.203%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jul 13 13:18:10.521: INFO: Waiting for responses: map[]
  Jul 13 13:18:10.521: INFO: reached 192.168.77.203 after 0/1 tries
  Jul 13 13:18:10.521: INFO: Breadth first check of 192.168.67.135 on host 172.31.89.122...
  Jul 13 13:18:10.524: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.77.194:9080/dial?request=hostname&protocol=http&host=192.168.67.135&port=8083&tries=1'] Namespace:pod-network-test-6611 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 13 13:18:10.524: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 13:18:10.524: INFO: ExecWithOptions: Clientset creation
  Jul 13 13:18:10.524: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6611/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.77.194%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.67.135%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jul 13 13:18:10.570: INFO: Waiting for responses: map[]
  Jul 13 13:18:10.570: INFO: reached 192.168.67.135 after 0/1 tries
  Jul 13 13:18:10.570: INFO: Going to retry 0 out of 3 pods....
  Jul 13 13:18:10.570: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6611" for this suite. @ 07/13/24 13:18:10.573
â€¢ [14.296 seconds]
------------------------------
S
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 07/13/24 13:18:10.58
  Jul 13 13:18:10.580: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename certificates @ 07/13/24 13:18:10.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:18:10.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:18:10.597
  STEP: getting /apis @ 07/13/24 13:18:10.97
  STEP: getting /apis/certificates.k8s.io @ 07/13/24 13:18:10.973
  STEP: getting /apis/certificates.k8s.io/v1 @ 07/13/24 13:18:10.974
  STEP: creating @ 07/13/24 13:18:10.975
  STEP: getting @ 07/13/24 13:18:10.993
  STEP: listing @ 07/13/24 13:18:10.997
  STEP: watching @ 07/13/24 13:18:10.999
  Jul 13 13:18:10.999: INFO: starting watch
  STEP: patching @ 07/13/24 13:18:11
  STEP: updating @ 07/13/24 13:18:11.006
  Jul 13 13:18:11.013: INFO: waiting for watch events with expected annotations
  Jul 13 13:18:11.013: INFO: saw patched and updated annotations
  STEP: getting /approval @ 07/13/24 13:18:11.013
  STEP: patching /approval @ 07/13/24 13:18:11.015
  STEP: updating /approval @ 07/13/24 13:18:11.021
  STEP: getting /status @ 07/13/24 13:18:11.028
  STEP: patching /status @ 07/13/24 13:18:11.03
  STEP: updating /status @ 07/13/24 13:18:11.037
  STEP: deleting @ 07/13/24 13:18:11.044
  STEP: deleting a collection @ 07/13/24 13:18:11.054
  Jul 13 13:18:11.070: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-4519" for this suite. @ 07/13/24 13:18:11.073
â€¢ [0.501 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 07/13/24 13:18:11.081
  Jul 13 13:18:11.081: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename services @ 07/13/24 13:18:11.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:18:11.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:18:11.095
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-9795 @ 07/13/24 13:18:11.097
  STEP: changing the ExternalName service to type=ClusterIP @ 07/13/24 13:18:11.102
  STEP: creating replication controller externalname-service in namespace services-9795 @ 07/13/24 13:18:11.114
  I0713 13:18:11.123001      20 runners.go:197] Created replication controller with name: externalname-service, namespace: services-9795, replica count: 2
  E0713 13:18:11.355903      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:12.356102      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:13.356224      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0713 13:18:14.173752      20 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jul 13 13:18:14.173: INFO: Creating new exec pod
  E0713 13:18:14.357039      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:15.357158      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:16.357813      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:18:17.187: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-9795 exec execpoddjsgf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jul 13 13:18:17.281: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jul 13 13:18:17.281: INFO: stdout: ""
  E0713 13:18:17.358465      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:18:18.188: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-9795 exec execpoddjsgf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jul 13 13:18:18.269: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jul 13 13:18:18.269: INFO: stdout: "externalname-service-dswvq"
  Jul 13 13:18:18.269: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-9795 exec execpoddjsgf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.169 80'
  E0713 13:18:18.359318      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:18:18.359: INFO: stderr: "+ nc -v -t -w 2 10.152.183.169 80\n+ echo hostName\nConnection to 10.152.183.169 80 port [tcp/http] succeeded!\n"
  Jul 13 13:18:18.359: INFO: stdout: ""
  Jul 13 13:18:19.269: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-9795 exec execpoddjsgf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.169 80'
  Jul 13 13:18:19.356: INFO: stderr: "+ nc -v -t -w 2 10.152.183.169 80\nConnection to 10.152.183.169 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Jul 13 13:18:19.356: INFO: stdout: "externalname-service-dswvq"
  Jul 13 13:18:19.356: INFO: Cleaning up the ExternalName to ClusterIP test service
  E0713 13:18:19.360252      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:18:19.373: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9795" for this suite. @ 07/13/24 13:18:19.378
â€¢ [8.303 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 07/13/24 13:18:19.384
  Jul 13 13:18:19.384: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename replicaset @ 07/13/24 13:18:19.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:18:19.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:18:19.402
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 07/13/24 13:18:19.404
  E0713 13:18:20.360513      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:21.360642      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 07/13/24 13:18:21.42
  STEP: Then the orphan pod is adopted @ 07/13/24 13:18:21.425
  E0713 13:18:22.360872      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 07/13/24 13:18:22.433
  Jul 13 13:18:22.436: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 07/13/24 13:18:22.448
  E0713 13:18:23.361537      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:18:23.457: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1434" for this suite. @ 07/13/24 13:18:23.46
â€¢ [4.084 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:708
  STEP: Creating a kubernetes client @ 07/13/24 13:18:23.469
  Jul 13 13:18:23.470: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename sched-pred @ 07/13/24 13:18:23.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:18:23.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:18:23.489
  Jul 13 13:18:23.491: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jul 13 13:18:23.499: INFO: Waiting for terminating namespaces to be deleted...
  Jul 13 13:18:23.501: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-15-91 before test
  Jul 13 13:18:23.505: INFO: nginx-ingress-controller-kubernetes-worker-mp6fl from ingress-nginx-kubernetes-worker started at 2024-07-13 12:16:24 +0000 UTC (1 container statuses recorded)
  Jul 13 13:18:23.505: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul 13 13:18:23.505: INFO: calico-kube-controllers-566f48f4bc-zln57 from kube-system started at 2024-07-13 12:19:27 +0000 UTC (1 container statuses recorded)
  Jul 13 13:18:23.505: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Jul 13 13:18:23.505: INFO: calico-node-6r9cg from kube-system started at 2024-07-13 12:17:37 +0000 UTC (1 container statuses recorded)
  Jul 13 13:18:23.505: INFO: 	Container calico-node ready: true, restart count 0
  Jul 13 13:18:23.505: INFO: coredns-bddfd76d7-qc4pt from kube-system started at 2024-07-13 12:16:24 +0000 UTC (1 container statuses recorded)
  Jul 13 13:18:23.505: INFO: 	Container coredns ready: true, restart count 0
  Jul 13 13:18:23.505: INFO: kube-state-metrics-6f48cdd76-kj8mn from kube-system started at 2024-07-13 12:16:24 +0000 UTC (1 container statuses recorded)
  Jul 13 13:18:23.505: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Jul 13 13:18:23.505: INFO: metrics-server-v0.6.3-69d7fbfdf8-bj7mr from kube-system started at 2024-07-13 12:16:24 +0000 UTC (2 container statuses recorded)
  Jul 13 13:18:23.505: INFO: 	Container metrics-server ready: true, restart count 0
  Jul 13 13:18:23.505: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Jul 13 13:18:23.505: INFO: dashboard-metrics-scraper-5dd7cb5fc-cdqmc from kubernetes-dashboard started at 2024-07-13 12:16:24 +0000 UTC (1 container statuses recorded)
  Jul 13 13:18:23.505: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Jul 13 13:18:23.505: INFO: kubernetes-dashboard-7b899cb9d9-tx78d from kubernetes-dashboard started at 2024-07-13 12:16:24 +0000 UTC (1 container statuses recorded)
  Jul 13 13:18:23.505: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Jul 13 13:18:23.505: INFO: sonobuoy-systemd-logs-daemon-set-4e460315498c4029-66grn from sonobuoy started at 2024-07-13 12:23:14 +0000 UTC (2 container statuses recorded)
  Jul 13 13:18:23.505: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 13 13:18:23.505: INFO: 	Container systemd-logs ready: true, restart count 0
  Jul 13 13:18:23.505: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-37-214 before test
  Jul 13 13:18:23.510: INFO: nginx-ingress-controller-kubernetes-worker-kxd2r from ingress-nginx-kubernetes-worker started at 2024-07-13 12:47:09 +0000 UTC (1 container statuses recorded)
  Jul 13 13:18:23.510: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul 13 13:18:23.510: INFO: calico-node-j2tjq from kube-system started at 2024-07-13 12:19:25 +0000 UTC (1 container statuses recorded)
  Jul 13 13:18:23.510: INFO: 	Container calico-node ready: true, restart count 0
  Jul 13 13:18:23.510: INFO: pod-adoption-release from replicaset-1434 started at 2024-07-13 13:18:19 +0000 UTC (1 container statuses recorded)
  Jul 13 13:18:23.510: INFO: 	Container pod-adoption-release ready: true, restart count 0
  Jul 13 13:18:23.510: INFO: pod-adoption-release-95qfx from replicaset-1434 started at 2024-07-13 13:18:22 +0000 UTC (1 container statuses recorded)
  Jul 13 13:18:23.510: INFO: 	Container pod-adoption-release ready: false, restart count 0
  Jul 13 13:18:23.510: INFO: externalname-service-b59ks from services-9795 started at 2024-07-13 13:18:11 +0000 UTC (1 container statuses recorded)
  Jul 13 13:18:23.510: INFO: 	Container externalname-service ready: true, restart count 0
  Jul 13 13:18:23.510: INFO: sonobuoy from sonobuoy started at 2024-07-13 12:23:12 +0000 UTC (1 container statuses recorded)
  Jul 13 13:18:23.510: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jul 13 13:18:23.510: INFO: sonobuoy-systemd-logs-daemon-set-4e460315498c4029-7d9z2 from sonobuoy started at 2024-07-13 12:23:14 +0000 UTC (2 container statuses recorded)
  Jul 13 13:18:23.510: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 13 13:18:23.510: INFO: 	Container systemd-logs ready: true, restart count 0
  Jul 13 13:18:23.510: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-89-122 before test
  Jul 13 13:18:23.516: INFO: nginx-ingress-controller-kubernetes-worker-qcj2m from ingress-nginx-kubernetes-worker started at 2024-07-13 12:19:48 +0000 UTC (1 container statuses recorded)
  Jul 13 13:18:23.516: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul 13 13:18:23.516: INFO: calico-node-79mrk from kube-system started at 2024-07-13 12:19:27 +0000 UTC (1 container statuses recorded)
  Jul 13 13:18:23.516: INFO: 	Container calico-node ready: true, restart count 0
  Jul 13 13:18:23.516: INFO: execpoddjsgf from services-9795 started at 2024-07-13 13:18:14 +0000 UTC (1 container statuses recorded)
  Jul 13 13:18:23.516: INFO: 	Container agnhost-container ready: true, restart count 0
  Jul 13 13:18:23.516: INFO: externalname-service-dswvq from services-9795 started at 2024-07-13 13:18:11 +0000 UTC (1 container statuses recorded)
  Jul 13 13:18:23.516: INFO: 	Container externalname-service ready: true, restart count 0
  Jul 13 13:18:23.516: INFO: sonobuoy-e2e-job-542cce46194140ad from sonobuoy started at 2024-07-13 12:23:14 +0000 UTC (2 container statuses recorded)
  Jul 13 13:18:23.516: INFO: 	Container e2e ready: true, restart count 0
  Jul 13 13:18:23.516: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 13 13:18:23.516: INFO: sonobuoy-systemd-logs-daemon-set-4e460315498c4029-tw5hd from sonobuoy started at 2024-07-13 12:23:14 +0000 UTC (2 container statuses recorded)
  Jul 13 13:18:23.516: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 13 13:18:23.516: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/13/24 13:18:23.517
  E0713 13:18:24.361837      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:25.361911      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/13/24 13:18:25.534
  STEP: Trying to apply a random label on the found node. @ 07/13/24 13:18:25.548
  STEP: verifying the node has the label kubernetes.io/e2e-608708c1-bc17-47f5-a5f0-37d2e7e0c6d0 95 @ 07/13/24 13:18:25.56
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 07/13/24 13:18:25.562
  E0713 13:18:26.362110      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:27.362899      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.37.214 on the node which pod4 resides and expect not scheduled @ 07/13/24 13:18:27.575
  E0713 13:18:28.363023      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:29.363112      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:30.363200      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:31.363296      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:32.364360      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:33.364877      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:34.365816      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:35.366575      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:36.366689      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:37.366896      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:38.366970      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:39.367209      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:40.368088      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:41.369144      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:42.369388      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:43.369844      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:44.370310      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:45.371379      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:46.372084      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:47.372455      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:48.372550      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:49.372642      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:50.373341      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:51.373435      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:52.373819      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:53.374897      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:54.375191      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:55.375278      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:56.375313      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:57.376094      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:58.376385      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:18:59.376578      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:00.376710      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:01.376896      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:02.377193      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:03.377460      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:04.377800      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:05.377829      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:06.378900      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:07.379058      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:08.379322      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:09.379455      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:10.380165      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:11.380351      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:12.380428      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:13.380494      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:14.380820      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:15.381123      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:16.381945      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:17.382037      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:18.382286      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:19.382884      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:20.383239      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:21.383341      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:22.384217      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:23.384632      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:24.385598      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:25.386628      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:26.387100      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:27.387366      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:28.387439      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:29.387738      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:30.388390      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:31.388546      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:32.388642      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:33.388752      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:34.389533      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:35.389624      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:36.389812      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:37.389864      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:38.390763      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:39.390930      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:40.391449      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:41.392174      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:42.392266      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:43.392937      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:44.393294      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:45.393427      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:46.393518      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:47.393801      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:48.394881      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:49.395065      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:50.396023      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:51.396247      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:52.396514      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:53.397316      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:54.397801      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:55.398415      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:56.398517      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:57.398887      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:58.399315      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:19:59.399457      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:00.399552      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:01.399620      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:02.400561      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:03.400754      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:04.401300      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:05.402017      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:06.402487      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:07.402595      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:08.402704      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:09.402890      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:10.403420      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:11.403520      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:12.403632      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:13.403809      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:14.404708      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:15.405621      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:16.405823      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:17.406005      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:18.406453      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:19.406557      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:20.407376      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:21.407484      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:22.407576      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:23.407766      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:24.408000      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:25.408121      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:26.408770      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:27.408868      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:28.409738      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:29.409819      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:30.410493      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:31.410573      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:32.410902      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:33.411682      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:34.411766      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:35.411994      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:36.412777      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:37.412961      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:38.413158      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:39.413351      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:40.414234      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:41.414325      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:42.414710      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:43.417608      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:44.418568      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:45.419426      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:46.419516      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:47.419699      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:48.420179      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:49.420263      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:50.421193      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:51.422141      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:52.422865      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:53.423064      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:54.423764      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:55.423897      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:56.424748      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:57.424842      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:58.424945      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:20:59.425202      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:00.426069      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:01.426894      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:02.426997      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:03.427460      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:04.427702      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:05.427814      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:06.427907      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:07.428004      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:08.428883      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:09.429002      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:10.429973      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:11.430063      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:12.430870      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:13.430951      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:14.431507      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:15.431574      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:16.431661      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:17.432354      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:18.433109      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:19.433337      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:20.434057      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:21.434153      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:22.434242      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:23.434916      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:24.435828      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:25.436214      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:26.436808      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:27.437005      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:28.437719      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:29.437827      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:30.438545      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:31.438880      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:32.439464      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:33.439613      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:34.440277      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:35.440384      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:36.441222      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:37.442182      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:38.442737      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:39.442833      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:40.443586      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:41.443782      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:42.444512      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:43.444681      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:44.445065      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:45.445181      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:46.445263      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:47.445468      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:48.446244      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:49.446883      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:50.447809      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:51.447924      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:52.447939      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:53.449913      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:54.449806      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:55.449836      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:56.450877      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:57.450970      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:58.451324      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:21:59.451915      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:00.452798      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:01.453052      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:02.453882      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:03.454073      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:04.454533      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:05.454619      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:06.455025      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:07.455133      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:08.455230      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:09.455329      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:10.455402      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:11.455504      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:12.456381      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:13.456543      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:14.457184      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:15.457294      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:16.457553      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:17.457660      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:18.458482      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:19.458559      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:20.458889      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:21.459093      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:22.460115      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:23.461078      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:24.461809      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:25.462730      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:26.463467      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:27.463824      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:28.464721      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:29.464822      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:30.465489      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:31.465585      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:32.466254      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:33.466978      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:34.467501      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:35.467626      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:36.468126      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:37.468234      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:38.468310      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:39.468635      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:40.469065      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:41.469192      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:42.469596      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:43.469780      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:44.470376      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:45.470431      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:46.470852      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:47.470981      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:48.471749      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:49.471920      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:50.472751      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:51.472865      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:52.473089      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:53.473281      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:54.473671      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:55.474693      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:56.475125      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:57.475232      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:58.475572      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:22:59.475715      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:00.476656      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:01.476780      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:02.477395      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:03.477513      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:04.477617      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:05.477823      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:06.478813      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:07.478969      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:08.479875      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:09.480062      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:10.480108      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:11.480227      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:12.480444      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:13.481031      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:14.481520      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:15.482112      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:16.482631      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:17.483277      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:18.483822      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:19.484076      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:20.484129      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:21.484326      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:22.484971      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:23.485122      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:24.485390      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:25.485483      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:26.485835      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:27.485958      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-608708c1-bc17-47f5-a5f0-37d2e7e0c6d0 off the node ip-172-31-37-214 @ 07/13/24 13:23:27.583
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-608708c1-bc17-47f5-a5f0-37d2e7e0c6d0 @ 07/13/24 13:23:27.595
  Jul 13 13:23:27.599: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8568" for this suite. @ 07/13/24 13:23:27.605
â€¢ [304.143 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 07/13/24 13:23:27.612
  Jul 13 13:23:27.612: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename discovery @ 07/13/24 13:23:27.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:23:27.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:23:27.629
  STEP: Setting up server cert @ 07/13/24 13:23:27.632
  Jul 13 13:23:27.904: INFO: Checking APIGroup: apiregistration.k8s.io
  Jul 13 13:23:27.905: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Jul 13 13:23:27.905: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Jul 13 13:23:27.905: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Jul 13 13:23:27.905: INFO: Checking APIGroup: apps
  Jul 13 13:23:27.906: INFO: PreferredVersion.GroupVersion: apps/v1
  Jul 13 13:23:27.906: INFO: Versions found [{apps/v1 v1}]
  Jul 13 13:23:27.906: INFO: apps/v1 matches apps/v1
  Jul 13 13:23:27.906: INFO: Checking APIGroup: events.k8s.io
  Jul 13 13:23:27.907: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Jul 13 13:23:27.907: INFO: Versions found [{events.k8s.io/v1 v1}]
  Jul 13 13:23:27.907: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Jul 13 13:23:27.907: INFO: Checking APIGroup: authentication.k8s.io
  Jul 13 13:23:27.908: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Jul 13 13:23:27.908: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Jul 13 13:23:27.908: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Jul 13 13:23:27.908: INFO: Checking APIGroup: authorization.k8s.io
  Jul 13 13:23:27.908: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Jul 13 13:23:27.908: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Jul 13 13:23:27.908: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Jul 13 13:23:27.908: INFO: Checking APIGroup: autoscaling
  Jul 13 13:23:27.909: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Jul 13 13:23:27.909: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Jul 13 13:23:27.909: INFO: autoscaling/v2 matches autoscaling/v2
  Jul 13 13:23:27.909: INFO: Checking APIGroup: batch
  Jul 13 13:23:27.910: INFO: PreferredVersion.GroupVersion: batch/v1
  Jul 13 13:23:27.910: INFO: Versions found [{batch/v1 v1}]
  Jul 13 13:23:27.910: INFO: batch/v1 matches batch/v1
  Jul 13 13:23:27.910: INFO: Checking APIGroup: certificates.k8s.io
  Jul 13 13:23:27.911: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Jul 13 13:23:27.911: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Jul 13 13:23:27.911: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Jul 13 13:23:27.911: INFO: Checking APIGroup: networking.k8s.io
  Jul 13 13:23:27.912: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Jul 13 13:23:27.912: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Jul 13 13:23:27.912: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Jul 13 13:23:27.912: INFO: Checking APIGroup: policy
  Jul 13 13:23:27.913: INFO: PreferredVersion.GroupVersion: policy/v1
  Jul 13 13:23:27.913: INFO: Versions found [{policy/v1 v1}]
  Jul 13 13:23:27.913: INFO: policy/v1 matches policy/v1
  Jul 13 13:23:27.913: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Jul 13 13:23:27.913: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Jul 13 13:23:27.913: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Jul 13 13:23:27.913: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Jul 13 13:23:27.914: INFO: Checking APIGroup: storage.k8s.io
  Jul 13 13:23:27.914: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Jul 13 13:23:27.914: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Jul 13 13:23:27.914: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Jul 13 13:23:27.914: INFO: Checking APIGroup: admissionregistration.k8s.io
  Jul 13 13:23:27.916: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Jul 13 13:23:27.916: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Jul 13 13:23:27.916: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Jul 13 13:23:27.916: INFO: Checking APIGroup: apiextensions.k8s.io
  Jul 13 13:23:27.917: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Jul 13 13:23:27.917: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Jul 13 13:23:27.917: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Jul 13 13:23:27.917: INFO: Checking APIGroup: scheduling.k8s.io
  Jul 13 13:23:27.918: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Jul 13 13:23:27.918: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Jul 13 13:23:27.918: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Jul 13 13:23:27.918: INFO: Checking APIGroup: coordination.k8s.io
  Jul 13 13:23:27.919: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Jul 13 13:23:27.919: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Jul 13 13:23:27.919: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Jul 13 13:23:27.919: INFO: Checking APIGroup: node.k8s.io
  Jul 13 13:23:27.920: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Jul 13 13:23:27.920: INFO: Versions found [{node.k8s.io/v1 v1}]
  Jul 13 13:23:27.920: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Jul 13 13:23:27.920: INFO: Checking APIGroup: discovery.k8s.io
  Jul 13 13:23:27.921: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Jul 13 13:23:27.921: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Jul 13 13:23:27.921: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Jul 13 13:23:27.921: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Jul 13 13:23:27.922: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  Jul 13 13:23:27.922: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  Jul 13 13:23:27.922: INFO: flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  Jul 13 13:23:27.922: INFO: Checking APIGroup: metrics.k8s.io
  Jul 13 13:23:27.923: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  Jul 13 13:23:27.923: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  Jul 13 13:23:27.923: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  Jul 13 13:23:27.923: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-6124" for this suite. @ 07/13/24 13:23:27.927
â€¢ [0.321 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 07/13/24 13:23:27.933
  Jul 13 13:23:27.933: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename configmap @ 07/13/24 13:23:27.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:23:27.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:23:27.951
  STEP: Creating configMap with name configmap-test-volume-ea593ba3-f852-4afb-9329-0f78b62568ed @ 07/13/24 13:23:27.953
  STEP: Creating a pod to test consume configMaps @ 07/13/24 13:23:27.957
  E0713 13:23:28.486221      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:29.486346      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:30.486456      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:31.486524      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/13/24 13:23:31.978
  Jul 13 13:23:31.981: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-configmaps-8e7d521e-774d-48ff-98d8-d72d6b0edc60 container configmap-volume-test: <nil>
  STEP: delete the pod @ 07/13/24 13:23:31.997
  Jul 13 13:23:32.015: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7755" for this suite. @ 07/13/24 13:23:32.019
â€¢ [4.092 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 07/13/24 13:23:32.025
  Jul 13 13:23:32.025: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename services @ 07/13/24 13:23:32.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:23:32.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:23:32.043
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-2908 @ 07/13/24 13:23:32.046
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 07/13/24 13:23:32.063
  STEP: creating service externalsvc in namespace services-2908 @ 07/13/24 13:23:32.063
  STEP: creating replication controller externalsvc in namespace services-2908 @ 07/13/24 13:23:32.084
  I0713 13:23:32.091017      20 runners.go:197] Created replication controller with name: externalsvc, namespace: services-2908, replica count: 2
  E0713 13:23:32.486971      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:33.487019      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:34.487925      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0713 13:23:35.141817      20 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 07/13/24 13:23:35.145
  Jul 13 13:23:35.165: INFO: Creating new exec pod
  E0713 13:23:35.488678      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:36.488882      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:23:37.180: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-2908 exec execpod9xbp7 -- /bin/sh -x -c nslookup nodeport-service.services-2908.svc.cluster.local'
  Jul 13 13:23:37.297: INFO: stderr: "+ nslookup nodeport-service.services-2908.svc.cluster.local\n"
  Jul 13 13:23:37.297: INFO: stdout: "Server:\t\t10.152.183.143\nAddress:\t10.152.183.143#53\n\nnodeport-service.services-2908.svc.cluster.local\tcanonical name = externalsvc.services-2908.svc.cluster.local.\nName:\texternalsvc.services-2908.svc.cluster.local\nAddress: 10.152.183.236\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-2908, will wait for the garbage collector to delete the pods @ 07/13/24 13:23:37.297
  Jul 13 13:23:37.360: INFO: Deleting ReplicationController externalsvc took: 10.061008ms
  Jul 13 13:23:37.461: INFO: Terminating ReplicationController externalsvc pods took: 100.701286ms
  E0713 13:23:37.489315      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:38.490179      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:39.491136      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:23:40.184: INFO: Cleaning up the NodePort to ExternalName test service
  Jul 13 13:23:40.197: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2908" for this suite. @ 07/13/24 13:23:40.202
â€¢ [8.183 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 07/13/24 13:23:40.209
  Jul 13 13:23:40.209: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename daemonsets @ 07/13/24 13:23:40.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:23:40.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:23:40.227
  STEP: Creating simple DaemonSet "daemon-set" @ 07/13/24 13:23:40.251
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/13/24 13:23:40.255
  Jul 13 13:23:40.258: INFO: DaemonSet pods can't tolerate node ip-172-31-73-21 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 13:23:40.258: INFO: DaemonSet pods can't tolerate node ip-172-31-93-88 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 13:23:40.261: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 13 13:23:40.261: INFO: Node ip-172-31-15-91 is running 0 daemon pod, expected 1
  E0713 13:23:40.491978      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:23:41.260: INFO: DaemonSet pods can't tolerate node ip-172-31-73-21 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 13:23:41.260: INFO: DaemonSet pods can't tolerate node ip-172-31-93-88 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 13:23:41.264: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jul 13 13:23:41.264: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 07/13/24 13:23:41.267
  Jul 13 13:23:41.270: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 07/13/24 13:23:41.27
  Jul 13 13:23:41.279: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 07/13/24 13:23:41.279
  Jul 13 13:23:41.281: INFO: Observed &DaemonSet event: ADDED
  Jul 13 13:23:41.281: INFO: Observed &DaemonSet event: MODIFIED
  Jul 13 13:23:41.281: INFO: Observed &DaemonSet event: MODIFIED
  Jul 13 13:23:41.281: INFO: Observed &DaemonSet event: MODIFIED
  Jul 13 13:23:41.281: INFO: Observed &DaemonSet event: MODIFIED
  Jul 13 13:23:41.281: INFO: Observed &DaemonSet event: MODIFIED
  Jul 13 13:23:41.281: INFO: Found daemon set daemon-set in namespace daemonsets-8123 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jul 13 13:23:41.281: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 07/13/24 13:23:41.282
  STEP: watching for the daemon set status to be patched @ 07/13/24 13:23:41.289
  Jul 13 13:23:41.290: INFO: Observed &DaemonSet event: ADDED
  Jul 13 13:23:41.290: INFO: Observed &DaemonSet event: MODIFIED
  Jul 13 13:23:41.290: INFO: Observed &DaemonSet event: MODIFIED
  Jul 13 13:23:41.291: INFO: Observed &DaemonSet event: MODIFIED
  Jul 13 13:23:41.291: INFO: Observed &DaemonSet event: MODIFIED
  Jul 13 13:23:41.291: INFO: Observed &DaemonSet event: MODIFIED
  Jul 13 13:23:41.291: INFO: Observed daemon set daemon-set in namespace daemonsets-8123 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jul 13 13:23:41.291: INFO: Observed &DaemonSet event: MODIFIED
  Jul 13 13:23:41.291: INFO: Found daemon set daemon-set in namespace daemonsets-8123 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Jul 13 13:23:41.291: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 07/13/24 13:23:41.295
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8123, will wait for the garbage collector to delete the pods @ 07/13/24 13:23:41.295
  Jul 13 13:23:41.356: INFO: Deleting DaemonSet.extensions daemon-set took: 6.399406ms
  Jul 13 13:23:41.457: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.753678ms
  E0713 13:23:41.492562      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:42.493338      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:23:43.261: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 13 13:23:43.261: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jul 13 13:23:43.264: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"30613"},"items":null}

  Jul 13 13:23:43.269: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"30613"},"items":null}

  Jul 13 13:23:43.282: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8123" for this suite. @ 07/13/24 13:23:43.284
â€¢ [3.084 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 07/13/24 13:23:43.292
  Jul 13 13:23:43.292: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename runtimeclass @ 07/13/24 13:23:43.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:23:43.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:23:43.304
  Jul 13 13:23:43.313: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9170" for this suite. @ 07/13/24 13:23:43.316
â€¢ [0.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 07/13/24 13:23:43.323
  Jul 13 13:23:43.323: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename controllerrevisions @ 07/13/24 13:23:43.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:23:43.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:23:43.338
  STEP: Creating DaemonSet "e2e-pfq62-daemon-set" @ 07/13/24 13:23:43.358
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/13/24 13:23:43.365
  Jul 13 13:23:43.370: INFO: DaemonSet pods can't tolerate node ip-172-31-73-21 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 13:23:43.370: INFO: DaemonSet pods can't tolerate node ip-172-31-93-88 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 13:23:43.372: INFO: Number of nodes with available pods controlled by daemonset e2e-pfq62-daemon-set: 0
  Jul 13 13:23:43.372: INFO: Node ip-172-31-15-91 is running 0 daemon pod, expected 1
  E0713 13:23:43.493938      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:23:44.371: INFO: DaemonSet pods can't tolerate node ip-172-31-73-21 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 13:23:44.371: INFO: DaemonSet pods can't tolerate node ip-172-31-93-88 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 13:23:44.373: INFO: Number of nodes with available pods controlled by daemonset e2e-pfq62-daemon-set: 3
  Jul 13 13:23:44.373: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-pfq62-daemon-set
  STEP: Confirm DaemonSet "e2e-pfq62-daemon-set" successfully created with "daemonset-name=e2e-pfq62-daemon-set" label @ 07/13/24 13:23:44.377
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-pfq62-daemon-set" @ 07/13/24 13:23:44.382
  Jul 13 13:23:44.386: INFO: Located ControllerRevision: "e2e-pfq62-daemon-set-58b565f958"
  STEP: Patching ControllerRevision "e2e-pfq62-daemon-set-58b565f958" @ 07/13/24 13:23:44.388
  Jul 13 13:23:44.393: INFO: e2e-pfq62-daemon-set-58b565f958 has been patched
  STEP: Create a new ControllerRevision @ 07/13/24 13:23:44.393
  Jul 13 13:23:44.400: INFO: Created ControllerRevision: e2e-pfq62-daemon-set-7f6bdc689b
  STEP: Confirm that there are two ControllerRevisions @ 07/13/24 13:23:44.4
  Jul 13 13:23:44.400: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jul 13 13:23:44.403: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-pfq62-daemon-set-58b565f958" @ 07/13/24 13:23:44.403
  STEP: Confirm that there is only one ControllerRevision @ 07/13/24 13:23:44.409
  Jul 13 13:23:44.409: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jul 13 13:23:44.411: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-pfq62-daemon-set-7f6bdc689b" @ 07/13/24 13:23:44.417
  Jul 13 13:23:44.424: INFO: e2e-pfq62-daemon-set-7f6bdc689b has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 07/13/24 13:23:44.424
  W0713 13:23:44.432010      20 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 07/13/24 13:23:44.432
  Jul 13 13:23:44.432: INFO: Requesting list of ControllerRevisions to confirm quantity
  E0713 13:23:44.494168      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:23:45.432: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jul 13 13:23:45.438: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-pfq62-daemon-set-7f6bdc689b=updated" @ 07/13/24 13:23:45.438
  STEP: Confirm that there is only one ControllerRevision @ 07/13/24 13:23:45.445
  Jul 13 13:23:45.445: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jul 13 13:23:45.448: INFO: Found 1 ControllerRevisions
  Jul 13 13:23:45.452: INFO: ControllerRevision "e2e-pfq62-daemon-set-6677c95fcc" has revision 3
  STEP: Deleting DaemonSet "e2e-pfq62-daemon-set" @ 07/13/24 13:23:45.455
  STEP: deleting DaemonSet.extensions e2e-pfq62-daemon-set in namespace controllerrevisions-8379, will wait for the garbage collector to delete the pods @ 07/13/24 13:23:45.455
  E0713 13:23:45.494551      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:23:45.515: INFO: Deleting DaemonSet.extensions e2e-pfq62-daemon-set took: 5.390699ms
  Jul 13 13:23:45.616: INFO: Terminating DaemonSet.extensions e2e-pfq62-daemon-set pods took: 100.948463ms
  E0713 13:23:46.495241      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:23:47.220: INFO: Number of nodes with available pods controlled by daemonset e2e-pfq62-daemon-set: 0
  Jul 13 13:23:47.220: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-pfq62-daemon-set
  Jul 13 13:23:47.223: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"30753"},"items":null}

  Jul 13 13:23:47.227: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"30753"},"items":null}

  Jul 13 13:23:47.238: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-8379" for this suite. @ 07/13/24 13:23:47.242
â€¢ [3.924 seconds]
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 07/13/24 13:23:47.248
  Jul 13 13:23:47.248: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename replication-controller @ 07/13/24 13:23:47.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:23:47.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:23:47.263
  STEP: Given a ReplicationController is created @ 07/13/24 13:23:47.265
  STEP: When the matched label of one of its pods change @ 07/13/24 13:23:47.271
  Jul 13 13:23:47.274: INFO: Pod name pod-release: Found 0 pods out of 1
  E0713 13:23:47.495516      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:48.495678      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:49.495780      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:50.495890      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:51.495975      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:23:52.280: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 07/13/24 13:23:52.29
  E0713 13:23:52.496507      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:23:53.302: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6408" for this suite. @ 07/13/24 13:23:53.305
â€¢ [6.064 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 07/13/24 13:23:53.311
  Jul 13 13:23:53.311: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/13/24 13:23:53.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:23:53.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:23:53.328
  Jul 13 13:23:53.330: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  E0713 13:23:53.497178      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:54.498126      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 07/13/24 13:23:54.551
  Jul 13 13:23:54.551: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=crd-publish-openapi-6786 --namespace=crd-publish-openapi-6786 create -f -'
  E0713 13:23:55.498499      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:23:56.498582      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:23:56.611: INFO: stderr: ""
  Jul 13 13:23:56.611: INFO: stdout: "e2e-test-crd-publish-openapi-3306-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Jul 13 13:23:56.611: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=crd-publish-openapi-6786 --namespace=crd-publish-openapi-6786 delete e2e-test-crd-publish-openapi-3306-crds test-foo'
  Jul 13 13:23:56.671: INFO: stderr: ""
  Jul 13 13:23:56.671: INFO: stdout: "e2e-test-crd-publish-openapi-3306-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Jul 13 13:23:56.671: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=crd-publish-openapi-6786 --namespace=crd-publish-openapi-6786 apply -f -'
  Jul 13 13:23:56.724: INFO: stderr: ""
  Jul 13 13:23:56.724: INFO: stdout: "e2e-test-crd-publish-openapi-3306-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Jul 13 13:23:56.724: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=crd-publish-openapi-6786 --namespace=crd-publish-openapi-6786 delete e2e-test-crd-publish-openapi-3306-crds test-foo'
  Jul 13 13:23:56.771: INFO: stderr: ""
  Jul 13 13:23:56.771: INFO: stdout: "e2e-test-crd-publish-openapi-3306-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 07/13/24 13:23:56.771
  Jul 13 13:23:56.771: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=crd-publish-openapi-6786 --namespace=crd-publish-openapi-6786 create -f -'
  Jul 13 13:23:56.812: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 07/13/24 13:23:56.812
  Jul 13 13:23:56.812: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=crd-publish-openapi-6786 --namespace=crd-publish-openapi-6786 create -f -'
  Jul 13 13:23:56.852: INFO: rc: 1
  Jul 13 13:23:56.852: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=crd-publish-openapi-6786 --namespace=crd-publish-openapi-6786 apply -f -'
  Jul 13 13:23:56.898: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 07/13/24 13:23:56.898
  Jul 13 13:23:56.898: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=crd-publish-openapi-6786 --namespace=crd-publish-openapi-6786 create -f -'
  Jul 13 13:23:56.937: INFO: rc: 1
  Jul 13 13:23:56.938: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=crd-publish-openapi-6786 --namespace=crd-publish-openapi-6786 apply -f -'
  Jul 13 13:23:56.985: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 07/13/24 13:23:56.985
  Jul 13 13:23:56.985: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=crd-publish-openapi-6786 explain e2e-test-crd-publish-openapi-3306-crds'
  Jul 13 13:23:57.024: INFO: stderr: ""
  Jul 13 13:23:57.024: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3306-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 07/13/24 13:23:57.024
  Jul 13 13:23:57.024: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=crd-publish-openapi-6786 explain e2e-test-crd-publish-openapi-3306-crds.metadata'
  Jul 13 13:23:57.063: INFO: stderr: ""
  Jul 13 13:23:57.063: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3306-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Jul 13 13:23:57.063: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=crd-publish-openapi-6786 explain e2e-test-crd-publish-openapi-3306-crds.spec'
  Jul 13 13:23:57.102: INFO: stderr: ""
  Jul 13 13:23:57.102: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3306-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Jul 13 13:23:57.102: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=crd-publish-openapi-6786 explain e2e-test-crd-publish-openapi-3306-crds.spec.bars'
  Jul 13 13:23:57.141: INFO: stderr: ""
  Jul 13 13:23:57.141: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3306-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 07/13/24 13:23:57.141
  Jul 13 13:23:57.141: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=crd-publish-openapi-6786 explain e2e-test-crd-publish-openapi-3306-crds.spec.bars2'
  Jul 13 13:23:57.179: INFO: rc: 1
  E0713 13:23:57.499170      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:23:58.452: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6786" for this suite. @ 07/13/24 13:23:58.46
â€¢ [5.157 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 07/13/24 13:23:58.469
  Jul 13 13:23:58.469: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename gc @ 07/13/24 13:23:58.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:23:58.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:23:58.487
  E0713 13:23:58.499929      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:23:58.523: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"ea3f1dc3-1aa2-4184-b8de-735778ab1c6c", Controller:(*bool)(0xc004ea4a56), BlockOwnerDeletion:(*bool)(0xc004ea4a57)}}
  Jul 13 13:23:58.535: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"f10568b5-ab2c-490e-ae59-f33266b6b917", Controller:(*bool)(0xc004ea4c86), BlockOwnerDeletion:(*bool)(0xc004ea4c87)}}
  Jul 13 13:23:58.544: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"ebdd3d41-979f-4718-bbbc-5ac5c5fbeac6", Controller:(*bool)(0xc004ea4ec6), BlockOwnerDeletion:(*bool)(0xc004ea4ec7)}}
  E0713 13:23:59.500105      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:00.500222      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:01.500905      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:02.501014      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:03.501286      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:24:03.558: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5187" for this suite. @ 07/13/24 13:24:03.561
â€¢ [5.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 07/13/24 13:24:03.57
  Jul 13 13:24:03.570: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename projected @ 07/13/24 13:24:03.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:24:03.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:24:03.587
  STEP: Creating a pod to test downward API volume plugin @ 07/13/24 13:24:03.589
  E0713 13:24:04.501914      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:05.502014      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:06.502914      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:07.502982      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/13/24 13:24:07.609
  Jul 13 13:24:07.614: INFO: Trying to get logs from node ip-172-31-37-214 pod downwardapi-volume-19587d8a-8453-44f7-9112-3016880a4652 container client-container: <nil>
  STEP: delete the pod @ 07/13/24 13:24:07.621
  Jul 13 13:24:07.635: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4600" for this suite. @ 07/13/24 13:24:07.637
â€¢ [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 07/13/24 13:24:07.645
  Jul 13 13:24:07.645: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename init-container @ 07/13/24 13:24:07.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:24:07.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:24:07.664
  STEP: creating the pod @ 07/13/24 13:24:07.666
  Jul 13 13:24:07.666: INFO: PodSpec: initContainers in spec.initContainers
  E0713 13:24:08.503902      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:09.504272      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:10.505223      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:24:11.191: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9155" for this suite. @ 07/13/24 13:24:11.194
â€¢ [3.555 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:887
  STEP: Creating a kubernetes client @ 07/13/24 13:24:11.2
  Jul 13 13:24:11.200: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename kubectl @ 07/13/24 13:24:11.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:24:11.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:24:11.22
  STEP: validating api versions @ 07/13/24 13:24:11.222
  Jul 13 13:24:11.222: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-9371 api-versions'
  Jul 13 13:24:11.263: INFO: stderr: ""
  Jul 13 13:24:11.263: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Jul 13 13:24:11.263: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9371" for this suite. @ 07/13/24 13:24:11.267
â€¢ [0.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:530
  STEP: Creating a kubernetes client @ 07/13/24 13:24:11.277
  Jul 13 13:24:11.277: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename security-context-test @ 07/13/24 13:24:11.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:24:11.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:24:11.295
  E0713 13:24:11.505737      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:12.505825      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:24:13.332: INFO: Got logs for pod "busybox-privileged-false-d19c9b56-4b0a-4986-9971-304333f1b6ad": "ip: RTNETLINK answers: Operation not permitted\n"
  Jul 13 13:24:13.332: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8432" for this suite. @ 07/13/24 13:24:13.336
â€¢ [2.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 07/13/24 13:24:13.342
  Jul 13 13:24:13.342: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename pods @ 07/13/24 13:24:13.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:24:13.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:24:13.363
  STEP: creating a Pod with a static label @ 07/13/24 13:24:13.369
  STEP: watching for Pod to be ready @ 07/13/24 13:24:13.379
  Jul 13 13:24:13.380: INFO: observed Pod pod-test in namespace pods-3576 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Jul 13 13:24:13.382: INFO: observed Pod pod-test in namespace pods-3576 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-13 13:24:13 +0000 UTC  }]
  Jul 13 13:24:13.394: INFO: observed Pod pod-test in namespace pods-3576 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-07-13 13:24:13 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-13 13:24:13 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-13 13:24:13 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-13 13:24:13 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-13 13:24:13 +0000 UTC  }]
  E0713 13:24:13.506144      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:24:14.006: INFO: Found Pod pod-test in namespace pods-3576 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-07-13 13:24:13 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-13 13:24:13 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-07-13 13:24:13 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-07-13 13:24:13 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-13 13:24:13 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 07/13/24 13:24:14.011
  STEP: getting the Pod and ensuring that it's patched @ 07/13/24 13:24:14.025
  STEP: replacing the Pod's status Ready condition to False @ 07/13/24 13:24:14.027
  STEP: check the Pod again to ensure its Ready conditions are False @ 07/13/24 13:24:14.039
  STEP: deleting the Pod via a Collection with a LabelSelector @ 07/13/24 13:24:14.039
  STEP: watching for the Pod to be deleted @ 07/13/24 13:24:14.048
  Jul 13 13:24:14.049: INFO: observed event type MODIFIED
  E0713 13:24:14.507188      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:15.507295      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:24:16.014: INFO: observed event type MODIFIED
  Jul 13 13:24:16.163: INFO: observed event type MODIFIED
  E0713 13:24:16.507882      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:24:17.014: INFO: observed event type MODIFIED
  Jul 13 13:24:17.031: INFO: observed event type MODIFIED
  Jul 13 13:24:17.037: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3576" for this suite. @ 07/13/24 13:24:17.04
â€¢ [3.703 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 07/13/24 13:24:17.046
  Jul 13 13:24:17.046: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename events @ 07/13/24 13:24:17.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:24:17.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:24:17.062
  STEP: creating a test event @ 07/13/24 13:24:17.065
  STEP: listing events in all namespaces @ 07/13/24 13:24:17.069
  STEP: listing events in test namespace @ 07/13/24 13:24:17.073
  STEP: listing events with field selection filtering on source @ 07/13/24 13:24:17.075
  STEP: listing events with field selection filtering on reportingController @ 07/13/24 13:24:17.079
  STEP: getting the test event @ 07/13/24 13:24:17.081
  STEP: patching the test event @ 07/13/24 13:24:17.085
  STEP: getting the test event @ 07/13/24 13:24:17.092
  STEP: updating the test event @ 07/13/24 13:24:17.096
  STEP: getting the test event @ 07/13/24 13:24:17.103
  STEP: deleting the test event @ 07/13/24 13:24:17.107
  STEP: listing events in all namespaces @ 07/13/24 13:24:17.114
  STEP: listing events in test namespace @ 07/13/24 13:24:17.117
  Jul 13 13:24:17.119: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3723" for this suite. @ 07/13/24 13:24:17.123
â€¢ [0.083 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3338
  STEP: Creating a kubernetes client @ 07/13/24 13:24:17.13
  Jul 13 13:24:17.130: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename services @ 07/13/24 13:24:17.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:24:17.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:24:17.155
  STEP: creating a Service @ 07/13/24 13:24:17.165
  STEP: watching for the Service to be added @ 07/13/24 13:24:17.185
  Jul 13 13:24:17.187: INFO: Found Service test-service-pk2lf in namespace services-94 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 32723}]
  Jul 13 13:24:17.187: INFO: Service test-service-pk2lf created
  STEP: Getting /status @ 07/13/24 13:24:17.187
  Jul 13 13:24:17.196: INFO: Service test-service-pk2lf has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 07/13/24 13:24:17.196
  STEP: watching for the Service to be patched @ 07/13/24 13:24:17.203
  Jul 13 13:24:17.205: INFO: observed Service test-service-pk2lf in namespace services-94 with annotations: map[] & LoadBalancer: {[]}
  Jul 13 13:24:17.205: INFO: Found Service test-service-pk2lf in namespace services-94 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  <nil> []}]}
  Jul 13 13:24:17.205: INFO: Service test-service-pk2lf has service status patched
  STEP: updating the ServiceStatus @ 07/13/24 13:24:17.205
  Jul 13 13:24:17.221: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 07/13/24 13:24:17.221
  Jul 13 13:24:17.223: INFO: Observed Service test-service-pk2lf in namespace services-94 with annotations: map[] & Conditions: {[]}
  Jul 13 13:24:17.223: INFO: Observed event: &Service{ObjectMeta:{test-service-pk2lf  services-94  5d223593-622b-4244-ab4a-48030eeb310d 31165 0 2024-07-13 13:24:17 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-07-13 13:24:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-07-13 13:24:17 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:32723,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.152.183.71,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.152.183.71],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:nil,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Jul 13 13:24:17.223: INFO: Found Service test-service-pk2lf in namespace services-94 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jul 13 13:24:17.223: INFO: Service test-service-pk2lf has service status updated
  STEP: patching the service @ 07/13/24 13:24:17.223
  STEP: watching for the Service to be patched @ 07/13/24 13:24:17.246
  Jul 13 13:24:17.248: INFO: observed Service test-service-pk2lf in namespace services-94 with labels: map[test-service-static:true]
  Jul 13 13:24:17.248: INFO: observed Service test-service-pk2lf in namespace services-94 with labels: map[test-service-static:true]
  Jul 13 13:24:17.248: INFO: observed Service test-service-pk2lf in namespace services-94 with labels: map[test-service-static:true]
  Jul 13 13:24:17.248: INFO: Found Service test-service-pk2lf in namespace services-94 with labels: map[test-service:patched test-service-static:true]
  Jul 13 13:24:17.248: INFO: Service test-service-pk2lf patched
  STEP: deleting the service @ 07/13/24 13:24:17.248
  STEP: watching for the Service to be deleted @ 07/13/24 13:24:17.267
  Jul 13 13:24:17.269: INFO: Observed event: ADDED
  Jul 13 13:24:17.269: INFO: Observed event: MODIFIED
  Jul 13 13:24:17.269: INFO: Observed event: MODIFIED
  Jul 13 13:24:17.269: INFO: Observed event: MODIFIED
  Jul 13 13:24:17.269: INFO: Found Service test-service-pk2lf in namespace services-94 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Jul 13 13:24:17.269: INFO: Service test-service-pk2lf deleted
  Jul 13 13:24:17.269: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-94" for this suite. @ 07/13/24 13:24:17.273
â€¢ [0.148 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 07/13/24 13:24:17.278
  Jul 13 13:24:17.278: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename services @ 07/13/24 13:24:17.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:24:17.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:24:17.293
  STEP: creating service endpoint-test2 in namespace services-5310 @ 07/13/24 13:24:17.296
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5310 to expose endpoints map[] @ 07/13/24 13:24:17.305
  Jul 13 13:24:17.313: INFO: successfully validated that service endpoint-test2 in namespace services-5310 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-5310 @ 07/13/24 13:24:17.313
  E0713 13:24:17.508692      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:18.509711      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5310 to expose endpoints map[pod1:[80]] @ 07/13/24 13:24:19.335
  Jul 13 13:24:19.345: INFO: successfully validated that service endpoint-test2 in namespace services-5310 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 07/13/24 13:24:19.345
  Jul 13 13:24:19.345: INFO: Creating new exec pod
  E0713 13:24:19.510454      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:20.510641      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:21.511191      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:24:22.368: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-5310 exec execpodhxg6j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jul 13 13:24:22.469: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jul 13 13:24:22.469: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 13 13:24:22.469: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-5310 exec execpodhxg6j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.243 80'
  E0713 13:24:22.512217      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:24:22.559: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.243 80\nConnection to 10.152.183.243 80 port [tcp/http] succeeded!\n"
  Jul 13 13:24:22.559: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-5310 @ 07/13/24 13:24:22.559
  E0713 13:24:23.512826      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:24.512989      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5310 to expose endpoints map[pod1:[80] pod2:[80]] @ 07/13/24 13:24:24.579
  Jul 13 13:24:24.594: INFO: successfully validated that service endpoint-test2 in namespace services-5310 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 07/13/24 13:24:24.594
  E0713 13:24:25.513107      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:24:25.595: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-5310 exec execpodhxg6j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jul 13 13:24:25.694: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jul 13 13:24:25.694: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 13 13:24:25.694: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-5310 exec execpodhxg6j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.243 80'
  Jul 13 13:24:25.780: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.243 80\nConnection to 10.152.183.243 80 port [tcp/http] succeeded!\n"
  Jul 13 13:24:25.780: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-5310 @ 07/13/24 13:24:25.78
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5310 to expose endpoints map[pod2:[80]] @ 07/13/24 13:24:25.795
  Jul 13 13:24:25.809: INFO: successfully validated that service endpoint-test2 in namespace services-5310 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 07/13/24 13:24:25.809
  E0713 13:24:26.513263      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:24:26.810: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-5310 exec execpodhxg6j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jul 13 13:24:26.914: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jul 13 13:24:26.914: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 13 13:24:26.914: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-5310 exec execpodhxg6j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.243 80'
  Jul 13 13:24:27.025: INFO: stderr: "+ nc -v -t -w 2 10.152.183.243 80\n+ echo hostName\nConnection to 10.152.183.243 80 port [tcp/http] succeeded!\n"
  Jul 13 13:24:27.025: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-5310 @ 07/13/24 13:24:27.025
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5310 to expose endpoints map[] @ 07/13/24 13:24:27.038
  Jul 13 13:24:27.047: INFO: successfully validated that service endpoint-test2 in namespace services-5310 exposes endpoints map[]
  Jul 13 13:24:27.070: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5310" for this suite. @ 07/13/24 13:24:27.074
â€¢ [9.802 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 07/13/24 13:24:27.08
  Jul 13 13:24:27.080: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename runtimeclass @ 07/13/24 13:24:27.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:24:27.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:24:27.095
  Jul 13 13:24:27.121: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2335" for this suite. @ 07/13/24 13:24:27.126
â€¢ [0.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 07/13/24 13:24:27.136
  Jul 13 13:24:27.136: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename namespaces @ 07/13/24 13:24:27.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:24:27.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:24:27.149
  STEP: Creating namespace "e2e-ns-6t8k5" @ 07/13/24 13:24:27.152
  Jul 13 13:24:27.164: INFO: Namespace "e2e-ns-6t8k5-1264" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-6t8k5-1264" @ 07/13/24 13:24:27.164
  Jul 13 13:24:27.173: INFO: Namespace "e2e-ns-6t8k5-1264" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-6t8k5-1264" @ 07/13/24 13:24:27.173
  Jul 13 13:24:27.181: INFO: Namespace "e2e-ns-6t8k5-1264" has []v1.FinalizerName{"kubernetes"}
  Jul 13 13:24:27.181: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4819" for this suite. @ 07/13/24 13:24:27.183
  STEP: Destroying namespace "e2e-ns-6t8k5-1264" for this suite. @ 07/13/24 13:24:27.193
â€¢ [0.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 07/13/24 13:24:27.201
  Jul 13 13:24:27.202: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename deployment @ 07/13/24 13:24:27.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:24:27.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:24:27.225
  Jul 13 13:24:27.235: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  E0713 13:24:27.513986      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:28.514417      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:29.514526      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:30.515521      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:31.516253      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:24:32.241: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/13/24 13:24:32.241
  Jul 13 13:24:32.241: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 07/13/24 13:24:32.253
  Jul 13 13:24:32.269: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4110",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "52d7e663-9ada-44b0-b367-3aa9b666edb2",
      ResourceVersion: (string) (len=5) "31377",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856473872,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856473872,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jul 13 13:24:32.278: INFO: New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  Jul 13 13:24:32.278: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Jul 13 13:24:32.278: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4110",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c8d32ba0-7420-4716-82a7-a85b62713c4f",
      ResourceVersion: (string) (len=5) "31382",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856473867,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "52d7e663-9ada-44b0-b367-3aa9b666edb2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856473867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856473868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856473872,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 35 32 64 37 65 36 36  |"uid\":\"52d7e66|
              00000040  33 2d 39 61 64 61 2d 34  34 62 30 2d 62 33 36 37  |3-9ada-44b0-b367|
              00000050  2d 33 61 61 39 62 36 36  36 65 64 62 32 5c 22 7d  |-3aa9b666edb2\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul 13 13:24:32.289: INFO: Pod "test-cleanup-controller-tkkwr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-tkkwr",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-4110",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d0afbec0-e58a-42f6-90ae-e4a6161c42f0",
      ResourceVersion: (string) (len=5) "31350",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856473867,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "c8d32ba0-7420-4716-82a7-a85b62713c4f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856473867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  63 38 64 33 32 62 61 30  |uid\":\"c8d32ba0|
              00000080  2d 37 34 32 30 2d 34 37  31 36 2d 38 32 61 37 2d  |-7420-4716-82a7-|
              00000090  61 38 35 62 36 32 37 31  33 63 34 66 5c 22 7d 22  |a85b62713c4f\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856473868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 36 37  2e 31 38 32 5c 22 7d 22  |2.168.67.182\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-srv8h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-srv8h",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-89-122",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856473868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856473867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856473868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856473868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856473867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.89.122",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.89.122"
        }
      },
      PodIP: (string) (len=14) "192.168.67.182",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.67.182"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856473867,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63856473867,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d6ee7daab383cadcbd95faa5cb5346feb853ab87664e5eea7f9869c7018c37eb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 13 13:24:32.291: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4110" for this suite. @ 07/13/24 13:24:32.299
â€¢ [5.112 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 07/13/24 13:24:32.314
  Jul 13 13:24:32.314: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename var-expansion @ 07/13/24 13:24:32.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:24:32.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:24:32.339
  E0713 13:24:32.516743      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:33.516955      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:24:34.368: INFO: Deleting pod "var-expansion-c789f2ce-6784-4310-9562-b07532f728ea" in namespace "var-expansion-4179"
  Jul 13 13:24:34.376: INFO: Wait up to 5m0s for pod "var-expansion-c789f2ce-6784-4310-9562-b07532f728ea" to be fully deleted
  E0713 13:24:34.517838      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:35.518521      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:24:36.386: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4179" for this suite. @ 07/13/24 13:24:36.389
â€¢ [4.081 seconds]
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:169
  STEP: Creating a kubernetes client @ 07/13/24 13:24:36.394
  Jul 13 13:24:36.394: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/13/24 13:24:36.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:24:36.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:24:36.41
  STEP: create the container to handle the HTTPGet hook request. @ 07/13/24 13:24:36.415
  E0713 13:24:36.518842      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:37.519009      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 07/13/24 13:24:38.437
  E0713 13:24:38.519198      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:39.519290      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 07/13/24 13:24:40.456
  STEP: delete the pod with lifecycle hook @ 07/13/24 13:24:40.462
  E0713 13:24:40.519662      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:41.520146      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:24:42.478: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6616" for this suite. @ 07/13/24 13:24:42.482
â€¢ [6.094 seconds]
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 07/13/24 13:24:42.489
  Jul 13 13:24:42.489: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename taint-multiple-pods @ 07/13/24 13:24:42.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:24:42.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:24:42.505
  Jul 13 13:24:42.508: INFO: Waiting up to 1m0s for all nodes to be ready
  E0713 13:24:42.520211      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:43.520375      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:44.521214      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:45.521348      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:46.522262      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:47.522379      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:48.522780      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:49.522915      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:50.523672      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:51.523850      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:52.524486      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:53.524642      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:54.525340      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:55.525494      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:56.526110      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:57.526246      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:58.526707      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:24:59.526843      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:00.527485      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:01.527629      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:02.530280      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:03.530297      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:04.530548      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:05.530663      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:06.530857      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:07.531064      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:08.531548      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:09.532473      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:10.532895      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:11.533660      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:12.533661      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:13.533819      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:14.534587      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:15.534694      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:16.534983      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:17.535214      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:18.536134      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:19.536405      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:20.537027      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:21.537214      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:22.537595      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:23.537835      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:24.538744      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:25.538963      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:26.539925      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:27.540063      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:28.540769      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:29.541747      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:30.541848      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:31.541980      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:32.542841      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:33.543299      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:34.544062      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:35.544203      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:36.545017      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:37.545180      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:38.545552      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:39.545764      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:40.546622      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:41.547246      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:25:42.508: INFO: Waiting for terminating namespaces to be deleted...
  Jul 13 13:25:42.513: INFO: Starting informer...
  STEP: Starting pods... @ 07/13/24 13:25:42.513
  E0713 13:25:42.548181      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:25:42.731: INFO: Pod1 is running on ip-172-31-37-214. Tainting Node
  E0713 13:25:43.548900      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:44.548949      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:25:44.951: INFO: Pod2 is running on ip-172-31-37-214. Tainting Node
  STEP: Trying to apply a taint on the Node @ 07/13/24 13:25:44.951
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/13/24 13:25:44.959
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 07/13/24 13:25:44.962
  E0713 13:25:45.549410      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:46.549521      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:47.549741      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:48.549846      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:49.549948      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:25:50.385: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  E0713 13:25:50.550876      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:51.551135      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:52.551209      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:53.551311      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:54.551681      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:55.552477      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:56.552568      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:57.552754      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:58.552959      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:25:59.553111      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:26:00.553203      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:26:01.553478      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:26:02.553764      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:26:03.553816      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:26:04.554054      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:26:05.554146      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:26:06.554243      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:26:07.554927      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:26:08.555130      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:26:09.555294      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:26:10.411: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/13/24 13:26:10.42
  Jul 13 13:26:10.423: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-4705" for this suite. @ 07/13/24 13:26:10.428
â€¢ [87.948 seconds]
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 07/13/24 13:26:10.436
  Jul 13 13:26:10.436: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename downward-api @ 07/13/24 13:26:10.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:26:10.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:26:10.459
  STEP: Creating a pod to test downward api env vars @ 07/13/24 13:26:10.463
  E0713 13:26:10.556081      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:26:11.556261      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:26:12.556741      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:26:13.556894      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/13/24 13:26:14.486
  Jul 13 13:26:14.488: INFO: Trying to get logs from node ip-172-31-37-214 pod downward-api-c655950e-a95c-45ba-ba82-a09c2dfef03b container dapi-container: <nil>
  STEP: delete the pod @ 07/13/24 13:26:14.501
  Jul 13 13:26:14.522: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-83" for this suite. @ 07/13/24 13:26:14.526
â€¢ [4.097 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 07/13/24 13:26:14.534
  Jul 13 13:26:14.534: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename daemonsets @ 07/13/24 13:26:14.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:26:14.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:26:14.551
  E0713 13:26:14.557267      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:26:14.570: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/13/24 13:26:14.576
  Jul 13 13:26:14.579: INFO: DaemonSet pods can't tolerate node ip-172-31-73-21 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 13:26:14.579: INFO: DaemonSet pods can't tolerate node ip-172-31-93-88 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 13:26:14.583: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 13 13:26:14.583: INFO: Node ip-172-31-15-91 is running 0 daemon pod, expected 1
  E0713 13:26:15.558288      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:26:15.580: INFO: DaemonSet pods can't tolerate node ip-172-31-73-21 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 13:26:15.580: INFO: DaemonSet pods can't tolerate node ip-172-31-93-88 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 13:26:15.583: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jul 13 13:26:15.583: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 07/13/24 13:26:15.595
  STEP: Check that daemon pods images are updated. @ 07/13/24 13:26:15.606
  Jul 13 13:26:15.610: INFO: Wrong image for pod: daemon-set-48pcl. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jul 13 13:26:15.610: INFO: Wrong image for pod: daemon-set-m94gh. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jul 13 13:26:15.610: INFO: Wrong image for pod: daemon-set-zfdp7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jul 13 13:26:15.613: INFO: DaemonSet pods can't tolerate node ip-172-31-73-21 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 13:26:15.613: INFO: DaemonSet pods can't tolerate node ip-172-31-93-88 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0713 13:26:16.558563      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:26:16.613: INFO: Wrong image for pod: daemon-set-m94gh. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jul 13 13:26:16.613: INFO: Pod daemon-set-p5jg6 is not available
  Jul 13 13:26:16.613: INFO: Wrong image for pod: daemon-set-zfdp7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jul 13 13:26:16.616: INFO: DaemonSet pods can't tolerate node ip-172-31-73-21 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 13:26:16.616: INFO: DaemonSet pods can't tolerate node ip-172-31-93-88 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0713 13:26:17.558970      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:26:17.611: INFO: Wrong image for pod: daemon-set-m94gh. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jul 13 13:26:17.611: INFO: Pod daemon-set-xtk2n is not available
  Jul 13 13:26:17.613: INFO: DaemonSet pods can't tolerate node ip-172-31-73-21 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 13:26:17.613: INFO: DaemonSet pods can't tolerate node ip-172-31-93-88 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0713 13:26:18.559615      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:26:18.615: INFO: DaemonSet pods can't tolerate node ip-172-31-73-21 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 13:26:18.615: INFO: DaemonSet pods can't tolerate node ip-172-31-93-88 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0713 13:26:19.559690      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:26:19.614: INFO: DaemonSet pods can't tolerate node ip-172-31-73-21 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 13:26:19.614: INFO: DaemonSet pods can't tolerate node ip-172-31-93-88 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 07/13/24 13:26:19.614
  Jul 13 13:26:19.617: INFO: DaemonSet pods can't tolerate node ip-172-31-73-21 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 13:26:19.617: INFO: DaemonSet pods can't tolerate node ip-172-31-93-88 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 13:26:19.620: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jul 13 13:26:19.620: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/13/24 13:26:19.633
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9529, will wait for the garbage collector to delete the pods @ 07/13/24 13:26:19.633
  Jul 13 13:26:19.692: INFO: Deleting DaemonSet.extensions daemon-set took: 5.505759ms
  Jul 13 13:26:19.792: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.0521ms
  E0713 13:26:20.560215      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:26:21.497: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 13 13:26:21.497: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jul 13 13:26:21.501: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"32043"},"items":null}

  Jul 13 13:26:21.503: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"32043"},"items":null}

  Jul 13 13:26:21.517: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9529" for this suite. @ 07/13/24 13:26:21.52
â€¢ [6.992 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1764
  STEP: Creating a kubernetes client @ 07/13/24 13:26:21.527
  Jul 13 13:26:21.527: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename kubectl @ 07/13/24 13:26:21.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:26:21.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:26:21.546
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/13/24 13:26:21.548
  Jul 13 13:26:21.548: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-8062 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  E0713 13:26:21.560705      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:26:21.599: INFO: stderr: ""
  Jul 13 13:26:21.599: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 07/13/24 13:26:21.599
  Jul 13 13:26:21.604: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-8062 delete pods e2e-test-httpd-pod'
  E0713 13:26:22.561149      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:26:23.446: INFO: stderr: ""
  Jul 13 13:26:23.446: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jul 13 13:26:23.446: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8062" for this suite. @ 07/13/24 13:26:23.451
â€¢ [1.929 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 07/13/24 13:26:23.456
  Jul 13 13:26:23.456: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename svc-latency @ 07/13/24 13:26:23.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:26:23.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:26:23.478
  Jul 13 13:26:23.480: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-334 @ 07/13/24 13:26:23.481
  I0713 13:26:23.485747      20 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-334, replica count: 1
  E0713 13:26:23.561264      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0713 13:26:24.536225      20 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0713 13:26:24.562293      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:26:24.652: INFO: Created: latency-svc-r8c4z
  Jul 13 13:26:24.656: INFO: Got endpoints: latency-svc-r8c4z [19.10319ms]
  Jul 13 13:26:24.668: INFO: Created: latency-svc-wqpfs
  Jul 13 13:26:24.675: INFO: Got endpoints: latency-svc-wqpfs [18.858328ms]
  Jul 13 13:26:24.679: INFO: Created: latency-svc-2gj9m
  Jul 13 13:26:24.681: INFO: Got endpoints: latency-svc-2gj9m [24.797701ms]
  Jul 13 13:26:24.686: INFO: Created: latency-svc-t6nlc
  Jul 13 13:26:24.691: INFO: Got endpoints: latency-svc-t6nlc [34.545823ms]
  Jul 13 13:26:24.693: INFO: Created: latency-svc-r75mr
  Jul 13 13:26:24.700: INFO: Got endpoints: latency-svc-r75mr [43.20237ms]
  Jul 13 13:26:24.703: INFO: Created: latency-svc-fc9kj
  Jul 13 13:26:24.708: INFO: Got endpoints: latency-svc-fc9kj [51.325105ms]
  Jul 13 13:26:24.712: INFO: Created: latency-svc-m6lzk
  Jul 13 13:26:24.715: INFO: Got endpoints: latency-svc-m6lzk [57.909123ms]
  Jul 13 13:26:24.716: INFO: Created: latency-svc-x972k
  Jul 13 13:26:24.722: INFO: Got endpoints: latency-svc-x972k [65.408864ms]
  Jul 13 13:26:24.727: INFO: Created: latency-svc-lqzdn
  Jul 13 13:26:24.732: INFO: Got endpoints: latency-svc-lqzdn [74.95647ms]
  Jul 13 13:26:24.734: INFO: Created: latency-svc-9d2xz
  Jul 13 13:26:24.738: INFO: Created: latency-svc-tmklk
  Jul 13 13:26:24.741: INFO: Got endpoints: latency-svc-9d2xz [84.583472ms]
  Jul 13 13:26:24.745: INFO: Got endpoints: latency-svc-tmklk [87.987807ms]
  Jul 13 13:26:24.754: INFO: Created: latency-svc-vc8v4
  Jul 13 13:26:24.758: INFO: Created: latency-svc-t9wp2
  Jul 13 13:26:24.758: INFO: Got endpoints: latency-svc-vc8v4 [101.549431ms]
  Jul 13 13:26:24.765: INFO: Got endpoints: latency-svc-t9wp2 [107.929032ms]
  Jul 13 13:26:24.767: INFO: Created: latency-svc-8xjt8
  Jul 13 13:26:24.773: INFO: Got endpoints: latency-svc-8xjt8 [115.978277ms]
  Jul 13 13:26:24.777: INFO: Created: latency-svc-kcq2w
  Jul 13 13:26:24.783: INFO: Got endpoints: latency-svc-kcq2w [125.496903ms]
  Jul 13 13:26:24.783: INFO: Created: latency-svc-fj8l5
  Jul 13 13:26:24.788: INFO: Created: latency-svc-shlt5
  Jul 13 13:26:24.792: INFO: Got endpoints: latency-svc-fj8l5 [135.091824ms]
  Jul 13 13:26:24.793: INFO: Got endpoints: latency-svc-shlt5 [117.218908ms]
  Jul 13 13:26:24.800: INFO: Created: latency-svc-qq9bq
  Jul 13 13:26:24.805: INFO: Got endpoints: latency-svc-qq9bq [123.429451ms]
  Jul 13 13:26:24.808: INFO: Created: latency-svc-cprkk
  Jul 13 13:26:24.815: INFO: Created: latency-svc-dnhpj
  Jul 13 13:26:24.816: INFO: Got endpoints: latency-svc-cprkk [124.716095ms]
  Jul 13 13:26:24.821: INFO: Got endpoints: latency-svc-dnhpj [121.040543ms]
  Jul 13 13:26:24.826: INFO: Created: latency-svc-pxzmq
  Jul 13 13:26:24.829: INFO: Got endpoints: latency-svc-pxzmq [121.614656ms]
  Jul 13 13:26:24.834: INFO: Created: latency-svc-5n52t
  Jul 13 13:26:24.842: INFO: Created: latency-svc-699mx
  Jul 13 13:26:24.843: INFO: Got endpoints: latency-svc-5n52t [127.948747ms]
  Jul 13 13:26:24.849: INFO: Got endpoints: latency-svc-699mx [126.492279ms]
  Jul 13 13:26:24.853: INFO: Created: latency-svc-ddv55
  Jul 13 13:26:24.858: INFO: Got endpoints: latency-svc-ddv55 [125.785793ms]
  Jul 13 13:26:24.860: INFO: Created: latency-svc-zm4ng
  Jul 13 13:26:24.864: INFO: Got endpoints: latency-svc-zm4ng [122.798919ms]
  Jul 13 13:26:24.866: INFO: Created: latency-svc-zlmdt
  Jul 13 13:26:24.872: INFO: Got endpoints: latency-svc-zlmdt [127.265695ms]
  Jul 13 13:26:24.875: INFO: Created: latency-svc-2sfc6
  Jul 13 13:26:24.880: INFO: Got endpoints: latency-svc-2sfc6 [121.783779ms]
  Jul 13 13:26:24.884: INFO: Created: latency-svc-mb6zr
  Jul 13 13:26:24.888: INFO: Created: latency-svc-2fzsd
  Jul 13 13:26:24.890: INFO: Got endpoints: latency-svc-mb6zr [124.718665ms]
  Jul 13 13:26:24.896: INFO: Got endpoints: latency-svc-2fzsd [122.760918ms]
  Jul 13 13:26:24.905: INFO: Created: latency-svc-k825z
  Jul 13 13:26:24.908: INFO: Got endpoints: latency-svc-k825z [125.391678ms]
  Jul 13 13:26:24.911: INFO: Created: latency-svc-h8lxf
  Jul 13 13:26:24.917: INFO: Created: latency-svc-w6262
  Jul 13 13:26:24.919: INFO: Got endpoints: latency-svc-h8lxf [126.501051ms]
  Jul 13 13:26:24.925: INFO: Got endpoints: latency-svc-w6262 [132.591223ms]
  Jul 13 13:26:24.929: INFO: Created: latency-svc-g8kd6
  Jul 13 13:26:24.933: INFO: Got endpoints: latency-svc-g8kd6 [128.325785ms]
  Jul 13 13:26:24.937: INFO: Created: latency-svc-ph465
  Jul 13 13:26:24.941: INFO: Got endpoints: latency-svc-ph465 [124.616182ms]
  Jul 13 13:26:24.942: INFO: Created: latency-svc-hc2q2
  Jul 13 13:26:24.948: INFO: Got endpoints: latency-svc-hc2q2 [127.198047ms]
  Jul 13 13:26:24.953: INFO: Created: latency-svc-wp9nk
  Jul 13 13:26:24.958: INFO: Got endpoints: latency-svc-wp9nk [128.904383ms]
  Jul 13 13:26:24.959: INFO: Created: latency-svc-c7tvt
  Jul 13 13:26:24.964: INFO: Created: latency-svc-2jdld
  Jul 13 13:26:24.973: INFO: Created: latency-svc-mj422
  Jul 13 13:26:24.979: INFO: Created: latency-svc-csjrp
  Jul 13 13:26:24.983: INFO: Created: latency-svc-hp4s8
  Jul 13 13:26:24.991: INFO: Created: latency-svc-h5qqq
  Jul 13 13:26:24.996: INFO: Created: latency-svc-lm5xh
  Jul 13 13:26:25.000: INFO: Created: latency-svc-ktbht
  Jul 13 13:26:25.001: INFO: Got endpoints: latency-svc-c7tvt [158.198666ms]
  Jul 13 13:26:25.009: INFO: Created: latency-svc-nz94n
  Jul 13 13:26:25.014: INFO: Created: latency-svc-dqrlc
  Jul 13 13:26:25.017: INFO: Created: latency-svc-xsmts
  Jul 13 13:26:25.024: INFO: Created: latency-svc-bbqsg
  Jul 13 13:26:25.032: INFO: Created: latency-svc-5lwds
  Jul 13 13:26:25.037: INFO: Created: latency-svc-qktkk
  Jul 13 13:26:25.044: INFO: Created: latency-svc-c5snd
  Jul 13 13:26:25.051: INFO: Got endpoints: latency-svc-2jdld [202.612981ms]
  Jul 13 13:26:25.054: INFO: Created: latency-svc-kjnkd
  Jul 13 13:26:25.061: INFO: Created: latency-svc-s2jhc
  Jul 13 13:26:25.102: INFO: Got endpoints: latency-svc-mj422 [244.514587ms]
  Jul 13 13:26:25.113: INFO: Created: latency-svc-j48vx
  Jul 13 13:26:25.153: INFO: Got endpoints: latency-svc-csjrp [288.627404ms]
  Jul 13 13:26:25.163: INFO: Created: latency-svc-6gb69
  Jul 13 13:26:25.201: INFO: Got endpoints: latency-svc-hp4s8 [328.419435ms]
  Jul 13 13:26:25.212: INFO: Created: latency-svc-g2ng7
  Jul 13 13:26:25.252: INFO: Got endpoints: latency-svc-h5qqq [372.108153ms]
  Jul 13 13:26:25.263: INFO: Created: latency-svc-6l76t
  Jul 13 13:26:25.304: INFO: Got endpoints: latency-svc-lm5xh [413.796247ms]
  Jul 13 13:26:25.313: INFO: Created: latency-svc-z62wh
  Jul 13 13:26:25.354: INFO: Got endpoints: latency-svc-ktbht [458.187513ms]
  Jul 13 13:26:25.362: INFO: Created: latency-svc-skvfq
  Jul 13 13:26:25.401: INFO: Got endpoints: latency-svc-nz94n [492.952811ms]
  Jul 13 13:26:25.413: INFO: Created: latency-svc-vktjn
  Jul 13 13:26:25.452: INFO: Got endpoints: latency-svc-dqrlc [532.671336ms]
  Jul 13 13:26:25.463: INFO: Created: latency-svc-n7j46
  Jul 13 13:26:25.504: INFO: Got endpoints: latency-svc-xsmts [579.235221ms]
  Jul 13 13:26:25.512: INFO: Created: latency-svc-hmdx7
  Jul 13 13:26:25.553: INFO: Got endpoints: latency-svc-bbqsg [619.728313ms]
  E0713 13:26:25.562666      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:26:25.565: INFO: Created: latency-svc-f7sz4
  Jul 13 13:26:25.604: INFO: Got endpoints: latency-svc-5lwds [663.386104ms]
  Jul 13 13:26:25.614: INFO: Created: latency-svc-c97w6
  Jul 13 13:26:25.651: INFO: Got endpoints: latency-svc-qktkk [702.64958ms]
  Jul 13 13:26:25.664: INFO: Created: latency-svc-rsxmq
  Jul 13 13:26:25.703: INFO: Got endpoints: latency-svc-c5snd [744.447965ms]
  Jul 13 13:26:25.713: INFO: Created: latency-svc-f5986
  Jul 13 13:26:25.754: INFO: Got endpoints: latency-svc-kjnkd [752.781712ms]
  Jul 13 13:26:25.764: INFO: Created: latency-svc-f694b
  Jul 13 13:26:25.805: INFO: Got endpoints: latency-svc-s2jhc [753.490759ms]
  Jul 13 13:26:25.814: INFO: Created: latency-svc-bwq5c
  Jul 13 13:26:25.852: INFO: Got endpoints: latency-svc-j48vx [749.137981ms]
  Jul 13 13:26:25.863: INFO: Created: latency-svc-4dgjk
  Jul 13 13:26:25.902: INFO: Got endpoints: latency-svc-6gb69 [749.255828ms]
  Jul 13 13:26:25.916: INFO: Created: latency-svc-gl4tk
  Jul 13 13:26:25.951: INFO: Got endpoints: latency-svc-g2ng7 [749.872059ms]
  Jul 13 13:26:25.960: INFO: Created: latency-svc-kljks
  Jul 13 13:26:26.002: INFO: Got endpoints: latency-svc-6l76t [749.441718ms]
  Jul 13 13:26:26.013: INFO: Created: latency-svc-2wzww
  Jul 13 13:26:26.054: INFO: Got endpoints: latency-svc-z62wh [749.920408ms]
  Jul 13 13:26:26.063: INFO: Created: latency-svc-7zdtv
  Jul 13 13:26:26.104: INFO: Got endpoints: latency-svc-skvfq [750.231715ms]
  Jul 13 13:26:26.113: INFO: Created: latency-svc-59spg
  Jul 13 13:26:26.154: INFO: Got endpoints: latency-svc-vktjn [752.580905ms]
  Jul 13 13:26:26.166: INFO: Created: latency-svc-52hsx
  Jul 13 13:26:26.202: INFO: Got endpoints: latency-svc-n7j46 [749.804216ms]
  Jul 13 13:26:26.214: INFO: Created: latency-svc-fn299
  Jul 13 13:26:26.251: INFO: Got endpoints: latency-svc-hmdx7 [746.678214ms]
  Jul 13 13:26:26.259: INFO: Created: latency-svc-s9dlm
  Jul 13 13:26:26.303: INFO: Got endpoints: latency-svc-f7sz4 [749.697556ms]
  Jul 13 13:26:26.314: INFO: Created: latency-svc-xfn26
  Jul 13 13:26:26.352: INFO: Got endpoints: latency-svc-c97w6 [747.848379ms]
  Jul 13 13:26:26.362: INFO: Created: latency-svc-7x4jl
  Jul 13 13:26:26.401: INFO: Got endpoints: latency-svc-rsxmq [749.406274ms]
  Jul 13 13:26:26.412: INFO: Created: latency-svc-gqm2l
  Jul 13 13:26:26.451: INFO: Got endpoints: latency-svc-f5986 [748.100919ms]
  Jul 13 13:26:26.461: INFO: Created: latency-svc-jm78m
  Jul 13 13:26:26.505: INFO: Got endpoints: latency-svc-f694b [750.719629ms]
  Jul 13 13:26:26.514: INFO: Created: latency-svc-vw7b2
  Jul 13 13:26:26.554: INFO: Got endpoints: latency-svc-bwq5c [748.458938ms]
  E0713 13:26:26.563163      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:26:26.563: INFO: Created: latency-svc-tfwvs
  Jul 13 13:26:26.604: INFO: Got endpoints: latency-svc-4dgjk [752.146798ms]
  Jul 13 13:26:26.615: INFO: Created: latency-svc-m9bq2
  Jul 13 13:26:26.654: INFO: Got endpoints: latency-svc-gl4tk [751.407394ms]
  Jul 13 13:26:26.666: INFO: Created: latency-svc-5bdsh
  Jul 13 13:26:26.702: INFO: Got endpoints: latency-svc-kljks [751.611039ms]
  Jul 13 13:26:26.711: INFO: Created: latency-svc-bf2c5
  Jul 13 13:26:26.752: INFO: Got endpoints: latency-svc-2wzww [749.686925ms]
  Jul 13 13:26:26.764: INFO: Created: latency-svc-msxql
  Jul 13 13:26:26.804: INFO: Got endpoints: latency-svc-7zdtv [750.577596ms]
  Jul 13 13:26:26.816: INFO: Created: latency-svc-pltlh
  Jul 13 13:26:26.852: INFO: Got endpoints: latency-svc-59spg [748.132932ms]
  Jul 13 13:26:26.861: INFO: Created: latency-svc-rtvgz
  Jul 13 13:26:26.901: INFO: Got endpoints: latency-svc-52hsx [747.060191ms]
  Jul 13 13:26:26.915: INFO: Created: latency-svc-qth9k
  Jul 13 13:26:26.951: INFO: Got endpoints: latency-svc-fn299 [749.434905ms]
  Jul 13 13:26:26.962: INFO: Created: latency-svc-knd4b
  Jul 13 13:26:27.004: INFO: Got endpoints: latency-svc-s9dlm [753.302316ms]
  Jul 13 13:26:27.014: INFO: Created: latency-svc-8jfrs
  Jul 13 13:26:27.053: INFO: Got endpoints: latency-svc-xfn26 [750.134643ms]
  Jul 13 13:26:27.064: INFO: Created: latency-svc-gdj5p
  Jul 13 13:26:27.103: INFO: Got endpoints: latency-svc-7x4jl [751.105007ms]
  Jul 13 13:26:27.115: INFO: Created: latency-svc-clhkc
  Jul 13 13:26:27.153: INFO: Got endpoints: latency-svc-gqm2l [752.711237ms]
  Jul 13 13:26:27.167: INFO: Created: latency-svc-cw9kw
  Jul 13 13:26:27.201: INFO: Got endpoints: latency-svc-jm78m [749.97933ms]
  Jul 13 13:26:27.210: INFO: Created: latency-svc-s6xrf
  Jul 13 13:26:27.254: INFO: Got endpoints: latency-svc-vw7b2 [749.488219ms]
  Jul 13 13:26:27.264: INFO: Created: latency-svc-qw4cw
  Jul 13 13:26:27.303: INFO: Got endpoints: latency-svc-tfwvs [749.464263ms]
  Jul 13 13:26:27.313: INFO: Created: latency-svc-lzwjk
  Jul 13 13:26:27.354: INFO: Got endpoints: latency-svc-m9bq2 [750.078793ms]
  Jul 13 13:26:27.363: INFO: Created: latency-svc-ngwwq
  Jul 13 13:26:27.402: INFO: Got endpoints: latency-svc-5bdsh [748.028398ms]
  Jul 13 13:26:27.413: INFO: Created: latency-svc-ds4k2
  Jul 13 13:26:27.453: INFO: Got endpoints: latency-svc-bf2c5 [751.227744ms]
  Jul 13 13:26:27.463: INFO: Created: latency-svc-jvrmz
  Jul 13 13:26:27.504: INFO: Got endpoints: latency-svc-msxql [752.444538ms]
  Jul 13 13:26:27.514: INFO: Created: latency-svc-bn8gv
  Jul 13 13:26:27.553: INFO: Got endpoints: latency-svc-pltlh [748.358047ms]
  Jul 13 13:26:27.562: INFO: Created: latency-svc-6j98n
  E0713 13:26:27.563604      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:26:27.603: INFO: Got endpoints: latency-svc-rtvgz [751.213348ms]
  Jul 13 13:26:27.614: INFO: Created: latency-svc-wx8jq
  Jul 13 13:26:27.651: INFO: Got endpoints: latency-svc-qth9k [750.246598ms]
  Jul 13 13:26:27.664: INFO: Created: latency-svc-jcpsg
  Jul 13 13:26:27.701: INFO: Got endpoints: latency-svc-knd4b [749.404774ms]
  Jul 13 13:26:27.711: INFO: Created: latency-svc-sgpq7
  Jul 13 13:26:27.752: INFO: Got endpoints: latency-svc-8jfrs [748.332739ms]
  Jul 13 13:26:27.762: INFO: Created: latency-svc-gknwm
  Jul 13 13:26:27.802: INFO: Got endpoints: latency-svc-gdj5p [749.229375ms]
  Jul 13 13:26:27.812: INFO: Created: latency-svc-f7vqb
  Jul 13 13:26:27.853: INFO: Got endpoints: latency-svc-clhkc [749.280694ms]
  Jul 13 13:26:27.861: INFO: Created: latency-svc-7xmfb
  Jul 13 13:26:27.902: INFO: Got endpoints: latency-svc-cw9kw [748.661173ms]
  Jul 13 13:26:27.915: INFO: Created: latency-svc-sbjmw
  Jul 13 13:26:27.952: INFO: Got endpoints: latency-svc-s6xrf [750.162746ms]
  Jul 13 13:26:27.961: INFO: Created: latency-svc-vwlw6
  Jul 13 13:26:28.001: INFO: Got endpoints: latency-svc-qw4cw [746.91182ms]
  Jul 13 13:26:28.012: INFO: Created: latency-svc-rkjgv
  Jul 13 13:26:28.053: INFO: Got endpoints: latency-svc-lzwjk [749.818734ms]
  Jul 13 13:26:28.062: INFO: Created: latency-svc-7rpxc
  Jul 13 13:26:28.103: INFO: Got endpoints: latency-svc-ngwwq [749.057884ms]
  Jul 13 13:26:28.113: INFO: Created: latency-svc-cdgrw
  Jul 13 13:26:28.156: INFO: Got endpoints: latency-svc-ds4k2 [753.549163ms]
  Jul 13 13:26:28.164: INFO: Created: latency-svc-vp5jv
  Jul 13 13:26:28.202: INFO: Got endpoints: latency-svc-jvrmz [748.433971ms]
  Jul 13 13:26:28.214: INFO: Created: latency-svc-697c7
  Jul 13 13:26:28.253: INFO: Got endpoints: latency-svc-bn8gv [748.830294ms]
  Jul 13 13:26:28.262: INFO: Created: latency-svc-bx46p
  Jul 13 13:26:28.303: INFO: Got endpoints: latency-svc-6j98n [750.055391ms]
  Jul 13 13:26:28.312: INFO: Created: latency-svc-9rkwd
  Jul 13 13:26:28.354: INFO: Got endpoints: latency-svc-wx8jq [750.173248ms]
  Jul 13 13:26:28.364: INFO: Created: latency-svc-khd4q
  Jul 13 13:26:28.401: INFO: Got endpoints: latency-svc-jcpsg [749.220481ms]
  Jul 13 13:26:28.413: INFO: Created: latency-svc-2bpdn
  Jul 13 13:26:28.451: INFO: Got endpoints: latency-svc-sgpq7 [750.506916ms]
  Jul 13 13:26:28.474: INFO: Created: latency-svc-jgq2x
  Jul 13 13:26:28.501: INFO: Got endpoints: latency-svc-gknwm [748.967605ms]
  Jul 13 13:26:28.511: INFO: Created: latency-svc-4twrk
  Jul 13 13:26:28.552: INFO: Got endpoints: latency-svc-f7vqb [749.427161ms]
  Jul 13 13:26:28.561: INFO: Created: latency-svc-dvlvb
  E0713 13:26:28.563758      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:26:28.602: INFO: Got endpoints: latency-svc-7xmfb [749.467795ms]
  Jul 13 13:26:28.612: INFO: Created: latency-svc-xbn25
  Jul 13 13:26:28.653: INFO: Got endpoints: latency-svc-sbjmw [750.289655ms]
  Jul 13 13:26:28.666: INFO: Created: latency-svc-scl7n
  Jul 13 13:26:28.754: INFO: Got endpoints: latency-svc-rkjgv [752.627931ms]
  Jul 13 13:26:28.758: INFO: Got endpoints: latency-svc-vwlw6 [806.168251ms]
  Jul 13 13:26:28.770: INFO: Created: latency-svc-9962j
  Jul 13 13:26:28.773: INFO: Created: latency-svc-fkrsj
  Jul 13 13:26:28.804: INFO: Got endpoints: latency-svc-7rpxc [750.762916ms]
  Jul 13 13:26:28.814: INFO: Created: latency-svc-5lvlk
  Jul 13 13:26:28.852: INFO: Got endpoints: latency-svc-cdgrw [749.164024ms]
  Jul 13 13:26:28.865: INFO: Created: latency-svc-hlprw
  Jul 13 13:26:28.902: INFO: Got endpoints: latency-svc-vp5jv [745.713996ms]
  Jul 13 13:26:28.910: INFO: Created: latency-svc-cgvdl
  Jul 13 13:26:28.951: INFO: Got endpoints: latency-svc-697c7 [749.181877ms]
  Jul 13 13:26:28.961: INFO: Created: latency-svc-5hcl2
  Jul 13 13:26:29.003: INFO: Got endpoints: latency-svc-bx46p [749.919038ms]
  Jul 13 13:26:29.016: INFO: Created: latency-svc-rk8rr
  Jul 13 13:26:29.052: INFO: Got endpoints: latency-svc-9rkwd [749.196037ms]
  Jul 13 13:26:29.061: INFO: Created: latency-svc-sk24v
  Jul 13 13:26:29.102: INFO: Got endpoints: latency-svc-khd4q [747.844559ms]
  Jul 13 13:26:29.113: INFO: Created: latency-svc-7779c
  Jul 13 13:26:29.151: INFO: Got endpoints: latency-svc-2bpdn [750.380698ms]
  Jul 13 13:26:29.169: INFO: Created: latency-svc-ngvgc
  Jul 13 13:26:29.203: INFO: Got endpoints: latency-svc-jgq2x [751.462338ms]
  Jul 13 13:26:29.210: INFO: Created: latency-svc-vlk8r
  Jul 13 13:26:29.252: INFO: Got endpoints: latency-svc-4twrk [750.97089ms]
  Jul 13 13:26:29.263: INFO: Created: latency-svc-czc5v
  Jul 13 13:26:29.302: INFO: Got endpoints: latency-svc-dvlvb [750.488759ms]
  Jul 13 13:26:29.315: INFO: Created: latency-svc-x7jlv
  Jul 13 13:26:29.352: INFO: Got endpoints: latency-svc-xbn25 [749.449842ms]
  Jul 13 13:26:29.361: INFO: Created: latency-svc-hl2ds
  Jul 13 13:26:29.402: INFO: Got endpoints: latency-svc-scl7n [749.533048ms]
  Jul 13 13:26:29.412: INFO: Created: latency-svc-dbgnv
  Jul 13 13:26:29.454: INFO: Got endpoints: latency-svc-9962j [700.251554ms]
  Jul 13 13:26:29.466: INFO: Created: latency-svc-kd9l9
  Jul 13 13:26:29.503: INFO: Got endpoints: latency-svc-fkrsj [744.689258ms]
  Jul 13 13:26:29.512: INFO: Created: latency-svc-98vn2
  Jul 13 13:26:29.551: INFO: Got endpoints: latency-svc-5lvlk [747.059833ms]
  Jul 13 13:26:29.563: INFO: Created: latency-svc-z4hvm
  E0713 13:26:29.564395      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:26:29.602: INFO: Got endpoints: latency-svc-hlprw [749.949323ms]
  Jul 13 13:26:29.614: INFO: Created: latency-svc-7wmkb
  Jul 13 13:26:29.652: INFO: Got endpoints: latency-svc-cgvdl [750.567027ms]
  Jul 13 13:26:29.661: INFO: Created: latency-svc-8xv2g
  Jul 13 13:26:29.704: INFO: Got endpoints: latency-svc-5hcl2 [752.440766ms]
  Jul 13 13:26:29.715: INFO: Created: latency-svc-dd4mt
  Jul 13 13:26:29.753: INFO: Got endpoints: latency-svc-rk8rr [750.087369ms]
  Jul 13 13:26:29.765: INFO: Created: latency-svc-wqg44
  Jul 13 13:26:29.801: INFO: Got endpoints: latency-svc-sk24v [748.232744ms]
  Jul 13 13:26:29.811: INFO: Created: latency-svc-qmc2q
  Jul 13 13:26:29.852: INFO: Got endpoints: latency-svc-7779c [750.285154ms]
  Jul 13 13:26:29.863: INFO: Created: latency-svc-8f5kr
  Jul 13 13:26:29.904: INFO: Got endpoints: latency-svc-ngvgc [752.628661ms]
  Jul 13 13:26:29.915: INFO: Created: latency-svc-8sxlk
  Jul 13 13:26:29.953: INFO: Got endpoints: latency-svc-vlk8r [750.38353ms]
  Jul 13 13:26:29.961: INFO: Created: latency-svc-nj7jm
  Jul 13 13:26:30.003: INFO: Got endpoints: latency-svc-czc5v [749.957594ms]
  Jul 13 13:26:30.013: INFO: Created: latency-svc-2wc7p
  Jul 13 13:26:30.053: INFO: Got endpoints: latency-svc-x7jlv [750.391702ms]
  Jul 13 13:26:30.064: INFO: Created: latency-svc-bs2l2
  Jul 13 13:26:30.102: INFO: Got endpoints: latency-svc-hl2ds [750.241025ms]
  Jul 13 13:26:30.112: INFO: Created: latency-svc-dxfh9
  Jul 13 13:26:30.151: INFO: Got endpoints: latency-svc-dbgnv [749.150829ms]
  Jul 13 13:26:30.162: INFO: Created: latency-svc-sxk9x
  Jul 13 13:26:30.203: INFO: Got endpoints: latency-svc-kd9l9 [748.768036ms]
  Jul 13 13:26:30.214: INFO: Created: latency-svc-dxdcm
  Jul 13 13:26:30.253: INFO: Got endpoints: latency-svc-98vn2 [749.855897ms]
  Jul 13 13:26:30.261: INFO: Created: latency-svc-g4pnx
  Jul 13 13:26:30.303: INFO: Got endpoints: latency-svc-z4hvm [752.436915ms]
  Jul 13 13:26:30.314: INFO: Created: latency-svc-xpdkt
  Jul 13 13:26:30.351: INFO: Got endpoints: latency-svc-7wmkb [748.692588ms]
  Jul 13 13:26:30.364: INFO: Created: latency-svc-8d7bg
  Jul 13 13:26:30.401: INFO: Got endpoints: latency-svc-8xv2g [748.58075ms]
  Jul 13 13:26:30.410: INFO: Created: latency-svc-5p99h
  Jul 13 13:26:30.453: INFO: Got endpoints: latency-svc-dd4mt [748.976084ms]
  Jul 13 13:26:30.463: INFO: Created: latency-svc-gzbj6
  Jul 13 13:26:30.503: INFO: Got endpoints: latency-svc-wqg44 [749.898172ms]
  Jul 13 13:26:30.515: INFO: Created: latency-svc-478dx
  Jul 13 13:26:30.552: INFO: Got endpoints: latency-svc-qmc2q [751.59806ms]
  Jul 13 13:26:30.562: INFO: Created: latency-svc-8rmfp
  E0713 13:26:30.565270      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:26:30.601: INFO: Got endpoints: latency-svc-8f5kr [748.915404ms]
  Jul 13 13:26:30.613: INFO: Created: latency-svc-mm2fs
  Jul 13 13:26:30.653: INFO: Got endpoints: latency-svc-8sxlk [749.028444ms]
  Jul 13 13:26:30.666: INFO: Created: latency-svc-dj5jt
  Jul 13 13:26:30.702: INFO: Got endpoints: latency-svc-nj7jm [749.061349ms]
  Jul 13 13:26:30.713: INFO: Created: latency-svc-hmgmw
  Jul 13 13:26:30.752: INFO: Got endpoints: latency-svc-2wc7p [748.801163ms]
  Jul 13 13:26:30.761: INFO: Created: latency-svc-tbsfh
  Jul 13 13:26:30.801: INFO: Got endpoints: latency-svc-bs2l2 [748.534314ms]
  Jul 13 13:26:30.814: INFO: Created: latency-svc-b5kpr
  Jul 13 13:26:30.851: INFO: Got endpoints: latency-svc-dxfh9 [748.742523ms]
  Jul 13 13:26:30.867: INFO: Created: latency-svc-7wtjg
  Jul 13 13:26:30.902: INFO: Got endpoints: latency-svc-sxk9x [750.844801ms]
  Jul 13 13:26:30.914: INFO: Created: latency-svc-82cdt
  Jul 13 13:26:30.953: INFO: Got endpoints: latency-svc-dxdcm [750.306825ms]
  Jul 13 13:26:30.964: INFO: Created: latency-svc-qvkl6
  Jul 13 13:26:31.000: INFO: Got endpoints: latency-svc-g4pnx [747.386653ms]
  Jul 13 13:26:31.009: INFO: Created: latency-svc-thzqs
  Jul 13 13:26:31.052: INFO: Got endpoints: latency-svc-xpdkt [748.75199ms]
  Jul 13 13:26:31.063: INFO: Created: latency-svc-g48fv
  Jul 13 13:26:31.102: INFO: Got endpoints: latency-svc-8d7bg [751.214481ms]
  Jul 13 13:26:31.113: INFO: Created: latency-svc-rffdx
  Jul 13 13:26:31.153: INFO: Got endpoints: latency-svc-5p99h [752.501208ms]
  Jul 13 13:26:31.161: INFO: Created: latency-svc-tjp9j
  Jul 13 13:26:31.203: INFO: Got endpoints: latency-svc-gzbj6 [750.007308ms]
  Jul 13 13:26:31.213: INFO: Created: latency-svc-gpbfz
  Jul 13 13:26:31.251: INFO: Got endpoints: latency-svc-478dx [747.205111ms]
  Jul 13 13:26:31.264: INFO: Created: latency-svc-5sk7x
  Jul 13 13:26:31.302: INFO: Got endpoints: latency-svc-8rmfp [750.10044ms]
  Jul 13 13:26:31.311: INFO: Created: latency-svc-t8hjl
  Jul 13 13:26:31.353: INFO: Got endpoints: latency-svc-mm2fs [752.225898ms]
  Jul 13 13:26:31.363: INFO: Created: latency-svc-lqrdg
  Jul 13 13:26:31.404: INFO: Got endpoints: latency-svc-dj5jt [750.749188ms]
  Jul 13 13:26:31.415: INFO: Created: latency-svc-vq6qx
  Jul 13 13:26:31.452: INFO: Got endpoints: latency-svc-hmgmw [749.310136ms]
  Jul 13 13:26:31.460: INFO: Created: latency-svc-2xtvk
  Jul 13 13:26:31.502: INFO: Got endpoints: latency-svc-tbsfh [749.945475ms]
  Jul 13 13:26:31.514: INFO: Created: latency-svc-r9k5g
  Jul 13 13:26:31.552: INFO: Got endpoints: latency-svc-b5kpr [750.669229ms]
  Jul 13 13:26:31.563: INFO: Created: latency-svc-zp8vx
  E0713 13:26:31.565821      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:26:31.602: INFO: Got endpoints: latency-svc-7wtjg [750.782291ms]
  Jul 13 13:26:31.611: INFO: Created: latency-svc-rzcbx
  Jul 13 13:26:31.654: INFO: Got endpoints: latency-svc-82cdt [751.174507ms]
  Jul 13 13:26:31.664: INFO: Created: latency-svc-9zwqf
  Jul 13 13:26:31.703: INFO: Got endpoints: latency-svc-qvkl6 [749.773962ms]
  Jul 13 13:26:31.716: INFO: Created: latency-svc-hs6mn
  Jul 13 13:26:31.750: INFO: Got endpoints: latency-svc-thzqs [750.120838ms]
  Jul 13 13:26:31.760: INFO: Created: latency-svc-58k6w
  Jul 13 13:26:31.802: INFO: Got endpoints: latency-svc-g48fv [750.175809ms]
  Jul 13 13:26:31.812: INFO: Created: latency-svc-jjfr2
  Jul 13 13:26:31.853: INFO: Got endpoints: latency-svc-rffdx [751.037524ms]
  Jul 13 13:26:31.864: INFO: Created: latency-svc-mg6np
  Jul 13 13:26:31.904: INFO: Got endpoints: latency-svc-tjp9j [750.721388ms]
  Jul 13 13:26:31.912: INFO: Created: latency-svc-r4g22
  Jul 13 13:26:31.952: INFO: Got endpoints: latency-svc-gpbfz [748.947809ms]
  Jul 13 13:26:31.964: INFO: Created: latency-svc-wj5z4
  Jul 13 13:26:32.002: INFO: Got endpoints: latency-svc-5sk7x [751.40768ms]
  Jul 13 13:26:32.014: INFO: Created: latency-svc-nf755
  Jul 13 13:26:32.052: INFO: Got endpoints: latency-svc-t8hjl [749.34409ms]
  Jul 13 13:26:32.062: INFO: Created: latency-svc-j9czm
  Jul 13 13:26:32.102: INFO: Got endpoints: latency-svc-lqrdg [748.576621ms]
  Jul 13 13:26:32.112: INFO: Created: latency-svc-n8x7c
  Jul 13 13:26:32.155: INFO: Got endpoints: latency-svc-vq6qx [750.391668ms]
  Jul 13 13:26:32.168: INFO: Created: latency-svc-wxwlk
  Jul 13 13:26:32.204: INFO: Got endpoints: latency-svc-2xtvk [752.281335ms]
  Jul 13 13:26:32.213: INFO: Created: latency-svc-x4vq9
  Jul 13 13:26:32.252: INFO: Got endpoints: latency-svc-r9k5g [750.194434ms]
  Jul 13 13:26:32.265: INFO: Created: latency-svc-82zlh
  Jul 13 13:26:32.302: INFO: Got endpoints: latency-svc-zp8vx [749.261588ms]
  Jul 13 13:26:32.314: INFO: Created: latency-svc-j7bb5
  Jul 13 13:26:32.351: INFO: Got endpoints: latency-svc-rzcbx [749.454972ms]
  Jul 13 13:26:32.360: INFO: Created: latency-svc-l6v8f
  Jul 13 13:26:32.404: INFO: Got endpoints: latency-svc-9zwqf [749.958557ms]
  Jul 13 13:26:32.413: INFO: Created: latency-svc-jxsbp
  Jul 13 13:26:32.453: INFO: Got endpoints: latency-svc-hs6mn [749.743638ms]
  Jul 13 13:26:32.465: INFO: Created: latency-svc-dvslf
  Jul 13 13:26:32.501: INFO: Got endpoints: latency-svc-58k6w [750.677569ms]
  Jul 13 13:26:32.552: INFO: Got endpoints: latency-svc-jjfr2 [749.973083ms]
  E0713 13:26:32.565892      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:26:32.603: INFO: Got endpoints: latency-svc-mg6np [749.768928ms]
  Jul 13 13:26:32.651: INFO: Got endpoints: latency-svc-r4g22 [746.549815ms]
  Jul 13 13:26:32.704: INFO: Got endpoints: latency-svc-wj5z4 [751.157157ms]
  Jul 13 13:26:32.753: INFO: Got endpoints: latency-svc-nf755 [750.815046ms]
  Jul 13 13:26:32.803: INFO: Got endpoints: latency-svc-j9czm [750.852677ms]
  Jul 13 13:26:32.851: INFO: Got endpoints: latency-svc-n8x7c [748.906258ms]
  Jul 13 13:26:32.904: INFO: Got endpoints: latency-svc-wxwlk [749.356569ms]
  Jul 13 13:26:32.952: INFO: Got endpoints: latency-svc-x4vq9 [747.425502ms]
  Jul 13 13:26:33.003: INFO: Got endpoints: latency-svc-82zlh [750.864717ms]
  Jul 13 13:26:33.052: INFO: Got endpoints: latency-svc-j7bb5 [750.355976ms]
  Jul 13 13:26:33.102: INFO: Got endpoints: latency-svc-l6v8f [750.161085ms]
  Jul 13 13:26:33.153: INFO: Got endpoints: latency-svc-jxsbp [749.626985ms]
  Jul 13 13:26:33.203: INFO: Got endpoints: latency-svc-dvslf [749.208835ms]
  Jul 13 13:26:33.203: INFO: Latencies: [18.858328ms 24.797701ms 34.545823ms 43.20237ms 51.325105ms 57.909123ms 65.408864ms 74.95647ms 84.583472ms 87.987807ms 101.549431ms 107.929032ms 115.978277ms 117.218908ms 121.040543ms 121.614656ms 121.783779ms 122.760918ms 122.798919ms 123.429451ms 124.616182ms 124.716095ms 124.718665ms 125.391678ms 125.496903ms 125.785793ms 126.492279ms 126.501051ms 127.198047ms 127.265695ms 127.948747ms 128.325785ms 128.904383ms 132.591223ms 135.091824ms 158.198666ms 202.612981ms 244.514587ms 288.627404ms 328.419435ms 372.108153ms 413.796247ms 458.187513ms 492.952811ms 532.671336ms 579.235221ms 619.728313ms 663.386104ms 700.251554ms 702.64958ms 744.447965ms 744.689258ms 745.713996ms 746.549815ms 746.678214ms 746.91182ms 747.059833ms 747.060191ms 747.205111ms 747.386653ms 747.425502ms 747.844559ms 747.848379ms 748.028398ms 748.100919ms 748.132932ms 748.232744ms 748.332739ms 748.358047ms 748.433971ms 748.458938ms 748.534314ms 748.576621ms 748.58075ms 748.661173ms 748.692588ms 748.742523ms 748.75199ms 748.768036ms 748.801163ms 748.830294ms 748.906258ms 748.915404ms 748.947809ms 748.967605ms 748.976084ms 749.028444ms 749.057884ms 749.061349ms 749.137981ms 749.150829ms 749.164024ms 749.181877ms 749.196037ms 749.208835ms 749.220481ms 749.229375ms 749.255828ms 749.261588ms 749.280694ms 749.310136ms 749.34409ms 749.356569ms 749.404774ms 749.406274ms 749.427161ms 749.434905ms 749.441718ms 749.449842ms 749.454972ms 749.464263ms 749.467795ms 749.488219ms 749.533048ms 749.626985ms 749.686925ms 749.697556ms 749.743638ms 749.768928ms 749.773962ms 749.804216ms 749.818734ms 749.855897ms 749.872059ms 749.898172ms 749.919038ms 749.920408ms 749.945475ms 749.949323ms 749.957594ms 749.958557ms 749.973083ms 749.97933ms 750.007308ms 750.055391ms 750.078793ms 750.087369ms 750.10044ms 750.120838ms 750.134643ms 750.161085ms 750.162746ms 750.173248ms 750.175809ms 750.194434ms 750.231715ms 750.241025ms 750.246598ms 750.285154ms 750.289655ms 750.306825ms 750.355976ms 750.380698ms 750.38353ms 750.391668ms 750.391702ms 750.488759ms 750.506916ms 750.567027ms 750.577596ms 750.669229ms 750.677569ms 750.719629ms 750.721388ms 750.749188ms 750.762916ms 750.782291ms 750.815046ms 750.844801ms 750.852677ms 750.864717ms 750.97089ms 751.037524ms 751.105007ms 751.157157ms 751.174507ms 751.213348ms 751.214481ms 751.227744ms 751.407394ms 751.40768ms 751.462338ms 751.59806ms 751.611039ms 752.146798ms 752.225898ms 752.281335ms 752.436915ms 752.440766ms 752.444538ms 752.501208ms 752.580905ms 752.627931ms 752.628661ms 752.711237ms 752.781712ms 753.302316ms 753.490759ms 753.549163ms 806.168251ms]
  Jul 13 13:26:33.203: INFO: 50 %ile: 749.310136ms
  Jul 13 13:26:33.203: INFO: 90 %ile: 751.40768ms
  Jul 13 13:26:33.203: INFO: 99 %ile: 753.549163ms
  Jul 13 13:26:33.203: INFO: Total sample count: 200
  Jul 13 13:26:33.203: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-334" for this suite. @ 07/13/24 13:26:33.212
â€¢ [9.768 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 07/13/24 13:26:33.225
  Jul 13 13:26:33.225: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename projected @ 07/13/24 13:26:33.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:26:33.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:26:33.25
  STEP: Creating a pod to test downward API volume plugin @ 07/13/24 13:26:33.252
  E0713 13:26:33.566558      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:26:34.566891      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:26:35.567641      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:26:36.567767      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/13/24 13:26:37.276
  Jul 13 13:26:37.279: INFO: Trying to get logs from node ip-172-31-37-214 pod downwardapi-volume-fb6dd5fb-c5bb-478d-93bc-290317f52f9d container client-container: <nil>
  STEP: delete the pod @ 07/13/24 13:26:37.285
  Jul 13 13:26:37.301: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2515" for this suite. @ 07/13/24 13:26:37.304
â€¢ [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 07/13/24 13:26:37.312
  Jul 13 13:26:37.312: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename runtimeclass @ 07/13/24 13:26:37.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:26:37.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:26:37.33
  STEP: getting /apis @ 07/13/24 13:26:37.332
  STEP: getting /apis/node.k8s.io @ 07/13/24 13:26:37.335
  STEP: getting /apis/node.k8s.io/v1 @ 07/13/24 13:26:37.336
  STEP: creating @ 07/13/24 13:26:37.337
  STEP: watching @ 07/13/24 13:26:37.353
  Jul 13 13:26:37.353: INFO: starting watch
  STEP: getting @ 07/13/24 13:26:37.357
  STEP: listing @ 07/13/24 13:26:37.36
  STEP: patching @ 07/13/24 13:26:37.364
  STEP: updating @ 07/13/24 13:26:37.367
  Jul 13 13:26:37.371: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 07/13/24 13:26:37.371
  STEP: deleting a collection @ 07/13/24 13:26:37.383
  Jul 13 13:26:37.397: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4970" for this suite. @ 07/13/24 13:26:37.401
â€¢ [0.097 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 07/13/24 13:26:37.409
  Jul 13 13:26:37.409: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename emptydir-wrapper @ 07/13/24 13:26:37.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:26:37.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:26:37.423
  STEP: Creating 50 configmaps @ 07/13/24 13:26:37.428
  E0713 13:26:37.567879      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 07/13/24 13:26:37.664
  Jul 13 13:26:37.798: INFO: Pod name wrapped-volume-race-eed5bf3f-6f10-4201-9c98-1a2fad25834c: Found 4 pods out of 5
  E0713 13:26:38.569613      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:26:39.569925      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:26:40.569971      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:26:41.570071      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:26:42.571019      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:26:42.803: INFO: Pod name wrapped-volume-race-eed5bf3f-6f10-4201-9c98-1a2fad25834c: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/13/24 13:26:42.803
  STEP: Creating RC which spawns configmap-volume pods @ 07/13/24 13:26:42.821
  Jul 13 13:26:42.836: INFO: Pod name wrapped-volume-race-f718ece3-c3db-4a90-9f77-87566530f88e: Found 0 pods out of 5
  E0713 13:26:43.573899      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:26:44.574896      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:26:45.574993      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:26:46.575076      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:26:47.575204      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:26:47.841: INFO: Pod name wrapped-volume-race-f718ece3-c3db-4a90-9f77-87566530f88e: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/13/24 13:26:47.841
  STEP: Creating RC which spawns configmap-volume pods @ 07/13/24 13:26:47.861
  Jul 13 13:26:47.875: INFO: Pod name wrapped-volume-race-c0639eee-0ddb-476a-b3a3-91426e3deca5: Found 0 pods out of 5
  E0713 13:26:48.575244      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:26:49.576296      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:26:50.576479      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:26:51.576553      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:26:52.576640      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:26:52.881: INFO: Pod name wrapped-volume-race-c0639eee-0ddb-476a-b3a3-91426e3deca5: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/13/24 13:26:52.881
  STEP: deleting ReplicationController wrapped-volume-race-c0639eee-0ddb-476a-b3a3-91426e3deca5 in namespace emptydir-wrapper-530, will wait for the garbage collector to delete the pods @ 07/13/24 13:26:52.898
  Jul 13 13:26:52.959: INFO: Deleting ReplicationController wrapped-volume-race-c0639eee-0ddb-476a-b3a3-91426e3deca5 took: 8.451082ms
  Jul 13 13:26:53.060: INFO: Terminating ReplicationController wrapped-volume-race-c0639eee-0ddb-476a-b3a3-91426e3deca5 pods took: 100.460894ms
  E0713 13:26:53.577302      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:26:54.577592      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-f718ece3-c3db-4a90-9f77-87566530f88e in namespace emptydir-wrapper-530, will wait for the garbage collector to delete the pods @ 07/13/24 13:26:54.66
  Jul 13 13:26:54.722: INFO: Deleting ReplicationController wrapped-volume-race-f718ece3-c3db-4a90-9f77-87566530f88e took: 9.609052ms
  Jul 13 13:26:54.823: INFO: Terminating ReplicationController wrapped-volume-race-f718ece3-c3db-4a90-9f77-87566530f88e pods took: 100.565477ms
  E0713 13:26:55.578419      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-eed5bf3f-6f10-4201-9c98-1a2fad25834c in namespace emptydir-wrapper-530, will wait for the garbage collector to delete the pods @ 07/13/24 13:26:56.423
  Jul 13 13:26:56.485: INFO: Deleting ReplicationController wrapped-volume-race-eed5bf3f-6f10-4201-9c98-1a2fad25834c took: 9.119118ms
  E0713 13:26:56.579396      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:26:56.586: INFO: Terminating ReplicationController wrapped-volume-race-eed5bf3f-6f10-4201-9c98-1a2fad25834c pods took: 100.722012ms
  E0713 13:26:57.580303      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 07/13/24 13:26:57.687
  Jul 13 13:26:57.971: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-530" for this suite. @ 07/13/24 13:26:57.974
â€¢ [20.571 seconds]
------------------------------
SSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 07/13/24 13:26:57.981
  Jul 13 13:26:57.981: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename pv @ 07/13/24 13:26:57.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:26:58.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:26:58.006
  STEP: Creating initial PV and PVC @ 07/13/24 13:26:58.008
  Jul 13 13:26:58.009: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-3797" @ 07/13/24 13:26:58.022
  STEP: Listing PVCs in namespace "pv-3797" @ 07/13/24 13:26:58.028
  STEP: Reading "pvc-d9bfv" Status @ 07/13/24 13:26:58.031
  STEP: Reading "pv-3797-nsbh4" Status @ 07/13/24 13:26:58.034
  STEP: Patching "pvc-d9bfv" Status @ 07/13/24 13:26:58.038
  STEP: Patching "pv-3797-nsbh4" Status @ 07/13/24 13:26:58.045
  STEP: Updating "pvc-d9bfv" Status @ 07/13/24 13:26:58.055
  STEP: Updating "pv-3797-nsbh4" Status @ 07/13/24 13:26:58.065
  Jul 13 13:26:58.073: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Jul 13 13:26:58.073: INFO: Deleting PersistentVolumeClaim "pvc-d9bfv"
  Jul 13 13:26:58.077: INFO: Deleting PersistentVolume "pv-3797-nsbh4"
  Jul 13 13:26:58.084: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-3797" for this suite. @ 07/13/24 13:26:58.09
â€¢ [0.114 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 07/13/24 13:26:58.095
  Jul 13 13:26:58.095: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename daemonsets @ 07/13/24 13:26:58.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:26:58.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:26:58.113
  STEP: Creating simple DaemonSet "daemon-set" @ 07/13/24 13:26:58.134
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/13/24 13:26:58.14
  Jul 13 13:26:58.143: INFO: DaemonSet pods can't tolerate node ip-172-31-73-21 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 13:26:58.143: INFO: DaemonSet pods can't tolerate node ip-172-31-93-88 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 13:26:58.147: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 13 13:26:58.147: INFO: Node ip-172-31-15-91 is running 0 daemon pod, expected 1
  E0713 13:26:58.581168      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:26:59.145: INFO: DaemonSet pods can't tolerate node ip-172-31-73-21 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 13:26:59.145: INFO: DaemonSet pods can't tolerate node ip-172-31-93-88 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 13:26:59.147: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 13 13:26:59.147: INFO: Node ip-172-31-15-91 is running 0 daemon pod, expected 1
  E0713 13:26:59.582196      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:27:00.144: INFO: DaemonSet pods can't tolerate node ip-172-31-73-21 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 13:27:00.144: INFO: DaemonSet pods can't tolerate node ip-172-31-93-88 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 13:27:00.147: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jul 13 13:27:00.147: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 07/13/24 13:27:00.15
  STEP: DeleteCollection of the DaemonSets @ 07/13/24 13:27:00.153
  STEP: Verify that ReplicaSets have been deleted @ 07/13/24 13:27:00.161
  Jul 13 13:27:00.179: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"34525"},"items":null}

  Jul 13 13:27:00.183: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"34527"},"items":[{"metadata":{"name":"daemon-set-4vbdw","generateName":"daemon-set-","namespace":"daemonsets-1785","uid":"e4afe1ba-b421-4a74-bc5c-9b292cfa7e29","resourceVersion":"34526","creationTimestamp":"2024-07-13T13:26:58Z","deletionTimestamp":"2024-07-13T13:27:30Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"4c1ed356-d9d9-46a7-b418-89b1908466e5","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-07-13T13:26:58Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4c1ed356-d9d9-46a7-b418-89b1908466e5\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-07-13T13:26:59Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.77.231\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-nqnnv","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-nqnnv","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-37-214","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-37-214"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-13T13:26:59Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-13T13:26:58Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-13T13:26:59Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-13T13:26:59Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-13T13:26:58Z"}],"hostIP":"172.31.37.214","hostIPs":[{"ip":"172.31.37.214"}],"podIP":"192.168.77.231","podIPs":[{"ip":"192.168.77.231"}],"startTime":"2024-07-13T13:26:58Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-07-13T13:26:58Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://cad470c30a2c5c4e6863f1e03c077649e0129370448028c044267f8422ac2b07","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-cw65w","generateName":"daemon-set-","namespace":"daemonsets-1785","uid":"bc33c58f-d446-46f5-a51a-8771932b189e","resourceVersion":"34524","creationTimestamp":"2024-07-13T13:26:58Z","deletionTimestamp":"2024-07-13T13:27:30Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"4c1ed356-d9d9-46a7-b418-89b1908466e5","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-07-13T13:26:58Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4c1ed356-d9d9-46a7-b418-89b1908466e5\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-07-13T13:26:59Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.145.191\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-2kw79","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-2kw79","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-15-91","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-15-91"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-13T13:26:59Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-13T13:26:58Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-13T13:26:59Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-13T13:26:59Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-13T13:26:58Z"}],"hostIP":"172.31.15.91","hostIPs":[{"ip":"172.31.15.91"}],"podIP":"192.168.145.191","podIPs":[{"ip":"192.168.145.191"}],"startTime":"2024-07-13T13:26:58Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-07-13T13:26:58Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://4df5cdcbd9289b8c37e299cd62d2f877d72f3fd1b130c2c18bb7fd8455bbe54a","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-pwhp9","generateName":"daemon-set-","namespace":"daemonsets-1785","uid":"8dd689e9-7403-4302-aa63-07f0c777358f","resourceVersion":"34525","creationTimestamp":"2024-07-13T13:26:58Z","deletionTimestamp":"2024-07-13T13:27:30Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"4c1ed356-d9d9-46a7-b418-89b1908466e5","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-07-13T13:26:58Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4c1ed356-d9d9-46a7-b418-89b1908466e5\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-07-13T13:26:59Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.67.164\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-78ssr","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-78ssr","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-89-122","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-89-122"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-13T13:26:59Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-13T13:26:58Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-13T13:26:59Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-13T13:26:59Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-13T13:26:58Z"}],"hostIP":"172.31.89.122","hostIPs":[{"ip":"172.31.89.122"}],"podIP":"192.168.67.164","podIPs":[{"ip":"192.168.67.164"}],"startTime":"2024-07-13T13:26:58Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-07-13T13:26:58Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://e263f79248f9acd2f0950ac647dc7b3c2e7fc4f698429a0d6c3d348f5ff69548","started":true}],"qosClass":"BestEffort"}}]}

  Jul 13 13:27:00.195: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1785" for this suite. @ 07/13/24 13:27:00.199
â€¢ [2.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 07/13/24 13:27:00.207
  Jul 13 13:27:00.207: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename discovery @ 07/13/24 13:27:00.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:27:00.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:27:00.228
  STEP: Setting up server cert @ 07/13/24 13:27:00.231
  STEP: Requesting APIResourceList from "/api/v1" @ 07/13/24 13:27:00.57
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 07/13/24 13:27:00.572
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 07/13/24 13:27:00.573
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 07/13/24 13:27:00.574
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 07/13/24 13:27:00.575
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 07/13/24 13:27:00.576
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 07/13/24 13:27:00.577
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 07/13/24 13:27:00.578
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 07/13/24 13:27:00.579
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 07/13/24 13:27:00.58
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 07/13/24 13:27:00.581
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 07/13/24 13:27:00.582
  E0713 13:27:00.582471      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 07/13/24 13:27:00.583
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 07/13/24 13:27:00.584
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 07/13/24 13:27:00.585
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 07/13/24 13:27:00.585
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 07/13/24 13:27:00.586
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 07/13/24 13:27:00.587
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 07/13/24 13:27:00.588
  Jul 13 13:27:00.589: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-8608" for this suite. @ 07/13/24 13:27:00.592
â€¢ [0.391 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 07/13/24 13:27:00.599
  Jul 13 13:27:00.599: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename field-validation @ 07/13/24 13:27:00.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:27:00.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:27:00.615
  Jul 13 13:27:00.618: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  E0713 13:27:01.583253      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:02.583468      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0713 13:27:03.155034      20 warnings.go:70] unknown field "alpha"
  W0713 13:27:03.155053      20 warnings.go:70] unknown field "beta"
  W0713 13:27:03.155056      20 warnings.go:70] unknown field "delta"
  W0713 13:27:03.155060      20 warnings.go:70] unknown field "epsilon"
  W0713 13:27:03.155063      20 warnings.go:70] unknown field "gamma"
  E0713 13:27:03.584227      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:27:03.700: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8388" for this suite. @ 07/13/24 13:27:03.703
â€¢ [3.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 07/13/24 13:27:03.711
  Jul 13 13:27:03.711: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename svcaccounts @ 07/13/24 13:27:03.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:27:03.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:27:03.724
  Jul 13 13:27:03.731: INFO: Got root ca configmap in namespace "svcaccounts-673"
  Jul 13 13:27:03.736: INFO: Deleted root ca configmap in namespace "svcaccounts-673"
  STEP: waiting for a new root ca configmap created @ 07/13/24 13:27:04.237
  Jul 13 13:27:04.241: INFO: Recreated root ca configmap in namespace "svcaccounts-673"
  Jul 13 13:27:04.244: INFO: Updated root ca configmap in namespace "svcaccounts-673"
  E0713 13:27:04.584293      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for the root ca configmap reconciled @ 07/13/24 13:27:04.745
  Jul 13 13:27:04.750: INFO: Reconciled root ca configmap in namespace "svcaccounts-673"
  Jul 13 13:27:04.750: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-673" for this suite. @ 07/13/24 13:27:04.755
â€¢ [1.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 07/13/24 13:27:04.762
  Jul 13 13:27:04.762: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename endpointslice @ 07/13/24 13:27:04.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:27:04.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:27:04.775
  E0713 13:27:05.584389      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:06.584501      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:07.584726      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:08.584878      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:09.584980      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 07/13/24 13:27:09.847
  E0713 13:27:10.585074      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:11.585309      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:12.585382      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:13.586415      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:14.587356      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing matching pods with named port @ 07/13/24 13:27:14.855
  E0713 13:27:15.587456      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:16.587657      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:17.587741      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:18.587837      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:19.587958      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 07/13/24 13:27:19.864
  E0713 13:27:20.588800      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:21.588897      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:22.588971      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:23.589074      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:24.589183      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: recreating EndpointSlices after they've been deleted @ 07/13/24 13:27:24.872
  Jul 13 13:27:24.891: INFO: EndpointSlice for Service endpointslice-4277/example-named-port not found
  E0713 13:27:25.589299      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:26.589405      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:27.589484      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:28.589738      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:29.589843      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:30.590337      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:31.591179      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:32.591246      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:33.591342      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:34.592178      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:27:34.898: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4277" for this suite. @ 07/13/24 13:27:34.903
â€¢ [30.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 07/13/24 13:27:34.912
  Jul 13 13:27:34.912: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename emptydir @ 07/13/24 13:27:34.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:27:34.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:27:34.931
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 07/13/24 13:27:34.933
  E0713 13:27:35.597190      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:36.597271      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/13/24 13:27:36.947
  Jul 13 13:27:36.951: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-ad105169-622b-4a8e-b0c6-01e966099128 container test-container: <nil>
  STEP: delete the pod @ 07/13/24 13:27:36.957
  Jul 13 13:27:36.970: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6747" for this suite. @ 07/13/24 13:27:36.975
â€¢ [2.069 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 07/13/24 13:27:36.981
  Jul 13 13:27:36.981: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename podtemplate @ 07/13/24 13:27:36.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:27:36.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:27:36.998
  STEP: Create set of pod templates @ 07/13/24 13:27:37
  Jul 13 13:27:37.006: INFO: created test-podtemplate-1
  Jul 13 13:27:37.010: INFO: created test-podtemplate-2
  Jul 13 13:27:37.014: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 07/13/24 13:27:37.014
  STEP: delete collection of pod templates @ 07/13/24 13:27:37.018
  Jul 13 13:27:37.018: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 07/13/24 13:27:37.033
  Jul 13 13:27:37.033: INFO: requesting list of pod templates to confirm quantity
  Jul 13 13:27:37.036: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-375" for this suite. @ 07/13/24 13:27:37.038
â€¢ [0.063 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:96
  STEP: Creating a kubernetes client @ 07/13/24 13:27:37.044
  Jul 13 13:27:37.044: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename secrets @ 07/13/24 13:27:37.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:27:37.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:27:37.061
  STEP: creating secret secrets-3762/secret-test-9c1d066c-d846-4a4f-aa81-4cb05178286c @ 07/13/24 13:27:37.063
  STEP: Creating a pod to test consume secrets @ 07/13/24 13:27:37.068
  E0713 13:27:37.597835      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:38.597938      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:39.598919      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:40.599322      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/13/24 13:27:41.092
  Jul 13 13:27:41.094: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-configmaps-25af477d-abca-4d45-9ef8-5ee6b6441939 container env-test: <nil>
  STEP: delete the pod @ 07/13/24 13:27:41.1
  Jul 13 13:27:41.115: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3762" for this suite. @ 07/13/24 13:27:41.118
â€¢ [4.082 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 07/13/24 13:27:41.126
  Jul 13 13:27:41.126: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename webhook @ 07/13/24 13:27:41.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:27:41.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:27:41.141
  STEP: Setting up server cert @ 07/13/24 13:27:41.161
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/13/24 13:27:41.386
  STEP: Deploying the webhook pod @ 07/13/24 13:27:41.395
  STEP: Wait for the deployment to be ready @ 07/13/24 13:27:41.407
  Jul 13 13:27:41.414: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0713 13:27:41.599733      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:42.599895      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/13/24 13:27:43.426
  STEP: Verifying the service has paired with the endpoint @ 07/13/24 13:27:43.445
  E0713 13:27:43.600719      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:27:44.445: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jul 13 13:27:44.455: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  E0713 13:27:44.601462      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9111-crds.webhook.example.com via the AdmissionRegistration API @ 07/13/24 13:27:44.964
  STEP: Creating a custom resource while v1 is storage version @ 07/13/24 13:27:44.978
  E0713 13:27:45.602264      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:46.602920      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 07/13/24 13:27:47.009
  STEP: Patching the custom resource while v2 is storage version @ 07/13/24 13:27:47.022
  E0713 13:27:47.603547      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:27:47.614: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5753" for this suite. @ 07/13/24 13:27:47.617
  STEP: Destroying namespace "webhook-markers-4416" for this suite. @ 07/13/24 13:27:47.624
â€¢ [6.504 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 07/13/24 13:27:47.631
  Jul 13 13:27:47.631: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename emptydir @ 07/13/24 13:27:47.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:27:47.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:27:47.648
  STEP: Creating a pod to test emptydir volume type on node default medium @ 07/13/24 13:27:47.651
  E0713 13:27:48.604392      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:49.604584      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:50.605359      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:51.605438      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/13/24 13:27:51.676
  Jul 13 13:27:51.679: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-92d54411-b3b5-43e8-96eb-b3df6dcb2dfa container test-container: <nil>
  STEP: delete the pod @ 07/13/24 13:27:51.687
  Jul 13 13:27:51.704: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8103" for this suite. @ 07/13/24 13:27:51.706
â€¢ [4.082 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 07/13/24 13:27:51.713
  Jul 13 13:27:51.713: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename projected @ 07/13/24 13:27:51.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:27:51.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:27:51.729
  STEP: Creating configMap with name projected-configmap-test-volume-925b1a98-0402-4bc9-8f0e-9a5c85e87be6 @ 07/13/24 13:27:51.731
  STEP: Creating a pod to test consume configMaps @ 07/13/24 13:27:51.735
  E0713 13:27:52.606432      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:53.606782      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:54.607849      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:55.607946      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/13/24 13:27:55.756
  Jul 13 13:27:55.761: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-projected-configmaps-e0f3593d-d13c-492e-9819-0e6fbd0e77be container agnhost-container: <nil>
  STEP: delete the pod @ 07/13/24 13:27:55.768
  Jul 13 13:27:55.783: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9449" for this suite. @ 07/13/24 13:27:55.785
â€¢ [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 07/13/24 13:27:55.793
  Jul 13 13:27:55.793: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename secrets @ 07/13/24 13:27:55.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:27:55.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:27:55.812
  STEP: Creating secret with name secret-test-916f5d79-5067-4f11-b33a-2836e709c471 @ 07/13/24 13:27:55.815
  STEP: Creating a pod to test consume secrets @ 07/13/24 13:27:55.82
  E0713 13:27:56.608914      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:57.609038      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/13/24 13:27:57.838
  Jul 13 13:27:57.841: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-secrets-c9539e79-85d0-4616-9e4b-72d9b6edf0e5 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/13/24 13:27:57.849
  Jul 13 13:27:57.861: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3100" for this suite. @ 07/13/24 13:27:57.863
â€¢ [2.076 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 07/13/24 13:27:57.87
  Jul 13 13:27:57.870: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename deployment @ 07/13/24 13:27:57.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:27:57.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:27:57.888
  Jul 13 13:27:57.890: INFO: Creating deployment "test-recreate-deployment"
  Jul 13 13:27:57.897: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Jul 13 13:27:57.905: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  E0713 13:27:58.609130      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:27:59.609342      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:27:59.915: INFO: Waiting deployment "test-recreate-deployment" to complete
  Jul 13 13:27:59.917: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Jul 13 13:27:59.927: INFO: Updating deployment test-recreate-deployment
  Jul 13 13:27:59.927: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Jul 13 13:28:00.009: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2691",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "49e9d551-9e24-4f4e-bebd-0f87301025e8",
      ResourceVersion: (string) (len=5) "35245",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474077,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474077,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jul 13 13:28:00.012: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2691",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f3de481b-a596-430b-8ef7-852f70ba8780",
      ResourceVersion: (string) (len=5) "35244",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474079,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "49e9d551-9e24-4f4e-bebd-0f87301025e8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 39 65 39 64 35  35 31 2d 39 65 32 34 2d  |\"49e9d551-9e24-|
              00000120  34 66 34 65 2d 62 65 62  64 2d 30 66 38 37 33 30  |4f4e-bebd-0f8730|
              00000130  31 30 32 35 65 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1025e8\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45",
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul 13 13:28:00.045: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Jul 13 13:28:00.046: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-5cf87b5b86",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2691",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "40d5aed9-5b43-48f8-8248-f568cea51e63",
      ResourceVersion: (string) (len=5) "35234",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474077,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "49e9d551-9e24-4f4e-bebd-0f87301025e8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 39 65 39 64 35  35 31 2d 39 65 32 34 2d  |\"49e9d551-9e24-|
              00000120  34 66 34 65 2d 62 65 62  64 2d 30 66 38 37 33 30  |4f4e-bebd-0f8730|
              00000130  31 30 32 35 65 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1025e8\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul 13 13:28:00.050: INFO: Pod "test-recreate-deployment-76fb77d45-jfczc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-jfczc",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-2691",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "838e2079-061b-405f-900c-e29b7e9957e1",
      ResourceVersion: (string) (len=5) "35246",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474079,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "f3de481b-a596-430b-8ef7-852f70ba8780",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 33  64 65 34 38 31 62 2d 61  |d\":\"f3de481b-a|
              00000090  35 39 36 2d 34 33 30 62  2d 38 65 66 37 2d 38 35  |596-430b-8ef7-85|
              000000a0  32 66 37 30 62 61 38 37  38 30 5c 22 7d 22 3a 7b  |2f70ba8780\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rs5jj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rs5jj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-37-214",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.37.214",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.37.214"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474079,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 13 13:28:00.051: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2691" for this suite. @ 07/13/24 13:28:00.054
â€¢ [2.191 seconds]
------------------------------
S
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 07/13/24 13:28:00.06
  Jul 13 13:28:00.060: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename events @ 07/13/24 13:28:00.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:28:00.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:28:00.076
  STEP: Create set of events @ 07/13/24 13:28:00.078
  Jul 13 13:28:00.084: INFO: created test-event-1
  Jul 13 13:28:00.087: INFO: created test-event-2
  Jul 13 13:28:00.091: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 07/13/24 13:28:00.091
  STEP: delete collection of events @ 07/13/24 13:28:00.094
  Jul 13 13:28:00.094: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 07/13/24 13:28:00.116
  Jul 13 13:28:00.116: INFO: requesting list of events to confirm quantity
  Jul 13 13:28:00.119: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5162" for this suite. @ 07/13/24 13:28:00.122
â€¢ [0.069 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 07/13/24 13:28:00.13
  Jul 13 13:28:00.130: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename projected @ 07/13/24 13:28:00.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:28:00.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:28:00.148
  STEP: Creating the pod @ 07/13/24 13:28:00.154
  E0713 13:28:00.609991      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:01.610908      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:02.611259      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:28:02.695: INFO: Successfully updated pod "annotationupdatececa3cd0-d9b8-42c4-a564-ae9fa2639be0"
  E0713 13:28:03.611265      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:04.611743      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:05.612219      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:06.612333      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:28:06.719: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1027" for this suite. @ 07/13/24 13:28:06.723
â€¢ [6.601 seconds]
------------------------------
SSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:94
  STEP: Creating a kubernetes client @ 07/13/24 13:28:06.731
  Jul 13 13:28:06.731: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename configmap @ 07/13/24 13:28:06.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:28:06.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:28:06.746
  STEP: Creating configMap configmap-6924/configmap-test-d1aa46a3-2c72-46c6-9d51-4212434bbe84 @ 07/13/24 13:28:06.749
  STEP: Creating a pod to test consume configMaps @ 07/13/24 13:28:06.753
  E0713 13:28:07.612440      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:08.613240      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/13/24 13:28:08.769
  Jul 13 13:28:08.772: INFO: Trying to get logs from node ip-172-31-89-122 pod pod-configmaps-93ef996c-d7e2-483a-92e0-f21901783721 container env-test: <nil>
  STEP: delete the pod @ 07/13/24 13:28:08.783
  Jul 13 13:28:08.801: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6924" for this suite. @ 07/13/24 13:28:08.805
â€¢ [2.080 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 07/13/24 13:28:08.811
  Jul 13 13:28:08.811: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename downward-api @ 07/13/24 13:28:08.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:28:08.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:28:08.829
  STEP: Creating a pod to test downward api env vars @ 07/13/24 13:28:08.832
  E0713 13:28:09.613368      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:10.613459      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/13/24 13:28:10.854
  Jul 13 13:28:10.856: INFO: Trying to get logs from node ip-172-31-89-122 pod downward-api-8c3fc956-f91b-439a-a739-3341e67be7ac container dapi-container: <nil>
  STEP: delete the pod @ 07/13/24 13:28:10.862
  Jul 13 13:28:10.879: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8225" for this suite. @ 07/13/24 13:28:10.882
â€¢ [2.078 seconds]
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 07/13/24 13:28:10.889
  Jul 13 13:28:10.889: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename csiinlinevolumes @ 07/13/24 13:28:10.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:28:10.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:28:10.904
  STEP: Creating two CSIDrivers @ 07/13/24 13:28:10.907
  STEP: Getting "inline-driver-5da3e6d8-48d0-4756-b288-c7fbc04c6907" & "inline-driver-36490307-253f-4c2c-bf1c-f8158353a820" @ 07/13/24 13:28:10.924
  STEP: Patching the CSIDriver "inline-driver-36490307-253f-4c2c-bf1c-f8158353a820" @ 07/13/24 13:28:10.929
  STEP: Updating the CSIDriver "inline-driver-36490307-253f-4c2c-bf1c-f8158353a820" @ 07/13/24 13:28:10.936
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-2577" @ 07/13/24 13:28:10.943
  STEP: Deleting CSIDriver "inline-driver-5da3e6d8-48d0-4756-b288-c7fbc04c6907" @ 07/13/24 13:28:10.946
  STEP: Confirm deletion of CSIDriver "inline-driver-5da3e6d8-48d0-4756-b288-c7fbc04c6907" @ 07/13/24 13:28:10.951
  STEP: Deleting CSIDriver "inline-driver-36490307-253f-4c2c-bf1c-f8158353a820" via DeleteCollection @ 07/13/24 13:28:10.957
  STEP: Confirm deletion of CSIDriver "inline-driver-36490307-253f-4c2c-bf1c-f8158353a820" @ 07/13/24 13:28:10.966
  Jul 13 13:28:10.969: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-2577" for this suite. @ 07/13/24 13:28:10.973
â€¢ [0.091 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 07/13/24 13:28:10.98
  Jul 13 13:28:10.980: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename downward-api @ 07/13/24 13:28:10.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:28:10.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:28:10.995
  STEP: Creating a pod to test downward api env vars @ 07/13/24 13:28:10.998
  E0713 13:28:11.614500      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:12.614769      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:13.614884      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:14.614946      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/13/24 13:28:15.018
  Jul 13 13:28:15.020: INFO: Trying to get logs from node ip-172-31-89-122 pod downward-api-f540ba9c-037a-42a4-8b1e-2969cba29f4f container dapi-container: <nil>
  STEP: delete the pod @ 07/13/24 13:28:15.026
  Jul 13 13:28:15.042: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-847" for this suite. @ 07/13/24 13:28:15.045
â€¢ [4.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 07/13/24 13:28:15.052
  Jul 13 13:28:15.052: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename replication-controller @ 07/13/24 13:28:15.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:28:15.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:28:15.069
  Jul 13 13:28:15.072: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 07/13/24 13:28:15.082
  STEP: Checking rc "condition-test" has the desired failure condition set @ 07/13/24 13:28:15.087
  E0713 13:28:15.615161      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 07/13/24 13:28:16.1
  Jul 13 13:28:16.113: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 07/13/24 13:28:16.113
  E0713 13:28:16.615911      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:28:17.126: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6635" for this suite. @ 07/13/24 13:28:17.137
â€¢ [2.093 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 07/13/24 13:28:17.145
  Jul 13 13:28:17.145: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename pods @ 07/13/24 13:28:17.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:28:17.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:28:17.171
  STEP: creating pod @ 07/13/24 13:28:17.175
  E0713 13:28:17.616009      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:18.616192      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:28:19.198: INFO: Pod pod-hostip-76271c28-af43-431f-8396-e7417729942a has hostIP: 172.31.37.214
  Jul 13 13:28:19.199: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3235" for this suite. @ 07/13/24 13:28:19.201
â€¢ [2.065 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:349
  STEP: Creating a kubernetes client @ 07/13/24 13:28:19.21
  Jul 13 13:28:19.211: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename security-context-test @ 07/13/24 13:28:19.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:28:19.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:28:19.229
  E0713 13:28:19.617140      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:20.617386      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:21.617490      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:22.617720      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:28:23.257: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1917" for this suite. @ 07/13/24 13:28:23.26
â€¢ [4.057 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 07/13/24 13:28:23.268
  Jul 13 13:28:23.268: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename apf @ 07/13/24 13:28:23.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:28:23.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:28:23.284
  STEP: getting /apis @ 07/13/24 13:28:23.286
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 07/13/24 13:28:23.289
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 07/13/24 13:28:23.29
  STEP: creating @ 07/13/24 13:28:23.291
  STEP: getting @ 07/13/24 13:28:23.305
  STEP: listing @ 07/13/24 13:28:23.308
  STEP: watching @ 07/13/24 13:28:23.311
  Jul 13 13:28:23.311: INFO: starting watch
  STEP: patching @ 07/13/24 13:28:23.312
  STEP: updating @ 07/13/24 13:28:23.318
  Jul 13 13:28:23.328: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 07/13/24 13:28:23.328
  STEP: patching /status @ 07/13/24 13:28:23.331
  STEP: updating /status @ 07/13/24 13:28:23.337
  STEP: deleting @ 07/13/24 13:28:23.343
  STEP: deleting a collection @ 07/13/24 13:28:23.356
  Jul 13 13:28:23.374: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-4744" for this suite. @ 07/13/24 13:28:23.377
â€¢ [0.116 seconds]
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 07/13/24 13:28:23.384
  Jul 13 13:28:23.384: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename cronjob @ 07/13/24 13:28:23.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:28:23.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:28:23.4
  STEP: Creating a suspended cronjob @ 07/13/24 13:28:23.403
  STEP: Ensuring no jobs are scheduled @ 07/13/24 13:28:23.407
  E0713 13:28:23.618413      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:24.619434      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:25.620057      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:26.620285      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:27.620989      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:28.621785      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:29.622520      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:30.622612      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:31.623277      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:32.623378      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:33.624065      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:34.625055      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:35.625447      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:36.625645      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:37.626156      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:38.626907      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:39.627448      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:40.627564      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:41.627629      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:42.627817      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:43.628136      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:44.629115      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:45.629849      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:46.630900      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:47.631398      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:48.631583      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:49.631961      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:50.632103      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:51.632822      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:52.632916      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:53.633504      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:54.633567      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:55.634065      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:56.634912      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:57.635726      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:58.635824      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:28:59.636785      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:00.637813      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:01.637915      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:02.638924      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:03.639492      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:04.639685      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:05.640347      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:06.640458      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:07.640511      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:08.641528      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:09.641968      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:10.642054      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:11.642611      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:12.642691      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:13.643328      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:14.644246      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:15.644304      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:16.644401      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:17.645282      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:18.645481      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:19.646528      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:20.646630      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:21.647220      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:22.647482      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:23.648370      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:24.648474      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:25.649130      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:26.649253      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:27.649358      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:28.649448      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:29.650209      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:30.650320      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:31.650424      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:32.650497      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:33.650802      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:34.650976      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:35.651682      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:36.652669      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:37.653157      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:38.653332      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:39.654242      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:40.654345      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:41.654424      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:42.654893      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:43.655710      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:44.655821      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:45.656565      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:46.656667      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:47.657372      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:48.657584      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:49.658418      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:50.658520      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:51.658623      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:52.658729      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:53.658797      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:54.659005      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:55.659619      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:56.659845      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:57.660620      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:58.660633      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:29:59.660730      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:00.661109      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:01.661855      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:02.662886      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:03.663615      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:04.663732      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:05.664081      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:06.664183      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:07.664980      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:08.665083      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:09.665973      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:10.666061      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:11.666731      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:12.666913      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:13.667770      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:14.668052      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:15.668678      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:16.668776      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:17.669511      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:18.669733      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:19.670601      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:20.671144      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:21.671256      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:22.671441      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:23.672257      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:24.673116      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:25.673395      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:26.673491      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:27.674474      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:28.674897      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:29.675907      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:30.676236      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:31.676328      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:32.676498      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:33.676989      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:34.677043      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:35.678053      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:36.678186      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:37.679197      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:38.679295      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:39.679356      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:40.679480      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:41.679560      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:42.679651      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:43.679715      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:44.680787      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:45.681506      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:46.681613      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:47.682129      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:48.682263      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:49.682864      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:50.682967      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:51.683810      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:52.683905      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:53.684523      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:54.684638      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:55.684723      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:56.685067      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:57.685334      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:58.685575      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:30:59.686423      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:00.686648      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:01.686760      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:02.687013      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:03.687881      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:04.688211      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:05.688926      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:06.689018      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:07.690045      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:08.691111      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:09.691939      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:10.692117      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:11.692181      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:12.692354      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:13.692527      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:14.692920      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:15.693672      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:16.693849      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:17.694881      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:18.695897      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:19.696962      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:20.697076      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:21.698115      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:22.698886      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:23.699797      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:24.700181      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:25.700648      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:26.700743      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:27.700784      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:28.700971      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:29.701660      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:30.701811      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:31.702519      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:32.702876      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:33.703411      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:34.703502      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:35.703716      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:36.703883      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:37.704634      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:38.704852      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:39.705113      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:40.705230      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:41.705310      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:42.705505      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:43.705523      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:44.705807      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:45.706745      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:46.706877      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:47.706973      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:48.707726      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:49.707922      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:50.708233      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:51.708718      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:52.709666      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:53.709807      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:54.709894      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:55.710342      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:56.710869      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:57.711078      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:58.711163      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:31:59.712196      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:00.712416      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:01.713127      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:02.713285      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:03.713360      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:04.713450      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:05.713548      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:06.713785      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:07.714347      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:08.714884      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:09.715003      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:10.715096      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:11.716136      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:12.716228      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:13.716246      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:14.716488      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:15.717282      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:16.717494      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:17.717790      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:18.717897      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:19.718520      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:20.718647      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:21.719204      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:22.719402      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:23.720100      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:24.720326      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:25.721140      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:26.721240      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:27.721331      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:28.721440      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:29.722098      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:30.722868      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:31.723449      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:32.723635      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:33.723720      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:34.724768      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:35.725567      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:36.726305      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:37.727239      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:38.727343      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:39.727811      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:40.728278      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:41.728811      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:42.728981      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:43.729134      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:44.729346      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:45.730009      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:46.730912      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:47.731714      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:48.731874      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:49.732811      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:50.733025      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:51.733639      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:52.733819      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:53.734283      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:54.734874      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:55.735513      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:56.735612      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:57.736532      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:58.736648      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:32:59.737616      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:00.737811      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:01.738647      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:02.738754      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:03.739403      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:04.740199      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:05.740535      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:06.740740      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:07.741279      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:08.742111      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:09.742889      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:10.743201      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:11.744078      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:12.744460      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:13.744833      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:14.745074      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:15.746027      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:16.746897      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:17.746991      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:18.747081      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:19.747885      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:20.748168      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:21.749151      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:22.749363      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 07/13/24 13:33:23.416
  STEP: Removing cronjob @ 07/13/24 13:33:23.418
  Jul 13 13:33:23.425: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5919" for this suite. @ 07/13/24 13:33:23.429
â€¢ [300.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:572
  STEP: Creating a kubernetes client @ 07/13/24 13:33:23.435
  Jul 13 13:33:23.435: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename job @ 07/13/24 13:33:23.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:33:23.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:33:23.451
  STEP: Creating a job @ 07/13/24 13:33:23.454
  STEP: Ensuring job reaches completions @ 07/13/24 13:33:23.462
  E0713 13:33:23.750245      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:24.750379      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:25.750924      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:26.750953      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:27.751686      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:28.751848      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:29.752467      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:30.752561      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:31.753211      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:32.753397      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:33:33.467: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2962" for this suite. @ 07/13/24 13:33:33.471
â€¢ [10.041 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 07/13/24 13:33:33.476
  Jul 13 13:33:33.476: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename conformance-tests @ 07/13/24 13:33:33.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:33:33.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:33:33.493
  STEP: Getting node addresses @ 07/13/24 13:33:33.496
  Jul 13 13:33:33.496: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Jul 13 13:33:33.501: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-4177" for this suite. @ 07/13/24 13:33:33.505
â€¢ [0.033 seconds]
------------------------------
SSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 07/13/24 13:33:33.51
  Jul 13 13:33:33.510: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename proxy @ 07/13/24 13:33:33.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:33:33.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:33:33.523
  Jul 13 13:33:33.526: INFO: Creating pod...
  E0713 13:33:33.754084      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:34.754884      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:33:35.543: INFO: Creating service...
  Jul 13 13:33:35.557: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4468/pods/agnhost/proxy?method=DELETE
  Jul 13 13:33:35.568: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jul 13 13:33:35.568: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4468/pods/agnhost/proxy?method=OPTIONS
  Jul 13 13:33:35.572: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jul 13 13:33:35.572: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4468/pods/agnhost/proxy?method=PATCH
  Jul 13 13:33:35.577: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jul 13 13:33:35.577: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4468/pods/agnhost/proxy?method=POST
  Jul 13 13:33:35.580: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jul 13 13:33:35.580: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4468/pods/agnhost/proxy?method=PUT
  Jul 13 13:33:35.584: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jul 13 13:33:35.584: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4468/services/e2e-proxy-test-service/proxy?method=DELETE
  Jul 13 13:33:35.591: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jul 13 13:33:35.591: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4468/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Jul 13 13:33:35.595: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jul 13 13:33:35.595: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4468/services/e2e-proxy-test-service/proxy?method=PATCH
  Jul 13 13:33:35.601: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jul 13 13:33:35.601: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4468/services/e2e-proxy-test-service/proxy?method=POST
  Jul 13 13:33:35.608: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jul 13 13:33:35.608: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4468/services/e2e-proxy-test-service/proxy?method=PUT
  Jul 13 13:33:35.612: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jul 13 13:33:35.612: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4468/pods/agnhost/proxy?method=GET
  Jul 13 13:33:35.615: INFO: http.Client request:GET StatusCode:301
  Jul 13 13:33:35.615: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4468/services/e2e-proxy-test-service/proxy?method=GET
  Jul 13 13:33:35.620: INFO: http.Client request:GET StatusCode:301
  Jul 13 13:33:35.620: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4468/pods/agnhost/proxy?method=HEAD
  Jul 13 13:33:35.622: INFO: http.Client request:HEAD StatusCode:301
  Jul 13 13:33:35.622: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4468/services/e2e-proxy-test-service/proxy?method=HEAD
  Jul 13 13:33:35.627: INFO: http.Client request:HEAD StatusCode:301
  Jul 13 13:33:35.627: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4468" for this suite. @ 07/13/24 13:33:35.632
â€¢ [2.128 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1731
  STEP: Creating a kubernetes client @ 07/13/24 13:33:35.638
  Jul 13 13:33:35.638: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename kubectl @ 07/13/24 13:33:35.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:33:35.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:33:35.656
  Jul 13 13:33:35.658: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-1074 version'
  Jul 13 13:33:35.695: INFO: stderr: ""
  Jul 13 13:33:35.695: INFO: stdout: "Client Version: v1.29.6\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.29.6\n"
  Jul 13 13:33:35.695: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1074" for this suite. @ 07/13/24 13:33:35.698
â€¢ [0.066 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 07/13/24 13:33:35.704
  Jul 13 13:33:35.704: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename emptydir @ 07/13/24 13:33:35.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:33:35.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:33:35.718
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 07/13/24 13:33:35.721
  E0713 13:33:35.755864      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:36.755996      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:37.756246      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:38.756447      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/13/24 13:33:39.739
  Jul 13 13:33:39.743: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-22257cc3-f2e9-4ced-a382-2d22cb2231b7 container test-container: <nil>
  E0713 13:33:39.757062      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 07/13/24 13:33:39.759
  Jul 13 13:33:39.773: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2494" for this suite. @ 07/13/24 13:33:39.776
â€¢ [4.078 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1084
  STEP: Creating a kubernetes client @ 07/13/24 13:33:39.782
  Jul 13 13:33:39.782: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename kubectl @ 07/13/24 13:33:39.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:33:39.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:33:39.801
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/13/24 13:33:39.803
  Jul 13 13:33:39.803: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-8976 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Jul 13 13:33:39.853: INFO: stderr: ""
  Jul 13 13:33:39.853: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 07/13/24 13:33:39.853
  Jul 13 13:33:39.853: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-8976 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  Jul 13 13:33:39.901: INFO: stderr: ""
  Jul 13 13:33:39.901: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/13/24 13:33:39.901
  Jul 13 13:33:39.905: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-8976 delete pods e2e-test-httpd-pod'
  E0713 13:33:40.757252      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:41.757314      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:33:41.985: INFO: stderr: ""
  Jul 13 13:33:41.985: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jul 13 13:33:41.985: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8976" for this suite. @ 07/13/24 13:33:41.988
â€¢ [2.212 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 07/13/24 13:33:41.994
  Jul 13 13:33:41.994: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename crd-webhook @ 07/13/24 13:33:41.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:33:42.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:33:42.009
  STEP: Setting up server cert @ 07/13/24 13:33:42.011
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 07/13/24 13:33:42.179
  STEP: Deploying the custom resource conversion webhook pod @ 07/13/24 13:33:42.189
  STEP: Wait for the deployment to be ready @ 07/13/24 13:33:42.201
  Jul 13 13:33:42.211: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0713 13:33:42.758093      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:43.758201      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/13/24 13:33:44.222
  STEP: Verifying the service has paired with the endpoint @ 07/13/24 13:33:44.239
  E0713 13:33:44.758882      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:33:45.239: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Jul 13 13:33:45.247: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  E0713 13:33:45.759120      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:46.760026      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:47.760946      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 07/13/24 13:33:47.801
  STEP: v2 custom resource should be converted @ 07/13/24 13:33:47.806
  Jul 13 13:33:48.370: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-2926" for this suite. @ 07/13/24 13:33:48.373
â€¢ [6.389 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 07/13/24 13:33:48.383
  Jul 13 13:33:48.383: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename namespaces @ 07/13/24 13:33:48.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:33:48.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:33:48.4
  STEP: Creating a test namespace @ 07/13/24 13:33:48.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:33:48.417
  STEP: Creating a service in the namespace @ 07/13/24 13:33:48.419
  STEP: Deleting the namespace @ 07/13/24 13:33:48.427
  STEP: Waiting for the namespace to be removed. @ 07/13/24 13:33:48.436
  E0713 13:33:48.761723      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:49.762303      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:50.762753      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:51.762852      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:52.763911      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:53.764947      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 07/13/24 13:33:54.44
  STEP: Verifying there is no service in the namespace @ 07/13/24 13:33:54.452
  Jul 13 13:33:54.456: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4889" for this suite. @ 07/13/24 13:33:54.46
  STEP: Destroying namespace "nsdeletetest-3601" for this suite. @ 07/13/24 13:33:54.465
  Jul 13 13:33:54.468: INFO: Namespace nsdeletetest-3601 was already deleted
  STEP: Destroying namespace "nsdeletetest-8317" for this suite. @ 07/13/24 13:33:54.468
â€¢ [6.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 07/13/24 13:33:54.475
  Jul 13 13:33:54.475: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename pods @ 07/13/24 13:33:54.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:33:54.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:33:54.49
  Jul 13 13:33:54.493: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: creating the pod @ 07/13/24 13:33:54.493
  STEP: submitting the pod to kubernetes @ 07/13/24 13:33:54.493
  E0713 13:33:54.766020      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:55.766119      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:33:56.569: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1197" for this suite. @ 07/13/24 13:33:56.574
â€¢ [2.106 seconds]
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 07/13/24 13:33:56.581
  Jul 13 13:33:56.581: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename projected @ 07/13/24 13:33:56.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:33:56.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:33:56.603
  STEP: Creating secret with name s-test-opt-del-5c32712b-d4fb-4125-b58a-bf56c3884115 @ 07/13/24 13:33:56.609
  STEP: Creating secret with name s-test-opt-upd-ff8e4d66-8c4c-4ca4-917d-c8058f151f6d @ 07/13/24 13:33:56.614
  STEP: Creating the pod @ 07/13/24 13:33:56.618
  E0713 13:33:56.766530      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:57.766677      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-5c32712b-d4fb-4125-b58a-bf56c3884115 @ 07/13/24 13:33:58.659
  STEP: Updating secret s-test-opt-upd-ff8e4d66-8c4c-4ca4-917d-c8058f151f6d @ 07/13/24 13:33:58.665
  STEP: Creating secret with name s-test-opt-create-5cd61be9-6c8c-4aee-84fd-36b09dd87158 @ 07/13/24 13:33:58.67
  STEP: waiting to observe update in volume @ 07/13/24 13:33:58.674
  E0713 13:33:58.767476      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:33:59.767614      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:00.767800      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:01.767918      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:34:02.708: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1485" for this suite. @ 07/13/24 13:34:02.712
â€¢ [6.137 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 07/13/24 13:34:02.719
  Jul 13 13:34:02.719: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename pods @ 07/13/24 13:34:02.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:34:02.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:34:02.737
  STEP: creating the pod @ 07/13/24 13:34:02.74
  STEP: setting up watch @ 07/13/24 13:34:02.74
  E0713 13:34:02.768595      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: submitting the pod to kubernetes @ 07/13/24 13:34:02.842
  STEP: verifying the pod is in kubernetes @ 07/13/24 13:34:02.851
  STEP: verifying pod creation was observed @ 07/13/24 13:34:02.855
  E0713 13:34:03.768889      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:04.769834      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 07/13/24 13:34:04.871
  STEP: verifying pod deletion was observed @ 07/13/24 13:34:04.878
  E0713 13:34:05.770532      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:34:06.025: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-608" for this suite. @ 07/13/24 13:34:06.03
â€¢ [3.317 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 07/13/24 13:34:06.036
  Jul 13 13:34:06.036: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename downward-api @ 07/13/24 13:34:06.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:34:06.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:34:06.054
  STEP: Creating a pod to test downward API volume plugin @ 07/13/24 13:34:06.056
  E0713 13:34:06.770998      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:07.771204      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:08.771298      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:09.771388      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/13/24 13:34:10.079
  Jul 13 13:34:10.082: INFO: Trying to get logs from node ip-172-31-89-122 pod downwardapi-volume-854bf2bd-a1a6-4e82-ae46-d166ee76c05d container client-container: <nil>
  STEP: delete the pod @ 07/13/24 13:34:10.096
  Jul 13 13:34:10.113: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5744" for this suite. @ 07/13/24 13:34:10.117
â€¢ [4.086 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 07/13/24 13:34:10.123
  Jul 13 13:34:10.123: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename deployment @ 07/13/24 13:34:10.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:34:10.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:34:10.141
  Jul 13 13:34:10.143: INFO: Creating deployment "webserver-deployment"
  Jul 13 13:34:10.147: INFO: Waiting for observed generation 1
  E0713 13:34:10.771801      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:11.771841      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:34:12.153: INFO: Waiting for all required pods to come up
  Jul 13 13:34:12.156: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 07/13/24 13:34:12.156
  Jul 13 13:34:12.156: INFO: Waiting for deployment "webserver-deployment" to complete
  Jul 13 13:34:12.163: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Jul 13 13:34:12.172: INFO: Updating deployment webserver-deployment
  Jul 13 13:34:12.172: INFO: Waiting for observed generation 2
  E0713 13:34:12.773162      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:13.773335      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:34:14.181: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Jul 13 13:34:14.185: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Jul 13 13:34:14.188: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Jul 13 13:34:14.197: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Jul 13 13:34:14.197: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Jul 13 13:34:14.200: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Jul 13 13:34:14.206: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Jul 13 13:34:14.206: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Jul 13 13:34:14.215: INFO: Updating deployment webserver-deployment
  Jul 13 13:34:14.215: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Jul 13 13:34:14.220: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Jul 13 13:34:14.225: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Jul 13 13:34:14.242: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-276",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ab162f4d-bf93-43e7-9926-ccc9bf8bb10c",
      ResourceVersion: (string) (len=5) "37162",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474450,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474454,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474454,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474450,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474454,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474454,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jul 13 13:34:14.256: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-276",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5e3d5362-541e-4ee5-a861-78fe10d89b26",
      ResourceVersion: (string) (len=5) "37159",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474452,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "ab162f4d-bf93-43e7-9926-ccc9bf8bb10c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474454,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 62 31 36 32 66  34 64 2d 62 66 39 33 2d  |\"ab162f4d-bf93-|
              00000120  34 33 65 37 2d 39 39 32  36 2d 63 63 63 39 62 66  |43e7-9926-ccc9bf|
              00000130  38 62 62 31 30 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8bb10c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul 13 13:34:14.258: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Jul 13 13:34:14.258: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-276",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "66f111a1-e43b-425c-8af7-7e08b0d13fe7",
      ResourceVersion: (string) (len=5) "37157",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474450,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "ab162f4d-bf93-43e7-9926-ccc9bf8bb10c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474454,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 62 31 36 32 66  34 64 2d 62 66 39 33 2d  |\"ab162f4d-bf93-|
              00000120  34 33 65 37 2d 39 39 32  36 2d 63 63 63 39 62 66  |43e7-9926-ccc9bf|
              00000130  38 62 62 31 30 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8bb10c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul 13 13:34:14.280: INFO: Pod "webserver-deployment-557759b7c7-46qn5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-46qn5",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-276",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "876dea89-ea66-4e98-a736-9be46151e618",
      ResourceVersion: (string) (len=5) "37171",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474454,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "66f111a1-e43b-425c-8af7-7e08b0d13fe7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474454,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  66 31 31 31 61 31 2d 65  |d\":\"66f111a1-e|
              00000090  34 33 62 2d 34 32 35 63  2d 38 61 66 37 2d 37 65  |43b-425c-8af7-7e|
              000000a0  30 38 62 30 64 31 33 66  65 37 5c 22 7d 22 3a 7b  |08b0d13fe7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2gm7k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2gm7k",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-89-122",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474454,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 13 13:34:14.283: INFO: Pod "webserver-deployment-557759b7c7-8xhjw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-8xhjw",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-276",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "66266c35-94d8-449f-9fed-d673e32c4dd9",
      ResourceVersion: (string) (len=5) "37022",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474450,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "66f111a1-e43b-425c-8af7-7e08b0d13fe7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474450,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  66 31 31 31 61 31 2d 65  |d\":\"66f111a1-e|
              00000090  34 33 62 2d 34 32 35 63  2d 38 61 66 37 2d 37 65  |43b-425c-8af7-7e|
              000000a0  30 38 62 30 64 31 33 66  65 37 5c 22 7d 22 3a 7b  |08b0d13fe7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474451,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 34  35 2e 31 38 34 5c 22 7d  |2.168.145.184\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mczdz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mczdz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-15-91",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474451,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474450,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474451,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474451,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474450,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.15.91",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.15.91"
        }
      },
      PodIP: (string) (len=15) "192.168.145.184",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.145.184"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474450,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63856474450,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://fbd67933579f7be1c47c1e63a0cfa5f004b944d7142ec648bfcf4b4347d56618",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 13 13:34:14.284: INFO: Pod "webserver-deployment-557759b7c7-bpdrg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-bpdrg",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-276",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8356415d-135a-4f18-acfa-81621a7018ae",
      ResourceVersion: (string) (len=5) "37175",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474454,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "66f111a1-e43b-425c-8af7-7e08b0d13fe7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474454,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  66 31 31 31 61 31 2d 65  |d\":\"66f111a1-e|
              00000090  34 33 62 2d 34 32 35 63  2d 38 61 66 37 2d 37 65  |43b-425c-8af7-7e|
              000000a0  30 38 62 30 64 31 33 66  65 37 5c 22 7d 22 3a 7b  |08b0d13fe7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7cvfb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7cvfb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 13 13:34:14.285: INFO: Pod "webserver-deployment-557759b7c7-bt9zv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-bt9zv",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-276",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dbd7fa01-1a07-401a-b8c9-a34329a21bc5",
      ResourceVersion: (string) (len=5) "37028",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474450,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "66f111a1-e43b-425c-8af7-7e08b0d13fe7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474450,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  66 31 31 31 61 31 2d 65  |d\":\"66f111a1-e|
              00000090  34 33 62 2d 34 32 35 63  2d 38 61 66 37 2d 37 65  |43b-425c-8af7-7e|
              000000a0  30 38 62 30 64 31 33 66  65 37 5c 22 7d 22 3a 7b  |08b0d13fe7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474451,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 34  35 2e 31 37 31 5c 22 7d  |2.168.145.171\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9nfns",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9nfns",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-15-91",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474451,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474450,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474451,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474451,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474450,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.15.91",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.15.91"
        }
      },
      PodIP: (string) (len=15) "192.168.145.171",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.145.171"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474450,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63856474451,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://db1b43f6ae86e987d326762438c6c056a363d1774267c27c5df29698f1fc301a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 13 13:34:14.287: INFO: Pod "webserver-deployment-557759b7c7-drd85" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-drd85",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-276",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2c6f58db-118e-4932-9ed5-fb07580d935d",
      ResourceVersion: (string) (len=5) "37035",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474450,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "66f111a1-e43b-425c-8af7-7e08b0d13fe7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474450,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  66 31 31 31 61 31 2d 65  |d\":\"66f111a1-e|
              00000090  34 33 62 2d 34 32 35 63  2d 38 61 66 37 2d 37 65  |43b-425c-8af7-7e|
              000000a0  30 38 62 30 64 31 33 66  65 37 5c 22 7d 22 3a 7b  |08b0d13fe7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474451,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 37 37  2e 32 34 33 5c 22 7d 22  |2.168.77.243\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r8nsm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r8nsm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-37-214",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474451,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474450,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474451,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474451,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474450,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.37.214",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.37.214"
        }
      },
      PodIP: (string) (len=14) "192.168.77.243",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.77.243"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474450,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63856474451,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9dcfa3fb4b1112884e6f74bc7a28be0cd6bffcb957504ce86bd9cd81b2d6e092",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 13 13:34:14.290: INFO: Pod "webserver-deployment-557759b7c7-kz2sl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-kz2sl",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-276",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d2463307-3261-469a-b710-74d60d8f4983",
      ResourceVersion: (string) (len=5) "37178",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474454,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "66f111a1-e43b-425c-8af7-7e08b0d13fe7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474454,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  66 31 31 31 61 31 2d 65  |d\":\"66f111a1-e|
              00000090  34 33 62 2d 34 32 35 63  2d 38 61 66 37 2d 37 65  |43b-425c-8af7-7e|
              000000a0  30 38 62 30 64 31 33 66  65 37 5c 22 7d 22 3a 7b  |08b0d13fe7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xtv7p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xtv7p",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 13 13:34:14.291: INFO: Pod "webserver-deployment-557759b7c7-ss2mq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-ss2mq",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-276",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cb03b288-102a-4017-a426-bffbb70fc60d",
      ResourceVersion: (string) (len=5) "36995",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474450,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "66f111a1-e43b-425c-8af7-7e08b0d13fe7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474450,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  66 31 31 31 61 31 2d 65  |d\":\"66f111a1-e|
              00000090  34 33 62 2d 34 32 35 63  2d 38 61 66 37 2d 37 65  |43b-425c-8af7-7e|
              000000a0  30 38 62 30 64 31 33 66  65 37 5c 22 7d 22 3a 7b  |08b0d13fe7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474451,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 36 37  2e 31 36 32 5c 22 7d 22  |2.168.67.162\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-22m2q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-22m2q",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-89-122",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474450,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474450,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474450,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474450,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474450,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.89.122",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.89.122"
        }
      },
      PodIP: (string) (len=14) "192.168.67.162",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.67.162"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474450,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63856474450,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://85bb423233333909a15a3db6ab1e2085fa57c42b7f082fbdd6efe6a5ffa20372",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 13 13:34:14.292: INFO: Pod "webserver-deployment-557759b7c7-tksq2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-tksq2",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-276",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0340bef8-0ef9-422c-8798-5c3d7b23938c",
      ResourceVersion: (string) (len=5) "37173",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474454,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "66f111a1-e43b-425c-8af7-7e08b0d13fe7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474454,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  66 31 31 31 61 31 2d 65  |d\":\"66f111a1-e|
              00000090  34 33 62 2d 34 32 35 63  2d 38 61 66 37 2d 37 65  |43b-425c-8af7-7e|
              000000a0  30 38 62 30 64 31 33 66  65 37 5c 22 7d 22 3a 7b  |08b0d13fe7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k55zl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k55zl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 13 13:34:14.293: INFO: Pod "webserver-deployment-557759b7c7-tqm4l" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-tqm4l",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-276",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fef3dd5f-efca-4858-9e37-2d3019cc0e21",
      ResourceVersion: (string) (len=5) "37169",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474454,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "66f111a1-e43b-425c-8af7-7e08b0d13fe7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474454,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  66 31 31 31 61 31 2d 65  |d\":\"66f111a1-e|
              00000090  34 33 62 2d 34 32 35 63  2d 38 61 66 37 2d 37 65  |43b-425c-8af7-7e|
              000000a0  30 38 62 30 64 31 33 66  65 37 5c 22 7d 22 3a 7b  |08b0d13fe7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q2lsd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q2lsd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-37-214",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474454,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 13 13:34:14.294: INFO: Pod "webserver-deployment-557759b7c7-tt48b" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-tt48b",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-276",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9b25b020-68bd-4c86-b815-0a559cba89c8",
      ResourceVersion: (string) (len=5) "37025",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474450,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "66f111a1-e43b-425c-8af7-7e08b0d13fe7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474450,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  66 31 31 31 61 31 2d 65  |d\":\"66f111a1-e|
              00000090  34 33 62 2d 34 32 35 63  2d 38 61 66 37 2d 37 65  |43b-425c-8af7-7e|
              000000a0  30 38 62 30 64 31 33 66  65 37 5c 22 7d 22 3a 7b  |08b0d13fe7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474451,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 34  35 2e 31 38 32 5c 22 7d  |2.168.145.182\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hbdkg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hbdkg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-15-91",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474451,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474450,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474451,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474451,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474450,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.15.91",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.15.91"
        }
      },
      PodIP: (string) (len=15) "192.168.145.182",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.145.182"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474450,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63856474451,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c1c3b9a4eb527ab32f229fae5f2954e39e7346690ce4c4a5c614c9a89ed4e211",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 13 13:34:14.296: INFO: Pod "webserver-deployment-557759b7c7-v2kv5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-v2kv5",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-276",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "468e5828-859a-4e7f-aa20-eeb61e103453",
      ResourceVersion: (string) (len=5) "37174",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474454,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "66f111a1-e43b-425c-8af7-7e08b0d13fe7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474454,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  66 31 31 31 61 31 2d 65  |d\":\"66f111a1-e|
              00000090  34 33 62 2d 34 32 35 63  2d 38 61 66 37 2d 37 65  |43b-425c-8af7-7e|
              000000a0  30 38 62 30 64 31 33 66  65 37 5c 22 7d 22 3a 7b  |08b0d13fe7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nl8tm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nl8tm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 13 13:34:14.297: INFO: Pod "webserver-deployment-557759b7c7-vg5sm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-vg5sm",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-276",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8f860ed7-0c8a-4d68-9815-239d4625cdf3",
      ResourceVersion: (string) (len=5) "37001",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474450,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "66f111a1-e43b-425c-8af7-7e08b0d13fe7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474450,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  66 31 31 31 61 31 2d 65  |d\":\"66f111a1-e|
              00000090  34 33 62 2d 34 32 35 63  2d 38 61 66 37 2d 37 65  |43b-425c-8af7-7e|
              000000a0  30 38 62 30 64 31 33 66  65 37 5c 22 7d 22 3a 7b  |08b0d13fe7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474451,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 36 37  2e 31 34 37 5c 22 7d 22  |2.168.67.147\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6drqr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6drqr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-89-122",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474450,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474450,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474450,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474450,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474450,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.89.122",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.89.122"
        }
      },
      PodIP: (string) (len=14) "192.168.67.147",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.67.147"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474450,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63856474450,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://51ba419d7b1677a2984ed75d48b4346ccc26b536aaf9efac12f929f471c65b3a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 13 13:34:14.298: INFO: Pod "webserver-deployment-557759b7c7-w99gk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-w99gk",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-276",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bb85f657-0fab-45da-82f8-8406e129311a",
      ResourceVersion: (string) (len=5) "37180",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474454,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "66f111a1-e43b-425c-8af7-7e08b0d13fe7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474454,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  66 31 31 31 61 31 2d 65  |d\":\"66f111a1-e|
              00000090  34 33 62 2d 34 32 35 63  2d 38 61 66 37 2d 37 65  |43b-425c-8af7-7e|
              000000a0  30 38 62 30 64 31 33 66  65 37 5c 22 7d 22 3a 7b  |08b0d13fe7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474454,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p9hlp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p9hlp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-37-214",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474454,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474454,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474454,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474454,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474454,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.37.214",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.37.214"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474454,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 13 13:34:14.299: INFO: Pod "webserver-deployment-557759b7c7-xrk4q" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-xrk4q",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-276",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "24ed0430-a030-4636-aac1-435d5f634533",
      ResourceVersion: (string) (len=5) "37039",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474450,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "66f111a1-e43b-425c-8af7-7e08b0d13fe7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474450,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  66 31 31 31 61 31 2d 65  |d\":\"66f111a1-e|
              00000090  34 33 62 2d 34 32 35 63  2d 38 61 66 37 2d 37 65  |43b-425c-8af7-7e|
              000000a0  30 38 62 30 64 31 33 66  65 37 5c 22 7d 22 3a 7b  |08b0d13fe7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474451,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 37 37  2e 32 31 39 5c 22 7d 22  |2.168.77.219\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-22xgd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-22xgd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-37-214",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474451,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474450,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474451,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474451,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474450,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.37.214",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.37.214"
        }
      },
      PodIP: (string) (len=14) "192.168.77.219",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.77.219"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474450,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63856474451,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://170c5c4762e9d3d33cf774cfed346fc5bc0fe4f0a64aa92aec9cfcebaa9ec844",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 13 13:34:14.303: INFO: Pod "webserver-deployment-557759b7c7-zwbmj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-zwbmj",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-276",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3f105d40-81c8-4460-bdfb-2cde2b90f40f",
      ResourceVersion: (string) (len=5) "37005",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474450,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "66f111a1-e43b-425c-8af7-7e08b0d13fe7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474450,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 36  66 31 31 31 61 31 2d 65  |d\":\"66f111a1-e|
              00000090  34 33 62 2d 34 32 35 63  2d 38 61 66 37 2d 37 65  |43b-425c-8af7-7e|
              000000a0  30 38 62 30 64 31 33 66  65 37 5c 22 7d 22 3a 7b  |08b0d13fe7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474451,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 36 37  2e 31 38 37 5c 22 7d 22  |2.168.67.187\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4tqrq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4tqrq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-89-122",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474451,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474450,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474451,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474451,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474450,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.89.122",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.89.122"
        }
      },
      PodIP: (string) (len=14) "192.168.67.187",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.67.187"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474450,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63856474450,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f01c0a3fca4f924ab7625c85e9a51d480557af169ba9fb67585831d9e26fd5c8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 13 13:34:14.307: INFO: Pod "webserver-deployment-9b4f5bf69-7gphg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-7gphg",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-276",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1cb138ad-ff40-42b9-bada-0d06f70fe683",
      ResourceVersion: (string) (len=5) "37172",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474454,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "5e3d5362-541e-4ee5-a861-78fe10d89b26",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474454,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  33 64 35 33 36 32 2d 35  |d\":\"5e3d5362-5|
              00000090  34 31 65 2d 34 65 65 35  2d 61 38 36 31 2d 37 38  |41e-4ee5-a861-78|
              000000a0  66 65 31 30 64 38 39 62  32 36 5c 22 7d 22 3a 7b  |fe10d89b26\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qjqx5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qjqx5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-15-91",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474454,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 13 13:34:14.308: INFO: Pod "webserver-deployment-9b4f5bf69-8kd9f" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-8kd9f",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-276",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5f476864-b24e-4063-ac4e-722a60bcd15f",
      ResourceVersion: (string) (len=5) "37177",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474454,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "5e3d5362-541e-4ee5-a861-78fe10d89b26",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474454,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  33 64 35 33 36 32 2d 35  |d\":\"5e3d5362-5|
              00000090  34 31 65 2d 34 65 65 35  2d 61 38 36 31 2d 37 38  |41e-4ee5-a861-78|
              000000a0  66 65 31 30 64 38 39 62  32 36 5c 22 7d 22 3a 7b  |fe10d89b26\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b6mv7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b6mv7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 13 13:34:14.308: INFO: Pod "webserver-deployment-9b4f5bf69-96g5s" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-96g5s",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-276",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2d94ffbe-6fd6-4bb6-8bbe-3a253f63e3cf",
      ResourceVersion: (string) (len=5) "37139",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474452,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "5e3d5362-541e-4ee5-a861-78fe10d89b26",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  33 64 35 33 36 32 2d 35  |d\":\"5e3d5362-5|
              00000090  34 31 65 2d 34 65 65 35  2d 61 38 36 31 2d 37 38  |41e-4ee5-a861-78|
              000000a0  66 65 31 30 64 38 39 62  32 36 5c 22 7d 22 3a 7b  |fe10d89b26\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474453,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 36 37 2e 31 36  30 5c 22 7d 22 3a 7b 22  |68.67.160\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8l479",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8l479",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-89-122",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474453,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.89.122",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.89.122"
        }
      },
      PodIP: (string) (len=14) "192.168.67.160",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.67.160"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474452,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 13 13:34:14.310: INFO: Pod "webserver-deployment-9b4f5bf69-ftmx8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-ftmx8",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-276",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b8262f23-76de-427a-bc31-a414bb633323",
      ResourceVersion: (string) (len=5) "37176",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474454,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "5e3d5362-541e-4ee5-a861-78fe10d89b26",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474454,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  33 64 35 33 36 32 2d 35  |d\":\"5e3d5362-5|
              00000090  34 31 65 2d 34 65 65 35  2d 61 38 36 31 2d 37 38  |41e-4ee5-a861-78|
              000000a0  66 65 31 30 64 38 39 62  32 36 5c 22 7d 22 3a 7b  |fe10d89b26\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q95pg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q95pg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 13 13:34:14.311: INFO: Pod "webserver-deployment-9b4f5bf69-hdnsq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-hdnsq",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-276",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "939bac7b-e52e-4ede-bd88-62998f1f95c2",
      ResourceVersion: (string) (len=5) "37155",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474452,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "5e3d5362-541e-4ee5-a861-78fe10d89b26",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  33 64 35 33 36 32 2d 35  |d\":\"5e3d5362-5|
              00000090  34 31 65 2d 34 65 65 35  2d 61 38 36 31 2d 37 38  |41e-4ee5-a861-78|
              000000a0  66 65 31 30 64 38 39 62  32 36 5c 22 7d 22 3a 7b  |fe10d89b26\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474453,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 37 37 2e 32 34  32 5c 22 7d 22 3a 7b 22  |68.77.242\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n2z6d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n2z6d",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-37-214",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474453,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.37.214",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.37.214"
        }
      },
      PodIP: (string) (len=14) "192.168.77.242",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.77.242"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474452,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 13 13:34:14.313: INFO: Pod "webserver-deployment-9b4f5bf69-r5642" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-r5642",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-276",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "612aaf5e-9ac1-49fc-828d-5bebc3a85ebb",
      ResourceVersion: (string) (len=5) "37147",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474452,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "5e3d5362-541e-4ee5-a861-78fe10d89b26",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  33 64 35 33 36 32 2d 35  |d\":\"5e3d5362-5|
              00000090  34 31 65 2d 34 65 65 35  2d 61 38 36 31 2d 37 38  |41e-4ee5-a861-78|
              000000a0  66 65 31 30 64 38 39 62  32 36 5c 22 7d 22 3a 7b  |fe10d89b26\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474453,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 34 35 2e 31  35 30 5c 22 7d 22 3a 7b  |68.145.150\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6drsp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6drsp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-15-91",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474453,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.15.91",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.15.91"
        }
      },
      PodIP: (string) (len=15) "192.168.145.150",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.145.150"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474452,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 13 13:34:14.314: INFO: Pod "webserver-deployment-9b4f5bf69-sldf6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-sldf6",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-276",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c92d9f93-675e-4056-8f6e-c65c3822d65f",
      ResourceVersion: (string) (len=5) "37143",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474452,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "5e3d5362-541e-4ee5-a861-78fe10d89b26",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  33 64 35 33 36 32 2d 35  |d\":\"5e3d5362-5|
              00000090  34 31 65 2d 34 65 65 35  2d 61 38 36 31 2d 37 38  |41e-4ee5-a861-78|
              000000a0  66 65 31 30 64 38 39 62  32 36 5c 22 7d 22 3a 7b  |fe10d89b26\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474453,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 36 37 2e 31 34  31 5c 22 7d 22 3a 7b 22  |68.67.141\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5vrd8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5vrd8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-89-122",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474453,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.89.122",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.89.122"
        }
      },
      PodIP: (string) (len=14) "192.168.67.141",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.67.141"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474452,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 13 13:34:14.319: INFO: Pod "webserver-deployment-9b4f5bf69-ssjlv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-ssjlv",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-276",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cadb09bc-a998-43d6-a199-192e0939f3ca",
      ResourceVersion: (string) (len=5) "37154",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474452,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "5e3d5362-541e-4ee5-a861-78fe10d89b26",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  33 64 35 33 36 32 2d 35  |d\":\"5e3d5362-5|
              00000090  34 31 65 2d 34 65 65 35  2d 61 38 36 31 2d 37 38  |41e-4ee5-a861-78|
              000000a0  66 65 31 30 64 38 39 62  32 36 5c 22 7d 22 3a 7b  |fe10d89b26\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474453,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 37 37 2e 32 31  36 5c 22 7d 22 3a 7b 22  |68.77.216\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ngl4h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ngl4h",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-37-214",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474453,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856474452,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.37.214",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.37.214"
        }
      },
      PodIP: (string) (len=14) "192.168.77.216",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.77.216"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856474452,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 13 13:34:14.323: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-276" for this suite. @ 07/13/24 13:34:14.348
â€¢ [4.241 seconds]
------------------------------
SSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 07/13/24 13:34:14.364
  Jul 13 13:34:14.364: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename cronjob @ 07/13/24 13:34:14.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:34:14.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:34:14.391
  STEP: Creating a ForbidConcurrent cronjob @ 07/13/24 13:34:14.395
  STEP: Ensuring a job is scheduled @ 07/13/24 13:34:14.402
  E0713 13:34:14.773800      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:15.773925      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:16.774552      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:17.774642      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:18.775300      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:19.775474      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:20.776266      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:21.776369      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:22.776861      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:23.777044      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:24.777245      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:25.777289      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:26.777387      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:27.777605      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:28.778194      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:29.778294      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:30.778370      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:31.778475      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:32.778855      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:33.779034      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:34.779112      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:35.779228      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:36.780274      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:37.780363      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:38.781285      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:39.781343      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:40.782176      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:41.783012      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:42.783098      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:43.783194      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:44.783857      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:45.784114      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:46.784973      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:47.785079      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:48.785858      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:49.785933      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:50.786036      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:51.786905      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:52.787021      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:53.787123      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:54.787808      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:55.787911      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:56.788178      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:57.788283      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:58.789041      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:34:59.789273      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 07/13/24 13:35:00.408
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 07/13/24 13:35:00.41
  STEP: Ensuring no more jobs are scheduled @ 07/13/24 13:35:00.414
  E0713 13:35:00.789807      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:01.789866      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:02.790912      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:03.790998      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:04.791464      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:05.792141      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:06.792248      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:07.792499      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:08.792590      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:09.793560      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:10.794426      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:11.794861      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:12.795479      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:13.796157      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:14.796242      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:15.796365      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:16.796474      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:17.796591      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:18.797530      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:19.797887      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:20.798787      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:21.799001      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:22.799082      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:23.799190      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:24.799259      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:25.799379      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:26.799461      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:27.799551      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:28.799666      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:29.799762      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:30.800429      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:31.800562      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:32.801316      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:33.801392      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:34.802244      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:35.802415      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:36.802521      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:37.802616      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:38.803661      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:39.803953      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:40.804488      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:41.804573      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:42.805344      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:43.805453      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:44.806523      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:45.806620      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:46.807451      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:47.807579      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:48.807655      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:49.807758      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:50.808503      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:51.808607      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:52.808677      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:53.809073      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:54.809266      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:55.809369      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:56.810342      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:57.810462      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:58.810916      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:35:59.810981      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:00.811386      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:01.811203      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:02.811667      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:03.811761      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:04.812366      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:05.812479      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:06.813428      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:07.813545      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:08.814414      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:09.814899      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:10.815480      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:11.815594      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:12.816282      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:13.816473      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:14.817598      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:15.817667      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:16.818207      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:17.818312      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:18.818892      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:19.818964      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:20.819049      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:21.819217      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:22.820240      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:23.820439      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:24.821284      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:25.821383      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:26.821431      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:27.821534      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:28.821842      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:29.821915      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:30.822889      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:31.823109      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:32.824004      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:33.824176      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:34.824306      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:35.824705      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:36.825744      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:37.825828      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:38.826476      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:39.827341      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:40.827953      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:41.828745      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:42.828950      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:43.829389      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:44.829565      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:45.829771      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:46.829812      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:47.830889      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:48.830950      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:49.831052      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:50.831825      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:51.832451      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:52.832964      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:53.833045      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:54.833156      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:55.833266      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:56.833583      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:57.833725      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:58.834773      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:36:59.834864      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:00.834976      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:01.835073      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:02.835739      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:03.836061      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:04.836196      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:05.836295      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:06.837176      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:07.837270      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:08.837771      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:09.837863      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:10.838590      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:11.838880      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:12.839277      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:13.839774      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:14.840614      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:15.840705      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:16.841489      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:17.841592      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:18.842068      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:19.842157      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:20.842818      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:21.842983      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:22.843688      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:23.843785      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:24.843903      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:25.844011      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:26.844189      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:27.844384      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:28.844481      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:29.844985      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:30.845779      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:31.845845      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:32.846877      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:33.847462      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:34.848340      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:35.848649      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:36.849304      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:37.849509      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:38.849571      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:39.849771      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:40.850735      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:41.850923      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:42.850972      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:43.851124      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:44.851213      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:45.851316      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:46.851449      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:47.851627      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:48.851890      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:49.852539      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:50.853149      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:51.853264      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:52.853365      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:53.853539      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:54.853811      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:55.853912      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:56.854327      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:57.854424      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:58.855150      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:37:59.855390      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:00.855630      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:01.855739      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:02.856456      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:03.856852      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:04.856964      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:05.857467      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:06.858344      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:07.859316      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:08.859520      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:09.859632      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:10.860271      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:11.860382      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:12.860495      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:13.861105      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:14.861791      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:15.861827      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:16.861913      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:17.862005      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:18.862295      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:19.862386      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:20.862867      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:21.863039      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:22.863137      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:23.863220      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:24.863538      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:25.863804      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:26.864311      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:27.864410      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:28.865424      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:29.865521      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:30.866257      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:31.867019      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:32.867500      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:33.868315      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:34.868796      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:35.869098      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:36.870165      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:37.870259      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:38.870929      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:39.870962      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:40.871345      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:41.871438      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:42.872503      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:43.872575      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:44.873220      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:45.873333      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:46.873407      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:47.873588      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:48.874521      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:49.874611      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:50.874696      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:51.874792      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:52.875592      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:53.876167      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:54.876979      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:55.877273      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:56.877874      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:57.877976      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:58.878905      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:38:59.879168      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:00.879257      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:01.879444      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:02.879716      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:03.879802      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:04.880078      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:05.880197      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:06.880481      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:07.880564      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:08.880800      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:09.880894      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:10.881134      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:11.881177      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:12.881953      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:13.882882      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:14.882973      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:15.883057      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:16.883342      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:17.883527      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:18.883710      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:19.884428      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:20.885848      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:21.886904      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:22.886981      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:23.887101      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:24.887809      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:25.887903      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:26.888575      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:27.888692      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:28.888782      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:29.888989      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:30.889065      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:31.889178      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:32.889970      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:33.890905      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:34.891107      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:35.891255      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:36.891349      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:37.891545      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:38.891668      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:39.892198      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:40.892278      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:41.892363      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:42.893061      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:43.893179      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:44.893272      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:45.893370      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:46.893412      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:47.893616      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:48.894585      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:49.895424      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:50.895482      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:51.895677      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:52.895754      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:53.895949      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:54.896559      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:55.896636      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:56.897417      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:57.897622      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:58.897835      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:39:59.897933      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 07/13/24 13:40:00.421
  Jul 13 13:40:00.427: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-871" for this suite. @ 07/13/24 13:40:00.431
â€¢ [346.075 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 07/13/24 13:40:00.439
  Jul 13 13:40:00.439: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename chunking @ 07/13/24 13:40:00.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:40:00.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:40:00.455
  STEP: creating a large number of resources @ 07/13/24 13:40:00.458
  E0713 13:40:00.897953      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:01.898149      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:02.898383      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:03.898663      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:04.898949      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:05.899416      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:06.899795      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:07.900301      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:08.901054      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:09.902121      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:10.903084      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:11.904048      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:12.904641      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:13.905616      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:14.906082      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:15.906868      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:16.906996      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:17.907759      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 07/13/24 13:40:18.144
  Jul 13 13:40:18.194: INFO: Retrieved 17/17 results with rv 38699 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg2OTksInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Jul 13 13:40:18.246: INFO: Retrieved 17/17 results with rv 38699 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg2OTksInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Jul 13 13:40:18.294: INFO: Retrieved 17/17 results with rv 38699 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg2OTksInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Jul 13 13:40:18.344: INFO: Retrieved 17/17 results with rv 38699 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg2OTksInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Jul 13 13:40:18.395: INFO: Retrieved 17/17 results with rv 38699 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg2OTksInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Jul 13 13:40:18.444: INFO: Retrieved 17/17 results with rv 38699 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg2OTksInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Jul 13 13:40:18.494: INFO: Retrieved 17/17 results with rv 38699 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg2OTksInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Jul 13 13:40:18.545: INFO: Retrieved 17/17 results with rv 38699 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg2OTksInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Jul 13 13:40:18.594: INFO: Retrieved 17/17 results with rv 38699 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg2OTksInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Jul 13 13:40:18.644: INFO: Retrieved 17/17 results with rv 38699 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg2OTksInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Jul 13 13:40:18.695: INFO: Retrieved 17/17 results with rv 38699 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg2OTksInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Jul 13 13:40:18.743: INFO: Retrieved 17/17 results with rv 38699 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg2OTksInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Jul 13 13:40:18.795: INFO: Retrieved 17/17 results with rv 38699 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg2OTksInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Jul 13 13:40:18.845: INFO: Retrieved 17/17 results with rv 38699 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg2OTksInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Jul 13 13:40:18.893: INFO: Retrieved 17/17 results with rv 38699 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg2OTksInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  E0713 13:40:18.907963      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:40:18.944: INFO: Retrieved 17/17 results with rv 38699 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg2OTksInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Jul 13 13:40:18.995: INFO: Retrieved 17/17 results with rv 38699 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg2OTksInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Jul 13 13:40:19.044: INFO: Retrieved 17/17 results with rv 38699 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg2OTksInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Jul 13 13:40:19.094: INFO: Retrieved 17/17 results with rv 38699 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg2OTksInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Jul 13 13:40:19.145: INFO: Retrieved 17/17 results with rv 38699 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg2OTksInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Jul 13 13:40:19.194: INFO: Retrieved 17/17 results with rv 38699 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg2OTksInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Jul 13 13:40:19.244: INFO: Retrieved 17/17 results with rv 38699 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg2OTksInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Jul 13 13:40:19.295: INFO: Retrieved 17/17 results with rv 38699 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg2OTksInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Jul 13 13:40:19.343: INFO: Retrieved 9/17 results with rv 38699 and continue 
  Jul 13 13:40:19.394: INFO: Retrieved 17/17 results with rv 38701 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDEsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Jul 13 13:40:19.445: INFO: Retrieved 17/17 results with rv 38701 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Jul 13 13:40:19.494: INFO: Retrieved 17/17 results with rv 38701 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDEsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Jul 13 13:40:19.544: INFO: Retrieved 17/17 results with rv 38701 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDEsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Jul 13 13:40:19.595: INFO: Retrieved 17/17 results with rv 38701 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDEsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Jul 13 13:40:19.644: INFO: Retrieved 17/17 results with rv 38701 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDEsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Jul 13 13:40:19.695: INFO: Retrieved 17/17 results with rv 38701 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDEsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Jul 13 13:40:19.745: INFO: Retrieved 17/17 results with rv 38701 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDEsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Jul 13 13:40:19.794: INFO: Retrieved 17/17 results with rv 38701 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDEsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Jul 13 13:40:19.844: INFO: Retrieved 17/17 results with rv 38701 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDEsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Jul 13 13:40:19.895: INFO: Retrieved 17/17 results with rv 38701 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDEsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  E0713 13:40:19.908218      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:40:19.943: INFO: Retrieved 17/17 results with rv 38701 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDEsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Jul 13 13:40:19.995: INFO: Retrieved 17/17 results with rv 38701 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDEsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Jul 13 13:40:20.045: INFO: Retrieved 17/17 results with rv 38701 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDEsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Jul 13 13:40:20.094: INFO: Retrieved 17/17 results with rv 38701 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDEsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Jul 13 13:40:20.144: INFO: Retrieved 17/17 results with rv 38701 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDEsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Jul 13 13:40:20.196: INFO: Retrieved 17/17 results with rv 38701 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDEsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Jul 13 13:40:20.243: INFO: Retrieved 17/17 results with rv 38701 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDEsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Jul 13 13:40:20.294: INFO: Retrieved 17/17 results with rv 38701 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDEsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Jul 13 13:40:20.345: INFO: Retrieved 17/17 results with rv 38701 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDEsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Jul 13 13:40:20.393: INFO: Retrieved 17/17 results with rv 38701 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDEsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Jul 13 13:40:20.444: INFO: Retrieved 17/17 results with rv 38701 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDEsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Jul 13 13:40:20.496: INFO: Retrieved 17/17 results with rv 38701 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDEsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Jul 13 13:40:20.544: INFO: Retrieved 9/17 results with rv 38701 and continue 
  Jul 13 13:40:20.595: INFO: Retrieved 17/17 results with rv 38704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Jul 13 13:40:20.645: INFO: Retrieved 17/17 results with rv 38704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Jul 13 13:40:20.694: INFO: Retrieved 17/17 results with rv 38704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Jul 13 13:40:20.745: INFO: Retrieved 17/17 results with rv 38704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Jul 13 13:40:20.795: INFO: Retrieved 17/17 results with rv 38704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Jul 13 13:40:20.844: INFO: Retrieved 17/17 results with rv 38704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Jul 13 13:40:20.894: INFO: Retrieved 17/17 results with rv 38704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  E0713 13:40:20.908438      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:40:20.945: INFO: Retrieved 17/17 results with rv 38704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Jul 13 13:40:20.993: INFO: Retrieved 17/17 results with rv 38704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Jul 13 13:40:21.044: INFO: Retrieved 17/17 results with rv 38704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Jul 13 13:40:21.095: INFO: Retrieved 17/17 results with rv 38704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Jul 13 13:40:21.143: INFO: Retrieved 17/17 results with rv 38704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Jul 13 13:40:21.194: INFO: Retrieved 17/17 results with rv 38704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Jul 13 13:40:21.245: INFO: Retrieved 17/17 results with rv 38704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Jul 13 13:40:21.294: INFO: Retrieved 17/17 results with rv 38704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Jul 13 13:40:21.344: INFO: Retrieved 17/17 results with rv 38704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Jul 13 13:40:21.395: INFO: Retrieved 17/17 results with rv 38704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Jul 13 13:40:21.443: INFO: Retrieved 17/17 results with rv 38704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Jul 13 13:40:21.494: INFO: Retrieved 17/17 results with rv 38704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Jul 13 13:40:21.545: INFO: Retrieved 17/17 results with rv 38704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Jul 13 13:40:21.593: INFO: Retrieved 17/17 results with rv 38704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Jul 13 13:40:21.644: INFO: Retrieved 17/17 results with rv 38704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Jul 13 13:40:21.695: INFO: Retrieved 17/17 results with rv 38704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Jul 13 13:40:21.743: INFO: Retrieved 9/17 results with rv 38704 and continue 
  STEP: retrieving those results all at once @ 07/13/24 13:40:21.743
  Jul 13 13:40:21.801: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-8348" for this suite. @ 07/13/24 13:40:21.846
â€¢ [21.459 seconds]
------------------------------
SSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 07/13/24 13:40:21.898
  Jul 13 13:40:21.898: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename events @ 07/13/24 13:40:21.899
  E0713 13:40:21.909072      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:40:21.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:40:21.914
  STEP: creating a test event @ 07/13/24 13:40:21.917
  STEP: listing all events in all namespaces @ 07/13/24 13:40:21.924
  STEP: patching the test event @ 07/13/24 13:40:21.93
  STEP: fetching the test event @ 07/13/24 13:40:21.936
  STEP: updating the test event @ 07/13/24 13:40:21.94
  STEP: getting the test event @ 07/13/24 13:40:21.949
  STEP: deleting the test event @ 07/13/24 13:40:21.95
  STEP: listing all events in all namespaces @ 07/13/24 13:40:21.957
  Jul 13 13:40:21.960: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8577" for this suite. @ 07/13/24 13:40:21.963
â€¢ [0.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 07/13/24 13:40:21.97
  Jul 13 13:40:21.970: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename podtemplate @ 07/13/24 13:40:21.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:40:21.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:40:21.985
  STEP: Create a pod template @ 07/13/24 13:40:21.987
  STEP: Replace a pod template @ 07/13/24 13:40:21.992
  Jul 13 13:40:21.998: INFO: Found updated podtemplate annotation: "true"

  Jul 13 13:40:21.998: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-5049" for this suite. @ 07/13/24 13:40:22.002
â€¢ [0.038 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:793
  STEP: Creating a kubernetes client @ 07/13/24 13:40:22.008
  Jul 13 13:40:22.008: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename statefulset @ 07/13/24 13:40:22.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:40:22.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:40:22.021
  STEP: Creating service test in namespace statefulset-7047 @ 07/13/24 13:40:22.023
  STEP: Looking for a node to schedule stateful set and pod @ 07/13/24 13:40:22.03
  STEP: Creating pod with conflicting port in namespace statefulset-7047 @ 07/13/24 13:40:22.036
  STEP: Waiting until pod test-pod will start running in namespace statefulset-7047 @ 07/13/24 13:40:22.043
  E0713 13:40:22.909220      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:23.909388      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-7047 @ 07/13/24 13:40:24.052
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-7047 @ 07/13/24 13:40:24.057
  Jul 13 13:40:24.076: INFO: Observed stateful pod in namespace: statefulset-7047, name: ss-0, uid: 14138a2a-445a-49e8-b11a-d4d91d071316, status phase: Pending. Waiting for statefulset controller to delete.
  Jul 13 13:40:24.088: INFO: Observed stateful pod in namespace: statefulset-7047, name: ss-0, uid: 14138a2a-445a-49e8-b11a-d4d91d071316, status phase: Failed. Waiting for statefulset controller to delete.
  Jul 13 13:40:24.113: INFO: Observed stateful pod in namespace: statefulset-7047, name: ss-0, uid: 14138a2a-445a-49e8-b11a-d4d91d071316, status phase: Failed. Waiting for statefulset controller to delete.
  Jul 13 13:40:24.118: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-7047
  STEP: Removing pod with conflicting port in namespace statefulset-7047 @ 07/13/24 13:40:24.118
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-7047 and will be in running state @ 07/13/24 13:40:24.129
  E0713 13:40:24.910150      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:25.910417      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:40:26.139: INFO: Deleting all statefulset in ns statefulset-7047
  Jul 13 13:40:26.142: INFO: Scaling statefulset ss to 0
  E0713 13:40:26.910510      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:27.910857      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:28.910945      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:29.911073      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:30.911985      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:31.912070      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:32.912154      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:33.912273      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:34.912295      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:35.912400      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:40:36.160: INFO: Waiting for statefulset status.replicas updated to 0
  Jul 13 13:40:36.164: INFO: Deleting statefulset ss
  Jul 13 13:40:36.178: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7047" for this suite. @ 07/13/24 13:40:36.183
â€¢ [14.186 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 07/13/24 13:40:36.194
  Jul 13 13:40:36.194: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename resourcequota @ 07/13/24 13:40:36.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:40:36.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:40:36.211
  STEP: Creating a ResourceQuota @ 07/13/24 13:40:36.213
  STEP: Getting a ResourceQuota @ 07/13/24 13:40:36.218
  STEP: Updating a ResourceQuota @ 07/13/24 13:40:36.221
  STEP: Verifying a ResourceQuota was modified @ 07/13/24 13:40:36.227
  STEP: Deleting a ResourceQuota @ 07/13/24 13:40:36.23
  STEP: Verifying the deleted ResourceQuota @ 07/13/24 13:40:36.239
  Jul 13 13:40:36.242: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6594" for this suite. @ 07/13/24 13:40:36.245
â€¢ [0.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 07/13/24 13:40:36.253
  Jul 13 13:40:36.253: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename watch @ 07/13/24 13:40:36.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:40:36.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:40:36.269
  STEP: creating a watch on configmaps with label A @ 07/13/24 13:40:36.271
  STEP: creating a watch on configmaps with label B @ 07/13/24 13:40:36.273
  STEP: creating a watch on configmaps with label A or B @ 07/13/24 13:40:36.274
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 07/13/24 13:40:36.275
  Jul 13 13:40:36.278: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1560  5a9f9176-b1f4-417f-8039-878d7071fad9 39260 0 2024-07-13 13:40:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-13 13:40:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 13 13:40:36.278: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1560  5a9f9176-b1f4-417f-8039-878d7071fad9 39260 0 2024-07-13 13:40:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-13 13:40:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 07/13/24 13:40:36.278
  Jul 13 13:40:36.286: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1560  5a9f9176-b1f4-417f-8039-878d7071fad9 39261 0 2024-07-13 13:40:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-13 13:40:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 13 13:40:36.286: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1560  5a9f9176-b1f4-417f-8039-878d7071fad9 39261 0 2024-07-13 13:40:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-13 13:40:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 07/13/24 13:40:36.286
  Jul 13 13:40:36.293: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1560  5a9f9176-b1f4-417f-8039-878d7071fad9 39262 0 2024-07-13 13:40:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-13 13:40:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 13 13:40:36.293: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1560  5a9f9176-b1f4-417f-8039-878d7071fad9 39262 0 2024-07-13 13:40:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-13 13:40:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 07/13/24 13:40:36.293
  Jul 13 13:40:36.300: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1560  5a9f9176-b1f4-417f-8039-878d7071fad9 39263 0 2024-07-13 13:40:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-13 13:40:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 13 13:40:36.300: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1560  5a9f9176-b1f4-417f-8039-878d7071fad9 39263 0 2024-07-13 13:40:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-13 13:40:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 07/13/24 13:40:36.3
  Jul 13 13:40:36.306: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1560  de02f015-638f-49de-a596-35344bb1ee36 39264 0 2024-07-13 13:40:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-07-13 13:40:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 13 13:40:36.306: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1560  de02f015-638f-49de-a596-35344bb1ee36 39264 0 2024-07-13 13:40:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-07-13 13:40:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0713 13:40:36.912633      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:37.912720      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:38.912825      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:39.912909      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:40.913027      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:41.913234      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:42.914275      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:43.914358      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:44.914619      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:45.914693      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 07/13/24 13:40:46.307
  Jul 13 13:40:46.314: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1560  de02f015-638f-49de-a596-35344bb1ee36 39310 0 2024-07-13 13:40:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-07-13 13:40:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 13 13:40:46.315: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1560  de02f015-638f-49de-a596-35344bb1ee36 39310 0 2024-07-13 13:40:36 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-07-13 13:40:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0713 13:40:46.915639      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:47.915795      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:48.915892      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:49.915919      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:50.916175      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:51.916270      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:52.916369      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:53.916486      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:54.916587      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:55.916665      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:40:56.316: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1560" for this suite. @ 07/13/24 13:40:56.321
â€¢ [20.075 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 07/13/24 13:40:56.328
  Jul 13 13:40:56.328: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename container-runtime @ 07/13/24 13:40:56.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:40:56.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:40:56.352
  STEP: create the container @ 07/13/24 13:40:56.356
  W0713 13:40:56.370158      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 07/13/24 13:40:56.37
  E0713 13:40:56.917789      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:57.918245      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:40:58.918918      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 07/13/24 13:40:59.392
  STEP: the container should be terminated @ 07/13/24 13:40:59.396
  STEP: the termination message should be set @ 07/13/24 13:40:59.396
  Jul 13 13:40:59.396: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 07/13/24 13:40:59.396
  Jul 13 13:40:59.409: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6028" for this suite. @ 07/13/24 13:40:59.412
â€¢ [3.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 07/13/24 13:40:59.42
  Jul 13 13:40:59.420: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename projected @ 07/13/24 13:40:59.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:40:59.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:40:59.437
  STEP: Creating projection with secret that has name projected-secret-test-map-03e1d91a-fb51-46da-a42c-9b89baa83067 @ 07/13/24 13:40:59.439
  STEP: Creating a pod to test consume secrets @ 07/13/24 13:40:59.444
  E0713 13:40:59.919298      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:00.919350      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:01.919466      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:02.919575      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/13/24 13:41:03.467
  Jul 13 13:41:03.471: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-projected-secrets-2cccb535-34a4-4e87-9cf7-e719ed862e01 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/13/24 13:41:03.492
  Jul 13 13:41:03.508: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6516" for this suite. @ 07/13/24 13:41:03.511
â€¢ [4.098 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 07/13/24 13:41:03.518
  Jul 13 13:41:03.518: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename configmap @ 07/13/24 13:41:03.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:41:03.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:41:03.534
  STEP: Creating configMap with name cm-test-opt-del-76195f50-2019-488e-b57e-ef12779c16fb @ 07/13/24 13:41:03.542
  STEP: Creating configMap with name cm-test-opt-upd-62ad584c-eefc-4f15-838f-9a0a2df39538 @ 07/13/24 13:41:03.547
  STEP: Creating the pod @ 07/13/24 13:41:03.55
  E0713 13:41:03.920091      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:04.920325      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-76195f50-2019-488e-b57e-ef12779c16fb @ 07/13/24 13:41:05.589
  STEP: Updating configmap cm-test-opt-upd-62ad584c-eefc-4f15-838f-9a0a2df39538 @ 07/13/24 13:41:05.595
  STEP: Creating configMap with name cm-test-opt-create-1f18caac-fa19-42b6-9dc0-67b09970084d @ 07/13/24 13:41:05.599
  STEP: waiting to observe update in volume @ 07/13/24 13:41:05.604
  E0713 13:41:05.920345      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:06.920429      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:07.921445      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:08.921603      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:09.922587      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:10.922697      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:11.923433      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:12.923523      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:13.924202      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:14.924354      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:15.924950      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:16.925180      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:17.926175      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:18.926293      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:19.927264      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:20.927338      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:21.927423      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:22.927647      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:23.928226      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:24.928357      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:25.929232      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:26.929332      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:27.929654      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:28.929844      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:29.930577      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:30.930675      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:31.930939      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:32.931056      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:33.931972      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:34.932313      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:35.932405      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:36.932536      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:37.933440      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:38.933906      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:39.934896      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:40.935002      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:41.935442      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:42.935550      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:43.935768      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:44.936678      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:45.937647      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:46.937820      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:47.938277      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:48.938911      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:49.939886      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:50.939994      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:51.940003      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:52.940213      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:53.940847      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:54.941086      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:55.941103      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:56.941286      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:57.941872      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:58.942902      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:41:59.943411      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:00.943682      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:01.944054      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:02.944141      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:03.944970      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:04.945251      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:05.945291      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:06.945449      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:07.945632      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:08.945817      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:09.946323      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:10.946895      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:11.946928      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:12.947089      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:13.947779      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:14.948070      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:15.948338      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:16.948467      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:17.949119      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:18.949282      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:19.950248      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:20.950382      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:21.950999      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:22.951120      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:23.951217      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:24.951612      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:25.951963      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:42:25.983: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5392" for this suite. @ 07/13/24 13:42:25.988
â€¢ [82.478 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 07/13/24 13:42:25.996
  Jul 13 13:42:25.996: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename kubelet-test @ 07/13/24 13:42:25.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:42:26.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:42:26.016
  E0713 13:42:26.952072      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:27.952178      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:28.952727      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:29.952805      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:42:30.037: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4859" for this suite. @ 07/13/24 13:42:30.041
â€¢ [4.052 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 07/13/24 13:42:30.048
  Jul 13 13:42:30.048: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename var-expansion @ 07/13/24 13:42:30.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:42:30.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:42:30.064
  STEP: Creating a pod to test env composition @ 07/13/24 13:42:30.067
  E0713 13:42:30.952925      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:31.957936      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/13/24 13:42:32.081
  Jul 13 13:42:32.085: INFO: Trying to get logs from node ip-172-31-89-122 pod var-expansion-c3e98c23-416f-421c-b4db-619b74987b9f container dapi-container: <nil>
  STEP: delete the pod @ 07/13/24 13:42:32.1
  Jul 13 13:42:32.115: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1033" for this suite. @ 07/13/24 13:42:32.118
â€¢ [2.075 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:641
  STEP: Creating a kubernetes client @ 07/13/24 13:42:32.124
  Jul 13 13:42:32.124: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename statefulset @ 07/13/24 13:42:32.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:42:32.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:42:32.139
  STEP: Creating service test in namespace statefulset-1732 @ 07/13/24 13:42:32.142
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 07/13/24 13:42:32.149
  STEP: Creating stateful set ss in namespace statefulset-1732 @ 07/13/24 13:42:32.154
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-1732 @ 07/13/24 13:42:32.162
  Jul 13 13:42:32.166: INFO: Found 0 stateful pods, waiting for 1
  E0713 13:42:32.957958      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:33.958914      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:34.959008      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:35.959110      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:36.959186      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:37.959273      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:38.959477      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:39.959709      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:40.960048      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:41.960235      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:42:42.168: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 07/13/24 13:42:42.168
  Jul 13 13:42:42.171: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=statefulset-1732 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jul 13 13:42:42.269: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul 13 13:42:42.270: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul 13 13:42:42.270: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jul 13 13:42:42.274: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0713 13:42:42.960342      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:43.960493      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:44.961397      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:45.961586      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:46.962593      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:47.962690      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:48.963438      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:49.963558      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:50.963896      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:42:51.963987      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:42:52.275: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jul 13 13:42:52.275: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jul 13 13:42:52.295: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999663s
  E0713 13:42:52.964046      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:42:53.299: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.99223938s
  E0713 13:42:53.964162      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:42:54.305: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.986977914s
  E0713 13:42:54.964933      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:42:55.309: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.981984708s
  E0713 13:42:55.965957      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:42:56.315: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.977152989s
  E0713 13:42:56.966896      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:42:57.319: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.971229157s
  E0713 13:42:57.967084      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:42:58.325: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.96705955s
  E0713 13:42:58.967401      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:42:59.330: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.960837546s
  E0713 13:42:59.968234      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:43:00.335: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.956773982s
  E0713 13:43:00.968888      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:43:01.340: INFO: Verifying statefulset ss doesn't scale past 1 for another 952.289635ms
  E0713 13:43:01.969307      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-1732 @ 07/13/24 13:43:02.34
  Jul 13 13:43:02.345: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=statefulset-1732 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jul 13 13:43:02.435: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jul 13 13:43:02.435: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jul 13 13:43:02.435: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jul 13 13:43:02.440: INFO: Found 1 stateful pods, waiting for 3
  E0713 13:43:02.969524      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:43:03.969886      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:43:04.969978      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:43:05.970076      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:43:06.970186      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:43:07.970433      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:43:08.970520      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:43:09.970624      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:43:10.970722      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:43:11.970887      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:43:12.442: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jul 13 13:43:12.442: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Jul 13 13:43:12.442: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 07/13/24 13:43:12.442
  STEP: Scale down will halt with unhealthy stateful pod @ 07/13/24 13:43:12.442
  Jul 13 13:43:12.448: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=statefulset-1732 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jul 13 13:43:12.552: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul 13 13:43:12.552: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul 13 13:43:12.552: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jul 13 13:43:12.552: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=statefulset-1732 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jul 13 13:43:12.642: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul 13 13:43:12.642: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul 13 13:43:12.642: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jul 13 13:43:12.642: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=statefulset-1732 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jul 13 13:43:12.741: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul 13 13:43:12.741: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul 13 13:43:12.741: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jul 13 13:43:12.741: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jul 13 13:43:12.746: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0713 13:43:12.971693      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:43:13.971802      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:43:14.971907      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:43:15.971986      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:43:16.972239      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:43:17.972334      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:43:18.972402      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:43:19.972579      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:43:20.972673      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:43:21.972743      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:43:22.752: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jul 13 13:43:22.752: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Jul 13 13:43:22.752: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Jul 13 13:43:22.763: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.99999976s
  E0713 13:43:22.973676      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:43:23.768: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.997198724s
  E0713 13:43:23.974471      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:43:24.772: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.992428318s
  E0713 13:43:24.975112      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:43:25.776: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.987812531s
  E0713 13:43:25.975249      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:43:26.780: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.984606063s
  E0713 13:43:26.975475      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:43:27.785: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.979788762s
  E0713 13:43:27.976103      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:43:28.791: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.973973945s
  E0713 13:43:28.976309      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:43:29.796: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.969569103s
  E0713 13:43:29.976434      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:43:30.801: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.964399485s
  E0713 13:43:30.977233      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:43:31.806: INFO: Verifying statefulset ss doesn't scale past 3 for another 959.640113ms
  E0713 13:43:31.977775      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-1732 @ 07/13/24 13:43:32.806
  Jul 13 13:43:32.810: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=statefulset-1732 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jul 13 13:43:32.903: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jul 13 13:43:32.903: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jul 13 13:43:32.903: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jul 13 13:43:32.903: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=statefulset-1732 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0713 13:43:32.978076      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:43:32.994: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jul 13 13:43:32.994: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jul 13 13:43:32.994: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jul 13 13:43:32.994: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=statefulset-1732 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jul 13 13:43:33.095: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jul 13 13:43:33.095: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jul 13 13:43:33.095: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jul 13 13:43:33.095: INFO: Scaling statefulset ss to 0
  E0713 13:43:33.978810      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:43:34.979013      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:43:35.979310      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:43:36.979403      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:43:37.979490      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:43:38.979658      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:43:39.979778      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:43:40.980015      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:43:41.980121      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:43:42.980228      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 07/13/24 13:43:43.102
  Jul 13 13:43:43.102: INFO: Deleting all statefulset in ns statefulset-1732
  Jul 13 13:43:43.105: INFO: Scaling statefulset ss to 0
  Jul 13 13:43:43.110: INFO: Waiting for statefulset status.replicas updated to 0
  Jul 13 13:43:43.113: INFO: Deleting statefulset ss
  Jul 13 13:43:43.127: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1732" for this suite. @ 07/13/24 13:43:43.13
â€¢ [71.011 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:655
  STEP: Creating a kubernetes client @ 07/13/24 13:43:43.136
  Jul 13 13:43:43.136: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename job @ 07/13/24 13:43:43.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:43:43.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:43:43.153
  STEP: Creating a job @ 07/13/24 13:43:43.155
  STEP: Ensuring active pods == parallelism @ 07/13/24 13:43:43.162
  E0713 13:43:43.981190      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:43:44.981377      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 07/13/24 13:43:45.165
  Jul 13 13:43:45.681: INFO: Successfully updated pod "adopt-release-46qn8"
  STEP: Checking that the Job readopts the Pod @ 07/13/24 13:43:45.681
  E0713 13:43:45.982247      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:43:46.982889      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 07/13/24 13:43:47.694
  E0713 13:43:47.983564      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:43:48.206: INFO: Successfully updated pod "adopt-release-46qn8"
  STEP: Checking that the Job releases the Pod @ 07/13/24 13:43:48.206
  E0713 13:43:48.984254      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:43:49.984370      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:43:50.214: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-312" for this suite. @ 07/13/24 13:43:50.218
â€¢ [7.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:321
  STEP: Creating a kubernetes client @ 07/13/24 13:43:50.226
  Jul 13 13:43:50.226: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename statefulset @ 07/13/24 13:43:50.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:43:50.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:43:50.294
  STEP: Creating service test in namespace statefulset-2686 @ 07/13/24 13:43:50.297
  STEP: Creating a new StatefulSet @ 07/13/24 13:43:50.303
  Jul 13 13:43:50.312: INFO: Found 0 stateful pods, waiting for 3
  E0713 13:43:50.984488      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:43:51.984759      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:43:52.984866      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:43:53.985042      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:43:54.985135      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:43:55.985249      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:43:56.985374      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:43:57.985460      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:43:58.985554      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:43:59.985705      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:44:00.314: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jul 13 13:44:00.314: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jul 13 13:44:00.314: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Jul 13 13:44:00.324: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=statefulset-2686 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jul 13 13:44:00.415: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul 13 13:44:00.415: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul 13 13:44:00.415: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0713 13:44:00.985920      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:01.986715      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:02.986765      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:03.987049      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:04.987385      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:05.987481      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:06.987686      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:07.987777      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:08.987945      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:09.988309      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 07/13/24 13:44:10.425
  Jul 13 13:44:10.443: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 07/13/24 13:44:10.443
  E0713 13:44:10.989075      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:11.989257      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:12.989406      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:13.989512      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:14.989642      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:15.989820      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:16.990094      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:17.990125      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:18.990191      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:19.990417      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 07/13/24 13:44:20.452
  Jul 13 13:44:20.456: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=statefulset-2686 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jul 13 13:44:20.551: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jul 13 13:44:20.551: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jul 13 13:44:20.551: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0713 13:44:20.991475      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:21.991595      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:22.991656      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:23.991739      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:24.991832      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:25.991943      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:26.992686      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:27.992921      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:28.993109      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:29.993311      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:30.993425      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:31.993536      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:32.993633      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:33.993893      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:34.994165      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:35.994233      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:36.994425      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:37.994518      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:38.994619      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:39.995141      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 07/13/24 13:44:40.568
  Jul 13 13:44:40.568: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=statefulset-2686 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jul 13 13:44:40.654: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jul 13 13:44:40.654: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jul 13 13:44:40.654: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0713 13:44:40.995967      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:41.996086      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:42.996189      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:43.996286      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:44.997053      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:45.997180      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:46.997396      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:47.997484      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:48.997580      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:49.998085      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:44:50.682: INFO: Updating stateful set ss2
  E0713 13:44:50.998604      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:51.998710      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:52.998802      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:53.998902      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:54.999221      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:55.999356      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:56.999419      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:57.999591      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:58.999693      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:44:59.999935      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 07/13/24 13:45:00.69
  Jul 13 13:45:00.693: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=statefulset-2686 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jul 13 13:45:00.788: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jul 13 13:45:00.788: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jul 13 13:45:00.788: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0713 13:45:01.000722      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:45:02.000811      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:45:03.000950      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:45:04.001060      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:45:05.001059      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:45:06.001809      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:45:07.001892      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:45:08.002885      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:45:09.003944      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:45:10.004278      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:45:10.805: INFO: Deleting all statefulset in ns statefulset-2686
  Jul 13 13:45:10.807: INFO: Scaling statefulset ss2 to 0
  E0713 13:45:11.005218      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:45:12.005312      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:45:13.005776      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:45:14.005843      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:45:15.006238      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:45:16.006346      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:45:17.006421      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:45:18.006927      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:45:19.007006      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:45:20.008066      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:45:20.820: INFO: Waiting for statefulset status.replicas updated to 0
  Jul 13 13:45:20.825: INFO: Deleting statefulset ss2
  Jul 13 13:45:20.839: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2686" for this suite. @ 07/13/24 13:45:20.845
â€¢ [90.624 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 07/13/24 13:45:20.851
  Jul 13 13:45:20.851: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename webhook @ 07/13/24 13:45:20.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:45:20.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:45:20.868
  STEP: Setting up server cert @ 07/13/24 13:45:20.887
  E0713 13:45:21.008876      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/13/24 13:45:21.241
  STEP: Deploying the webhook pod @ 07/13/24 13:45:21.249
  STEP: Wait for the deployment to be ready @ 07/13/24 13:45:21.262
  Jul 13 13:45:21.269: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0713 13:45:22.009730      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:45:23.009835      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/13/24 13:45:23.281
  STEP: Verifying the service has paired with the endpoint @ 07/13/24 13:45:23.296
  E0713 13:45:24.010850      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:45:24.297: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 07/13/24 13:45:24.302
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/13/24 13:45:24.302
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 07/13/24 13:45:24.315
  E0713 13:45:25.011081      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 07/13/24 13:45:25.327
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/13/24 13:45:25.327
  E0713 13:45:26.011260      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 07/13/24 13:45:26.359
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/13/24 13:45:26.359
  E0713 13:45:27.012312      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:45:28.012403      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:45:29.012512      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:45:30.013276      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:45:31.013531      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 07/13/24 13:45:31.395
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/13/24 13:45:31.395
  E0713 13:45:32.014376      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:45:33.015057      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:45:34.015144      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:45:35.015212      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:45:36.015584      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:45:36.482: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5956" for this suite. @ 07/13/24 13:45:36.488
  STEP: Destroying namespace "webhook-markers-9045" for this suite. @ 07/13/24 13:45:36.495
â€¢ [15.649 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 07/13/24 13:45:36.5
  Jul 13 13:45:36.500: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename webhook @ 07/13/24 13:45:36.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:45:36.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:45:36.515
  STEP: Setting up server cert @ 07/13/24 13:45:36.538
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/13/24 13:45:36.686
  STEP: Deploying the webhook pod @ 07/13/24 13:45:36.69
  STEP: Wait for the deployment to be ready @ 07/13/24 13:45:36.7
  Jul 13 13:45:36.707: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0713 13:45:37.015703      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:45:38.015798      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/13/24 13:45:38.718
  STEP: Verifying the service has paired with the endpoint @ 07/13/24 13:45:38.73
  E0713 13:45:39.016806      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:45:39.730: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 07/13/24 13:45:39.738
  STEP: create a pod that should be updated by the webhook @ 07/13/24 13:45:39.752
  Jul 13 13:45:39.818: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-925" for this suite. @ 07/13/24 13:45:39.823
  STEP: Destroying namespace "webhook-markers-9138" for this suite. @ 07/13/24 13:45:39.828
â€¢ [3.334 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 07/13/24 13:45:39.835
  Jul 13 13:45:39.835: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename webhook @ 07/13/24 13:45:39.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:45:39.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:45:39.85
  STEP: Setting up server cert @ 07/13/24 13:45:39.871
  E0713 13:45:40.017193      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/13/24 13:45:40.036
  STEP: Deploying the webhook pod @ 07/13/24 13:45:40.041
  STEP: Wait for the deployment to be ready @ 07/13/24 13:45:40.054
  Jul 13 13:45:40.060: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0713 13:45:41.017327      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:45:42.017468      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/13/24 13:45:42.074
  STEP: Verifying the service has paired with the endpoint @ 07/13/24 13:45:42.084
  E0713 13:45:43.017827      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:45:43.086: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jul 13 13:45:43.092: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 07/13/24 13:45:43.603
  STEP: Creating a custom resource that should be denied by the webhook @ 07/13/24 13:45:43.618
  E0713 13:45:44.018498      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:45:45.019337      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 07/13/24 13:45:45.636
  STEP: Updating the custom resource with disallowed data should be denied @ 07/13/24 13:45:45.646
  STEP: Deleting the custom resource should be denied @ 07/13/24 13:45:45.656
  STEP: Remove the offending key and value from the custom resource data @ 07/13/24 13:45:45.663
  STEP: Deleting the updated custom resource should be successful @ 07/13/24 13:45:45.677
  E0713 13:45:46.019427      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:45:46.246: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3161" for this suite. @ 07/13/24 13:45:46.252
  STEP: Destroying namespace "webhook-markers-4701" for this suite. @ 07/13/24 13:45:46.26
â€¢ [6.533 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1698
  STEP: Creating a kubernetes client @ 07/13/24 13:45:46.369
  Jul 13 13:45:46.369: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename kubectl @ 07/13/24 13:45:46.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:45:46.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:45:46.385
  STEP: creating Agnhost RC @ 07/13/24 13:45:46.387
  Jul 13 13:45:46.387: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-9938 create -f -'
  Jul 13 13:45:46.473: INFO: stderr: ""
  Jul 13 13:45:46.473: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/13/24 13:45:46.473
  E0713 13:45:47.019945      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:45:47.478: INFO: Selector matched 1 pods for map[app:agnhost]
  Jul 13 13:45:47.478: INFO: Found 1 / 1
  Jul 13 13:45:47.478: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 07/13/24 13:45:47.478
  Jul 13 13:45:47.482: INFO: Selector matched 1 pods for map[app:agnhost]
  Jul 13 13:45:47.482: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jul 13 13:45:47.482: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-9938 patch pod agnhost-primary-jxjn7 -p {"metadata":{"annotations":{"x":"y"}}}'
  Jul 13 13:45:47.532: INFO: stderr: ""
  Jul 13 13:45:47.532: INFO: stdout: "pod/agnhost-primary-jxjn7 patched\n"
  STEP: checking annotations @ 07/13/24 13:45:47.532
  Jul 13 13:45:47.535: INFO: Selector matched 1 pods for map[app:agnhost]
  Jul 13 13:45:47.535: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jul 13 13:45:47.535: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9938" for this suite. @ 07/13/24 13:45:47.54
â€¢ [1.177 seconds]
------------------------------
S
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:214
  STEP: Creating a kubernetes client @ 07/13/24 13:45:47.545
  Jul 13 13:45:47.545: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/13/24 13:45:47.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:45:47.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:45:47.559
  STEP: create the container to handle the HTTPGet hook request. @ 07/13/24 13:45:47.565
  E0713 13:45:48.020099      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:45:49.020277      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 07/13/24 13:45:49.584
  E0713 13:45:50.020463      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:45:51.020552      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 07/13/24 13:45:51.602
  E0713 13:45:52.021232      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:45:53.021297      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 07/13/24 13:45:53.618
  Jul 13 13:45:53.634: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8422" for this suite. @ 07/13/24 13:45:53.637
â€¢ [6.098 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 07/13/24 13:45:53.644
  Jul 13 13:45:53.644: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename aggregator @ 07/13/24 13:45:53.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:45:53.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:45:53.66
  Jul 13 13:45:53.662: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Registering the sample API server. @ 07/13/24 13:45:53.662
  Jul 13 13:45:53.899: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Jul 13 13:45:53.929: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
  E0713 13:45:54.021763      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:45:55.022212      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:45:55.974: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0713 13:45:56.022307      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:45:57.022604      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:45:57.979: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0713 13:45:58.023008      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:45:59.023174      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:45:59.979: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0713 13:46:00.023577      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:46:01.023981      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:46:01.977: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0713 13:46:02.024698      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:46:03.024806      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:46:03.978: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0713 13:46:04.025021      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:46:05.025304      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:46:05.979: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0713 13:46:06.026065      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:46:07.026894      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:46:07.978: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0713 13:46:08.027163      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:46:09.027266      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:46:09.978: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0713 13:46:10.028112      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:46:11.028224      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:46:11.979: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0713 13:46:12.028980      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:46:13.029104      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:46:13.978: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 13, 13, 45, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0713 13:46:14.029535      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:46:15.030041      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:46:16.030559      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:46:16.112: INFO: Waited 124.981196ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 07/13/24 13:46:16.172
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 07/13/24 13:46:16.176
  STEP: List APIServices @ 07/13/24 13:46:16.186
  Jul 13 13:46:16.191: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 07/13/24 13:46:16.191
  Jul 13 13:46:16.206: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 07/13/24 13:46:16.206
  Jul 13 13:46:16.215: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.July, 13, 13, 46, 15, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 07/13/24 13:46:16.215
  Jul 13 13:46:16.219: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-07-13 13:46:15 +0000 UTC Passed all checks passed}
  Jul 13 13:46:16.219: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jul 13 13:46:16.219: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 07/13/24 13:46:16.219
  Jul 13 13:46:16.228: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1457392187" @ 07/13/24 13:46:16.228
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 07/13/24 13:46:16.238
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 07/13/24 13:46:16.244
  STEP: Patch APIService Status @ 07/13/24 13:46:16.248
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 07/13/24 13:46:16.255
  Jul 13 13:46:16.258: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-07-13 13:46:15 +0000 UTC Passed all checks passed}
  Jul 13 13:46:16.258: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jul 13 13:46:16.258: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Jul 13 13:46:16.258: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 07/13/24 13:46:16.258
  STEP: Confirm that the generated APIService has been deleted @ 07/13/24 13:46:16.271
  Jul 13 13:46:16.271: INFO: Requesting list of APIServices to confirm quantity
  Jul 13 13:46:16.275: INFO: Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  Jul 13 13:46:16.275: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Jul 13 13:46:16.381: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-2869" for this suite. @ 07/13/24 13:46:16.384
â€¢ [22.749 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:141
  STEP: Creating a kubernetes client @ 07/13/24 13:46:16.393
  Jul 13 13:46:16.393: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename secrets @ 07/13/24 13:46:16.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:46:16.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:46:16.407
  STEP: Creating projection with secret that has name secret-emptykey-test-026ae8a8-cfbd-4af1-a7a8-7eb09b98340b @ 07/13/24 13:46:16.409
  Jul 13 13:46:16.411: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3900" for this suite. @ 07/13/24 13:46:16.414
â€¢ [0.028 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 07/13/24 13:46:16.421
  Jul 13 13:46:16.421: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename projected @ 07/13/24 13:46:16.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:46:16.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:46:16.435
  STEP: Creating projection with secret that has name projected-secret-test-affa5c40-c750-4424-8851-bbb68142ad70 @ 07/13/24 13:46:16.44
  STEP: Creating a pod to test consume secrets @ 07/13/24 13:46:16.444
  E0713 13:46:17.031617      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:46:18.031701      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:46:19.032468      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:46:20.033248      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/13/24 13:46:20.467
  Jul 13 13:46:20.471: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-projected-secrets-69f3e2a5-41e1-4161-8bf5-a019e642ce4f container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/13/24 13:46:20.488
  Jul 13 13:46:20.505: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5291" for this suite. @ 07/13/24 13:46:20.508
â€¢ [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 07/13/24 13:46:20.519
  Jul 13 13:46:20.519: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename endpointslicemirroring @ 07/13/24 13:46:20.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:46:20.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:46:20.535
  STEP: mirroring a new custom Endpoint @ 07/13/24 13:46:20.548
  Jul 13 13:46:20.555: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  E0713 13:46:21.034274      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:46:22.034369      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 07/13/24 13:46:22.559
  Jul 13 13:46:22.566: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  E0713 13:46:23.034511      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:46:24.035414      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring deletion of a custom Endpoint @ 07/13/24 13:46:24.572
  Jul 13 13:46:24.583: INFO: Waiting for 0 EndpointSlices to exist, got 1
  E0713 13:46:25.036266      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:46:26.036698      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:46:26.588: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-7746" for this suite. @ 07/13/24 13:46:26.592
â€¢ [6.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 07/13/24 13:46:26.6
  Jul 13 13:46:26.600: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename webhook @ 07/13/24 13:46:26.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:46:26.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:46:26.617
  STEP: Setting up server cert @ 07/13/24 13:46:26.639
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/13/24 13:46:26.878
  STEP: Deploying the webhook pod @ 07/13/24 13:46:26.887
  STEP: Wait for the deployment to be ready @ 07/13/24 13:46:26.897
  Jul 13 13:46:26.904: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0713 13:46:27.037662      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:46:28.037852      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/13/24 13:46:28.915
  STEP: Verifying the service has paired with the endpoint @ 07/13/24 13:46:28.924
  E0713 13:46:29.038517      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:46:29.924: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 07/13/24 13:46:29.931
  Jul 13 13:46:30.028: INFO: Waiting for webhook configuration to be ready...
  E0713 13:46:30.038752      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/13/24 13:46:30.136
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 07/13/24 13:46:30.143
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/13/24 13:46:30.153
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 07/13/24 13:46:30.165
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/13/24 13:46:30.172
  Jul 13 13:46:30.220: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4106" for this suite. @ 07/13/24 13:46:30.226
  STEP: Destroying namespace "webhook-markers-4544" for this suite. @ 07/13/24 13:46:30.232
â€¢ [3.638 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 07/13/24 13:46:30.238
  Jul 13 13:46:30.238: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename container-runtime @ 07/13/24 13:46:30.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:46:30.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:46:30.259
  STEP: create the container @ 07/13/24 13:46:30.261
  W0713 13:46:30.270469      20 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 07/13/24 13:46:30.27
  E0713 13:46:31.039818      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:46:32.039924      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:46:33.040014      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 07/13/24 13:46:33.291
  STEP: the container should be terminated @ 07/13/24 13:46:33.293
  STEP: the termination message should be set @ 07/13/24 13:46:33.293
  Jul 13 13:46:33.293: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 07/13/24 13:46:33.293
  Jul 13 13:46:33.307: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4084" for this suite. @ 07/13/24 13:46:33.312
â€¢ [3.081 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 07/13/24 13:46:33.319
  Jul 13 13:46:33.319: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename services @ 07/13/24 13:46:33.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:46:33.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:46:33.346
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-6418 @ 07/13/24 13:46:33.353
  STEP: changing the ExternalName service to type=NodePort @ 07/13/24 13:46:33.358
  STEP: creating replication controller externalname-service in namespace services-6418 @ 07/13/24 13:46:33.386
  I0713 13:46:33.397642      20 runners.go:197] Created replication controller with name: externalname-service, namespace: services-6418, replica count: 2
  E0713 13:46:34.040499      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:46:35.041264      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:46:36.041378      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0713 13:46:36.448924      20 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jul 13 13:46:36.448: INFO: Creating new exec pod
  E0713 13:46:37.041463      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:46:38.041656      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:46:39.042616      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:46:39.468: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-6418 exec execpodz5qn5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jul 13 13:46:39.567: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jul 13 13:46:39.567: INFO: stdout: "externalname-service-gv8sw"
  Jul 13 13:46:39.567: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-6418 exec execpodz5qn5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.92 80'
  Jul 13 13:46:39.656: INFO: stderr: "+ nc -v -t -w 2 10.152.183.92 80\nConnection to 10.152.183.92 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Jul 13 13:46:39.656: INFO: stdout: ""
  E0713 13:46:40.042791      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:46:40.568: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-6418 exec execpodz5qn5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.92 80'
  Jul 13 13:46:40.665: INFO: stderr: "+ nc -v -t -w 2 10.152.183.92 80\n+ echo hostName\nConnection to 10.152.183.92 80 port [tcp/http] succeeded!\n"
  Jul 13 13:46:40.665: INFO: stdout: "externalname-service-gv8sw"
  Jul 13 13:46:40.665: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-6418 exec execpodz5qn5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.89.122 30343'
  Jul 13 13:46:40.755: INFO: stderr: "+ nc -v -t -w 2 172.31.89.122 30343\n+ echo hostName\nConnection to 172.31.89.122 30343 port [tcp/*] succeeded!\n"
  Jul 13 13:46:40.755: INFO: stdout: ""
  E0713 13:46:41.043475      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:46:41.666: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-6418 exec execpodz5qn5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.89.122 30343'
  Jul 13 13:46:41.762: INFO: stderr: "+ nc -v -t -w 2 172.31.89.122 30343\n+ echo hostName\nConnection to 172.31.89.122 30343 port [tcp/*] succeeded!\n"
  Jul 13 13:46:41.762: INFO: stdout: "externalname-service-l59k2"
  Jul 13 13:46:41.763: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-6418 exec execpodz5qn5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.15.91 30343'
  Jul 13 13:46:41.867: INFO: stderr: "+ nc -v -t -w 2 172.31.15.91 30343\n+ echo hostName\nConnection to 172.31.15.91 30343 port [tcp/*] succeeded!\n"
  Jul 13 13:46:41.867: INFO: stdout: "externalname-service-l59k2"
  Jul 13 13:46:41.867: INFO: Cleaning up the ExternalName to NodePort test service
  Jul 13 13:46:41.892: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6418" for this suite. @ 07/13/24 13:46:41.895
â€¢ [8.583 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 07/13/24 13:46:41.902
  Jul 13 13:46:41.902: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename pods @ 07/13/24 13:46:41.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:46:41.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:46:41.922
  STEP: Create set of pods @ 07/13/24 13:46:41.924
  Jul 13 13:46:41.935: INFO: created test-pod-1
  Jul 13 13:46:41.940: INFO: created test-pod-2
  Jul 13 13:46:41.947: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 07/13/24 13:46:41.947
  E0713 13:46:42.044402      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:46:43.044526      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 07/13/24 13:46:43.998
  Jul 13 13:46:44.000: INFO: Pod quantity 3 is different from expected quantity 0
  E0713 13:46:44.045080      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:46:45.003: INFO: Pod quantity 3 is different from expected quantity 0
  E0713 13:46:45.045474      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:46:46.001: INFO: Pod quantity 1 is different from expected quantity 0
  E0713 13:46:46.046057      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:46:47.001: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-940" for this suite. @ 07/13/24 13:46:47.005
â€¢ [5.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:170
  STEP: Creating a kubernetes client @ 07/13/24 13:46:47.013
  Jul 13 13:46:47.013: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename configmap @ 07/13/24 13:46:47.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:46:47.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:46:47.028
  E0713 13:46:47.047035      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a ConfigMap @ 07/13/24 13:46:47.074
  STEP: fetching the ConfigMap @ 07/13/24 13:46:47.079
  STEP: patching the ConfigMap @ 07/13/24 13:46:47.082
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 07/13/24 13:46:47.089
  STEP: deleting the ConfigMap by collection with a label selector @ 07/13/24 13:46:47.094
  STEP: listing all ConfigMaps in test namespace @ 07/13/24 13:46:47.105
  Jul 13 13:46:47.107: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8245" for this suite. @ 07/13/24 13:46:47.111
â€¢ [0.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 07/13/24 13:46:47.119
  Jul 13 13:46:47.119: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename downward-api @ 07/13/24 13:46:47.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:46:47.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:46:47.133
  STEP: Creating a pod to test downward API volume plugin @ 07/13/24 13:46:47.135
  E0713 13:46:48.047519      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:46:49.047704      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:46:50.048014      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:46:51.048831      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/13/24 13:46:51.156
  Jul 13 13:46:51.160: INFO: Trying to get logs from node ip-172-31-37-214 pod downwardapi-volume-c52806a8-d28b-4e1d-8f59-00745dea8565 container client-container: <nil>
  STEP: delete the pod @ 07/13/24 13:46:51.165
  Jul 13 13:46:51.179: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8379" for this suite. @ 07/13/24 13:46:51.182
â€¢ [4.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 07/13/24 13:46:51.189
  Jul 13 13:46:51.189: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename field-validation @ 07/13/24 13:46:51.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:46:51.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:46:51.209
  Jul 13 13:46:51.212: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  W0713 13:46:51.212599      20 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc004daaf40 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0713 13:46:52.049526      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:46:53.049837      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0713 13:46:53.747783      20 warnings.go:70] unknown field "alpha"
  W0713 13:46:53.747801      20 warnings.go:70] unknown field "beta"
  W0713 13:46:53.747805      20 warnings.go:70] unknown field "delta"
  W0713 13:46:53.747809      20 warnings.go:70] unknown field "epsilon"
  W0713 13:46:53.747812      20 warnings.go:70] unknown field "gamma"
  E0713 13:46:54.049942      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:46:54.291: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4831" for this suite. @ 07/13/24 13:46:54.294
â€¢ [3.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 07/13/24 13:46:54.302
  Jul 13 13:46:54.302: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename dns @ 07/13/24 13:46:54.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:46:54.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:46:54.319
  STEP: Creating a test headless service @ 07/13/24 13:46:54.322
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2559.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-2559.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 07/13/24 13:46:54.325
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2559.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-2559.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 07/13/24 13:46:54.325
  STEP: creating a pod to probe DNS @ 07/13/24 13:46:54.325
  STEP: submitting the pod to kubernetes @ 07/13/24 13:46:54.325
  E0713 13:46:55.050261      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:46:56.050340      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/13/24 13:46:56.345
  STEP: looking for the results for each expected name from probers @ 07/13/24 13:46:56.348
  Jul 13 13:46:56.366: INFO: DNS probes using dns-2559/dns-test-3a036e59-af73-46e7-b728-63bb374f613a succeeded

  STEP: deleting the pod @ 07/13/24 13:46:56.366
  STEP: deleting the test headless service @ 07/13/24 13:46:56.38
  Jul 13 13:46:56.401: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2559" for this suite. @ 07/13/24 13:46:56.404
â€¢ [2.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 07/13/24 13:46:56.41
  Jul 13 13:46:56.410: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename webhook @ 07/13/24 13:46:56.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:46:56.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:46:56.524
  STEP: Setting up server cert @ 07/13/24 13:46:56.54
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/13/24 13:46:56.723
  STEP: Deploying the webhook pod @ 07/13/24 13:46:56.73
  STEP: Wait for the deployment to be ready @ 07/13/24 13:46:56.74
  Jul 13 13:46:56.756: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0713 13:46:57.051168      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:46:58.051295      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/13/24 13:46:58.769
  STEP: Verifying the service has paired with the endpoint @ 07/13/24 13:46:58.783
  E0713 13:46:59.052019      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:46:59.783: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 07/13/24 13:46:59.792
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 07/13/24 13:46:59.808
  STEP: Creating a configMap that should not be mutated @ 07/13/24 13:46:59.815
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 07/13/24 13:46:59.829
  STEP: Creating a configMap that should be mutated @ 07/13/24 13:46:59.836
  Jul 13 13:46:59.893: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8635" for this suite. @ 07/13/24 13:46:59.898
  STEP: Destroying namespace "webhook-markers-4610" for this suite. @ 07/13/24 13:46:59.905
â€¢ [3.502 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 07/13/24 13:46:59.912
  Jul 13 13:46:59.913: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename deployment @ 07/13/24 13:46:59.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:46:59.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:46:59.929
  Jul 13 13:46:59.931: INFO: Creating simple deployment test-new-deployment
  Jul 13 13:46:59.941: INFO: deployment "test-new-deployment" doesn't have the required revision set
  E0713 13:47:00.053105      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:01.053271      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 07/13/24 13:47:01.956
  STEP: updating a scale subresource @ 07/13/24 13:47:01.958
  STEP: verifying the deployment Spec.Replicas was modified @ 07/13/24 13:47:01.963
  STEP: Patch a scale subresource @ 07/13/24 13:47:01.967
  Jul 13 13:47:01.989: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2604",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "65aa125a-5bca-4604-8d79-c495bc58a08a",
      ResourceVersion: (string) (len=5) "42104",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856475219,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856475219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856475220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856475220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856475220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856475220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856475219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jul 13 13:47:01.996: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2604",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f75012a4-83ca-45f3-b78f-bf94aedb6ad7",
      ResourceVersion: (string) (len=5) "42107",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856475219,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "65aa125a-5bca-4604-8d79-c495bc58a08a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856475221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 35 61 61 31 32  35 61 2d 35 62 63 61 2d  |\"65aa125a-5bca-|
              00000120  34 36 30 34 2d 38 64 37  39 2d 63 34 39 35 62 63  |4604-8d79-c495bc|
              00000130  35 38 61 30 38 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |58a08a\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856475221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul 13 13:47:02.008: INFO: Pod "test-new-deployment-557759b7c7-bkr5q" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-bkr5q",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2604",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5f2c6660-ebb3-48d8-a6aa-5c6aaa4a9dce",
      ResourceVersion: (string) (len=5) "42109",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856475221,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f75012a4-83ca-45f3-b78f-bf94aedb6ad7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856475221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 37  35 30 31 32 61 34 2d 38  |d\":\"f75012a4-8|
              00000090  33 63 61 2d 34 35 66 33  2d 62 37 38 66 2d 62 66  |3ca-45f3-b78f-bf|
              000000a0  39 34 61 65 64 62 36 61  64 37 5c 22 7d 22 3a 7b  |94aedb6ad7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gzxpk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gzxpk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-89-122",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856475221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 13 13:47:02.009: INFO: Pod "test-new-deployment-557759b7c7-qnhrj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-qnhrj",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2604",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b6aa00fd-23ea-4368-a8f0-c950fe819af2",
      ResourceVersion: (string) (len=5) "42079",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856475219,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "f75012a4-83ca-45f3-b78f-bf94aedb6ad7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856475219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 37  35 30 31 32 61 34 2d 38  |d\":\"f75012a4-8|
              00000090  33 63 61 2d 34 35 66 33  2d 62 37 38 66 2d 62 66  |3ca-45f3-b78f-bf|
              000000a0  39 34 61 65 64 62 36 61  64 37 5c 22 7d 22 3a 7b  |94aedb6ad7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856475220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 37 37  2e 32 33 37 5c 22 7d 22  |2.168.77.237\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jfms6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jfms6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-37-214",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856475220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856475219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856475220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856475220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856475219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.37.214",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.37.214"
        }
      },
      PodIP: (string) (len=14) "192.168.77.237",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.77.237"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856475219,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63856475220,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7e2f17140e9f107cc3c8baca8b46ead0069e4935cef594e9c693b3aed837598b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 13 13:47:02.011: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2604" for this suite. @ 07/13/24 13:47:02.017
â€¢ [2.114 seconds]
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 07/13/24 13:47:02.027
  Jul 13 13:47:02.027: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename kubelet-test @ 07/13/24 13:47:02.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:47:02.052
  E0713 13:47:02.053762      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:47:02.055
  E0713 13:47:03.054012      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:04.054917      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:47:04.088: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9430" for this suite. @ 07/13/24 13:47:04.092
â€¢ [2.073 seconds]
------------------------------
SSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 07/13/24 13:47:04.1
  Jul 13 13:47:04.100: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename containers @ 07/13/24 13:47:04.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:47:04.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:47:04.116
  E0713 13:47:05.054944      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:06.055042      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:47:06.150: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8147" for this suite. @ 07/13/24 13:47:06.153
â€¢ [2.061 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 07/13/24 13:47:06.162
  Jul 13 13:47:06.162: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/13/24 13:47:06.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:47:06.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:47:06.18
  Jul 13 13:47:06.183: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  E0713 13:47:07.055144      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:08.055205      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:09.055310      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:10.055676      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:11.056249      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:12.057013      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:47:12.370: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7591" for this suite. @ 07/13/24 13:47:12.373
â€¢ [6.223 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 07/13/24 13:47:12.385
  Jul 13 13:47:12.385: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename services @ 07/13/24 13:47:12.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:47:12.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:47:12.41
  Jul 13 13:47:12.420: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1924" for this suite. @ 07/13/24 13:47:12.427
â€¢ [0.050 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 07/13/24 13:47:12.436
  Jul 13 13:47:12.436: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename projected @ 07/13/24 13:47:12.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:47:12.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:47:12.453
  STEP: Creating configMap with name projected-configmap-test-volume-f1343ba9-157c-4504-b80b-de4362b3798b @ 07/13/24 13:47:12.455
  STEP: Creating a pod to test consume configMaps @ 07/13/24 13:47:12.458
  E0713 13:47:13.057119      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:14.057261      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/13/24 13:47:14.474
  Jul 13 13:47:14.478: INFO: Trying to get logs from node ip-172-31-89-122 pod pod-projected-configmaps-f77c17ab-5a63-4021-b5a0-8ebb87692077 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 07/13/24 13:47:14.487
  Jul 13 13:47:14.499: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7284" for this suite. @ 07/13/24 13:47:14.502
â€¢ [2.073 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 07/13/24 13:47:14.508
  Jul 13 13:47:14.508: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename replicaset @ 07/13/24 13:47:14.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:47:14.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:47:14.528
  STEP: Create a ReplicaSet @ 07/13/24 13:47:14.53
  STEP: Verify that the required pods have come up @ 07/13/24 13:47:14.536
  Jul 13 13:47:14.540: INFO: Pod name sample-pod: Found 0 pods out of 3
  E0713 13:47:15.057884      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:16.057826      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:17.057921      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:18.058009      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:19.058876      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:47:19.544: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 07/13/24 13:47:19.544
  Jul 13 13:47:19.548: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 07/13/24 13:47:19.548
  STEP: DeleteCollection of the ReplicaSets @ 07/13/24 13:47:19.551
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 07/13/24 13:47:19.562
  Jul 13 13:47:19.566: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5169" for this suite. @ 07/13/24 13:47:19.57
â€¢ [5.078 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 07/13/24 13:47:19.586
  Jul 13 13:47:19.586: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename runtimeclass @ 07/13/24 13:47:19.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:47:19.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:47:19.603
  E0713 13:47:20.058951      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:21.059126      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:47:21.630: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1527" for this suite. @ 07/13/24 13:47:21.634
â€¢ [2.054 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 07/13/24 13:47:21.641
  Jul 13 13:47:21.641: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename downward-api @ 07/13/24 13:47:21.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:47:21.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:47:21.658
  STEP: Creating a pod to test downward API volume plugin @ 07/13/24 13:47:21.66
  E0713 13:47:22.059892      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:23.060096      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:24.061049      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:25.061262      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/13/24 13:47:25.683
  Jul 13 13:47:25.686: INFO: Trying to get logs from node ip-172-31-89-122 pod downwardapi-volume-44186bf7-143b-4087-bdd0-fab2c996fee7 container client-container: <nil>
  STEP: delete the pod @ 07/13/24 13:47:25.692
  Jul 13 13:47:25.706: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2560" for this suite. @ 07/13/24 13:47:25.71
â€¢ [4.075 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 07/13/24 13:47:25.716
  Jul 13 13:47:25.716: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename kubelet-test @ 07/13/24 13:47:25.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:47:25.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:47:25.732
  STEP: Waiting for pod completion @ 07/13/24 13:47:25.742
  E0713 13:47:26.062218      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:27.062325      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:28.062428      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:29.062502      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:47:29.762: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3192" for this suite. @ 07/13/24 13:47:29.766
â€¢ [4.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 07/13/24 13:47:29.774
  Jul 13 13:47:29.774: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename lease-test @ 07/13/24 13:47:29.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:47:29.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:47:29.79
  Jul 13 13:47:29.858: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-3607" for this suite. @ 07/13/24 13:47:29.861
â€¢ [0.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 07/13/24 13:47:29.869
  Jul 13 13:47:29.869: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename endpointslice @ 07/13/24 13:47:29.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:47:29.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:47:29.887
  Jul 13 13:47:29.899: INFO: Endpoints addresses: [172.31.73.21 172.31.93.88] , ports: [6443]
  Jul 13 13:47:29.900: INFO: EndpointSlices addresses: [172.31.73.21 172.31.93.88] , ports: [6443]
  Jul 13 13:47:29.900: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3476" for this suite. @ 07/13/24 13:47:29.904
â€¢ [0.043 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 07/13/24 13:47:29.912
  Jul 13 13:47:29.912: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename field-validation @ 07/13/24 13:47:29.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:47:29.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:47:29.928
  Jul 13 13:47:29.933: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  E0713 13:47:30.062605      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:31.062748      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:32.062852      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0713 13:47:32.470389      20 warnings.go:70] unknown field "alpha"
  W0713 13:47:32.470407      20 warnings.go:70] unknown field "beta"
  W0713 13:47:32.470410      20 warnings.go:70] unknown field "delta"
  W0713 13:47:32.470413      20 warnings.go:70] unknown field "epsilon"
  W0713 13:47:32.470416      20 warnings.go:70] unknown field "gamma"
  Jul 13 13:47:33.013: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1363" for this suite. @ 07/13/24 13:47:33.017
â€¢ [3.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 07/13/24 13:47:33.025
  Jul 13 13:47:33.025: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename pod-network-test @ 07/13/24 13:47:33.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:47:33.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:47:33.049
  STEP: Performing setup for networking test in namespace pod-network-test-1623 @ 07/13/24 13:47:33.056
  STEP: creating a selector @ 07/13/24 13:47:33.056
  STEP: Creating the service pods in kubernetes @ 07/13/24 13:47:33.056
  Jul 13 13:47:33.056: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0713 13:47:33.063136      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:34.063285      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:35.064311      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:36.064471      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:37.064546      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:38.064747      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:39.064857      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:40.065089      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:41.065198      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:42.065904      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:43.066918      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:44.067010      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:45.067288      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 07/13/24 13:47:45.144
  E0713 13:47:46.067399      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:47.067559      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:47:47.175: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jul 13 13:47:47.175: INFO: Going to poll 192.168.145.163 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Jul 13 13:47:47.179: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.145.163:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1623 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 13 13:47:47.179: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 13:47:47.180: INFO: ExecWithOptions: Clientset creation
  Jul 13 13:47:47.180: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1623/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.145.163%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jul 13 13:47:47.235: INFO: Found all 1 expected endpoints: [netserver-0]
  Jul 13 13:47:47.235: INFO: Going to poll 192.168.77.208 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Jul 13 13:47:47.241: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.77.208:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1623 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 13 13:47:47.241: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 13:47:47.242: INFO: ExecWithOptions: Clientset creation
  Jul 13 13:47:47.242: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1623/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.77.208%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jul 13 13:47:47.292: INFO: Found all 1 expected endpoints: [netserver-1]
  Jul 13 13:47:47.292: INFO: Going to poll 192.168.67.167 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Jul 13 13:47:47.297: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.67.167:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1623 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 13 13:47:47.297: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 13:47:47.297: INFO: ExecWithOptions: Clientset creation
  Jul 13 13:47:47.297: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1623/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.67.167%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jul 13 13:47:47.346: INFO: Found all 1 expected endpoints: [netserver-2]
  Jul 13 13:47:47.346: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1623" for this suite. @ 07/13/24 13:47:47.349
â€¢ [14.333 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 07/13/24 13:47:47.358
  Jul 13 13:47:47.358: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename cronjob @ 07/13/24 13:47:47.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:47:47.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:47:47.376
  STEP: Creating a ReplaceConcurrent cronjob @ 07/13/24 13:47:47.378
  STEP: Ensuring a job is scheduled @ 07/13/24 13:47:47.384
  E0713 13:47:48.068022      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:49.068113      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:50.068275      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:51.068454      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:52.068716      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:53.068985      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:54.069088      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:55.070106      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:56.070221      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:57.070309      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:58.070889      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:47:59.071104      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:00.071242      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:01.071445      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 07/13/24 13:48:01.388
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 07/13/24 13:48:01.392
  STEP: Ensuring the job is replaced with a new one @ 07/13/24 13:48:01.396
  E0713 13:48:02.071529      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:03.071719      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:04.071821      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:05.072275      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:06.072389      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:07.072613      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:08.072651      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:09.072726      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:10.073088      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:11.073372      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:12.073889      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:13.074875      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:14.075354      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:15.076262      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:16.077229      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:17.077362      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:18.078366      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:19.078490      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:20.079252      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:21.079440      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:22.080361      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:23.080459      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:24.080543      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:25.081114      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:26.081547      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:27.081633      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:28.081836      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:29.082911      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:30.082980      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:31.083062      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:32.083156      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:33.083254      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:34.083346      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:35.084256      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:36.084378      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:37.084470      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:38.084597      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:39.084696      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:40.085740      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:41.085858      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:42.085960      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:43.086046      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:44.086878      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:45.087274      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:46.087920      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:47.088045      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:48.088122      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:49.088218      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:50.089089      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:51.089282      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:52.089537      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:53.089638      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:54.089838      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:55.090107      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:56.090903      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:57.090987      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:58.091086      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:48:59.091176      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:00.091230      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:01.091931      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 07/13/24 13:49:01.399
  Jul 13 13:49:01.405: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9274" for this suite. @ 07/13/24 13:49:01.409
â€¢ [74.060 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 07/13/24 13:49:01.418
  Jul 13 13:49:01.418: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename ingressclass @ 07/13/24 13:49:01.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:49:01.439
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:49:01.441
  STEP: getting /apis @ 07/13/24 13:49:01.444
  STEP: getting /apis/networking.k8s.io @ 07/13/24 13:49:01.447
  STEP: getting /apis/networking.k8s.iov1 @ 07/13/24 13:49:01.448
  STEP: creating @ 07/13/24 13:49:01.449
  STEP: getting @ 07/13/24 13:49:01.461
  STEP: listing @ 07/13/24 13:49:01.463
  STEP: watching @ 07/13/24 13:49:01.466
  Jul 13 13:49:01.466: INFO: starting watch
  STEP: patching @ 07/13/24 13:49:01.467
  STEP: updating @ 07/13/24 13:49:01.472
  Jul 13 13:49:01.477: INFO: waiting for watch events with expected annotations
  Jul 13 13:49:01.477: INFO: saw patched and updated annotations
  STEP: deleting @ 07/13/24 13:49:01.477
  STEP: deleting a collection @ 07/13/24 13:49:01.49
  Jul 13 13:49:01.505: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-4334" for this suite. @ 07/13/24 13:49:01.508
â€¢ [0.096 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 07/13/24 13:49:01.514
  Jul 13 13:49:01.514: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename var-expansion @ 07/13/24 13:49:01.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:49:01.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:49:01.531
  STEP: creating the pod with failed condition @ 07/13/24 13:49:01.533
  E0713 13:49:02.092038      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:03.092126      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:04.092961      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:05.093290      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:06.093810      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:07.093979      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:08.094052      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:09.094170      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:10.094235      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:11.094926      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:12.095124      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:13.095288      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:14.096140      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:15.096226      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:16.096275      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:17.096341      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:18.097086      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:19.097176      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:20.097899      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:21.098910      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:22.099974      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:23.100072      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:24.100182      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:25.100257      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:26.100980      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:27.102034      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:28.102442      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:29.102903      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:30.103303      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:31.103418      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:32.104396      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:33.104659      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:34.105152      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:35.106137      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:36.106910      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:37.107068      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:38.107314      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:39.107541      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:40.108095      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:41.108185      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:42.108518      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:43.108609      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:44.109663      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:45.110161      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:46.110891      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:47.110975      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:48.111973      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:49.112826      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:50.113319      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:51.113473      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:52.113818      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:53.113847      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:54.114348      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:55.114721      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:56.114808      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:57.115009      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:58.115284      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:49:59.115511      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:00.116448      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:01.116564      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:02.116670      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:03.116848      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:04.116972      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:05.117272      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:06.117872      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:07.118888      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:08.119649      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:09.119823      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:10.119982      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:11.120230      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:12.121056      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:13.121168      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:14.121254      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:15.122304      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:16.122573      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:17.122975      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:18.123487      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:19.123600      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:20.124117      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:21.124305      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:22.125054      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:23.125181      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:24.125548      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:25.126053      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:26.126880      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:27.127107      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:28.127355      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:29.127751      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:30.128168      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:31.128469      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:32.129378      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:33.129478      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:34.129516      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:35.129583      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:36.129822      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:37.129915      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:38.130596      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:39.130699      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:40.130871      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:41.131053      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:42.131991      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:43.132088      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:44.132169      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:45.133106      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:46.133186      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:47.133620      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:48.134468      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:49.134598      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:50.135650      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:51.135907      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:52.136558      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:53.137238      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:54.138211      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:55.138275      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:56.138357      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:57.138902      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:58.139410      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:50:59.139520      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:00.140021      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:01.140208      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pod @ 07/13/24 13:51:01.543
  Jul 13 13:51:02.055: INFO: Successfully updated pod "var-expansion-c9346ace-179e-49a4-b457-d478a450d13a"
  STEP: waiting for pod running @ 07/13/24 13:51:02.055
  E0713 13:51:02.140536      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:03.140995      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 07/13/24 13:51:04.063
  Jul 13 13:51:04.063: INFO: Deleting pod "var-expansion-c9346ace-179e-49a4-b457-d478a450d13a" in namespace "var-expansion-6148"
  Jul 13 13:51:04.072: INFO: Wait up to 5m0s for pod "var-expansion-c9346ace-179e-49a4-b457-d478a450d13a" to be fully deleted
  E0713 13:51:04.141044      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:05.141106      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:06.141526      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:07.141760      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:08.141817      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:09.142897      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:10.143907      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:11.144036      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:12.144697      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:13.144903      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:14.145538      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:15.145964      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:16.146271      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:17.146910      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:18.147843      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:19.147934      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:20.148556      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:21.148670      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:22.149221      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:23.149374      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:24.149490      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:25.149927      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:26.150582      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:27.150877      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:28.150988      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:29.152096      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:30.152737      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:31.153006      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:32.153322      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:33.153819      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:34.154375      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:35.155132      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:51:36.150: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0713 13:51:36.155132      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "var-expansion-6148" for this suite. @ 07/13/24 13:51:36.155
â€¢ [154.651 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 07/13/24 13:51:36.165
  Jul 13 13:51:36.165: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename csiinlinevolumes @ 07/13/24 13:51:36.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:51:36.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:51:36.187
  STEP: creating @ 07/13/24 13:51:36.19
  STEP: getting @ 07/13/24 13:51:36.207
  STEP: listing in namespace @ 07/13/24 13:51:36.212
  STEP: patching @ 07/13/24 13:51:36.215
  STEP: deleting @ 07/13/24 13:51:36.233
  Jul 13 13:51:36.243: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-9658" for this suite. @ 07/13/24 13:51:36.247
â€¢ [0.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 07/13/24 13:51:36.255
  Jul 13 13:51:36.255: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename downward-api @ 07/13/24 13:51:36.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:51:36.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:51:36.27
  STEP: Creating a pod to test downward API volume plugin @ 07/13/24 13:51:36.272
  E0713 13:51:37.156003      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:38.156181      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:39.156242      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:40.156465      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/13/24 13:51:40.294
  Jul 13 13:51:40.298: INFO: Trying to get logs from node ip-172-31-89-122 pod downwardapi-volume-44ac921a-7dc4-4a1e-93ef-908f14dcd442 container client-container: <nil>
  STEP: delete the pod @ 07/13/24 13:51:40.312
  Jul 13 13:51:40.326: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9604" for this suite. @ 07/13/24 13:51:40.329
â€¢ [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 07/13/24 13:51:40.338
  Jul 13 13:51:40.338: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/13/24 13:51:40.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:51:40.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:51:40.404
  Jul 13 13:51:40.407: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  E0713 13:51:41.157309      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:42.158218      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:43.159197      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:51:43.488: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-383" for this suite. @ 07/13/24 13:51:43.492
â€¢ [3.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 07/13/24 13:51:43.5
  Jul 13 13:51:43.500: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename configmap @ 07/13/24 13:51:43.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:51:43.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:51:43.517
  STEP: Creating configMap with name configmap-test-volume-map-5c0a5006-2974-43b5-b166-4ac7a81ae26b @ 07/13/24 13:51:43.519
  STEP: Creating a pod to test consume configMaps @ 07/13/24 13:51:43.525
  E0713 13:51:44.159245      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:45.160185      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:46.160304      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:47.160585      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/13/24 13:51:47.551
  Jul 13 13:51:47.553: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-configmaps-87f8da90-d983-4a57-96ff-90ad73974ad2 container agnhost-container: <nil>
  STEP: delete the pod @ 07/13/24 13:51:47.569
  Jul 13 13:51:47.586: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6462" for this suite. @ 07/13/24 13:51:47.59
â€¢ [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 07/13/24 13:51:47.597
  Jul 13 13:51:47.597: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename pods @ 07/13/24 13:51:47.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:51:47.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:51:47.614
  E0713 13:51:48.161649      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:49.161846      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:50.162243      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:51.162928      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:52.163674      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:53.163792      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/13/24 13:51:53.669
  Jul 13 13:51:53.673: INFO: Trying to get logs from node ip-172-31-37-214 pod client-envvars-e93c7830-6546-496a-aa10-73135a0e89f6 container env3cont: <nil>
  STEP: delete the pod @ 07/13/24 13:51:53.68
  Jul 13 13:51:53.693: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9358" for this suite. @ 07/13/24 13:51:53.697
â€¢ [6.104 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:962
  STEP: Creating a kubernetes client @ 07/13/24 13:51:53.702
  Jul 13 13:51:53.702: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename statefulset @ 07/13/24 13:51:53.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:51:53.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:51:53.719
  STEP: Creating service test in namespace statefulset-5427 @ 07/13/24 13:51:53.721
  Jul 13 13:51:53.737: INFO: Found 0 stateful pods, waiting for 1
  E0713 13:51:54.164631      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:55.165514      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:56.165607      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:57.165862      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:58.165966      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:51:59.166081      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:00.166153      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:01.167061      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:02.167383      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:03.167575      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:52:03.737: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 07/13/24 13:52:03.743
  W0713 13:52:03.753849      20 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Jul 13 13:52:03.761: INFO: Found 1 stateful pods, waiting for 2
  E0713 13:52:04.168016      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:05.168336      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:06.168991      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:07.169059      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:08.169151      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:09.169249      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:10.170160      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:11.170870      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:12.171061      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:13.171170      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:52:13.762: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jul 13 13:52:13.762: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 07/13/24 13:52:13.769
  STEP: Delete all of the StatefulSets @ 07/13/24 13:52:13.772
  STEP: Verify that StatefulSets have been deleted @ 07/13/24 13:52:13.781
  Jul 13 13:52:13.785: INFO: Deleting all statefulset in ns statefulset-5427
  Jul 13 13:52:13.811: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5427" for this suite. @ 07/13/24 13:52:13.814
â€¢ [20.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 07/13/24 13:52:13.822
  Jul 13 13:52:13.822: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename container-probe @ 07/13/24 13:52:13.822
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:52:13.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:52:13.84
  E0713 13:52:14.172080      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:15.172409      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:16.172742      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:17.172823      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:18.173663      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:19.173832      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:20.174764      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:21.174865      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:22.175230      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:23.175325      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:24.176310      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:25.177220      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:26.177332      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:27.177420      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:28.178417      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:29.178914      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:30.179821      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:31.179929      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:32.181011      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:33.181543      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:34.181632      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:35.182118      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:52:35.912: INFO: Container started at 2024-07-13 13:52:14 +0000 UTC, pod became ready at 2024-07-13 13:52:34 +0000 UTC
  Jul 13 13:52:35.912: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-33" for this suite. @ 07/13/24 13:52:35.917
â€¢ [22.102 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 07/13/24 13:52:35.924
  Jul 13 13:52:35.924: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename emptydir @ 07/13/24 13:52:35.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:52:35.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:52:35.943
  STEP: Creating Pod @ 07/13/24 13:52:35.945
  E0713 13:52:36.182866      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:37.182958      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 07/13/24 13:52:37.964
  Jul 13 13:52:37.964: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-250 PodName:pod-sharedvolume-75e86f8a-a440-4fb7-846f-5718e19e96e7 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jul 13 13:52:37.964: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  Jul 13 13:52:37.964: INFO: ExecWithOptions: Clientset creation
  Jul 13 13:52:37.964: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-250/pods/pod-sharedvolume-75e86f8a-a440-4fb7-846f-5718e19e96e7/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Jul 13 13:52:38.011: INFO: Exec stderr: ""
  Jul 13 13:52:38.011: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-250" for this suite. @ 07/13/24 13:52:38.016
â€¢ [2.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 07/13/24 13:52:38.024
  Jul 13 13:52:38.024: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename daemonsets @ 07/13/24 13:52:38.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:52:38.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:52:38.042
  Jul 13 13:52:38.061: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 07/13/24 13:52:38.068
  Jul 13 13:52:38.075: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 13 13:52:38.075: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 07/13/24 13:52:38.075
  Jul 13 13:52:38.105: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 13 13:52:38.105: INFO: Node ip-172-31-37-214 is running 0 daemon pod, expected 1
  E0713 13:52:38.183270      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:52:39.094: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 13 13:52:39.094: INFO: Node ip-172-31-37-214 is running 0 daemon pod, expected 1
  E0713 13:52:39.183627      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:52:40.096: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jul 13 13:52:40.096: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 07/13/24 13:52:40.099
  Jul 13 13:52:40.113: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jul 13 13:52:40.113: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E0713 13:52:40.185157      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:52:41.115: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 13 13:52:41.115: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 07/13/24 13:52:41.115
  Jul 13 13:52:41.126: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 13 13:52:41.126: INFO: Node ip-172-31-37-214 is running 0 daemon pod, expected 1
  E0713 13:52:41.185957      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:52:42.129: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 13 13:52:42.129: INFO: Node ip-172-31-37-214 is running 0 daemon pod, expected 1
  E0713 13:52:42.186564      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:52:43.128: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jul 13 13:52:43.128: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/13/24 13:52:43.135
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6113, will wait for the garbage collector to delete the pods @ 07/13/24 13:52:43.135
  E0713 13:52:43.187433      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:52:43.195: INFO: Deleting DaemonSet.extensions daemon-set took: 7.285607ms
  Jul 13 13:52:43.295: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.06373ms
  E0713 13:52:44.188073      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:52:44.301: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 13 13:52:44.301: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jul 13 13:52:44.303: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"43990"},"items":null}

  Jul 13 13:52:44.306: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"43990"},"items":null}

  Jul 13 13:52:44.327: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6113" for this suite. @ 07/13/24 13:52:44.331
â€¢ [6.314 seconds]
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 07/13/24 13:52:44.339
  Jul 13 13:52:44.339: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename emptydir-wrapper @ 07/13/24 13:52:44.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:52:44.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:52:44.402
  E0713 13:52:45.188471      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:46.188561      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 07/13/24 13:52:46.434
  STEP: Cleaning up the configmap @ 07/13/24 13:52:46.441
  STEP: Cleaning up the pod @ 07/13/24 13:52:46.448
  Jul 13 13:52:46.459: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-4379" for this suite. @ 07/13/24 13:52:46.464
â€¢ [2.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 07/13/24 13:52:46.47
  Jul 13 13:52:46.470: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename container-runtime @ 07/13/24 13:52:46.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:52:46.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:52:46.485
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 07/13/24 13:52:46.496
  E0713 13:52:47.188606      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:48.189104      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:49.189169      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:50.189285      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:51.189389      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:52.189502      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:53.189836      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:54.190692      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:55.191154      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:56.191258      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:57.191351      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:58.192187      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:52:59.192281      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:53:00.192309      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:53:01.192477      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 07/13/24 13:53:01.575
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 07/13/24 13:53:01.579
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 07/13/24 13:53:01.585
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 07/13/24 13:53:01.585
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 07/13/24 13:53:01.607
  E0713 13:53:02.192562      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:53:03.192682      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:53:04.192805      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 07/13/24 13:53:04.627
  E0713 13:53:05.193207      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 07/13/24 13:53:05.635
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 07/13/24 13:53:05.642
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 07/13/24 13:53:05.642
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 07/13/24 13:53:05.662
  E0713 13:53:06.193981      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 07/13/24 13:53:06.67
  E0713 13:53:07.194814      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:53:08.195066      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 07/13/24 13:53:08.682
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 07/13/24 13:53:08.689
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 07/13/24 13:53:08.689
  Jul 13 13:53:08.714: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2022" for this suite. @ 07/13/24 13:53:08.718
â€¢ [22.255 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 07/13/24 13:53:08.725
  Jul 13 13:53:08.726: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename projected @ 07/13/24 13:53:08.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:53:08.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:53:08.742
  STEP: Creating a pod to test downward API volume plugin @ 07/13/24 13:53:08.744
  E0713 13:53:09.195448      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:53:10.196307      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:53:11.197071      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:53:12.197189      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/13/24 13:53:12.769
  Jul 13 13:53:12.773: INFO: Trying to get logs from node ip-172-31-37-214 pod downwardapi-volume-7df138de-4c2e-49c7-a793-a06cc1b7dfb4 container client-container: <nil>
  STEP: delete the pod @ 07/13/24 13:53:12.779
  Jul 13 13:53:12.793: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3377" for this suite. @ 07/13/24 13:53:12.797
â€¢ [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 07/13/24 13:53:12.803
  Jul 13 13:53:12.803: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename container-probe @ 07/13/24 13:53:12.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:53:12.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:53:12.819
  STEP: Creating pod busybox-0c12f972-cba9-4c3c-b211-febdad1083c8 in namespace container-probe-6508 @ 07/13/24 13:53:12.822
  E0713 13:53:13.197284      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:53:14.197370      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/13/24 13:53:14.839
  Jul 13 13:53:14.843: INFO: Initial restart count of pod busybox-0c12f972-cba9-4c3c-b211-febdad1083c8 is 0
  Jul 13 13:53:14.846: INFO: Get pod busybox-0c12f972-cba9-4c3c-b211-febdad1083c8 in namespace container-probe-6508
  E0713 13:53:15.197961      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:53:16.198193      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:53:16.851: INFO: Get pod busybox-0c12f972-cba9-4c3c-b211-febdad1083c8 in namespace container-probe-6508
  E0713 13:53:17.198291      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:53:18.198391      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:53:18.855: INFO: Get pod busybox-0c12f972-cba9-4c3c-b211-febdad1083c8 in namespace container-probe-6508
  E0713 13:53:19.198842      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:53:20.199947      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:53:20.859: INFO: Get pod busybox-0c12f972-cba9-4c3c-b211-febdad1083c8 in namespace container-probe-6508
  E0713 13:53:21.200734      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:53:22.200859      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:53:22.863: INFO: Get pod busybox-0c12f972-cba9-4c3c-b211-febdad1083c8 in namespace container-probe-6508
  E0713 13:53:23.201006      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:53:24.201099      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:53:24.869: INFO: Get pod busybox-0c12f972-cba9-4c3c-b211-febdad1083c8 in namespace container-probe-6508
  E0713 13:53:25.201830      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:53:26.202884      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:53:26.873: INFO: Get pod busybox-0c12f972-cba9-4c3c-b211-febdad1083c8 in namespace container-probe-6508
  E0713 13:53:27.203164      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:53:28.203440      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:53:28.879: INFO: Get pod busybox-0c12f972-cba9-4c3c-b211-febdad1083c8 in namespace container-probe-6508
  E0713 13:53:29.204188      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:53:30.205932      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:53:30.884: INFO: Get pod busybox-0c12f972-cba9-4c3c-b211-febdad1083c8 in namespace container-probe-6508
  E0713 13:53:31.206637      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:53:32.206768      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:53:32.889: INFO: Get pod busybox-0c12f972-cba9-4c3c-b211-febdad1083c8 in namespace container-probe-6508
  E0713 13:53:33.206954      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:53:34.207064      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:53:34.895: INFO: Get pod busybox-0c12f972-cba9-4c3c-b211-febdad1083c8 in namespace container-probe-6508
  E0713 13:53:35.207152      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:53:36.207349      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:53:36.900: INFO: Get pod busybox-0c12f972-cba9-4c3c-b211-febdad1083c8 in namespace container-probe-6508
  E0713 13:53:37.207972      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:53:38.208145      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:53:38.907: INFO: Get pod busybox-0c12f972-cba9-4c3c-b211-febdad1083c8 in namespace container-probe-6508
  E0713 13:53:39.208222      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:53:40.209241      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:53:40.913: INFO: Get pod busybox-0c12f972-cba9-4c3c-b211-febdad1083c8 in namespace container-probe-6508
  E0713 13:53:41.209447      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:53:42.209674      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:53:42.918: INFO: Get pod busybox-0c12f972-cba9-4c3c-b211-febdad1083c8 in namespace container-probe-6508
  E0713 13:53:43.210003      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:53:44.210882      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:53:44.922: INFO: Get pod busybox-0c12f972-cba9-4c3c-b211-febdad1083c8 in namespace container-probe-6508
  E0713 13:53:45.211001      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:53:46.211261      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:53:46.927: INFO: Get pod busybox-0c12f972-cba9-4c3c-b211-febdad1083c8 in namespace container-probe-6508
  E0713 13:53:47.212090      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:53:48.212911      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:53:48.932: INFO: Get pod busybox-0c12f972-cba9-4c3c-b211-febdad1083c8 in namespace container-probe-6508
  E0713 13:53:49.213325      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:53:50.214219      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:53:50.936: INFO: Get pod busybox-0c12f972-cba9-4c3c-b211-febdad1083c8 in namespace container-probe-6508
  E0713 13:53:51.215235      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:53:52.215289      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:53:52.941: INFO: Get pod busybox-0c12f972-cba9-4c3c-b211-febdad1083c8 in namespace container-probe-6508
  E0713 13:53:53.216098      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:53:54.216267      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:53:54.945: INFO: Get pod busybox-0c12f972-cba9-4c3c-b211-febdad1083c8 in namespace container-probe-6508
  E0713 13:53:55.217011      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:53:56.217131      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:53:56.950: INFO: Get pod busybox-0c12f972-cba9-4c3c-b211-febdad1083c8 in namespace container-probe-6508
  E0713 13:53:57.217435      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:53:58.217611      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:53:58.955: INFO: Get pod busybox-0c12f972-cba9-4c3c-b211-febdad1083c8 in namespace container-probe-6508
  E0713 13:53:59.218678      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:00.219405      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:54:00.961: INFO: Get pod busybox-0c12f972-cba9-4c3c-b211-febdad1083c8 in namespace container-probe-6508
  E0713 13:54:01.219512      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:02.219670      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:54:02.965: INFO: Get pod busybox-0c12f972-cba9-4c3c-b211-febdad1083c8 in namespace container-probe-6508
  E0713 13:54:03.219764      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:04.219865      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:54:04.972: INFO: Get pod busybox-0c12f972-cba9-4c3c-b211-febdad1083c8 in namespace container-probe-6508
  Jul 13 13:54:04.972: INFO: Restart count of pod container-probe-6508/busybox-0c12f972-cba9-4c3c-b211-febdad1083c8 is now 1 (50.128811062s elapsed)
  STEP: deleting the pod @ 07/13/24 13:54:04.972
  Jul 13 13:54:04.984: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6508" for this suite. @ 07/13/24 13:54:04.988
â€¢ [52.193 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 07/13/24 13:54:04.996
  Jul 13 13:54:04.996: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename deployment @ 07/13/24 13:54:04.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:54:05.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:54:05.016
  Jul 13 13:54:05.019: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Jul 13 13:54:05.027: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0713 13:54:05.220273      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:06.221174      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:07.221255      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:08.222155      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:09.222228      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:54:10.033: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/13/24 13:54:10.033
  Jul 13 13:54:10.033: INFO: Creating deployment "test-rolling-update-deployment"
  Jul 13 13:54:10.039: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Jul 13 13:54:10.045: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0713 13:54:10.222906      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:11.223019      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:54:12.052: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Jul 13 13:54:12.055: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Jul 13 13:54:12.064: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "087670b8-5d6c-4718-a541-4cc1c0c84058",
      ResourceVersion: (string) (len=5) "44437",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856475650,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856475650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856475650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856475650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856475650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856475650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856475650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-7ddb77f68b\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jul 13 13:54:12.069: INFO: New ReplicaSet "test-rolling-update-deployment-7ddb77f68b" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6f4f8462-7e10-4d9f-ad68-d6f9bd00cc88",
      ResourceVersion: (string) (len=5) "44427",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856475650,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "087670b8-5d6c-4718-a541-4cc1c0c84058",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856475650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 38 37 36 37 30  62 38 2d 35 64 36 63 2d  |\"087670b8-5d6c-|
              00000120  34 37 31 38 2d 61 35 34  31 2d 34 63 63 31 63 30  |4718-a541-4cc1c0|
              00000130  63 38 34 30 35 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |c84058\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856475650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul 13 13:54:12.069: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Jul 13 13:54:12.069: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "82f8b74b-830f-438a-8ac2-a8def688313a",
      ResourceVersion: (string) (len=5) "44436",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856475645,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "087670b8-5d6c-4718-a541-4cc1c0c84058",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856475645,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856475650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 30 38 37 36 37 30 62  |"uid\":\"087670b|
              000000b0  38 2d 35 64 36 63 2d 34  37 31 38 2d 61 35 34 31  |8-5d6c-4718-a541|
              000000c0  2d 34 63 63 31 63 30 63  38 34 30 35 38 5c 22 7d  |-4cc1c0c84058\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856475650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jul 13 13:54:12.077: INFO: Pod "test-rolling-update-deployment-7ddb77f68b-q7kr4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-7ddb77f68b-q7kr4",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-7ddb77f68b-",
      Namespace: (string) (len=15) "deployment-6796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4fc0327a-3614-4bbd-9fd1-8438457a56a3",
      ResourceVersion: (string) (len=5) "44426",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856475650,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
          UID: (types.UID) (len=36) "6f4f8462-7e10-4d9f-ad68-d6f9bd00cc88",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856475650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 66  34 66 38 34 36 32 2d 37  |d\":\"6f4f8462-7|
              00000090  65 31 30 2d 34 64 39 66  2d 61 64 36 38 2d 64 36  |e10-4d9f-ad68-d6|
              000000a0  66 39 62 64 30 30 63 63  38 38 5c 22 7d 22 3a 7b  |f9bd00cc88\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856475650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 36 37  2e 31 36 39 5c 22 7d 22  |2.168.67.169\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w2cqj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w2cqj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-89-122",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856475650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856475650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856475650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856475650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63856475650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.89.122",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.89.122"
        }
      },
      PodIP: (string) (len=14) "192.168.67.169",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.67.169"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63856475650,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63856475650,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://8a25dbaeeaad3c121a53cfadbf732a4bfb29fa8f3162e0c895cc6f495982226f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jul 13 13:54:12.078: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6796" for this suite. @ 07/13/24 13:54:12.081
â€¢ [7.091 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 07/13/24 13:54:12.087
  Jul 13 13:54:12.087: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/13/24 13:54:12.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:54:12.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:54:12.104
  STEP: set up a multi version CRD @ 07/13/24 13:54:12.107
  Jul 13 13:54:12.107: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  E0713 13:54:12.223940      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:13.224278      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:14.224636      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 07/13/24 13:54:15.22
  E0713 13:54:15.225516      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the unserved version gets removed @ 07/13/24 13:54:15.235
  STEP: check the other version is not changed @ 07/13/24 13:54:15.979
  E0713 13:54:16.226416      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:17.227308      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:18.228347      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:54:18.391: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9699" for this suite. @ 07/13/24 13:54:18.397
â€¢ [6.316 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 07/13/24 13:54:18.403
  Jul 13 13:54:18.403: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/13/24 13:54:18.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:54:18.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:54:18.422
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 07/13/24 13:54:18.425
  Jul 13 13:54:18.425: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  E0713 13:54:19.229235      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:20.229751      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:21.230375      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:22.230940      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:23.231803      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 07/13/24 13:54:23.42
  Jul 13 13:54:23.420: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  E0713 13:54:24.232738      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:54:24.620: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  E0713 13:54:25.232758      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:26.233488      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:27.233490      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:28.238177      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:29.238895      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:54:29.592: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9826" for this suite. @ 07/13/24 13:54:29.599
â€¢ [11.201 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 07/13/24 13:54:29.604
  Jul 13 13:54:29.604: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename emptydir @ 07/13/24 13:54:29.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:54:29.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:54:29.621
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 07/13/24 13:54:29.623
  E0713 13:54:30.239657      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:31.239731      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/13/24 13:54:31.639
  Jul 13 13:54:31.641: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-0cb939ee-78e2-4d9c-9756-f577d5f3b2b2 container test-container: <nil>
  STEP: delete the pod @ 07/13/24 13:54:31.647
  Jul 13 13:54:31.664: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9458" for this suite. @ 07/13/24 13:54:31.667
â€¢ [2.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 07/13/24 13:54:31.673
  Jul 13 13:54:31.673: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename init-container @ 07/13/24 13:54:31.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:54:31.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:54:31.689
  STEP: creating the pod @ 07/13/24 13:54:31.692
  Jul 13 13:54:31.692: INFO: PodSpec: initContainers in spec.initContainers
  E0713 13:54:32.240593      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:33.240654      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:34.241700      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:35.242099      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:36.242197      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:37.242893      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:38.243119      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:39.243232      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:40.243270      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:41.243373      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:42.243468      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:43.243648      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:44.244707      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:45.245715      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:46.246198      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:47.246754      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:48.247517      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:49.248303      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:50.249249      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:51.249516      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:52.250166      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:53.250564      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:54.250665      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:55.251052      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:56.251960      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:57.252051      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:58.252441      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:54:59.252540      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:00.253310      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:01.254203      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:02.254289      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:03.254654      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:04.254728      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:05.255250      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:06.255452      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:07.255646      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:08.255857      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:09.256064      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:10.256178      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:11.256279      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:12.256597      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:13.256829      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:14.257019      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:15.257213      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:16.257331      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:55:16.477: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-e3bb55b2-2292-4c1f-9939-a2a9c9cb157c", GenerateName:"", Namespace:"init-container-6896", SelfLink:"", UID:"912e92cb-d780-4add-afe4-b1eeee64a4b7", ResourceVersion:"44726", Generation:0, CreationTimestamp:time.Date(2024, time.July, 13, 13, 54, 31, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"692133530"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 13, 54, 31, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0048f10c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 13, 55, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0048f10f8), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-wx679", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0041af120), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-wx679", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-wx679", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-wx679", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc002285440), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-37-214", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc000629490), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0022854e0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc002285500)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc002285508), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00228550c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc005202920), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.July, 13, 13, 54, 32, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.July, 13, 13, 54, 31, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.July, 13, 13, 54, 31, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.July, 13, 13, 54, 31, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.July, 13, 13, 54, 31, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.37.214", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.37.214"}}, PodIP:"192.168.77.247", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.77.247"}}, StartTime:time.Date(2024, time.July, 13, 13, 54, 31, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000629570)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0006295e0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://2b5d4d97653b4ece1c4bd594d0523ffae12fb831b508d4e89d6412fae0c34854", Started:(*bool)(0xc0022855af), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0041af1a0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc0022855b5), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0041af180), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc002285584), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Jul 13 13:55:16.477: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6896" for this suite. @ 07/13/24 13:55:16.481
â€¢ [44.816 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 07/13/24 13:55:16.489
  Jul 13 13:55:16.489: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename webhook @ 07/13/24 13:55:16.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:55:16.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:55:16.507
  STEP: Setting up server cert @ 07/13/24 13:55:16.526
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/13/24 13:55:16.905
  STEP: Deploying the webhook pod @ 07/13/24 13:55:16.914
  STEP: Wait for the deployment to be ready @ 07/13/24 13:55:16.925
  Jul 13 13:55:16.933: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0713 13:55:17.258074      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:18.258141      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/13/24 13:55:18.946
  STEP: Verifying the service has paired with the endpoint @ 07/13/24 13:55:18.959
  E0713 13:55:19.258603      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:55:19.960: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 07/13/24 13:55:19.967
  STEP: create a configmap that should be updated by the webhook @ 07/13/24 13:55:19.98
  Jul 13 13:55:20.036: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6704" for this suite. @ 07/13/24 13:55:20.04
  STEP: Destroying namespace "webhook-markers-5020" for this suite. @ 07/13/24 13:55:20.045
â€¢ [3.564 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 07/13/24 13:55:20.054
  Jul 13 13:55:20.054: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename limitrange @ 07/13/24 13:55:20.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:55:20.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:55:20.068
  STEP: Creating LimitRange "e2e-limitrange-b9j9k" in namespace "limitrange-6510" @ 07/13/24 13:55:20.071
  STEP: Creating another limitRange in another namespace @ 07/13/24 13:55:20.075
  Jul 13 13:55:20.085: INFO: Namespace "e2e-limitrange-b9j9k-9193" created
  Jul 13 13:55:20.085: INFO: Creating LimitRange "e2e-limitrange-b9j9k" in namespace "e2e-limitrange-b9j9k-9193"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-b9j9k" @ 07/13/24 13:55:20.091
  Jul 13 13:55:20.095: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-b9j9k" in "limitrange-6510" namespace @ 07/13/24 13:55:20.095
  Jul 13 13:55:20.102: INFO: LimitRange "e2e-limitrange-b9j9k" has been patched
  STEP: Delete LimitRange "e2e-limitrange-b9j9k" by Collection with labelSelector: "e2e-limitrange-b9j9k=patched" @ 07/13/24 13:55:20.102
  STEP: Confirm that the limitRange "e2e-limitrange-b9j9k" has been deleted @ 07/13/24 13:55:20.111
  Jul 13 13:55:20.112: INFO: Requesting list of LimitRange to confirm quantity
  Jul 13 13:55:20.115: INFO: Found 0 LimitRange with label "e2e-limitrange-b9j9k=patched"
  Jul 13 13:55:20.115: INFO: LimitRange "e2e-limitrange-b9j9k" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-b9j9k" @ 07/13/24 13:55:20.115
  Jul 13 13:55:20.118: INFO: Found 1 limitRange
  Jul 13 13:55:20.119: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-6510" for this suite. @ 07/13/24 13:55:20.123
  STEP: Destroying namespace "e2e-limitrange-b9j9k-9193" for this suite. @ 07/13/24 13:55:20.128
â€¢ [0.081 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 07/13/24 13:55:20.135
  Jul 13 13:55:20.135: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename configmap @ 07/13/24 13:55:20.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:55:20.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:55:20.151
  STEP: Creating configMap with name configmap-test-volume-map-81f16d78-5b50-4691-b627-9bd330b5a04c @ 07/13/24 13:55:20.153
  STEP: Creating a pod to test consume configMaps @ 07/13/24 13:55:20.157
  E0713 13:55:20.259448      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:21.259541      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/13/24 13:55:22.173
  Jul 13 13:55:22.175: INFO: Trying to get logs from node ip-172-31-89-122 pod pod-configmaps-0e0c6ed4-4246-49e3-bfca-5acee4b34791 container agnhost-container: <nil>
  STEP: delete the pod @ 07/13/24 13:55:22.186
  Jul 13 13:55:22.203: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9195" for this suite. @ 07/13/24 13:55:22.205
â€¢ [2.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2199
  STEP: Creating a kubernetes client @ 07/13/24 13:55:22.213
  Jul 13 13:55:22.213: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename services @ 07/13/24 13:55:22.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:55:22.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:55:22.23
  STEP: creating service in namespace services-7432 @ 07/13/24 13:55:22.232
  STEP: creating service affinity-clusterip-transition in namespace services-7432 @ 07/13/24 13:55:22.233
  STEP: creating replication controller affinity-clusterip-transition in namespace services-7432 @ 07/13/24 13:55:22.242
  I0713 13:55:22.249767      20 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-7432, replica count: 3
  E0713 13:55:22.260121      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:23.260655      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:24.261348      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:25.262314      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0713 13:55:25.300521      20 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jul 13 13:55:25.308: INFO: Creating new exec pod
  E0713 13:55:26.262409      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:27.262508      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:28.262599      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:55:28.330: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-7432 exec execpod-affinitymzdzn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Jul 13 13:55:28.431: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip-transition 80\n+ echo hostName\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Jul 13 13:55:28.431: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 13 13:55:28.431: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-7432 exec execpod-affinitymzdzn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.223 80'
  Jul 13 13:55:28.525: INFO: stderr: "+ nc -v -t -w 2 10.152.183.223 80\n+ echo hostName\nConnection to 10.152.183.223 80 port [tcp/http] succeeded!\n"
  Jul 13 13:55:28.525: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 13 13:55:28.535: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-7432 exec execpod-affinitymzdzn -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.223:80/ ; done'
  Jul 13 13:55:28.701: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n"
  Jul 13 13:55:28.701: INFO: stdout: "\naffinity-clusterip-transition-5sxmc\naffinity-clusterip-transition-xbjmk\naffinity-clusterip-transition-xbjmk\naffinity-clusterip-transition-5sxmc\naffinity-clusterip-transition-5sxmc\naffinity-clusterip-transition-5sxmc\naffinity-clusterip-transition-6wwzn\naffinity-clusterip-transition-5sxmc\naffinity-clusterip-transition-xbjmk\naffinity-clusterip-transition-xbjmk\naffinity-clusterip-transition-5sxmc\naffinity-clusterip-transition-xbjmk\naffinity-clusterip-transition-5sxmc\naffinity-clusterip-transition-xbjmk\naffinity-clusterip-transition-5sxmc\naffinity-clusterip-transition-6wwzn"
  Jul 13 13:55:28.701: INFO: Received response from host: affinity-clusterip-transition-5sxmc
  Jul 13 13:55:28.701: INFO: Received response from host: affinity-clusterip-transition-xbjmk
  Jul 13 13:55:28.701: INFO: Received response from host: affinity-clusterip-transition-xbjmk
  Jul 13 13:55:28.701: INFO: Received response from host: affinity-clusterip-transition-5sxmc
  Jul 13 13:55:28.701: INFO: Received response from host: affinity-clusterip-transition-5sxmc
  Jul 13 13:55:28.701: INFO: Received response from host: affinity-clusterip-transition-5sxmc
  Jul 13 13:55:28.701: INFO: Received response from host: affinity-clusterip-transition-6wwzn
  Jul 13 13:55:28.701: INFO: Received response from host: affinity-clusterip-transition-5sxmc
  Jul 13 13:55:28.702: INFO: Received response from host: affinity-clusterip-transition-xbjmk
  Jul 13 13:55:28.702: INFO: Received response from host: affinity-clusterip-transition-xbjmk
  Jul 13 13:55:28.702: INFO: Received response from host: affinity-clusterip-transition-5sxmc
  Jul 13 13:55:28.702: INFO: Received response from host: affinity-clusterip-transition-xbjmk
  Jul 13 13:55:28.702: INFO: Received response from host: affinity-clusterip-transition-5sxmc
  Jul 13 13:55:28.702: INFO: Received response from host: affinity-clusterip-transition-xbjmk
  Jul 13 13:55:28.702: INFO: Received response from host: affinity-clusterip-transition-5sxmc
  Jul 13 13:55:28.702: INFO: Received response from host: affinity-clusterip-transition-6wwzn
  Jul 13 13:55:28.714: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-7432 exec execpod-affinitymzdzn -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.223:80/ ; done'
  Jul 13 13:55:28.874: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.223:80/\n"
  Jul 13 13:55:28.874: INFO: stdout: "\naffinity-clusterip-transition-6wwzn\naffinity-clusterip-transition-6wwzn\naffinity-clusterip-transition-6wwzn\naffinity-clusterip-transition-6wwzn\naffinity-clusterip-transition-6wwzn\naffinity-clusterip-transition-6wwzn\naffinity-clusterip-transition-6wwzn\naffinity-clusterip-transition-6wwzn\naffinity-clusterip-transition-6wwzn\naffinity-clusterip-transition-6wwzn\naffinity-clusterip-transition-6wwzn\naffinity-clusterip-transition-6wwzn\naffinity-clusterip-transition-6wwzn\naffinity-clusterip-transition-6wwzn\naffinity-clusterip-transition-6wwzn\naffinity-clusterip-transition-6wwzn"
  Jul 13 13:55:28.874: INFO: Received response from host: affinity-clusterip-transition-6wwzn
  Jul 13 13:55:28.874: INFO: Received response from host: affinity-clusterip-transition-6wwzn
  Jul 13 13:55:28.874: INFO: Received response from host: affinity-clusterip-transition-6wwzn
  Jul 13 13:55:28.874: INFO: Received response from host: affinity-clusterip-transition-6wwzn
  Jul 13 13:55:28.874: INFO: Received response from host: affinity-clusterip-transition-6wwzn
  Jul 13 13:55:28.874: INFO: Received response from host: affinity-clusterip-transition-6wwzn
  Jul 13 13:55:28.874: INFO: Received response from host: affinity-clusterip-transition-6wwzn
  Jul 13 13:55:28.874: INFO: Received response from host: affinity-clusterip-transition-6wwzn
  Jul 13 13:55:28.874: INFO: Received response from host: affinity-clusterip-transition-6wwzn
  Jul 13 13:55:28.874: INFO: Received response from host: affinity-clusterip-transition-6wwzn
  Jul 13 13:55:28.874: INFO: Received response from host: affinity-clusterip-transition-6wwzn
  Jul 13 13:55:28.874: INFO: Received response from host: affinity-clusterip-transition-6wwzn
  Jul 13 13:55:28.874: INFO: Received response from host: affinity-clusterip-transition-6wwzn
  Jul 13 13:55:28.874: INFO: Received response from host: affinity-clusterip-transition-6wwzn
  Jul 13 13:55:28.874: INFO: Received response from host: affinity-clusterip-transition-6wwzn
  Jul 13 13:55:28.874: INFO: Received response from host: affinity-clusterip-transition-6wwzn
  Jul 13 13:55:28.874: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-7432, will wait for the garbage collector to delete the pods @ 07/13/24 13:55:28.887
  Jul 13 13:55:28.950: INFO: Deleting ReplicationController affinity-clusterip-transition took: 8.052768ms
  Jul 13 13:55:29.050: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.452573ms
  E0713 13:55:29.263343      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:30.263559      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:31.263710      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:55:32.071: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7432" for this suite. @ 07/13/24 13:55:32.074
â€¢ [9.868 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:558
  STEP: Creating a kubernetes client @ 07/13/24 13:55:32.081
  Jul 13 13:55:32.081: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename ingress @ 07/13/24 13:55:32.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:55:32.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:55:32.099
  STEP: getting /apis @ 07/13/24 13:55:32.101
  STEP: getting /apis/networking.k8s.io @ 07/13/24 13:55:32.104
  STEP: getting /apis/networking.k8s.iov1 @ 07/13/24 13:55:32.105
  STEP: creating @ 07/13/24 13:55:32.106
  STEP: getting @ 07/13/24 13:55:32.121
  STEP: listing @ 07/13/24 13:55:32.126
  STEP: watching @ 07/13/24 13:55:32.129
  Jul 13 13:55:32.129: INFO: starting watch
  STEP: cluster-wide listing @ 07/13/24 13:55:32.13
  STEP: cluster-wide watching @ 07/13/24 13:55:32.134
  Jul 13 13:55:32.134: INFO: starting watch
  STEP: patching @ 07/13/24 13:55:32.135
  STEP: updating @ 07/13/24 13:55:32.139
  Jul 13 13:55:32.149: INFO: waiting for watch events with expected annotations
  Jul 13 13:55:32.149: INFO: saw patched and updated annotations
  STEP: patching /status @ 07/13/24 13:55:32.149
  STEP: updating /status @ 07/13/24 13:55:32.155
  STEP: get /status @ 07/13/24 13:55:32.166
  STEP: deleting @ 07/13/24 13:55:32.168
  STEP: deleting a collection @ 07/13/24 13:55:32.182
  Jul 13 13:55:32.196: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-4015" for this suite. @ 07/13/24 13:55:32.2
â€¢ [0.125 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:408
  STEP: Creating a kubernetes client @ 07/13/24 13:55:32.206
  Jul 13 13:55:32.206: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename job @ 07/13/24 13:55:32.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:55:32.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:55:32.218
  STEP: Creating Indexed job @ 07/13/24 13:55:32.221
  STEP: Ensuring job reaches completions @ 07/13/24 13:55:32.227
  E0713 13:55:32.264348      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:33.264539      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:34.265263      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:35.265392      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:36.265671      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:37.265841      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:38.266032      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:39.266888      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 07/13/24 13:55:40.232
  Jul 13 13:55:40.237: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2972" for this suite. @ 07/13/24 13:55:40.239
â€¢ [8.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 07/13/24 13:55:40.247
  Jul 13 13:55:40.247: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename gc @ 07/13/24 13:55:40.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:55:40.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:55:40.263
  STEP: create the deployment @ 07/13/24 13:55:40.265
  E0713 13:55:40.267838      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0713 13:55:40.269394      20 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 07/13/24 13:55:40.269
  STEP: delete the deployment @ 07/13/24 13:55:40.778
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 07/13/24 13:55:40.787
  E0713 13:55:41.267975      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/13/24 13:55:41.303
  W0713 13:55:41.308399      20 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jul 13 13:55:41.308: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jul 13 13:55:41.308: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3032" for this suite. @ 07/13/24 13:55:41.312
â€¢ [1.072 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:332
  STEP: Creating a kubernetes client @ 07/13/24 13:55:41.319
  Jul 13 13:55:41.319: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename statefulset @ 07/13/24 13:55:41.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:55:41.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:55:41.335
  STEP: Creating service test in namespace statefulset-926 @ 07/13/24 13:55:41.337
  STEP: Creating a new StatefulSet @ 07/13/24 13:55:41.342
  Jul 13 13:55:41.353: INFO: Found 0 stateful pods, waiting for 3
  E0713 13:55:42.268403      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:43.268573      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:44.268682      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:45.269457      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:46.269533      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:47.269647      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:48.269838      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:49.269939      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:50.270328      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:51.270427      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:55:51.353: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jul 13 13:55:51.353: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jul 13 13:55:51.353: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 07/13/24 13:55:51.364
  Jul 13 13:55:51.383: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 07/13/24 13:55:51.383
  E0713 13:55:52.270642      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:53.270945      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:54.271102      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:55.271477      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:56.271566      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:57.271670      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:58.271763      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:55:59.271845      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:00.272622      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:01.272947      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 07/13/24 13:56:01.392
  STEP: Performing a canary update @ 07/13/24 13:56:01.392
  Jul 13 13:56:01.414: INFO: Updating stateful set ss2
  Jul 13 13:56:01.425: INFO: Waiting for Pod statefulset-926/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0713 13:56:02.273071      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:03.273247      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:04.273819      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:05.274299      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:06.274388      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:07.274996      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:08.275087      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:09.275262      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:10.276088      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:11.276201      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 07/13/24 13:56:11.423
  Jul 13 13:56:11.456: INFO: Found 1 stateful pods, waiting for 3
  E0713 13:56:12.276877      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:13.277166      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:14.277328      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:15.277449      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:16.277553      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:17.277631      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:18.277819      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:19.277910      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:20.278310      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:21.278415      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:56:21.456: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jul 13 13:56:21.456: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jul 13 13:56:21.456: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 07/13/24 13:56:21.463
  Jul 13 13:56:21.485: INFO: Updating stateful set ss2
  Jul 13 13:56:21.490: INFO: Waiting for Pod statefulset-926/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0713 13:56:22.278898      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:23.278995      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:24.279100      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:25.279201      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:26.279294      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:27.279394      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:28.279504      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:29.279617      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:30.279685      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:31.279891      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:56:31.512: INFO: Updating stateful set ss2
  Jul 13 13:56:31.518: INFO: Waiting for StatefulSet statefulset-926/ss2 to complete update
  Jul 13 13:56:31.518: INFO: Waiting for Pod statefulset-926/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0713 13:56:32.280263      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:33.280349      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:34.280629      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:35.281363      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:36.281441      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:37.281514      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:38.281783      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:39.281826      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:40.282935      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:41.283036      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:56:41.521: INFO: Deleting all statefulset in ns statefulset-926
  Jul 13 13:56:41.525: INFO: Scaling statefulset ss2 to 0
  E0713 13:56:42.283171      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:43.283410      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:44.283703      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:45.284242      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:46.284332      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:47.284430      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:48.284602      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:49.285598      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:50.285816      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:51.285905      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:56:51.536: INFO: Waiting for statefulset status.replicas updated to 0
  Jul 13 13:56:51.538: INFO: Deleting statefulset ss2
  Jul 13 13:56:51.553: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-926" for this suite. @ 07/13/24 13:56:51.556
â€¢ [70.243 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 07/13/24 13:56:51.562
  Jul 13 13:56:51.562: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename projected @ 07/13/24 13:56:51.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:56:51.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:56:51.578
  STEP: Creating projection with secret that has name projected-secret-test-770c18bf-c9f5-47a6-9f0d-7706bc4292cb @ 07/13/24 13:56:51.581
  STEP: Creating a pod to test consume secrets @ 07/13/24 13:56:51.585
  E0713 13:56:52.286758      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:53.286896      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:54.286978      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:55.287229      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/13/24 13:56:55.604
  Jul 13 13:56:55.608: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-projected-secrets-c959fdd0-1323-46f9-8ba4-dc34b0d84447 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/13/24 13:56:55.627
  Jul 13 13:56:55.642: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4854" for this suite. @ 07/13/24 13:56:55.645
â€¢ [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:488
  STEP: Creating a kubernetes client @ 07/13/24 13:56:55.653
  Jul 13 13:56:55.653: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename security-context-test @ 07/13/24 13:56:55.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:56:55.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:56:55.667
  E0713 13:56:56.287314      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:57.287491      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:58.287596      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:56:59.287758      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:56:59.691: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1598" for this suite. @ 07/13/24 13:56:59.696
â€¢ [4.050 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 07/13/24 13:56:59.703
  Jul 13 13:56:59.703: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename runtimeclass @ 07/13/24 13:56:59.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:56:59.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:56:59.722
  STEP: Deleting RuntimeClass runtimeclass-1612-delete-me @ 07/13/24 13:56:59.728
  STEP: Waiting for the RuntimeClass to disappear @ 07/13/24 13:56:59.734
  Jul 13 13:56:59.744: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1612" for this suite. @ 07/13/24 13:56:59.747
â€¢ [0.049 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 07/13/24 13:56:59.752
  Jul 13 13:56:59.752: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename container-probe @ 07/13/24 13:56:59.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:56:59.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:56:59.77
  E0713 13:57:00.288508      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:01.289343      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:02.289950      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:03.290060      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:04.290156      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:05.290240      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:06.290342      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:07.290865      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:08.291607      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:09.291699      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:10.291802      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:11.292543      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:12.292614      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:13.293385      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:14.293566      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:15.294332      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:16.294867      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:17.295112      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:18.295067      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:19.295957      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:20.296069      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:21.296981      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:22.297050      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:23.297298      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:24.297877      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:25.298888      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:26.299427      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:27.299518      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:28.300226      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:29.301185      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:30.302163      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:31.302866      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:32.302912      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:33.303555      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:34.303938      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:35.304026      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:36.304797      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:37.305562      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:38.305593      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:39.306436      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:40.306536      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:41.306929      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:42.307691      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:43.308532      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:44.308620      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:45.309532      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:46.309586      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:47.309651      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:48.310224      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:49.311029      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:50.311856      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:51.311948      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:52.312182      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:53.312893      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:54.313586      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:55.314127      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:56.314532      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:57.315368      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:58.315486      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:57:59.315934      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:57:59.783: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9250" for this suite. @ 07/13/24 13:57:59.785
â€¢ [60.040 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 07/13/24 13:57:59.792
  Jul 13 13:57:59.792: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename watch @ 07/13/24 13:57:59.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:57:59.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:57:59.811
  STEP: creating a new configmap @ 07/13/24 13:57:59.813
  STEP: modifying the configmap once @ 07/13/24 13:57:59.818
  STEP: modifying the configmap a second time @ 07/13/24 13:57:59.825
  STEP: deleting the configmap @ 07/13/24 13:57:59.833
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 07/13/24 13:57:59.838
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 07/13/24 13:57:59.839
  Jul 13 13:57:59.839: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9852  0a8f2a97-4707-4f1a-af50-903cc70e3a9c 46051 0 2024-07-13 13:57:59 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-07-13 13:57:59 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 13 13:57:59.839: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9852  0a8f2a97-4707-4f1a-af50-903cc70e3a9c 46052 0 2024-07-13 13:57:59 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-07-13 13:57:59 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 13 13:57:59.839: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9852" for this suite. @ 07/13/24 13:57:59.842
â€¢ [0.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 07/13/24 13:57:59.85
  Jul 13 13:57:59.850: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename container-probe @ 07/13/24 13:57:59.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 13:57:59.86
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 13:57:59.862
  STEP: Creating pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542 @ 07/13/24 13:57:59.865
  E0713 13:58:00.315950      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:58:01.316340      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/13/24 13:58:01.883
  Jul 13 13:58:01.887: INFO: Initial restart count of pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b is 0
  Jul 13 13:58:01.891: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:58:02.317041      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:58:03.317132      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:58:03.896: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:58:04.317726      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:58:05.318186      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:58:05.900: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:58:06.318865      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:58:07.319136      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:58:07.905: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:58:08.319675      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:58:09.319989      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:58:09.909: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:58:10.320738      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:58:11.320855      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:58:11.915: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:58:12.321470      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:58:13.321882      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:58:13.919: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:58:14.321989      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:58:15.322070      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:58:15.925: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:58:16.322819      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:58:17.322868      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:58:17.928: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:58:18.323489      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:58:19.323577      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:58:19.933: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:58:20.323678      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:58:21.323779      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:58:21.937: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:58:22.324422      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:58:23.324536      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:58:23.944: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:58:24.325319      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:58:25.325412      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:58:25.949: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:58:26.325969      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:58:27.326084      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:58:27.955: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:58:28.326881      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:58:29.327827      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:58:29.959: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:58:30.328342      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:58:31.328561      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:58:31.965: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:58:32.328632      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:58:33.328749      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:58:33.971: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:58:34.329619      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:58:35.330578      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:58:35.974: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:58:36.330900      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:58:37.330985      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:58:37.978: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:58:38.331084      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:58:39.332062      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:58:39.983: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:58:40.332213      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:58:41.332406      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:58:41.987: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:58:42.333383      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:58:43.333475      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:58:43.992: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:58:44.334163      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:58:45.334258      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:58:45.996: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:58:46.334906      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:58:47.335000      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:58:48.001: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:58:48.335431      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:58:49.335636      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:58:50.006: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:58:50.335938      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:58:51.336037      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:58:52.010: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:58:52.336768      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:58:53.336975      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:58:54.016: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:58:54.337893      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:58:55.338251      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:58:56.021: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:58:56.338884      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:58:57.338914      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:58:58.026: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:58:58.339454      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:58:59.339569      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:59:00.030: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:59:00.340246      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:59:01.340369      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:59:02.034: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:59:02.341160      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:59:03.341254      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:59:04.040: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:59:04.341271      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:59:05.341321      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:59:06.045: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:59:06.341770      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:59:07.341862      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:59:08.049: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:59:08.342783      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:59:09.342879      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:59:10.054: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:59:10.343310      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:59:11.343524      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:59:12.060: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:59:12.344427      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:59:13.344638      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:59:14.064: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:59:14.344816      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:59:15.345074      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:59:16.069: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:59:16.345480      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:59:17.345641      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:59:18.075: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:59:18.345787      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:59:19.345827      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:59:20.080: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:59:20.346790      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:59:21.346956      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:59:22.085: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:59:22.347697      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:59:23.347893      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:59:24.089: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:59:24.348471      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:59:25.349345      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:59:26.094: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:59:26.350015      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:59:27.350898      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:59:28.098: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:59:28.351683      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:59:29.351742      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:59:30.104: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:59:30.352391      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:59:31.352667      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:59:32.109: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:59:32.353502      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:59:33.354308      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:59:34.114: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:59:34.354547      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:59:35.355329      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:59:36.119: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:59:36.355374      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:59:37.355560      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:59:38.124: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:59:38.356265      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:59:39.357312      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:59:40.129: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:59:40.357758      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:59:41.357840      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:59:42.133: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:59:42.358604      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:59:43.358886      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:59:44.139: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:59:44.359542      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:59:45.360543      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:59:46.144: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:59:46.361583      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:59:47.361669      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:59:48.148: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:59:48.361791      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:59:49.361835      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:59:50.153: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:59:50.362549      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:59:51.362641      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:59:52.157: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:59:52.363276      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:59:53.363373      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:59:54.162: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:59:54.364241      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:59:55.364315      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:59:56.165: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:59:56.365140      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:59:57.365566      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 13:59:58.170: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 13:59:58.366431      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 13:59:59.366914      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:00:00.175: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:00:00.366938      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:00:01.367953      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:00:02.180: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:00:02.368740      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:00:03.368842      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:00:04.186: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:00:04.369809      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:00:05.369890      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:00:06.191: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:00:06.370883      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:00:07.371005      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:00:08.195: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:00:08.371802      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:00:09.371903      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:00:10.201: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:00:10.372768      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:00:11.373110      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:00:12.206: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:00:12.373202      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:00:13.373416      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:00:14.211: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:00:14.373434      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:00:15.374409      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:00:16.216: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:00:16.374812      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:00:17.374988      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:00:18.220: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:00:18.375481      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:00:19.375662      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:00:20.224: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:00:20.376720      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:00:21.376966      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:00:22.230: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:00:22.377631      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:00:23.378394      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:00:24.235: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:00:24.378734      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:00:25.379039      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:00:26.240: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:00:26.379800      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:00:27.380423      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:00:28.244: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:00:28.380739      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:00:29.380926      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:00:30.251: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:00:30.381450      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:00:31.381607      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:00:32.255: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:00:32.381885      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:00:33.382004      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:00:34.262: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:00:34.382389      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:00:35.382530      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:00:36.268: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:00:36.382761      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:00:37.383231      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:00:38.272: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:00:38.383412      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:00:39.383660      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:00:40.277: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:00:40.383773      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:00:41.383913      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:00:42.282: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:00:42.384398      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:00:43.384532      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:00:44.287: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:00:44.384734      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:00:45.385624      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:00:46.291: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:00:46.386338      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:00:47.386420      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:00:48.295: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:00:48.386567      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:00:49.386871      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:00:50.299: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:00:50.386907      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:00:51.387943      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:00:52.304: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:00:52.388032      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:00:53.388212      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:00:54.312: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:00:54.388653      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:00:55.388901      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:00:56.315: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:00:56.389008      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:00:57.389200      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:00:58.320: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:00:58.389666      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:00:59.389916      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:01:00.324: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:01:00.390785      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:01:01.390921      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:01:02.330: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:01:02.391807      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:01:03.392134      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:01:04.336: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:01:04.392368      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:01:05.392479      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:01:06.341: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:01:06.393454      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:01:07.393597      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:01:08.347: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:01:08.394631      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:01:09.394760      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:01:10.352: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:01:10.395760      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:01:11.395894      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:01:12.358: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:01:12.396405      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:01:13.396525      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:01:14.363: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:01:14.397125      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:01:15.397344      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:01:16.366: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:01:16.397909      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:01:17.398181      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:01:18.371: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:01:18.398963      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:01:19.399075      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:01:20.375: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:01:20.399386      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:01:21.399601      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:01:22.380: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:01:22.399855      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:01:23.399978      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:01:24.384: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:01:24.400314      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:01:25.401239      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:01:26.387: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:01:26.401595      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:01:27.401824      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:01:28.392: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:01:28.402242      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:01:29.402349      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:01:30.396: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:01:30.403085      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:01:31.403214      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:01:32.401: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:01:32.403716      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:01:33.404229      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:01:34.404612      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:01:34.405: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:01:35.405439      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:01:36.405537      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:01:36.410: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:01:37.405814      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:01:38.405905      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:01:38.414: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:01:39.405996      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:01:40.406351      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:01:40.420: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:01:41.406462      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:01:42.406906      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:01:42.425: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:01:43.407011      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:01:44.407800      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:01:44.432: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:01:45.408395      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:01:46.408501      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:01:46.436: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:01:47.408591      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:01:48.408710      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:01:48.442: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:01:49.409749      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:01:50.409834      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:01:50.447: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:01:51.410218      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:01:52.411134      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:01:52.451: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:01:53.411462      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:01:54.411808      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:01:54.455: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:01:55.412489      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:01:56.412776      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:01:56.460: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:01:57.412869      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:01:58.412954      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:01:58.465: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:01:59.413172      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:00.413375      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:02:00.468: INFO: Get pod test-grpc-2063cb01-8bf5-455a-81d5-858a3249d72b in namespace container-probe-9542
  E0713 14:02:01.413642      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:02.413817      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 07/13/24 14:02:02.469
  Jul 13 14:02:02.482: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9542" for this suite. @ 07/13/24 14:02:02.486
â€¢ [242.644 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 07/13/24 14:02:02.494
  Jul 13 14:02:02.494: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename replication-controller @ 07/13/24 14:02:02.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 14:02:02.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 14:02:02.517
  STEP: Creating replication controller my-hostname-basic-e02b3e09-cd54-4e65-ab7a-cc0ac5f1c809 @ 07/13/24 14:02:02.519
  Jul 13 14:02:02.528: INFO: Pod name my-hostname-basic-e02b3e09-cd54-4e65-ab7a-cc0ac5f1c809: Found 0 pods out of 1
  E0713 14:02:03.413994      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:04.414261      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:05.414377      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:06.414892      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:07.414998      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:02:07.533: INFO: Pod name my-hostname-basic-e02b3e09-cd54-4e65-ab7a-cc0ac5f1c809: Found 1 pods out of 1
  Jul 13 14:02:07.533: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-e02b3e09-cd54-4e65-ab7a-cc0ac5f1c809" are running
  Jul 13 14:02:07.535: INFO: Pod "my-hostname-basic-e02b3e09-cd54-4e65-ab7a-cc0ac5f1c809-pnnvn" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-13 14:02:03 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-13 14:02:02 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-13 14:02:03 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-13 14:02:03 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-13 14:02:02 +0000 UTC Reason: Message:}])
  Jul 13 14:02:07.535: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 07/13/24 14:02:07.535
  Jul 13 14:02:07.549: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9869" for this suite. @ 07/13/24 14:02:07.552
â€¢ [5.065 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 07/13/24 14:02:07.559
  Jul 13 14:02:07.559: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename emptydir @ 07/13/24 14:02:07.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 14:02:07.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 14:02:07.576
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 07/13/24 14:02:07.579
  E0713 14:02:08.415113      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:09.415415      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:10.416341      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:11.416443      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/13/24 14:02:11.601
  Jul 13 14:02:11.606: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-6513c9bb-f32a-4605-abc9-83855d371a8b container test-container: <nil>
  STEP: delete the pod @ 07/13/24 14:02:11.623
  Jul 13 14:02:11.637: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9257" for this suite. @ 07/13/24 14:02:11.639
â€¢ [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 07/13/24 14:02:11.646
  Jul 13 14:02:11.646: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename field-validation @ 07/13/24 14:02:11.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 14:02:11.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 14:02:11.66
  Jul 13 14:02:11.662: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  E0713 14:02:12.417126      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:13.417246      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0713 14:02:14.202556      20 warnings.go:70] unknown field "alpha"
  W0713 14:02:14.202575      20 warnings.go:70] unknown field "beta"
  W0713 14:02:14.202578      20 warnings.go:70] unknown field "delta"
  W0713 14:02:14.202582      20 warnings.go:70] unknown field "epsilon"
  W0713 14:02:14.202584      20 warnings.go:70] unknown field "gamma"
  E0713 14:02:14.417482      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:02:14.748: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2794" for this suite. @ 07/13/24 14:02:14.752
â€¢ [3.115 seconds]
------------------------------
SS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 07/13/24 14:02:14.761
  Jul 13 14:02:14.761: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename podtemplate @ 07/13/24 14:02:14.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 14:02:14.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 14:02:14.781
  Jul 13 14:02:14.815: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7226" for this suite. @ 07/13/24 14:02:14.819
â€¢ [0.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 07/13/24 14:02:14.827
  Jul 13 14:02:14.827: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename pods @ 07/13/24 14:02:14.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 14:02:14.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 14:02:14.844
  STEP: creating the pod @ 07/13/24 14:02:14.846
  STEP: submitting the pod to kubernetes @ 07/13/24 14:02:14.846
  E0713 14:02:15.417590      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:16.417717      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 07/13/24 14:02:16.865
  STEP: updating the pod @ 07/13/24 14:02:16.869
  Jul 13 14:02:17.381: INFO: Successfully updated pod "pod-update-be43e7f7-e546-40c2-85c5-7e469b2ae88f"
  STEP: verifying the updated pod is in kubernetes @ 07/13/24 14:02:17.385
  Jul 13 14:02:17.389: INFO: Pod update OK
  Jul 13 14:02:17.389: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6944" for this suite. @ 07/13/24 14:02:17.393
â€¢ [2.572 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 07/13/24 14:02:17.401
  Jul 13 14:02:17.401: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename downward-api @ 07/13/24 14:02:17.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 14:02:17.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 14:02:17.414
  STEP: Creating a pod to test downward API volume plugin @ 07/13/24 14:02:17.416
  E0713 14:02:17.417752      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:18.417919      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:19.418076      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/13/24 14:02:19.436
  Jul 13 14:02:19.440: INFO: Trying to get logs from node ip-172-31-37-214 pod downwardapi-volume-1b181dcf-9c41-4a65-b98c-b5fae61c9f75 container client-container: <nil>
  STEP: delete the pod @ 07/13/24 14:02:19.445
  Jul 13 14:02:19.459: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6904" for this suite. @ 07/13/24 14:02:19.462
â€¢ [2.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 07/13/24 14:02:19.469
  Jul 13 14:02:19.469: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename subpath @ 07/13/24 14:02:19.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 14:02:19.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 14:02:19.484
  STEP: Setting up data @ 07/13/24 14:02:19.486
  STEP: Creating pod pod-subpath-test-downwardapi-clfb @ 07/13/24 14:02:19.494
  STEP: Creating a pod to test atomic-volume-subpath @ 07/13/24 14:02:19.494
  E0713 14:02:20.418627      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:21.418734      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:22.418826      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:23.420731      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:24.419902      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:25.419993      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:26.420557      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:27.420779      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:28.420863      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:29.421016      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:30.421627      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:31.421877      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:32.421966      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:33.422923      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:34.423869      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:35.423958      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:36.424072      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:37.424369      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:38.424475      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:39.424571      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:40.425415      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:41.425634      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/13/24 14:02:41.557
  Jul 13 14:02:41.562: INFO: Trying to get logs from node ip-172-31-37-214 pod pod-subpath-test-downwardapi-clfb container test-container-subpath-downwardapi-clfb: <nil>
  STEP: delete the pod @ 07/13/24 14:02:41.568
  STEP: Deleting pod pod-subpath-test-downwardapi-clfb @ 07/13/24 14:02:41.582
  Jul 13 14:02:41.582: INFO: Deleting pod "pod-subpath-test-downwardapi-clfb" in namespace "subpath-8065"
  Jul 13 14:02:41.585: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8065" for this suite. @ 07/13/24 14:02:41.589
â€¢ [22.125 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 07/13/24 14:02:41.594
  Jul 13 14:02:41.594: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/13/24 14:02:41.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 14:02:41.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 14:02:41.61
  Jul 13 14:02:41.613: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  E0713 14:02:42.425980      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/13/24 14:02:42.864
  Jul 13 14:02:42.864: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=crd-publish-openapi-2370 --namespace=crd-publish-openapi-2370 create -f -'
  E0713 14:02:43.426824      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:44.427859      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:02:44.931: INFO: stderr: ""
  Jul 13 14:02:44.931: INFO: stdout: "e2e-test-crd-publish-openapi-4089-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Jul 13 14:02:44.931: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=crd-publish-openapi-2370 --namespace=crd-publish-openapi-2370 delete e2e-test-crd-publish-openapi-4089-crds test-cr'
  Jul 13 14:02:44.982: INFO: stderr: ""
  Jul 13 14:02:44.982: INFO: stdout: "e2e-test-crd-publish-openapi-4089-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Jul 13 14:02:44.982: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=crd-publish-openapi-2370 --namespace=crd-publish-openapi-2370 apply -f -'
  Jul 13 14:02:45.046: INFO: stderr: ""
  Jul 13 14:02:45.046: INFO: stdout: "e2e-test-crd-publish-openapi-4089-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Jul 13 14:02:45.046: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=crd-publish-openapi-2370 --namespace=crd-publish-openapi-2370 delete e2e-test-crd-publish-openapi-4089-crds test-cr'
  Jul 13 14:02:45.093: INFO: stderr: ""
  Jul 13 14:02:45.093: INFO: stdout: "e2e-test-crd-publish-openapi-4089-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 07/13/24 14:02:45.094
  Jul 13 14:02:45.094: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=crd-publish-openapi-2370 explain e2e-test-crd-publish-openapi-4089-crds'
  Jul 13 14:02:45.132: INFO: stderr: ""
  Jul 13 14:02:45.132: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-4089-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0713 14:02:45.428542      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:02:46.396: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2370" for this suite. @ 07/13/24 14:02:46.401
â€¢ [4.815 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2236
  STEP: Creating a kubernetes client @ 07/13/24 14:02:46.409
  Jul 13 14:02:46.409: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename services @ 07/13/24 14:02:46.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 14:02:46.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 14:02:46.426
  STEP: creating service in namespace services-7349 @ 07/13/24 14:02:46.428
  STEP: creating service affinity-nodeport-transition in namespace services-7349 @ 07/13/24 14:02:46.428
  E0713 14:02:46.429095      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating replication controller affinity-nodeport-transition in namespace services-7349 @ 07/13/24 14:02:46.442
  I0713 14:02:46.448619      20 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-7349, replica count: 3
  E0713 14:02:47.429757      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:48.429841      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:49.429937      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0713 14:02:49.500212      20 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jul 13 14:02:49.509: INFO: Creating new exec pod
  E0713 14:02:50.430669      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:51.431339      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:52.431425      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:02:52.526: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-7349 exec execpod-affinitytsqd5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Jul 13 14:02:52.627: INFO: stderr: "+ nc -v -t -w 2 affinity-nodeport-transition 80\n+ echo hostName\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Jul 13 14:02:52.627: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 13 14:02:52.627: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-7349 exec execpod-affinitytsqd5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.26 80'
  Jul 13 14:02:52.717: INFO: stderr: "+ nc -v -t -w 2 10.152.183.26 80\n+ echo hostName\nConnection to 10.152.183.26 80 port [tcp/http] succeeded!\n"
  Jul 13 14:02:52.717: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 13 14:02:52.717: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-7349 exec execpod-affinitytsqd5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.15.91 30406'
  Jul 13 14:02:52.810: INFO: stderr: "+ nc -v -t -w 2 172.31.15.91 30406\n+ echo hostName\nConnection to 172.31.15.91 30406 port [tcp/*] succeeded!\n"
  Jul 13 14:02:52.810: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 13 14:02:52.810: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-7349 exec execpod-affinitytsqd5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.89.122 30406'
  Jul 13 14:02:52.905: INFO: stderr: "+ nc -v -t -w 2 172.31.89.122 30406\n+ echo hostName\nConnection to 172.31.89.122 30406 port [tcp/*] succeeded!\n"
  Jul 13 14:02:52.905: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 13 14:02:52.914: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-7349 exec execpod-affinitytsqd5 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.15.91:30406/ ; done'
  Jul 13 14:02:53.083: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:30406/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:30406/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:30406/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:30406/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:30406/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:30406/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:30406/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:30406/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:30406/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:30406/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:30406/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:30406/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:30406/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:30406/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:30406/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:30406/\n"
  Jul 13 14:02:53.084: INFO: stdout: "\naffinity-nodeport-transition-pq8zk\naffinity-nodeport-transition-rmk62\naffinity-nodeport-transition-2hbn7\naffinity-nodeport-transition-2hbn7\naffinity-nodeport-transition-2hbn7\naffinity-nodeport-transition-2hbn7\naffinity-nodeport-transition-rmk62\naffinity-nodeport-transition-rmk62\naffinity-nodeport-transition-2hbn7\naffinity-nodeport-transition-rmk62\naffinity-nodeport-transition-2hbn7\naffinity-nodeport-transition-pq8zk\naffinity-nodeport-transition-2hbn7\naffinity-nodeport-transition-rmk62\naffinity-nodeport-transition-pq8zk\naffinity-nodeport-transition-rmk62"
  Jul 13 14:02:53.084: INFO: Received response from host: affinity-nodeport-transition-pq8zk
  Jul 13 14:02:53.084: INFO: Received response from host: affinity-nodeport-transition-rmk62
  Jul 13 14:02:53.084: INFO: Received response from host: affinity-nodeport-transition-2hbn7
  Jul 13 14:02:53.084: INFO: Received response from host: affinity-nodeport-transition-2hbn7
  Jul 13 14:02:53.084: INFO: Received response from host: affinity-nodeport-transition-2hbn7
  Jul 13 14:02:53.084: INFO: Received response from host: affinity-nodeport-transition-2hbn7
  Jul 13 14:02:53.084: INFO: Received response from host: affinity-nodeport-transition-rmk62
  Jul 13 14:02:53.084: INFO: Received response from host: affinity-nodeport-transition-rmk62
  Jul 13 14:02:53.084: INFO: Received response from host: affinity-nodeport-transition-2hbn7
  Jul 13 14:02:53.084: INFO: Received response from host: affinity-nodeport-transition-rmk62
  Jul 13 14:02:53.084: INFO: Received response from host: affinity-nodeport-transition-2hbn7
  Jul 13 14:02:53.084: INFO: Received response from host: affinity-nodeport-transition-pq8zk
  Jul 13 14:02:53.084: INFO: Received response from host: affinity-nodeport-transition-2hbn7
  Jul 13 14:02:53.084: INFO: Received response from host: affinity-nodeport-transition-rmk62
  Jul 13 14:02:53.084: INFO: Received response from host: affinity-nodeport-transition-pq8zk
  Jul 13 14:02:53.084: INFO: Received response from host: affinity-nodeport-transition-rmk62
  Jul 13 14:02:53.094: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-7349 exec execpod-affinitytsqd5 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.15.91:30406/ ; done'
  Jul 13 14:02:53.272: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:30406/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:30406/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:30406/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:30406/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:30406/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:30406/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:30406/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:30406/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:30406/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:30406/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:30406/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:30406/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:30406/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:30406/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:30406/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.91:30406/\n"
  Jul 13 14:02:53.272: INFO: stdout: "\naffinity-nodeport-transition-rmk62\naffinity-nodeport-transition-rmk62\naffinity-nodeport-transition-rmk62\naffinity-nodeport-transition-rmk62\naffinity-nodeport-transition-rmk62\naffinity-nodeport-transition-rmk62\naffinity-nodeport-transition-rmk62\naffinity-nodeport-transition-rmk62\naffinity-nodeport-transition-rmk62\naffinity-nodeport-transition-rmk62\naffinity-nodeport-transition-rmk62\naffinity-nodeport-transition-rmk62\naffinity-nodeport-transition-rmk62\naffinity-nodeport-transition-rmk62\naffinity-nodeport-transition-rmk62\naffinity-nodeport-transition-rmk62"
  Jul 13 14:02:53.272: INFO: Received response from host: affinity-nodeport-transition-rmk62
  Jul 13 14:02:53.272: INFO: Received response from host: affinity-nodeport-transition-rmk62
  Jul 13 14:02:53.272: INFO: Received response from host: affinity-nodeport-transition-rmk62
  Jul 13 14:02:53.272: INFO: Received response from host: affinity-nodeport-transition-rmk62
  Jul 13 14:02:53.272: INFO: Received response from host: affinity-nodeport-transition-rmk62
  Jul 13 14:02:53.272: INFO: Received response from host: affinity-nodeport-transition-rmk62
  Jul 13 14:02:53.272: INFO: Received response from host: affinity-nodeport-transition-rmk62
  Jul 13 14:02:53.272: INFO: Received response from host: affinity-nodeport-transition-rmk62
  Jul 13 14:02:53.272: INFO: Received response from host: affinity-nodeport-transition-rmk62
  Jul 13 14:02:53.272: INFO: Received response from host: affinity-nodeport-transition-rmk62
  Jul 13 14:02:53.272: INFO: Received response from host: affinity-nodeport-transition-rmk62
  Jul 13 14:02:53.272: INFO: Received response from host: affinity-nodeport-transition-rmk62
  Jul 13 14:02:53.272: INFO: Received response from host: affinity-nodeport-transition-rmk62
  Jul 13 14:02:53.272: INFO: Received response from host: affinity-nodeport-transition-rmk62
  Jul 13 14:02:53.272: INFO: Received response from host: affinity-nodeport-transition-rmk62
  Jul 13 14:02:53.272: INFO: Received response from host: affinity-nodeport-transition-rmk62
  Jul 13 14:02:53.272: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-7349, will wait for the garbage collector to delete the pods @ 07/13/24 14:02:53.286
  Jul 13 14:02:53.347: INFO: Deleting ReplicationController affinity-nodeport-transition took: 6.813697ms
  E0713 14:02:53.431727      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:02:53.448: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 101.728573ms
  E0713 14:02:54.432782      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:55.432968      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:02:56.370: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7349" for this suite. @ 07/13/24 14:02:56.372
â€¢ [9.971 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 07/13/24 14:02:56.381
  Jul 13 14:02:56.381: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename pods @ 07/13/24 14:02:56.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 14:02:56.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 14:02:56.404
  Jul 13 14:02:56.405: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: creating the pod @ 07/13/24 14:02:56.406
  STEP: submitting the pod to kubernetes @ 07/13/24 14:02:56.406
  E0713 14:02:56.433151      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:57.433483      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:02:58.433616      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:02:58.433: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7873" for this suite. @ 07/13/24 14:02:58.437
â€¢ [2.062 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:335
  STEP: Creating a kubernetes client @ 07/13/24 14:02:58.442
  Jul 13 14:02:58.442: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename sched-pred @ 07/13/24 14:02:58.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 14:02:58.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 14:02:58.461
  Jul 13 14:02:58.463: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jul 13 14:02:58.469: INFO: Waiting for terminating namespaces to be deleted...
  Jul 13 14:02:58.472: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-15-91 before test
  Jul 13 14:02:58.477: INFO: nginx-ingress-controller-kubernetes-worker-mp6fl from ingress-nginx-kubernetes-worker started at 2024-07-13 12:16:24 +0000 UTC (1 container statuses recorded)
  Jul 13 14:02:58.477: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul 13 14:02:58.477: INFO: calico-kube-controllers-566f48f4bc-zln57 from kube-system started at 2024-07-13 12:19:27 +0000 UTC (1 container statuses recorded)
  Jul 13 14:02:58.477: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Jul 13 14:02:58.477: INFO: calico-node-6r9cg from kube-system started at 2024-07-13 12:17:37 +0000 UTC (1 container statuses recorded)
  Jul 13 14:02:58.477: INFO: 	Container calico-node ready: true, restart count 0
  Jul 13 14:02:58.477: INFO: coredns-bddfd76d7-qc4pt from kube-system started at 2024-07-13 12:16:24 +0000 UTC (1 container statuses recorded)
  Jul 13 14:02:58.477: INFO: 	Container coredns ready: true, restart count 0
  Jul 13 14:02:58.477: INFO: kube-state-metrics-6f48cdd76-kj8mn from kube-system started at 2024-07-13 12:16:24 +0000 UTC (1 container statuses recorded)
  Jul 13 14:02:58.477: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Jul 13 14:02:58.477: INFO: metrics-server-v0.6.3-69d7fbfdf8-bj7mr from kube-system started at 2024-07-13 12:16:24 +0000 UTC (2 container statuses recorded)
  Jul 13 14:02:58.477: INFO: 	Container metrics-server ready: true, restart count 0
  Jul 13 14:02:58.477: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Jul 13 14:02:58.477: INFO: dashboard-metrics-scraper-5dd7cb5fc-cdqmc from kubernetes-dashboard started at 2024-07-13 12:16:24 +0000 UTC (1 container statuses recorded)
  Jul 13 14:02:58.477: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Jul 13 14:02:58.477: INFO: kubernetes-dashboard-7b899cb9d9-tx78d from kubernetes-dashboard started at 2024-07-13 12:16:24 +0000 UTC (1 container statuses recorded)
  Jul 13 14:02:58.478: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Jul 13 14:02:58.478: INFO: sonobuoy-systemd-logs-daemon-set-4e460315498c4029-66grn from sonobuoy started at 2024-07-13 12:23:14 +0000 UTC (2 container statuses recorded)
  Jul 13 14:02:58.478: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 13 14:02:58.478: INFO: 	Container systemd-logs ready: true, restart count 0
  Jul 13 14:02:58.478: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-37-214 before test
  Jul 13 14:02:58.482: INFO: nginx-ingress-controller-kubernetes-worker-c4ck5 from ingress-nginx-kubernetes-worker started at 2024-07-13 13:26:10 +0000 UTC (1 container statuses recorded)
  Jul 13 14:02:58.482: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul 13 14:02:58.482: INFO: calico-node-j2tjq from kube-system started at 2024-07-13 12:19:25 +0000 UTC (1 container statuses recorded)
  Jul 13 14:02:58.482: INFO: 	Container calico-node ready: true, restart count 0
  Jul 13 14:02:58.482: INFO: pod-logs-websocket-f1e35710-f008-4b9d-a378-b6ef973ed919 from pods-7873 started at 2024-07-13 14:02:56 +0000 UTC (1 container statuses recorded)
  Jul 13 14:02:58.482: INFO: 	Container main ready: true, restart count 0
  Jul 13 14:02:58.482: INFO: sonobuoy from sonobuoy started at 2024-07-13 12:23:12 +0000 UTC (1 container statuses recorded)
  Jul 13 14:02:58.482: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jul 13 14:02:58.482: INFO: sonobuoy-systemd-logs-daemon-set-4e460315498c4029-7d9z2 from sonobuoy started at 2024-07-13 12:23:14 +0000 UTC (2 container statuses recorded)
  Jul 13 14:02:58.482: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 13 14:02:58.482: INFO: 	Container systemd-logs ready: true, restart count 0
  Jul 13 14:02:58.482: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-89-122 before test
  Jul 13 14:02:58.486: INFO: nginx-ingress-controller-kubernetes-worker-qcj2m from ingress-nginx-kubernetes-worker started at 2024-07-13 12:19:48 +0000 UTC (1 container statuses recorded)
  Jul 13 14:02:58.486: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jul 13 14:02:58.486: INFO: calico-node-79mrk from kube-system started at 2024-07-13 12:19:27 +0000 UTC (1 container statuses recorded)
  Jul 13 14:02:58.486: INFO: 	Container calico-node ready: true, restart count 0
  Jul 13 14:02:58.486: INFO: sonobuoy-e2e-job-542cce46194140ad from sonobuoy started at 2024-07-13 12:23:14 +0000 UTC (2 container statuses recorded)
  Jul 13 14:02:58.486: INFO: 	Container e2e ready: true, restart count 0
  Jul 13 14:02:58.486: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 13 14:02:58.486: INFO: sonobuoy-systemd-logs-daemon-set-4e460315498c4029-tw5hd from sonobuoy started at 2024-07-13 12:23:14 +0000 UTC (2 container statuses recorded)
  Jul 13 14:02:58.486: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jul 13 14:02:58.486: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-15-91 @ 07/13/24 14:02:58.5
  STEP: verifying the node has the label node ip-172-31-37-214 @ 07/13/24 14:02:58.512
  STEP: verifying the node has the label node ip-172-31-89-122 @ 07/13/24 14:02:58.528
  Jul 13 14:02:58.543: INFO: Pod nginx-ingress-controller-kubernetes-worker-c4ck5 requesting resource cpu=0m on Node ip-172-31-37-214
  Jul 13 14:02:58.543: INFO: Pod nginx-ingress-controller-kubernetes-worker-mp6fl requesting resource cpu=0m on Node ip-172-31-15-91
  Jul 13 14:02:58.543: INFO: Pod nginx-ingress-controller-kubernetes-worker-qcj2m requesting resource cpu=0m on Node ip-172-31-89-122
  Jul 13 14:02:58.543: INFO: Pod calico-kube-controllers-566f48f4bc-zln57 requesting resource cpu=0m on Node ip-172-31-15-91
  Jul 13 14:02:58.543: INFO: Pod calico-node-6r9cg requesting resource cpu=250m on Node ip-172-31-15-91
  Jul 13 14:02:58.543: INFO: Pod calico-node-79mrk requesting resource cpu=250m on Node ip-172-31-89-122
  Jul 13 14:02:58.543: INFO: Pod calico-node-j2tjq requesting resource cpu=250m on Node ip-172-31-37-214
  Jul 13 14:02:58.543: INFO: Pod coredns-bddfd76d7-qc4pt requesting resource cpu=100m on Node ip-172-31-15-91
  Jul 13 14:02:58.543: INFO: Pod kube-state-metrics-6f48cdd76-kj8mn requesting resource cpu=0m on Node ip-172-31-15-91
  Jul 13 14:02:58.543: INFO: Pod metrics-server-v0.6.3-69d7fbfdf8-bj7mr requesting resource cpu=5m on Node ip-172-31-15-91
  Jul 13 14:02:58.543: INFO: Pod dashboard-metrics-scraper-5dd7cb5fc-cdqmc requesting resource cpu=0m on Node ip-172-31-15-91
  Jul 13 14:02:58.543: INFO: Pod kubernetes-dashboard-7b899cb9d9-tx78d requesting resource cpu=0m on Node ip-172-31-15-91
  Jul 13 14:02:58.543: INFO: Pod pod-logs-websocket-f1e35710-f008-4b9d-a378-b6ef973ed919 requesting resource cpu=0m on Node ip-172-31-37-214
  Jul 13 14:02:58.543: INFO: Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-37-214
  Jul 13 14:02:58.543: INFO: Pod sonobuoy-e2e-job-542cce46194140ad requesting resource cpu=0m on Node ip-172-31-89-122
  Jul 13 14:02:58.543: INFO: Pod sonobuoy-systemd-logs-daemon-set-4e460315498c4029-66grn requesting resource cpu=0m on Node ip-172-31-15-91
  Jul 13 14:02:58.543: INFO: Pod sonobuoy-systemd-logs-daemon-set-4e460315498c4029-7d9z2 requesting resource cpu=0m on Node ip-172-31-37-214
  Jul 13 14:02:58.543: INFO: Pod sonobuoy-systemd-logs-daemon-set-4e460315498c4029-tw5hd requesting resource cpu=0m on Node ip-172-31-89-122
  STEP: Starting Pods to consume most of the cluster CPU. @ 07/13/24 14:02:58.543
  Jul 13 14:02:58.543: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-37-214
  Jul 13 14:02:58.550: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-89-122
  Jul 13 14:02:58.556: INFO: Creating a pod which consumes cpu=1151m on Node ip-172-31-15-91
  E0713 14:02:59.434711      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:00.435620      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 07/13/24 14:03:00.577
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-057ea80d-a8a4-46bf-a1e5-40ef81230b9a.17e1caad5cb5c679], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1720/filler-pod-057ea80d-a8a4-46bf-a1e5-40ef81230b9a to ip-172-31-89-122] @ 07/13/24 14:03:00.58
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-057ea80d-a8a4-46bf-a1e5-40ef81230b9a.17e1caad7aa2affc], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 07/13/24 14:03:00.58
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-057ea80d-a8a4-46bf-a1e5-40ef81230b9a.17e1caad7bad7e42], Reason = [Created], Message = [Created container filler-pod-057ea80d-a8a4-46bf-a1e5-40ef81230b9a] @ 07/13/24 14:03:00.58
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-057ea80d-a8a4-46bf-a1e5-40ef81230b9a.17e1caad7edd44e4], Reason = [Started], Message = [Started container filler-pod-057ea80d-a8a4-46bf-a1e5-40ef81230b9a] @ 07/13/24 14:03:00.58
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8d44bae7-ea1c-400b-8c5f-96ba4cdce0c0.17e1caad5c33bf48], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1720/filler-pod-8d44bae7-ea1c-400b-8c5f-96ba4cdce0c0 to ip-172-31-37-214] @ 07/13/24 14:03:00.58
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8d44bae7-ea1c-400b-8c5f-96ba4cdce0c0.17e1caad7bb3d5cf], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 07/13/24 14:03:00.58
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8d44bae7-ea1c-400b-8c5f-96ba4cdce0c0.17e1caad7d1e5ceb], Reason = [Created], Message = [Created container filler-pod-8d44bae7-ea1c-400b-8c5f-96ba4cdce0c0] @ 07/13/24 14:03:00.58
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8d44bae7-ea1c-400b-8c5f-96ba4cdce0c0.17e1caad809a6dad], Reason = [Started], Message = [Started container filler-pod-8d44bae7-ea1c-400b-8c5f-96ba4cdce0c0] @ 07/13/24 14:03:00.58
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-eb479083-c835-418b-ba36-1e1036715747.17e1caad5d0e40e0], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1720/filler-pod-eb479083-c835-418b-ba36-1e1036715747 to ip-172-31-15-91] @ 07/13/24 14:03:00.58
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-eb479083-c835-418b-ba36-1e1036715747.17e1caad7cd95b7e], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 07/13/24 14:03:00.58
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-eb479083-c835-418b-ba36-1e1036715747.17e1caad7e166576], Reason = [Created], Message = [Created container filler-pod-eb479083-c835-418b-ba36-1e1036715747] @ 07/13/24 14:03:00.58
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-eb479083-c835-418b-ba36-1e1036715747.17e1caad8140e761], Reason = [Started], Message = [Started container filler-pod-eb479083-c835-418b-ba36-1e1036715747] @ 07/13/24 14:03:00.58
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17e1caadd51dd6be], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.] @ 07/13/24 14:03:00.591
  E0713 14:03:01.435730      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node ip-172-31-15-91 @ 07/13/24 14:03:01.59
  STEP: verifying the node doesn't have the label node @ 07/13/24 14:03:01.601
  STEP: removing the label node off the node ip-172-31-37-214 @ 07/13/24 14:03:01.603
  STEP: verifying the node doesn't have the label node @ 07/13/24 14:03:01.616
  STEP: removing the label node off the node ip-172-31-89-122 @ 07/13/24 14:03:01.618
  STEP: verifying the node doesn't have the label node @ 07/13/24 14:03:01.628
  Jul 13 14:03:01.632: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1720" for this suite. @ 07/13/24 14:03:01.64
â€¢ [3.203 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 07/13/24 14:03:01.648
  Jul 13 14:03:01.649: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename resourcequota @ 07/13/24 14:03:01.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 14:03:01.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 14:03:01.675
  STEP: Creating resourceQuota "e2e-rq-status-7xns7" @ 07/13/24 14:03:01.679
  Jul 13 14:03:01.687: INFO: Resource quota "e2e-rq-status-7xns7" reports spec: hard cpu limit of 500m
  Jul 13 14:03:01.687: INFO: Resource quota "e2e-rq-status-7xns7" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-7xns7" /status @ 07/13/24 14:03:01.687
  STEP: Confirm /status for "e2e-rq-status-7xns7" resourceQuota via watch @ 07/13/24 14:03:01.696
  Jul 13 14:03:01.696: INFO: observed resourceQuota "e2e-rq-status-7xns7" in namespace "resourcequota-1692" with hard status: v1.ResourceList(nil)
  Jul 13 14:03:01.696: INFO: Found resourceQuota "e2e-rq-status-7xns7" in namespace "resourcequota-1692" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Jul 13 14:03:01.696: INFO: ResourceQuota "e2e-rq-status-7xns7" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 07/13/24 14:03:01.699
  Jul 13 14:03:01.703: INFO: Resource quota "e2e-rq-status-7xns7" reports spec: hard cpu limit of 1
  Jul 13 14:03:01.703: INFO: Resource quota "e2e-rq-status-7xns7" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-7xns7" /status @ 07/13/24 14:03:01.703
  STEP: Confirm /status for "e2e-rq-status-7xns7" resourceQuota via watch @ 07/13/24 14:03:01.71
  Jul 13 14:03:01.711: INFO: observed resourceQuota "e2e-rq-status-7xns7" in namespace "resourcequota-1692" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Jul 13 14:03:01.711: INFO: Found resourceQuota "e2e-rq-status-7xns7" in namespace "resourcequota-1692" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Jul 13 14:03:01.711: INFO: ResourceQuota "e2e-rq-status-7xns7" /status was patched
  STEP: Get "e2e-rq-status-7xns7" /status @ 07/13/24 14:03:01.711
  Jul 13 14:03:01.715: INFO: Resourcequota "e2e-rq-status-7xns7" reports status: hard cpu of 1
  Jul 13 14:03:01.715: INFO: Resourcequota "e2e-rq-status-7xns7" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-7xns7" /status before checking Spec is unchanged @ 07/13/24 14:03:01.718
  Jul 13 14:03:01.723: INFO: Resourcequota "e2e-rq-status-7xns7" reports status: hard cpu of 2
  Jul 13 14:03:01.723: INFO: Resourcequota "e2e-rq-status-7xns7" reports status: hard memory of 2Gi
  Jul 13 14:03:01.724: INFO: Found resourceQuota "e2e-rq-status-7xns7" in namespace "resourcequota-1692" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  Jul 13 14:03:01.726: INFO: ResourceQuota "e2e-rq-status-7xns7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7xns7", GenerateName:"", Namespace:"resourcequota-1692", SelfLink:"", UID:"4b7d57c8-c737-4bae-9659-9945647b5a78", ResourceVersion:"47163", Generation:0, CreationTimestamp:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7xns7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005957920), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005957950), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005957980), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0713 14:03:02.436698      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:03.437033      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:04.438048      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:05.438116      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:06.438901      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:03:06.728: INFO: ResourceQuota "e2e-rq-status-7xns7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7xns7", GenerateName:"", Namespace:"resourcequota-1692", SelfLink:"", UID:"4b7d57c8-c737-4bae-9659-9945647b5a78", ResourceVersion:"47163", Generation:0, CreationTimestamp:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7xns7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005957b30), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005957b90), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005957bd8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0713 14:03:07.439561      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:08.439743      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:09.439812      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:10.440664      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:11.440781      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:03:11.730: INFO: ResourceQuota "e2e-rq-status-7xns7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7xns7", GenerateName:"", Namespace:"resourcequota-1692", SelfLink:"", UID:"4b7d57c8-c737-4bae-9659-9945647b5a78", ResourceVersion:"47163", Generation:0, CreationTimestamp:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7xns7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005957e90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005957ed8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005957f08), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0713 14:03:12.441149      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:13.441284      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:14.441744      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:15.442649      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:16.442946      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:03:16.728: INFO: ResourceQuota "e2e-rq-status-7xns7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7xns7", GenerateName:"", Namespace:"resourcequota-1692", SelfLink:"", UID:"4b7d57c8-c737-4bae-9659-9945647b5a78", ResourceVersion:"47163", Generation:0, CreationTimestamp:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7xns7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046589a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046589d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004658a08), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0713 14:03:17.443645      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:18.443820      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:19.443955      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:20.444281      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:21.445350      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:03:21.729: INFO: ResourceQuota "e2e-rq-status-7xns7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7xns7", GenerateName:"", Namespace:"resourcequota-1692", SelfLink:"", UID:"4b7d57c8-c737-4bae-9659-9945647b5a78", ResourceVersion:"47163", Generation:0, CreationTimestamp:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7xns7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00123a390), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00123a3d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00123a420), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0713 14:03:22.446339      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:23.446955      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:24.447320      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:25.448352      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:26.448450      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:03:26.729: INFO: ResourceQuota "e2e-rq-status-7xns7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7xns7", GenerateName:"", Namespace:"resourcequota-1692", SelfLink:"", UID:"4b7d57c8-c737-4bae-9659-9945647b5a78", ResourceVersion:"47163", Generation:0, CreationTimestamp:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7xns7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00123a6f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00123a738), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00123a768), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0713 14:03:27.449294      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:28.449483      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:29.449706      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:30.449835      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:31.449917      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:03:31.728: INFO: ResourceQuota "e2e-rq-status-7xns7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7xns7", GenerateName:"", Namespace:"resourcequota-1692", SelfLink:"", UID:"4b7d57c8-c737-4bae-9659-9945647b5a78", ResourceVersion:"47163", Generation:0, CreationTimestamp:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7xns7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00123aac8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00123aaf8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00123ab70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0713 14:03:32.450995      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:33.451209      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:34.451910      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:35.452233      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:36.452335      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:03:36.728: INFO: ResourceQuota "e2e-rq-status-7xns7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7xns7", GenerateName:"", Namespace:"resourcequota-1692", SelfLink:"", UID:"4b7d57c8-c737-4bae-9659-9945647b5a78", ResourceVersion:"47163", Generation:0, CreationTimestamp:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7xns7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046590c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046590f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004659128), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0713 14:03:37.452464      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:38.452657      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:39.452859      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:40.453281      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:41.453731      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:03:41.731: INFO: ResourceQuota "e2e-rq-status-7xns7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7xns7", GenerateName:"", Namespace:"resourcequota-1692", SelfLink:"", UID:"4b7d57c8-c737-4bae-9659-9945647b5a78", ResourceVersion:"47163", Generation:0, CreationTimestamp:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7xns7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046593b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046593e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004659428), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0713 14:03:42.453872      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:43.453938      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:44.454324      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:45.454364      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:46.455356      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:03:46.728: INFO: ResourceQuota "e2e-rq-status-7xns7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7xns7", GenerateName:"", Namespace:"resourcequota-1692", SelfLink:"", UID:"4b7d57c8-c737-4bae-9659-9945647b5a78", ResourceVersion:"47163", Generation:0, CreationTimestamp:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7xns7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00123a3a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00123a408), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00123a438), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0713 14:03:47.456387      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:48.456578      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:49.456766      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:50.457276      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:51.457384      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:03:51.729: INFO: ResourceQuota "e2e-rq-status-7xns7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7xns7", GenerateName:"", Namespace:"resourcequota-1692", SelfLink:"", UID:"4b7d57c8-c737-4bae-9659-9945647b5a78", ResourceVersion:"47163", Generation:0, CreationTimestamp:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7xns7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046581f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004658228), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004658258), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0713 14:03:52.457831      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:53.458574      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:54.458887      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:55.459000      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:56.459098      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:03:56.731: INFO: ResourceQuota "e2e-rq-status-7xns7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7xns7", GenerateName:"", Namespace:"resourcequota-1692", SelfLink:"", UID:"4b7d57c8-c737-4bae-9659-9945647b5a78", ResourceVersion:"47163", Generation:0, CreationTimestamp:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7xns7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046585d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004658600), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004658678), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0713 14:03:57.459857      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:58.460038      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:03:59.460150      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:00.460418      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:01.460496      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:04:01.728: INFO: ResourceQuota "e2e-rq-status-7xns7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7xns7", GenerateName:"", Namespace:"resourcequota-1692", SelfLink:"", UID:"4b7d57c8-c737-4bae-9659-9945647b5a78", ResourceVersion:"47163", Generation:0, CreationTimestamp:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7xns7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004658978), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046589c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046589f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0713 14:04:02.460642      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:03.461365      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:04.461916      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:05.462008      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:06.462071      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:04:06.730: INFO: ResourceQuota "e2e-rq-status-7xns7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7xns7", GenerateName:"", Namespace:"resourcequota-1692", SelfLink:"", UID:"4b7d57c8-c737-4bae-9659-9945647b5a78", ResourceVersion:"47163", Generation:0, CreationTimestamp:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7xns7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004658cd8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004658d08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004658d38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0713 14:04:07.462913      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:08.463696      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:09.463923      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:10.463991      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:11.464238      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:04:11.728: INFO: ResourceQuota "e2e-rq-status-7xns7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7xns7", GenerateName:"", Namespace:"resourcequota-1692", SelfLink:"", UID:"4b7d57c8-c737-4bae-9659-9945647b5a78", ResourceVersion:"47163", Generation:0, CreationTimestamp:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7xns7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00123abd0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00123ac30), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00123ac60), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0713 14:04:12.464738      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:13.464859      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:14.464873      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:15.464979      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:16.465070      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:04:16.729: INFO: ResourceQuota "e2e-rq-status-7xns7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7xns7", GenerateName:"", Namespace:"resourcequota-1692", SelfLink:"", UID:"4b7d57c8-c737-4bae-9659-9945647b5a78", ResourceVersion:"47163", Generation:0, CreationTimestamp:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7xns7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00123b158), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00123b1a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00123b200), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0713 14:04:17.466005      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:18.466092      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:19.466885      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:20.467003      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:21.467218      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:04:21.729: INFO: ResourceQuota "e2e-rq-status-7xns7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7xns7", GenerateName:"", Namespace:"resourcequota-1692", SelfLink:"", UID:"4b7d57c8-c737-4bae-9659-9945647b5a78", ResourceVersion:"47163", Generation:0, CreationTimestamp:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7xns7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00123b548), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00123b590), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00123b5f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0713 14:04:22.467723      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:23.468033      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:24.468713      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:25.469676      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:26.469818      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:04:26.729: INFO: ResourceQuota "e2e-rq-status-7xns7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7xns7", GenerateName:"", Namespace:"resourcequota-1692", SelfLink:"", UID:"4b7d57c8-c737-4bae-9659-9945647b5a78", ResourceVersion:"47163", Generation:0, CreationTimestamp:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7xns7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046591e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004659218), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004659248), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0713 14:04:27.469970      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:28.470065      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:29.470147      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:30.470269      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:31.470359      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:04:31.728: INFO: ResourceQuota "e2e-rq-status-7xns7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7xns7", GenerateName:"", Namespace:"resourcequota-1692", SelfLink:"", UID:"4b7d57c8-c737-4bae-9659-9945647b5a78", ResourceVersion:"47163", Generation:0, CreationTimestamp:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7xns7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00123bb18), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00123bb60), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00123bb90), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0713 14:04:32.470738      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:33.471040      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:34.471277      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:35.471390      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:36.471589      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:04:36.729: INFO: ResourceQuota "e2e-rq-status-7xns7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7xns7", GenerateName:"", Namespace:"resourcequota-1692", SelfLink:"", UID:"4b7d57c8-c737-4bae-9659-9945647b5a78", ResourceVersion:"47163", Generation:0, CreationTimestamp:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7xns7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00123be90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00123bed8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00123bf38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0713 14:04:37.472273      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:38.472589      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:39.472660      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:40.473653      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:41.473828      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:04:41.729: INFO: ResourceQuota "e2e-rq-status-7xns7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7xns7", GenerateName:"", Namespace:"resourcequota-1692", SelfLink:"", UID:"4b7d57c8-c737-4bae-9659-9945647b5a78", ResourceVersion:"47163", Generation:0, CreationTimestamp:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7xns7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040ba3d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040ba408), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040ba468), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0713 14:04:42.474890      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:43.475052      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:44.475332      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:45.476038      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:46.476134      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:04:46.729: INFO: ResourceQuota "e2e-rq-status-7xns7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7xns7", GenerateName:"", Namespace:"resourcequota-1692", SelfLink:"", UID:"4b7d57c8-c737-4bae-9659-9945647b5a78", ResourceVersion:"47163", Generation:0, CreationTimestamp:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7xns7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040ba7f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040ba858), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040ba8a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0713 14:04:47.476367      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:48.476487      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:49.476606      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:50.477567      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:51.477731      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:04:51.730: INFO: ResourceQuota "e2e-rq-status-7xns7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7xns7", GenerateName:"", Namespace:"resourcequota-1692", SelfLink:"", UID:"4b7d57c8-c737-4bae-9659-9945647b5a78", ResourceVersion:"47163", Generation:0, CreationTimestamp:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7xns7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040badb0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040badf8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040bae28), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0713 14:04:52.477840      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:53.477932      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:54.478766      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:55.479662      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:56.479754      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:04:56.728: INFO: ResourceQuota "e2e-rq-status-7xns7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7xns7", GenerateName:"", Namespace:"resourcequota-1692", SelfLink:"", UID:"4b7d57c8-c737-4bae-9659-9945647b5a78", ResourceVersion:"47163", Generation:0, CreationTimestamp:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7xns7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004659b60), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004659ba8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004659bd8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0713 14:04:57.479883      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:58.479948      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:04:59.480050      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:00.480246      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:01.481176      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:05:01.728: INFO: ResourceQuota "e2e-rq-status-7xns7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7xns7", GenerateName:"", Namespace:"resourcequota-1692", SelfLink:"", UID:"4b7d57c8-c737-4bae-9659-9945647b5a78", ResourceVersion:"47163", Generation:0, CreationTimestamp:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7xns7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004659d88), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004659db8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004659de8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0713 14:05:02.482108      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:03.482938      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:04.483925      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:05.484926      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:06.485157      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:05:06.730: INFO: ResourceQuota "e2e-rq-status-7xns7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7xns7", GenerateName:"", Namespace:"resourcequota-1692", SelfLink:"", UID:"4b7d57c8-c737-4bae-9659-9945647b5a78", ResourceVersion:"47163", Generation:0, CreationTimestamp:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7xns7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004659fe0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d1a030), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d1a078), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0713 14:05:07.485346      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:08.485529      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:09.485766      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:10.485829      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:11.485943      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:05:11.729: INFO: ResourceQuota "e2e-rq-status-7xns7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7xns7", GenerateName:"", Namespace:"resourcequota-1692", SelfLink:"", UID:"4b7d57c8-c737-4bae-9659-9945647b5a78", ResourceVersion:"47163", Generation:0, CreationTimestamp:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7xns7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d1a408), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d1a450), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d1a480), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0713 14:05:12.486919      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:13.487773      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:14.487870      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:15.487984      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:16.488157      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:05:16.728: INFO: ResourceQuota "e2e-rq-status-7xns7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7xns7", GenerateName:"", Namespace:"resourcequota-1692", SelfLink:"", UID:"4b7d57c8-c737-4bae-9659-9945647b5a78", ResourceVersion:"47163", Generation:0, CreationTimestamp:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7xns7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d1a810), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d1a858), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d1a8d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0713 14:05:17.488758      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:18.488835      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:19.489871      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:20.489976      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:21.490079      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:05:21.730: INFO: ResourceQuota "e2e-rq-status-7xns7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7xns7", GenerateName:"", Namespace:"resourcequota-1692", SelfLink:"", UID:"4b7d57c8-c737-4bae-9659-9945647b5a78", ResourceVersion:"47163", Generation:0, CreationTimestamp:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7xns7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d1abd0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d1ac48), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d1ac78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0713 14:05:22.490906      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:23.491828      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:24.492198      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:25.492297      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:26.492481      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:05:26.727: INFO: ResourceQuota "e2e-rq-status-7xns7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7xns7", GenerateName:"", Namespace:"resourcequota-1692", SelfLink:"", UID:"4b7d57c8-c737-4bae-9659-9945647b5a78", ResourceVersion:"47163", Generation:0, CreationTimestamp:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7xns7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d1b0e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d1b110), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d1b158), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0713 14:05:27.492589      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:28.492665      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:29.492780      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:30.493730      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:31.493843      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:05:31.729: INFO: ResourceQuota "e2e-rq-status-7xns7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7xns7", GenerateName:"", Namespace:"resourcequota-1692", SelfLink:"", UID:"4b7d57c8-c737-4bae-9659-9945647b5a78", ResourceVersion:"47163", Generation:0, CreationTimestamp:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7xns7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d1b4d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d1b530), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d1b5a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0713 14:05:32.493971      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:33.494030      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:34.494862      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:35.495730      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:36.495819      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:05:36.729: INFO: ResourceQuota "e2e-rq-status-7xns7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7xns7", GenerateName:"", Namespace:"resourcequota-1692", SelfLink:"", UID:"4b7d57c8-c737-4bae-9659-9945647b5a78", ResourceVersion:"47163", Generation:0, CreationTimestamp:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7xns7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003396090), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0033960f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003396120), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0713 14:05:37.496618      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:38.496822      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:39.497000      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:40.497123      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:41.497216      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:05:41.728: INFO: ResourceQuota "e2e-rq-status-7xns7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7xns7", GenerateName:"", Namespace:"resourcequota-1692", SelfLink:"", UID:"4b7d57c8-c737-4bae-9659-9945647b5a78", ResourceVersion:"47163", Generation:0, CreationTimestamp:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7xns7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d1ba70), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d1baa0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d1bad0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0713 14:05:42.497613      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:43.497540      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:44.498096      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:45.498191      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:46.498901      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:05:46.729: INFO: ResourceQuota "e2e-rq-status-7xns7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7xns7", GenerateName:"", Namespace:"resourcequota-1692", SelfLink:"", UID:"4b7d57c8-c737-4bae-9659-9945647b5a78", ResourceVersion:"47163", Generation:0, CreationTimestamp:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7xns7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d1a1b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d1a210), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d1a240), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0713 14:05:47.498974      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:48.499155      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:49.499493      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:50.499609      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:51.499700      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:05:51.729: INFO: ResourceQuota "e2e-rq-status-7xns7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7xns7", GenerateName:"", Namespace:"resourcequota-1692", SelfLink:"", UID:"4b7d57c8-c737-4bae-9659-9945647b5a78", ResourceVersion:"47163", Generation:0, CreationTimestamp:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7xns7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d1a618), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d1a648), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 13, 14, 3, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d1a690), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0713 14:05:52.499746      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:53.499976      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:54.500313      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:55.500406      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:05:56.500976      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:05:56.728: INFO: ResourceQuota "e2e-rq-status-7xns7" Spec was unchanged and /status reset
  Jul 13 14:05:56.729: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1692" for this suite. @ 07/13/24 14:05:56.732
â€¢ [175.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 07/13/24 14:05:56.74
  Jul 13 14:05:56.740: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename daemonsets @ 07/13/24 14:05:56.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 14:05:56.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 14:05:56.757
  STEP: Creating simple DaemonSet "daemon-set" @ 07/13/24 14:05:56.772
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/13/24 14:05:56.777
  Jul 13 14:05:56.780: INFO: DaemonSet pods can't tolerate node ip-172-31-73-21 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 14:05:56.780: INFO: DaemonSet pods can't tolerate node ip-172-31-93-88 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 14:05:56.782: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 13 14:05:56.782: INFO: Node ip-172-31-15-91 is running 0 daemon pod, expected 1
  E0713 14:05:57.501098      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:05:57.782: INFO: DaemonSet pods can't tolerate node ip-172-31-73-21 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 14:05:57.782: INFO: DaemonSet pods can't tolerate node ip-172-31-93-88 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 14:05:57.785: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jul 13 14:05:57.785: INFO: Node ip-172-31-15-91 is running 0 daemon pod, expected 1
  E0713 14:05:58.501190      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:05:58.781: INFO: DaemonSet pods can't tolerate node ip-172-31-73-21 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 14:05:58.781: INFO: DaemonSet pods can't tolerate node ip-172-31-93-88 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 14:05:58.785: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jul 13 14:05:58.785: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 07/13/24 14:05:58.788
  Jul 13 14:05:58.802: INFO: DaemonSet pods can't tolerate node ip-172-31-73-21 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 14:05:58.802: INFO: DaemonSet pods can't tolerate node ip-172-31-93-88 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 14:05:58.804: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jul 13 14:05:58.804: INFO: Node ip-172-31-89-122 is running 0 daemon pod, expected 1
  E0713 14:05:59.501248      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:05:59.804: INFO: DaemonSet pods can't tolerate node ip-172-31-73-21 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 14:05:59.804: INFO: DaemonSet pods can't tolerate node ip-172-31-93-88 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 14:05:59.808: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jul 13 14:05:59.808: INFO: Node ip-172-31-89-122 is running 0 daemon pod, expected 1
  E0713 14:06:00.501785      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:06:00.803: INFO: DaemonSet pods can't tolerate node ip-172-31-73-21 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 14:06:00.803: INFO: DaemonSet pods can't tolerate node ip-172-31-93-88 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jul 13 14:06:00.805: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jul 13 14:06:00.805: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/13/24 14:06:00.809
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1845, will wait for the garbage collector to delete the pods @ 07/13/24 14:06:00.809
  Jul 13 14:06:00.870: INFO: Deleting DaemonSet.extensions daemon-set took: 7.603733ms
  Jul 13 14:06:00.970: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.593911ms
  E0713 14:06:01.501955      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:06:01.975: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jul 13 14:06:01.975: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jul 13 14:06:01.977: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"47685"},"items":null}

  Jul 13 14:06:01.979: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"47685"},"items":null}

  Jul 13 14:06:01.990: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1845" for this suite. @ 07/13/24 14:06:01.993
â€¢ [5.259 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 07/13/24 14:06:01.999
  Jul 13 14:06:01.999: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename containers @ 07/13/24 14:06:02
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 14:06:02.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 14:06:02.016
  STEP: Creating a pod to test override command @ 07/13/24 14:06:02.018
  E0713 14:06:02.502062      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:06:03.502892      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:06:04.503731      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:06:05.504606      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/13/24 14:06:06.038
  Jul 13 14:06:06.043: INFO: Trying to get logs from node ip-172-31-37-214 pod client-containers-fd441277-5874-40dc-8f81-a6f54fe7a08d container agnhost-container: <nil>
  STEP: delete the pod @ 07/13/24 14:06:06.053
  Jul 13 14:06:06.065: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3563" for this suite. @ 07/13/24 14:06:06.068
â€¢ [4.075 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 07/13/24 14:06:06.074
  Jul 13 14:06:06.074: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename dns @ 07/13/24 14:06:06.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 14:06:06.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 14:06:06.091
  STEP: Creating a test headless service @ 07/13/24 14:06:06.093
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2830.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-2830.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2830.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2830.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-2830.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-2830.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-2830.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-2830.svc.cluster.local;sleep 1; done
   @ 07/13/24 14:06:06.097
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2830.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-2830.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2830.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-2830.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-2830.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-2830.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-2830.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-2830.svc.cluster.local;sleep 1; done
   @ 07/13/24 14:06:06.098
  STEP: creating a pod to probe DNS @ 07/13/24 14:06:06.098
  STEP: submitting the pod to kubernetes @ 07/13/24 14:06:06.098
  E0713 14:06:06.505339      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:06:07.505455      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/13/24 14:06:08.116
  STEP: looking for the results for each expected name from probers @ 07/13/24 14:06:08.12
  Jul 13 14:06:08.124: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-2830.svc.cluster.local from pod dns-2830/dns-test-1356bf96-eaf2-4099-a2d7-f1df930f2db4: the server could not find the requested resource (get pods dns-test-1356bf96-eaf2-4099-a2d7-f1df930f2db4)
  Jul 13 14:06:08.128: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2830.svc.cluster.local from pod dns-2830/dns-test-1356bf96-eaf2-4099-a2d7-f1df930f2db4: the server could not find the requested resource (get pods dns-test-1356bf96-eaf2-4099-a2d7-f1df930f2db4)
  Jul 13 14:06:08.132: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-2830.svc.cluster.local from pod dns-2830/dns-test-1356bf96-eaf2-4099-a2d7-f1df930f2db4: the server could not find the requested resource (get pods dns-test-1356bf96-eaf2-4099-a2d7-f1df930f2db4)
  Jul 13 14:06:08.135: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-2830.svc.cluster.local from pod dns-2830/dns-test-1356bf96-eaf2-4099-a2d7-f1df930f2db4: the server could not find the requested resource (get pods dns-test-1356bf96-eaf2-4099-a2d7-f1df930f2db4)
  Jul 13 14:06:08.139: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2830.svc.cluster.local from pod dns-2830/dns-test-1356bf96-eaf2-4099-a2d7-f1df930f2db4: the server could not find the requested resource (get pods dns-test-1356bf96-eaf2-4099-a2d7-f1df930f2db4)
  Jul 13 14:06:08.143: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2830.svc.cluster.local from pod dns-2830/dns-test-1356bf96-eaf2-4099-a2d7-f1df930f2db4: the server could not find the requested resource (get pods dns-test-1356bf96-eaf2-4099-a2d7-f1df930f2db4)
  Jul 13 14:06:08.147: INFO: Unable to read jessie_udp@dns-test-service-2.dns-2830.svc.cluster.local from pod dns-2830/dns-test-1356bf96-eaf2-4099-a2d7-f1df930f2db4: the server could not find the requested resource (get pods dns-test-1356bf96-eaf2-4099-a2d7-f1df930f2db4)
  Jul 13 14:06:08.150: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-2830.svc.cluster.local from pod dns-2830/dns-test-1356bf96-eaf2-4099-a2d7-f1df930f2db4: the server could not find the requested resource (get pods dns-test-1356bf96-eaf2-4099-a2d7-f1df930f2db4)
  Jul 13 14:06:08.150: INFO: Lookups using dns-2830/dns-test-1356bf96-eaf2-4099-a2d7-f1df930f2db4 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-2830.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2830.svc.cluster.local wheezy_udp@dns-test-service-2.dns-2830.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-2830.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2830.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2830.svc.cluster.local jessie_udp@dns-test-service-2.dns-2830.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2830.svc.cluster.local]

  Jul 13 14:06:08.157: INFO: Pod client logs for webserver: 
  Jul 13 14:06:08.162: INFO: Pod client logs for querier: 
  Jul 13 14:06:08.168: INFO: Pod client logs for jessie-querier: 
  E0713 14:06:08.505537      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:06:09.505855      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:06:10.505929      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:06:11.506028      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:06:12.506158      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:06:13.151: INFO: DNS probes using dns-2830/dns-test-1356bf96-eaf2-4099-a2d7-f1df930f2db4 succeeded

  STEP: deleting the pod @ 07/13/24 14:06:13.151
  STEP: deleting the test headless service @ 07/13/24 14:06:13.168
  Jul 13 14:06:13.177: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2830" for this suite. @ 07/13/24 14:06:13.181
â€¢ [7.114 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 07/13/24 14:06:13.188
  Jul 13 14:06:13.188: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename watch @ 07/13/24 14:06:13.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 14:06:13.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 14:06:13.204
  STEP: creating a watch on configmaps @ 07/13/24 14:06:13.205
  STEP: creating a new configmap @ 07/13/24 14:06:13.206
  STEP: modifying the configmap once @ 07/13/24 14:06:13.21
  STEP: closing the watch once it receives two notifications @ 07/13/24 14:06:13.216
  Jul 13 14:06:13.216: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3653  e1cb4e2c-5296-457b-be07-400f73caea28 47814 0 2024-07-13 14:06:13 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-07-13 14:06:13 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 13 14:06:13.217: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3653  e1cb4e2c-5296-457b-be07-400f73caea28 47815 0 2024-07-13 14:06:13 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-07-13 14:06:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 07/13/24 14:06:13.217
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 07/13/24 14:06:13.223
  STEP: deleting the configmap @ 07/13/24 14:06:13.223
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 07/13/24 14:06:13.229
  Jul 13 14:06:13.229: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3653  e1cb4e2c-5296-457b-be07-400f73caea28 47816 0 2024-07-13 14:06:13 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-07-13 14:06:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 13 14:06:13.229: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3653  e1cb4e2c-5296-457b-be07-400f73caea28 47817 0 2024-07-13 14:06:13 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-07-13 14:06:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jul 13 14:06:13.229: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3653" for this suite. @ 07/13/24 14:06:13.233
â€¢ [0.051 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 07/13/24 14:06:13.245
  Jul 13 14:06:13.245: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename resourcequota @ 07/13/24 14:06:13.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 14:06:13.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 14:06:13.26
  STEP: Creating a ResourceQuota with best effort scope @ 07/13/24 14:06:13.262
  STEP: Ensuring ResourceQuota status is calculated @ 07/13/24 14:06:13.266
  E0713 14:06:13.506542      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:06:14.506913      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 07/13/24 14:06:15.271
  STEP: Ensuring ResourceQuota status is calculated @ 07/13/24 14:06:15.275
  E0713 14:06:15.507472      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:06:16.507612      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 07/13/24 14:06:17.279
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 07/13/24 14:06:17.291
  E0713 14:06:17.508059      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:06:18.508244      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 07/13/24 14:06:19.294
  E0713 14:06:19.509251      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:06:20.509393      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/13/24 14:06:21.298
  STEP: Ensuring resource quota status released the pod usage @ 07/13/24 14:06:21.312
  E0713 14:06:21.509914      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:06:22.509991      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 07/13/24 14:06:23.317
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 07/13/24 14:06:23.328
  E0713 14:06:23.510431      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:06:24.510789      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 07/13/24 14:06:25.332
  E0713 14:06:25.511653      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:06:26.511796      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/13/24 14:06:27.337
  STEP: Ensuring resource quota status released the pod usage @ 07/13/24 14:06:27.352
  E0713 14:06:27.512039      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:06:28.512167      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:06:29.356: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4030" for this suite. @ 07/13/24 14:06:29.36
â€¢ [16.122 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 07/13/24 14:06:29.367
  Jul 13 14:06:29.367: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/13/24 14:06:29.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 14:06:29.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 14:06:29.388
  Jul 13 14:06:29.389: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  E0713 14:06:29.513232      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:06:30.409: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2615" for this suite. @ 07/13/24 14:06:30.414
â€¢ [1.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 07/13/24 14:06:30.42
  Jul 13 14:06:30.420: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename containers @ 07/13/24 14:06:30.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 14:06:30.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 14:06:30.437
  STEP: Creating a pod to test override all @ 07/13/24 14:06:30.439
  E0713 14:06:30.514171      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:06:31.514320      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:06:32.514766      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:06:33.514869      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/13/24 14:06:34.463
  Jul 13 14:06:34.466: INFO: Trying to get logs from node ip-172-31-37-214 pod client-containers-74548069-994e-4d5b-988d-3b619e24ded1 container agnhost-container: <nil>
  STEP: delete the pod @ 07/13/24 14:06:34.474
  Jul 13 14:06:34.488: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9786" for this suite. @ 07/13/24 14:06:34.491
â€¢ [4.077 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 07/13/24 14:06:34.498
  Jul 13 14:06:34.498: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename kubelet-test @ 07/13/24 14:06:34.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 14:06:34.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 14:06:34.514
  E0713 14:06:34.514968      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:06:35.515736      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:06:36.515844      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:06:36.543: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3404" for this suite. @ 07/13/24 14:06:36.545
â€¢ [2.054 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 07/13/24 14:06:36.552
  Jul 13 14:06:36.552: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename resourcequota @ 07/13/24 14:06:36.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 14:06:36.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 14:06:36.568
  STEP: Counting existing ResourceQuota @ 07/13/24 14:06:36.569
  E0713 14:06:37.516263      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:06:38.516366      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:06:39.516457      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:06:40.516555      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:06:41.516652      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/13/24 14:06:41.572
  STEP: Ensuring resource quota status is calculated @ 07/13/24 14:06:41.579
  E0713 14:06:42.516703      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:06:43.516890      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 07/13/24 14:06:43.584
  STEP: Ensuring resource quota status captures replicaset creation @ 07/13/24 14:06:43.596
  E0713 14:06:44.516950      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:06:45.517030      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 07/13/24 14:06:45.601
  STEP: Ensuring resource quota status released usage @ 07/13/24 14:06:45.607
  E0713 14:06:46.517150      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:06:47.517243      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:06:47.612: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3495" for this suite. @ 07/13/24 14:06:47.616
â€¢ [11.070 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 07/13/24 14:06:47.623
  Jul 13 14:06:47.623: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename projected @ 07/13/24 14:06:47.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 14:06:47.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 14:06:47.639
  STEP: Creating configMap with name configmap-projected-all-test-volume-6f5aed0a-dcbb-4134-a084-48dd9611c34f @ 07/13/24 14:06:47.641
  STEP: Creating secret with name secret-projected-all-test-volume-4c7545e5-c2af-47a5-8447-372d5d29b169 @ 07/13/24 14:06:47.645
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 07/13/24 14:06:47.649
  E0713 14:06:48.517356      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:06:49.517468      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:06:50.518435      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:06:51.518540      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/13/24 14:06:51.666
  Jul 13 14:06:51.668: INFO: Trying to get logs from node ip-172-31-37-214 pod projected-volume-26c897c2-8d32-47fb-8dfe-a65f97a132c5 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 07/13/24 14:06:51.676
  Jul 13 14:06:51.692: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3471" for this suite. @ 07/13/24 14:06:51.694
â€¢ [4.077 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3649
  STEP: Creating a kubernetes client @ 07/13/24 14:06:51.7
  Jul 13 14:06:51.700: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename services @ 07/13/24 14:06:51.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 14:06:51.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 14:06:51.718
  STEP: creating service multiprotocol-test in namespace services-5418 @ 07/13/24 14:06:51.72
  STEP: creating pod pod1 in namespace services-5418 @ 07/13/24 14:06:51.729
  STEP: Creating pod pod1 in namespace services-5418 @ 07/13/24 14:06:51.729
  E0713 14:06:52.518776      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:06:53.518875      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-5418 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 07/13/24 14:06:53.753
  Jul 13 14:06:53.761: INFO: successfully validated that service multiprotocol-test in namespace services-5418 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 07/13/24 14:06:53.762
  Jul 13 14:06:53.762: INFO: Creating new exec pod
  E0713 14:06:54.519187      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:06:55.519293      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:06:55.774: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-5418 exec execpod4khbh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.27 80'
  Jul 13 14:06:55.870: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.27 80\nConnection to 10.152.183.27 80 port [tcp/http] succeeded!\n"
  Jul 13 14:06:55.870: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 13 14:06:55.870: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-5418 exec execpod4khbh -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.27 80'
  E0713 14:06:56.519360      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:06:57.519459      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:06:58.520033      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:06:59.520151      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:06:59.963: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.27 80\nConnection to 10.152.183.27 80 port [udp/*] succeeded!\n"
  Jul 13 14:06:59.963: INFO: stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 07/13/24 14:06:59.963
  Jul 13 14:06:59.972: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-5418 exec execpod4khbh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.27 80'
  Jul 13 14:07:00.073: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.27 80\nConnection to 10.152.183.27 80 port [tcp/http] succeeded!\n"
  Jul 13 14:07:00.073: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jul 13 14:07:00.073: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-5418 exec execpod4khbh -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.27 80'
  E0713 14:07:00.521154      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:01.521244      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:02.521877      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:03.521988      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:07:04.168: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.27 80\nConnection to 10.152.183.27 80 port [udp/*] succeeded!\n"
  Jul 13 14:07:04.168: INFO: stdout: ""
  Jul 13 14:07:04.168: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-5418 exec execpod4khbh -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.27 80'
  E0713 14:07:04.522162      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:05.522274      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:06.522894      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:07.522982      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:07:08.257: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.27 80\nConnection to 10.152.183.27 80 port [udp/*] succeeded!\n"
  Jul 13 14:07:08.257: INFO: stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 07/13/24 14:07:08.257
  Jul 13 14:07:08.267: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-5418 exec execpod4khbh -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.27 80'
  E0713 14:07:08.523730      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:09.523921      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:10.524422      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:11.524531      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:07:12.366: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.27 80\nConnection to 10.152.183.27 80 port [udp/*] succeeded!\n"
  Jul 13 14:07:12.366: INFO: stdout: "pod1"
  Jul 13 14:07:12.366: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-5418 exec execpod4khbh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.27 80'
  E0713 14:07:12.525217      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:13.525431      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:07:14.462: INFO: rc: 1
  Jul 13 14:07:14.462: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-5418 exec execpod4khbh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.27 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.27 80
  nc: connect to 10.152.183.27 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jul 13 14:07:14.462: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-5418 exec execpod4khbh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.27 80'
  E0713 14:07:14.525962      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:15.526875      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:16.527639      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:07:16.557: INFO: rc: 1
  Jul 13 14:07:16.557: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-5418 exec execpod4khbh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.27 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.27 80
  nc: connect to 10.152.183.27 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jul 13 14:07:16.557: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-5418 exec execpod4khbh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.27 80'
  E0713 14:07:17.528213      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:18.528305      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:07:18.652: INFO: rc: 1
  Jul 13 14:07:18.652: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=services-5418 exec execpod4khbh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.27 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.152.183.27 80
  + echo hostName
  nc: connect to 10.152.183.27 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jul 13 14:07:18.652: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5418" for this suite. @ 07/13/24 14:07:18.657
â€¢ [26.964 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1399
  STEP: Creating a kubernetes client @ 07/13/24 14:07:18.665
  Jul 13 14:07:18.665: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename kubectl @ 07/13/24 14:07:18.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 14:07:18.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 14:07:18.686
  Jul 13 14:07:18.688: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-7333 create -f -'
  Jul 13 14:07:18.772: INFO: stderr: ""
  Jul 13 14:07:18.772: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Jul 13 14:07:18.772: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-7333 create -f -'
  Jul 13 14:07:18.864: INFO: stderr: ""
  Jul 13 14:07:18.864: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/13/24 14:07:18.864
  E0713 14:07:19.528475      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:07:19.868: INFO: Selector matched 1 pods for map[app:agnhost]
  Jul 13 14:07:19.868: INFO: Found 1 / 1
  Jul 13 14:07:19.868: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Jul 13 14:07:19.871: INFO: Selector matched 1 pods for map[app:agnhost]
  Jul 13 14:07:19.871: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jul 13 14:07:19.871: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-7333 describe pod agnhost-primary-w5jc2'
  Jul 13 14:07:19.923: INFO: stderr: ""
  Jul 13 14:07:19.923: INFO: stdout: "Name:             agnhost-primary-w5jc2\nNamespace:        kubectl-7333\nPriority:         0\nService Account:  default\nNode:             ip-172-31-37-214/172.31.37.214\nStart Time:       Sat, 13 Jul 2024 14:07:18 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.77.198\nIPs:\n  IP:           192.168.77.198\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://443ed5e27d1edfb57ea605e9a988eec3ce5751248efa5c32e722689d5d6882a8\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 13 Jul 2024 14:07:19 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-sm9ch (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-sm9ch:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-7333/agnhost-primary-w5jc2 to ip-172-31-37-214\n  Normal  Pulled     0s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    0s    kubelet            Created container agnhost-primary\n  Normal  Started    0s    kubelet            Started container agnhost-primary\n"
  Jul 13 14:07:19.924: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-7333 describe rc agnhost-primary'
  Jul 13 14:07:19.982: INFO: stderr: ""
  Jul 13 14:07:19.982: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-7333\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-w5jc2\n"
  Jul 13 14:07:19.982: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-7333 describe service agnhost-primary'
  Jul 13 14:07:20.030: INFO: stderr: ""
  Jul 13 14:07:20.030: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-7333\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.152.183.195\nIPs:               10.152.183.195\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         192.168.77.198:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Jul 13 14:07:20.033: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-7333 describe node ip-172-31-15-91'
  Jul 13 14:07:20.095: INFO: stderr: ""
  Jul 13 14:07:20.095: INFO: stdout: "Name:               ip-172-31-15-91\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-worker\n                    juju-charm=kubernetes-worker\n                    juju.io/cloud=ec2\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-15-91\n                    kubernetes.io/os=linux\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 13 Jul 2024 12:03:40 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-15-91\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 13 Jul 2024 14:07:19 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 13 Jul 2024 12:17:45 +0000   Sat, 13 Jul 2024 12:17:45 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 13 Jul 2024 14:05:01 +0000   Sat, 13 Jul 2024 12:03:40 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 13 Jul 2024 14:05:01 +0000   Sat, 13 Jul 2024 12:03:40 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 13 Jul 2024 14:05:01 +0000   Sat, 13 Jul 2024 12:03:40 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 13 Jul 2024 14:05:01 +0000   Sat, 13 Jul 2024 12:05:11 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  172.31.15.91\n  Hostname:    ip-172-31-15-91\nCapacity:\n  cpu:                    2\n  ephemeral-storage:      16069568Ki\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 7958124Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nAllocatable:\n  cpu:                    2\n  ephemeral-storage:      14809713845\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 7855724Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nSystem Info:\n  Machine ID:                      ec2a247793f034d4174e920fbede4896\n  System UUID:                     ec2a2477-93f0-34d4-174e-920fbede4896\n  Boot ID:                         913766f6-f430-4cf4-87b2-9380e703ef04\n  Kernel Version:                  6.5.0-1022-aws\n  OS Image:                        Ubuntu 22.04.4 LTS\n  Operating System:                linux\n  Architecture:                    amd64\n  Container Runtime Version:       containerd://1.6.8\n  Kubelet Version:                 v1.29.6\n  Kube-Proxy Version:              v1.29.6\nNon-terminated Pods:               (9 in total)\n  Namespace                        Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                        ----                                                       ------------  ----------  ---------------  -------------  ---\n  ingress-nginx-kubernetes-worker  nginx-ingress-controller-kubernetes-worker-mp6fl           0 (0%)        0 (0%)      0 (0%)           0 (0%)         111m\n  kube-system                      calico-kube-controllers-566f48f4bc-zln57                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         107m\n  kube-system                      calico-node-6r9cg                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         109m\n  kube-system                      coredns-bddfd76d7-qc4pt                                    100m (5%)     0 (0%)      70Mi (0%)        170Mi (2%)     123m\n  kube-system                      kube-state-metrics-6f48cdd76-kj8mn                         0 (0%)        0 (0%)      0 (0%)           0 (0%)         123m\n  kube-system                      metrics-server-v0.6.3-69d7fbfdf8-bj7mr                     5m (0%)       100m (5%)   50Mi (0%)        300Mi (3%)     123m\n  kubernetes-dashboard             dashboard-metrics-scraper-5dd7cb5fc-cdqmc                  0 (0%)        0 (0%)      0 (0%)           0 (0%)         123m\n  kubernetes-dashboard             kubernetes-dashboard-7b899cb9d9-tx78d                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         123m\n  sonobuoy                         sonobuoy-systemd-logs-daemon-set-4e460315498c4029-66grn    0 (0%)        0 (0%)      0 (0%)           0 (0%)         104m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource               Requests    Limits\n  --------               --------    ------\n  cpu                    355m (17%)  100m (5%)\n  memory                 120Mi (1%)  470Mi (6%)\n  ephemeral-storage      0 (0%)      0 (0%)\n  hugepages-1Gi          0 (0%)      0 (0%)\n  hugepages-2Mi          0 (0%)      0 (0%)\n  scheduling.k8s.io/foo  0           0\nEvents:                  <none>\n"
  Jul 13 14:07:20.095: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1281139790 --namespace=kubectl-7333 describe namespace kubectl-7333'
  Jul 13 14:07:20.148: INFO: stderr: ""
  Jul 13 14:07:20.148: INFO: stdout: "Name:         kubectl-7333\nLabels:       e2e-framework=kubectl\n              e2e-run=3e220ee5-a92f-4a3a-a791-6f42378595e8\n              kubernetes.io/metadata.name=kubectl-7333\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Jul 13 14:07:20.148: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7333" for this suite. @ 07/13/24 14:07:20.152
â€¢ [1.494 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 07/13/24 14:07:20.159
  Jul 13 14:07:20.159: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename projected @ 07/13/24 14:07:20.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 14:07:20.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 14:07:20.174
  STEP: Creating configMap with name cm-test-opt-del-f57f6c5b-2056-4ab2-84dd-39fb07d8efd3 @ 07/13/24 14:07:20.18
  STEP: Creating configMap with name cm-test-opt-upd-ef490195-e54a-4f87-a20c-43ac81602aef @ 07/13/24 14:07:20.183
  STEP: Creating the pod @ 07/13/24 14:07:20.187
  E0713 14:07:20.528556      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:21.528730      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-f57f6c5b-2056-4ab2-84dd-39fb07d8efd3 @ 07/13/24 14:07:22.233
  STEP: Updating configmap cm-test-opt-upd-ef490195-e54a-4f87-a20c-43ac81602aef @ 07/13/24 14:07:22.239
  STEP: Creating configMap with name cm-test-opt-create-ce8365bc-9c1d-4165-a034-420bec8c6fc1 @ 07/13/24 14:07:22.244
  STEP: waiting to observe update in volume @ 07/13/24 14:07:22.248
  E0713 14:07:22.529155      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:23.529361      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:24.529931      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:25.530056      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:26.530391      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:27.530498      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:28.530596      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:29.531217      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:30.531285      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:31.531376      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:32.532306      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:33.532401      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:34.533232      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:35.534282      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:36.534408      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:37.534908      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:38.535367      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:39.535452      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:40.535679      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:41.535765      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:42.535947      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:43.536068      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:44.536120      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:45.536898      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:46.537285      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:47.537401      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:48.538215      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:49.538885      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:50.538927      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:51.539034      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:52.539454      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:53.539553      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:54.539633      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:55.540427      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:56.541226      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:57.541308      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:58.541846      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:07:59.542892      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:00.543932      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:01.544334      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:02.545050      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:03.545158      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:04.545530      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:05.545725      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:06.546733      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:07.546836      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:08.547388      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:09.547605      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:10.548627      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:11.548791      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:12.549177      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:13.549311      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:14.549496      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:15.550418      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:16.550963      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:17.551117      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:18.551661      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:19.551765      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:20.552077      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:21.552614      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:22.553201      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:23.553339      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:24.554349      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:25.554487      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:26.555308      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:27.555408      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:28.556174      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:29.556352      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:30.556714      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:31.556887      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:32.557508      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:33.558397      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:34.558542      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:35.558701      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:36.559705      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:37.559866      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:38.560062      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:39.560189      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:40.560434      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:41.560599      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:42.560958      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:43.562048      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:44.562896      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:45.563448      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:46.563741      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:47.564726      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:48.564822      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:49.564900      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:50.565028      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jul 13 14:08:50.609: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7191" for this suite. @ 07/13/24 14:08:50.611
â€¢ [90.463 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 07/13/24 14:08:50.622
  Jul 13 14:08:50.622: INFO: >>> kubeConfig: /tmp/kubeconfig-1281139790
  STEP: Building a namespace api object, basename disruption @ 07/13/24 14:08:50.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/13/24 14:08:50.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/13/24 14:08:50.641
  STEP: Creating a pdb that targets all three pods in a test replica set @ 07/13/24 14:08:50.642
  STEP: Waiting for the pdb to be processed @ 07/13/24 14:08:50.646
  E0713 14:08:51.565617      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:52.565826      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 07/13/24 14:08:52.657
  STEP: Waiting for all pods to be running @ 07/13/24 14:08:52.657
  Jul 13 14:08:52.660: INFO: pods: 0 < 3
  E0713 14:08:53.565855      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:54.566875      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 07/13/24 14:08:54.662
  STEP: Updating the pdb to allow a pod to be evicted @ 07/13/24 14:08:54.67
  STEP: Waiting for the pdb to be processed @ 07/13/24 14:08:54.678
  E0713 14:08:55.567531      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:56.567648      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 07/13/24 14:08:56.682
  STEP: Waiting for all pods to be running @ 07/13/24 14:08:56.682
  STEP: Waiting for the pdb to observed all healthy pods @ 07/13/24 14:08:56.685
  STEP: Patching the pdb to disallow a pod to be evicted @ 07/13/24 14:08:56.709
  STEP: Waiting for the pdb to be processed @ 07/13/24 14:08:56.723
  E0713 14:08:57.567738      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0713 14:08:58.567837      20 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 07/13/24 14:08:58.728
  STEP: locating a running pod @ 07/13/24 14:08:58.731
  STEP: Deleting the pdb to allow a pod to be evicted @ 07/13/24 14:08:58.739
  STEP: Waiting for the pdb to be deleted @ 07/13/24 14:08:58.746
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 07/13/24 14:08:58.748
  STEP: Waiting for all pods to be running @ 07/13/24 14:08:58.748
  Jul 13 14:08:58.765: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6124" for this suite. @ 07/13/24 14:08:58.769
â€¢ [8.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:88
  Jul 13 14:08:58.784: INFO: Running AfterSuite actions on node 1
  Jul 13 14:08:58.784: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:621
[ReportAfterSuite] PASSED [0.033 seconds]
------------------------------

Ran 388 of 7408 Specs in 6333.524 seconds
SUCCESS! -- 388 Passed | 0 Failed | 0 Pending | 7020 Skipped
PASS

Ginkgo ran 1 suite in 1h45m34.505581105s
Test Suite Passed
