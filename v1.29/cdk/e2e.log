  I0608 12:18:16.454544      19 e2e.go:117] Starting e2e run "5b5ed583-e0c7-46a3-b85d-e644064d7e3e" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1717849095 - will randomize all specs

Will run 388 of 7408 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:77
  Jun  8 12:18:16.714: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  Jun  8 12:18:16.715: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Jun  8 12:18:16.744: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Jun  8 12:18:16.748: INFO: 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  Jun  8 12:18:16.748: INFO: e2e test version: v1.29.5
  Jun  8 12:18:16.749: INFO: kube-apiserver version: v1.29.5
  Jun  8 12:18:16.749: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  Jun  8 12:18:16.753: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.039 seconds]
------------------------------
SS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 06/08/24 12:18:16.941
  Jun  8 12:18:16.941: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename events @ 06/08/24 12:18:16.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:18:16.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:18:16.96
  STEP: creating a test event @ 06/08/24 12:18:16.963
  STEP: listing all events in all namespaces @ 06/08/24 12:18:16.966
  STEP: patching the test event @ 06/08/24 12:18:16.976
  STEP: fetching the test event @ 06/08/24 12:18:16.981
  STEP: updating the test event @ 06/08/24 12:18:16.984
  STEP: getting the test event @ 06/08/24 12:18:16.994
  STEP: deleting the test event @ 06/08/24 12:18:16.998
  STEP: listing all events in all namespaces @ 06/08/24 12:18:17.004
  Jun  8 12:18:17.031: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6463" for this suite. @ 06/08/24 12:18:17.04
• [0.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 06/08/24 12:18:17.051
  Jun  8 12:18:17.051: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename emptydir @ 06/08/24 12:18:17.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:18:17.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:18:17.071
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 06/08/24 12:18:17.072
  STEP: Saw pod success @ 06/08/24 12:18:29.104
  Jun  8 12:18:29.106: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-8013acdb-9a7e-4956-a931-b89a37ff4252 container test-container: <nil>
  STEP: delete the pod @ 06/08/24 12:18:29.121
  Jun  8 12:18:29.135: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1101" for this suite. @ 06/08/24 12:18:29.138
• [12.092 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 06/08/24 12:18:29.144
  Jun  8 12:18:29.144: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename services @ 06/08/24 12:18:29.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:18:29.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:18:29.164
  STEP: creating service endpoint-test2 in namespace services-7930 @ 06/08/24 12:18:29.166
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7930 to expose endpoints map[] @ 06/08/24 12:18:29.173
  Jun  8 12:18:29.176: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  Jun  8 12:18:30.183: INFO: successfully validated that service endpoint-test2 in namespace services-7930 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-7930 @ 06/08/24 12:18:30.183
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7930 to expose endpoints map[pod1:[80]] @ 06/08/24 12:18:32.201
  Jun  8 12:18:32.208: INFO: successfully validated that service endpoint-test2 in namespace services-7930 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 06/08/24 12:18:32.208
  Jun  8 12:18:32.208: INFO: Creating new exec pod
  Jun  8 12:18:37.223: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-7930 exec execpodsq8rk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jun  8 12:18:37.328: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jun  8 12:18:37.328: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  8 12:18:37.328: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-7930 exec execpodsq8rk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.218 80'
  Jun  8 12:18:37.418: INFO: stderr: "+ nc -v -t -w 2 10.152.183.218 80\n+ echo hostName\nConnection to 10.152.183.218 80 port [tcp/http] succeeded!\n"
  Jun  8 12:18:37.418: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-7930 @ 06/08/24 12:18:37.418
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7930 to expose endpoints map[pod1:[80] pod2:[80]] @ 06/08/24 12:18:39.432
  Jun  8 12:18:39.441: INFO: successfully validated that service endpoint-test2 in namespace services-7930 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 06/08/24 12:18:39.441
  Jun  8 12:18:40.442: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-7930 exec execpodsq8rk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jun  8 12:18:40.534: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jun  8 12:18:40.534: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  8 12:18:40.534: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-7930 exec execpodsq8rk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.218 80'
  Jun  8 12:18:40.612: INFO: stderr: "+ nc -v -t -w 2 10.152.183.218 80\nConnection to 10.152.183.218 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Jun  8 12:18:40.612: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-7930 @ 06/08/24 12:18:40.613
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7930 to expose endpoints map[pod2:[80]] @ 06/08/24 12:18:40.624
  Jun  8 12:18:40.636: INFO: successfully validated that service endpoint-test2 in namespace services-7930 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 06/08/24 12:18:40.636
  Jun  8 12:18:41.636: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-7930 exec execpodsq8rk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jun  8 12:18:41.726: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jun  8 12:18:41.726: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  8 12:18:41.726: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-7930 exec execpodsq8rk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.218 80'
  Jun  8 12:18:41.809: INFO: stderr: "+ nc -v -t -w 2 10.152.183.218 80\nConnection to 10.152.183.218 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Jun  8 12:18:41.809: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-7930 @ 06/08/24 12:18:41.809
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7930 to expose endpoints map[] @ 06/08/24 12:18:41.819
  Jun  8 12:18:42.833: INFO: successfully validated that service endpoint-test2 in namespace services-7930 exposes endpoints map[]
  Jun  8 12:18:42.848: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7930" for this suite. @ 06/08/24 12:18:42.851
• [13.714 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 06/08/24 12:18:42.858
  Jun  8 12:18:42.858: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename pods @ 06/08/24 12:18:42.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:18:42.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:18:42.874
  STEP: Saw pod success @ 06/08/24 12:18:48.918
  Jun  8 12:18:48.921: INFO: Trying to get logs from node ip-172-31-31-116 pod client-envvars-810167d7-0ee3-4f30-9307-7975d4d3c91f container env3cont: <nil>
  STEP: delete the pod @ 06/08/24 12:18:48.926
  Jun  8 12:18:48.942: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5390" for this suite. @ 06/08/24 12:18:48.945
• [6.093 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 06/08/24 12:18:48.951
  Jun  8 12:18:48.951: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename certificates @ 06/08/24 12:18:48.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:18:48.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:18:48.967
  STEP: getting /apis @ 06/08/24 12:18:49.693
  STEP: getting /apis/certificates.k8s.io @ 06/08/24 12:18:49.696
  STEP: getting /apis/certificates.k8s.io/v1 @ 06/08/24 12:18:49.696
  STEP: creating @ 06/08/24 12:18:49.697
  STEP: getting @ 06/08/24 12:18:49.712
  STEP: listing @ 06/08/24 12:18:49.715
  STEP: watching @ 06/08/24 12:18:49.718
  Jun  8 12:18:49.718: INFO: starting watch
  STEP: patching @ 06/08/24 12:18:49.719
  STEP: updating @ 06/08/24 12:18:49.726
  Jun  8 12:18:49.731: INFO: waiting for watch events with expected annotations
  Jun  8 12:18:49.731: INFO: saw patched and updated annotations
  STEP: getting /approval @ 06/08/24 12:18:49.731
  STEP: patching /approval @ 06/08/24 12:18:49.733
  STEP: updating /approval @ 06/08/24 12:18:49.739
  STEP: getting /status @ 06/08/24 12:18:49.745
  STEP: patching /status @ 06/08/24 12:18:49.747
  STEP: updating /status @ 06/08/24 12:18:49.753
  STEP: deleting @ 06/08/24 12:18:49.759
  STEP: deleting a collection @ 06/08/24 12:18:49.769
  Jun  8 12:18:49.785: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-9125" for this suite. @ 06/08/24 12:18:49.788
• [0.843 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 06/08/24 12:18:49.794
  Jun  8 12:18:49.794: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename projected @ 06/08/24 12:18:49.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:18:49.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:18:49.814
  STEP: Creating the pod @ 06/08/24 12:18:49.815
  Jun  8 12:18:52.355: INFO: Successfully updated pod "annotationupdateec787e4f-febc-4a7a-875d-13b16f0eaec3"
  Jun  8 12:18:56.374: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1943" for this suite. @ 06/08/24 12:18:56.377
• [6.588 seconds]
------------------------------
S
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3649
  STEP: Creating a kubernetes client @ 06/08/24 12:18:56.382
  Jun  8 12:18:56.382: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename services @ 06/08/24 12:18:56.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:18:56.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:18:56.402
  STEP: creating service multiprotocol-test in namespace services-8470 @ 06/08/24 12:18:56.403
  STEP: creating pod pod1 in namespace services-8470 @ 06/08/24 12:18:56.411
  STEP: Creating pod pod1 in namespace services-8470 @ 06/08/24 12:18:56.411
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-8470 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 06/08/24 12:18:58.433
  Jun  8 12:18:58.441: INFO: successfully validated that service multiprotocol-test in namespace services-8470 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 06/08/24 12:18:58.441
  Jun  8 12:18:58.441: INFO: Creating new exec pod
  Jun  8 12:19:00.452: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-8470 exec execpodgs56t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.237 80'
  Jun  8 12:19:00.544: INFO: stderr: "+ nc -v -t -w 2 10.152.183.237 80\nConnection to 10.152.183.237 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Jun  8 12:19:00.544: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  8 12:19:00.544: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-8470 exec execpodgs56t -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.237 80'
  Jun  8 12:19:04.630: INFO: stderr: "+ nc -v -u -w 2 10.152.183.237 80\n+ echo hostName\nConnection to 10.152.183.237 80 port [udp/*] succeeded!\n"
  Jun  8 12:19:04.630: INFO: stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 06/08/24 12:19:04.63
  Jun  8 12:19:04.639: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-8470 exec execpodgs56t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.237 80'
  Jun  8 12:19:04.760: INFO: stderr: "+ nc -v -t -w 2 10.152.183.237 80\nConnection to 10.152.183.237 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Jun  8 12:19:04.760: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  8 12:19:04.760: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-8470 exec execpodgs56t -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.237 80'
  Jun  8 12:19:08.846: INFO: stderr: "+ nc -v -u -w 2 10.152.183.237 80\n+ echo hostName\nConnection to 10.152.183.237 80 port [udp/*] succeeded!\n"
  Jun  8 12:19:08.846: INFO: stdout: ""
  Jun  8 12:19:08.846: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-8470 exec execpodgs56t -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.237 80'
  Jun  8 12:19:12.930: INFO: stderr: "+ nc -v -u -w 2 10.152.183.237 80\n+ echo hostName\nConnection to 10.152.183.237 80 port [udp/*] succeeded!\n"
  Jun  8 12:19:12.930: INFO: stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 06/08/24 12:19:12.93
  Jun  8 12:19:12.939: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-8470 exec execpodgs56t -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.237 80'
  Jun  8 12:19:17.034: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.237 80\nConnection to 10.152.183.237 80 port [udp/*] succeeded!\n"
  Jun  8 12:19:17.034: INFO: stdout: "pod1"
  Jun  8 12:19:17.034: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-8470 exec execpodgs56t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.237 80'
  Jun  8 12:19:19.117: INFO: rc: 1
  Jun  8 12:19:19.117: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-8470 exec execpodgs56t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.237 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.152.183.237 80
  + echo hostName
  nc: connect to 10.152.183.237 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jun  8 12:19:19.117: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-8470 exec execpodgs56t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.237 80'
  Jun  8 12:19:21.205: INFO: rc: 1
  Jun  8 12:19:21.205: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-8470 exec execpodgs56t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.237 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.152.183.237 80
  + echo hostName
  nc: connect to 10.152.183.237 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jun  8 12:19:21.205: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-8470 exec execpodgs56t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.237 80'
  Jun  8 12:19:23.291: INFO: rc: 1
  Jun  8 12:19:23.291: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-8470 exec execpodgs56t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.237 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.152.183.237 80
  + echo hostName
  nc: connect to 10.152.183.237 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jun  8 12:19:23.291: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8470" for this suite. @ 06/08/24 12:19:23.295
• [26.919 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 06/08/24 12:19:23.302
  Jun  8 12:19:23.302: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename configmap @ 06/08/24 12:19:23.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:19:23.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:19:23.319
  STEP: Creating configMap with name configmap-test-volume-e873639a-2aec-4ff0-8a2f-3df9619986ea @ 06/08/24 12:19:23.32
  STEP: Creating a pod to test consume configMaps @ 06/08/24 12:19:23.324
  STEP: Saw pod success @ 06/08/24 12:19:25.338
  Jun  8 12:19:25.340: INFO: Trying to get logs from node ip-172-31-74-243 pod pod-configmaps-8956f3d9-1413-485e-a547-7845e2d55923 container agnhost-container: <nil>
  STEP: delete the pod @ 06/08/24 12:19:25.346
  Jun  8 12:19:25.360: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7307" for this suite. @ 06/08/24 12:19:25.362
• [2.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 06/08/24 12:19:25.372
  Jun  8 12:19:25.372: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 06/08/24 12:19:25.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:19:25.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:19:25.392
  STEP: creating a target pod @ 06/08/24 12:19:25.393
  STEP: adding an ephemeral container @ 06/08/24 12:19:27.408
  STEP: checking pod container endpoints @ 06/08/24 12:19:31.43
  Jun  8 12:19:31.430: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-8384 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  8 12:19:31.430: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  Jun  8 12:19:31.430: INFO: ExecWithOptions: Clientset creation
  Jun  8 12:19:31.430: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-8384/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Jun  8 12:19:31.479: INFO: Exec stderr: ""
  Jun  8 12:19:31.485: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-8384" for this suite. @ 06/08/24 12:19:31.488
• [6.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 06/08/24 12:19:31.495
  Jun  8 12:19:31.495: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename csistoragecapacity @ 06/08/24 12:19:31.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:19:31.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:19:31.513
  STEP: getting /apis @ 06/08/24 12:19:31.514
  STEP: getting /apis/storage.k8s.io @ 06/08/24 12:19:31.517
  STEP: getting /apis/storage.k8s.io/v1 @ 06/08/24 12:19:31.517
  STEP: creating @ 06/08/24 12:19:31.518
  STEP: watching @ 06/08/24 12:19:31.531
  Jun  8 12:19:31.531: INFO: starting watch
  STEP: getting @ 06/08/24 12:19:31.535
  STEP: listing in namespace @ 06/08/24 12:19:31.537
  STEP: listing across namespaces @ 06/08/24 12:19:31.539
  STEP: patching @ 06/08/24 12:19:31.541
  STEP: updating @ 06/08/24 12:19:31.545
  Jun  8 12:19:31.549: INFO: waiting for watch events with expected annotations in namespace
  Jun  8 12:19:31.549: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 06/08/24 12:19:31.549
  STEP: deleting a collection @ 06/08/24 12:19:31.561
  Jun  8 12:19:31.574: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-4809" for this suite. @ 06/08/24 12:19:31.576
• [0.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 06/08/24 12:19:31.582
  Jun  8 12:19:31.582: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/08/24 12:19:31.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:19:31.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:19:31.601
  STEP: fetching the /apis discovery document @ 06/08/24 12:19:31.603
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 06/08/24 12:19:31.603
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 06/08/24 12:19:31.603
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 06/08/24 12:19:31.603
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 06/08/24 12:19:31.604
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 06/08/24 12:19:31.604
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 06/08/24 12:19:31.605
  Jun  8 12:19:31.605: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6061" for this suite. @ 06/08/24 12:19:31.608
• [0.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 06/08/24 12:19:31.615
  Jun  8 12:19:31.615: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename disruption @ 06/08/24 12:19:31.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:19:31.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:19:31.634
  STEP: Waiting for the pdb to be processed @ 06/08/24 12:19:31.641
  STEP: Updating PodDisruptionBudget status @ 06/08/24 12:19:33.646
  STEP: Waiting for all pods to be running @ 06/08/24 12:19:33.654
  Jun  8 12:19:33.657: INFO: running pods: 0 < 1
  STEP: locating a running pod @ 06/08/24 12:19:35.659
  STEP: Waiting for the pdb to be processed @ 06/08/24 12:19:35.668
  STEP: Patching PodDisruptionBudget status @ 06/08/24 12:19:35.674
  STEP: Waiting for the pdb to be processed @ 06/08/24 12:19:35.68
  Jun  8 12:19:35.682: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3990" for this suite. @ 06/08/24 12:19:35.686
• [4.075 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 06/08/24 12:19:35.69
  Jun  8 12:19:35.690: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename downward-api @ 06/08/24 12:19:35.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:19:35.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:19:35.706
  STEP: Creating a pod to test downward API volume plugin @ 06/08/24 12:19:35.708
  STEP: Saw pod success @ 06/08/24 12:19:37.722
  Jun  8 12:19:37.725: INFO: Trying to get logs from node ip-172-31-31-116 pod downwardapi-volume-96647258-4433-4980-b44a-876883678e4f container client-container: <nil>
  STEP: delete the pod @ 06/08/24 12:19:37.73
  Jun  8 12:19:37.744: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6118" for this suite. @ 06/08/24 12:19:37.747
• [2.061 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 06/08/24 12:19:37.751
  Jun  8 12:19:37.751: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename webhook @ 06/08/24 12:19:37.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:19:37.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:19:37.768
  STEP: Setting up server cert @ 06/08/24 12:19:37.788
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/08/24 12:19:38.024
  STEP: Deploying the webhook pod @ 06/08/24 12:19:38.031
  STEP: Wait for the deployment to be ready @ 06/08/24 12:19:38.047
  Jun  8 12:19:38.051: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/08/24 12:19:40.061
  STEP: Verifying the service has paired with the endpoint @ 06/08/24 12:19:40.069
  Jun  8 12:19:41.069: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun  8 12:19:41.076: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 06/08/24 12:19:41.586
  STEP: Creating a custom resource that should be denied by the webhook @ 06/08/24 12:19:41.599
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 06/08/24 12:19:43.614
  STEP: Updating the custom resource with disallowed data should be denied @ 06/08/24 12:19:43.62
  STEP: Deleting the custom resource should be denied @ 06/08/24 12:19:43.626
  STEP: Remove the offending key and value from the custom resource data @ 06/08/24 12:19:43.631
  STEP: Deleting the updated custom resource should be successful @ 06/08/24 12:19:43.64
  Jun  8 12:19:44.192: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2650" for this suite. @ 06/08/24 12:19:44.196
  STEP: Destroying namespace "webhook-markers-709" for this suite. @ 06/08/24 12:19:44.202
• [6.456 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 06/08/24 12:19:44.208
  Jun  8 12:19:44.208: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename containers @ 06/08/24 12:19:44.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:19:44.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:19:44.228
  STEP: Creating a pod to test override arguments @ 06/08/24 12:19:44.23
  STEP: Saw pod success @ 06/08/24 12:19:48.247
  Jun  8 12:19:48.249: INFO: Trying to get logs from node ip-172-31-31-116 pod client-containers-68c79d68-de64-465a-a5ac-002df69b1195 container agnhost-container: <nil>
  STEP: delete the pod @ 06/08/24 12:19:48.255
  Jun  8 12:19:48.269: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3099" for this suite. @ 06/08/24 12:19:48.272
• [4.070 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 06/08/24 12:19:48.278
  Jun  8 12:19:48.278: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename watch @ 06/08/24 12:19:48.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:19:48.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:19:48.296
  STEP: creating a watch on configmaps with label A @ 06/08/24 12:19:48.298
  STEP: creating a watch on configmaps with label B @ 06/08/24 12:19:48.299
  STEP: creating a watch on configmaps with label A or B @ 06/08/24 12:19:48.302
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 06/08/24 12:19:48.303
  Jun  8 12:19:48.306: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5386  cb048f08-c80b-4a42-80e3-81c2254e9538 5621 0 2024-06-08 12:19:48 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-08 12:19:48 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  8 12:19:48.307: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5386  cb048f08-c80b-4a42-80e3-81c2254e9538 5621 0 2024-06-08 12:19:48 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-08 12:19:48 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 06/08/24 12:19:48.307
  Jun  8 12:19:48.314: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5386  cb048f08-c80b-4a42-80e3-81c2254e9538 5622 0 2024-06-08 12:19:48 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-08 12:19:48 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  8 12:19:48.314: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5386  cb048f08-c80b-4a42-80e3-81c2254e9538 5622 0 2024-06-08 12:19:48 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-08 12:19:48 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 06/08/24 12:19:48.314
  Jun  8 12:19:48.319: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5386  cb048f08-c80b-4a42-80e3-81c2254e9538 5623 0 2024-06-08 12:19:48 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-08 12:19:48 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  8 12:19:48.319: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5386  cb048f08-c80b-4a42-80e3-81c2254e9538 5623 0 2024-06-08 12:19:48 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-08 12:19:48 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 06/08/24 12:19:48.319
  Jun  8 12:19:48.324: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5386  cb048f08-c80b-4a42-80e3-81c2254e9538 5624 0 2024-06-08 12:19:48 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-08 12:19:48 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  8 12:19:48.324: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5386  cb048f08-c80b-4a42-80e3-81c2254e9538 5624 0 2024-06-08 12:19:48 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-08 12:19:48 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 06/08/24 12:19:48.324
  Jun  8 12:19:48.327: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5386  080522dc-25bd-4ec5-bfef-e19b9faa77f6 5625 0 2024-06-08 12:19:48 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-08 12:19:48 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  8 12:19:48.327: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5386  080522dc-25bd-4ec5-bfef-e19b9faa77f6 5625 0 2024-06-08 12:19:48 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-08 12:19:48 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 06/08/24 12:19:58.328
  Jun  8 12:19:58.335: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5386  080522dc-25bd-4ec5-bfef-e19b9faa77f6 5676 0 2024-06-08 12:19:48 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-08 12:19:48 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  8 12:19:58.335: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5386  080522dc-25bd-4ec5-bfef-e19b9faa77f6 5676 0 2024-06-08 12:19:48 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-08 12:19:48 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  8 12:20:08.335: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5386" for this suite. @ 06/08/24 12:20:08.339
• [20.068 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 06/08/24 12:20:08.346
  Jun  8 12:20:08.346: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename kubelet-test @ 06/08/24 12:20:08.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:20:08.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:20:08.363
  Jun  8 12:20:10.386: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6239" for this suite. @ 06/08/24 12:20:10.388
• [2.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 06/08/24 12:20:10.396
  Jun  8 12:20:10.396: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename taint-multiple-pods @ 06/08/24 12:20:10.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:20:10.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:20:10.413
  Jun  8 12:20:10.414: INFO: Waiting up to 1m0s for all nodes to be ready
  Jun  8 12:21:10.415: INFO: Waiting for terminating namespaces to be deleted...
  Jun  8 12:21:10.419: INFO: Starting informer...
  STEP: Starting pods... @ 06/08/24 12:21:10.419
  Jun  8 12:21:10.635: INFO: Pod1 is running on ip-172-31-31-116. Tainting Node
  Jun  8 12:21:12.852: INFO: Pod2 is running on ip-172-31-31-116. Tainting Node
  STEP: Trying to apply a taint on the Node @ 06/08/24 12:21:12.852
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/08/24 12:21:12.86
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 06/08/24 12:21:12.862
  Jun  8 12:21:18.607: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  Jun  8 12:21:38.648: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/08/24 12:21:38.661
  Jun  8 12:21:38.663: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-6288" for this suite. @ 06/08/24 12:21:38.666
• [88.278 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 06/08/24 12:21:38.674
  Jun  8 12:21:38.674: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename svcaccounts @ 06/08/24 12:21:38.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:21:38.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:21:38.702
  STEP: creating a ServiceAccount @ 06/08/24 12:21:38.703
  STEP: watching for the ServiceAccount to be added @ 06/08/24 12:21:38.714
  STEP: patching the ServiceAccount @ 06/08/24 12:21:38.715
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 06/08/24 12:21:38.719
  STEP: deleting the ServiceAccount @ 06/08/24 12:21:38.722
  Jun  8 12:21:38.733: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2713" for this suite. @ 06/08/24 12:21:38.737
• [0.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 06/08/24 12:21:38.743
  Jun  8 12:21:38.743: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename cronjob @ 06/08/24 12:21:38.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:21:38.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:21:38.758
  STEP: Creating a cronjob @ 06/08/24 12:21:38.759
  STEP: creating @ 06/08/24 12:21:38.759
  STEP: getting @ 06/08/24 12:21:38.765
  STEP: listing @ 06/08/24 12:21:38.767
  STEP: watching @ 06/08/24 12:21:38.769
  Jun  8 12:21:38.769: INFO: starting watch
  STEP: cluster-wide listing @ 06/08/24 12:21:38.77
  STEP: cluster-wide watching @ 06/08/24 12:21:38.772
  Jun  8 12:21:38.772: INFO: starting watch
  STEP: patching @ 06/08/24 12:21:38.773
  STEP: updating @ 06/08/24 12:21:38.779
  Jun  8 12:21:38.786: INFO: waiting for watch events with expected annotations
  Jun  8 12:21:38.786: INFO: saw patched and updated annotations
  STEP: patching /status @ 06/08/24 12:21:38.786
  STEP: updating /status @ 06/08/24 12:21:38.792
  STEP: get /status @ 06/08/24 12:21:38.797
  STEP: deleting @ 06/08/24 12:21:38.799
  STEP: deleting a collection @ 06/08/24 12:21:38.809
  Jun  8 12:21:38.817: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2516" for this suite. @ 06/08/24 12:21:38.82
• [0.083 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 06/08/24 12:21:38.827
  Jun  8 12:21:38.827: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename runtimeclass @ 06/08/24 12:21:38.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:21:38.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:21:38.846
  STEP: getting /apis @ 06/08/24 12:21:38.848
  STEP: getting /apis/node.k8s.io @ 06/08/24 12:21:38.85
  STEP: getting /apis/node.k8s.io/v1 @ 06/08/24 12:21:38.853
  STEP: creating @ 06/08/24 12:21:38.853
  STEP: watching @ 06/08/24 12:21:38.865
  Jun  8 12:21:38.865: INFO: starting watch
  STEP: getting @ 06/08/24 12:21:38.869
  STEP: listing @ 06/08/24 12:21:38.87
  STEP: patching @ 06/08/24 12:21:38.873
  STEP: updating @ 06/08/24 12:21:38.878
  Jun  8 12:21:38.881: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 06/08/24 12:21:38.881
  STEP: deleting a collection @ 06/08/24 12:21:38.891
  Jun  8 12:21:38.904: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3563" for this suite. @ 06/08/24 12:21:38.906
• [0.093 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 06/08/24 12:21:38.92
  Jun  8 12:21:38.920: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename chunking @ 06/08/24 12:21:38.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:21:38.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:21:38.94
  STEP: creating a large number of resources @ 06/08/24 12:21:38.942
  STEP: retrieving the first page @ 06/08/24 12:21:56.625
  Jun  8 12:21:56.674: INFO: Retrieved 40/40 results with rv 6522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0
  STEP: retrieving the second page until the token expires @ 06/08/24 12:21:56.674
  Jun  8 12:22:16.680: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun  8 12:22:36.679: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun  8 12:22:56.680: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun  8 12:23:16.679: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun  8 12:23:36.681: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun  8 12:23:56.680: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun  8 12:24:16.679: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun  8 12:24:36.680: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun  8 12:24:56.679: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun  8 12:25:16.679: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun  8 12:25:36.680: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun  8 12:25:56.679: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun  8 12:26:16.680: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun  8 12:26:36.680: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun  8 12:26:56.679: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun  8 12:27:16.680: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun  8 12:27:36.679: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun  8 12:27:56.680: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun  8 12:28:16.679: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun  8 12:28:36.679: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun  8 12:28:56.680: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun  8 12:29:16.679: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun  8 12:29:36.680: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun  8 12:29:56.679: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjUyMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun  8 12:30:16.679: INFO: got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  Jun  8 12:30:16.679: INFO: Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 06/08/24 12:30:16.679
  STEP: retrieving all remaining pages @ 06/08/24 12:30:16.683
  Jun  8 12:30:16.686: INFO: Retrieved 40/40 results with rv 7474 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzQ3NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE5XHUwMDAwIn0
  Jun  8 12:30:16.689: INFO: Retrieved 40/40 results with rv 7474 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzQ3NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTU5XHUwMDAwIn0
  Jun  8 12:30:16.692: INFO: Retrieved 40/40 results with rv 7474 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzQ3NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTk5XHUwMDAwIn0
  Jun  8 12:30:16.695: INFO: Retrieved 40/40 results with rv 7474 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzQ3NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM5XHUwMDAwIn0
  Jun  8 12:30:16.697: INFO: Retrieved 40/40 results with rv 7474 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzQ3NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjc5XHUwMDAwIn0
  Jun  8 12:30:16.701: INFO: Retrieved 40/40 results with rv 7474 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzQ3NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzE5XHUwMDAwIn0
  Jun  8 12:30:16.704: INFO: Retrieved 40/40 results with rv 7474 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzQ3NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU5XHUwMDAwIn0
  Jun  8 12:30:16.706: INFO: Retrieved 40/40 results with rv 7474 and continue 
  Jun  8 12:30:16.707: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-5785" for this suite. @ 06/08/24 12:30:16.71
• [517.795 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 06/08/24 12:30:16.715
  Jun  8 12:30:16.715: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/08/24 12:30:16.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:30:16.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:30:16.734
  Jun  8 12:30:16.736: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 06/08/24 12:30:18.15
  Jun  8 12:30:18.150: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=crd-publish-openapi-9509 --namespace=crd-publish-openapi-9509 create -f -'
  Jun  8 12:30:18.213: INFO: stderr: ""
  Jun  8 12:30:18.213: INFO: stdout: "e2e-test-crd-publish-openapi-7307-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Jun  8 12:30:18.213: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=crd-publish-openapi-9509 --namespace=crd-publish-openapi-9509 delete e2e-test-crd-publish-openapi-7307-crds test-cr'
  Jun  8 12:30:18.257: INFO: stderr: ""
  Jun  8 12:30:18.257: INFO: stdout: "e2e-test-crd-publish-openapi-7307-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Jun  8 12:30:18.257: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=crd-publish-openapi-9509 --namespace=crd-publish-openapi-9509 apply -f -'
  Jun  8 12:30:18.308: INFO: stderr: ""
  Jun  8 12:30:18.308: INFO: stdout: "e2e-test-crd-publish-openapi-7307-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Jun  8 12:30:18.308: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=crd-publish-openapi-9509 --namespace=crd-publish-openapi-9509 delete e2e-test-crd-publish-openapi-7307-crds test-cr'
  Jun  8 12:30:18.352: INFO: stderr: ""
  Jun  8 12:30:18.352: INFO: stdout: "e2e-test-crd-publish-openapi-7307-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 06/08/24 12:30:18.352
  Jun  8 12:30:18.352: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=crd-publish-openapi-9509 explain e2e-test-crd-publish-openapi-7307-crds'
  Jun  8 12:30:18.388: INFO: stderr: ""
  Jun  8 12:30:18.388: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-7307-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Jun  8 12:30:19.584: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9509" for this suite. @ 06/08/24 12:30:19.589
• [2.881 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 06/08/24 12:30:19.596
  Jun  8 12:30:19.596: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename replication-controller @ 06/08/24 12:30:19.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:30:19.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:30:19.616
  STEP: creating a ReplicationController @ 06/08/24 12:30:19.622
  STEP: waiting for RC to be added @ 06/08/24 12:30:19.627
  STEP: waiting for available Replicas @ 06/08/24 12:30:19.627
  STEP: patching ReplicationController @ 06/08/24 12:30:21.41
  STEP: waiting for RC to be modified @ 06/08/24 12:30:21.418
  STEP: patching ReplicationController status @ 06/08/24 12:30:21.418
  STEP: waiting for RC to be modified @ 06/08/24 12:30:21.424
  STEP: waiting for available Replicas @ 06/08/24 12:30:21.424
  STEP: fetching ReplicationController status @ 06/08/24 12:30:21.429
  STEP: patching ReplicationController scale @ 06/08/24 12:30:21.432
  STEP: waiting for RC to be modified @ 06/08/24 12:30:21.438
  STEP: waiting for ReplicationController's scale to be the max amount @ 06/08/24 12:30:21.438
  STEP: fetching ReplicationController; ensuring that it's patched @ 06/08/24 12:30:22.965
  STEP: updating ReplicationController status @ 06/08/24 12:30:22.969
  STEP: waiting for RC to be modified @ 06/08/24 12:30:22.975
  STEP: listing all ReplicationControllers @ 06/08/24 12:30:22.975
  STEP: checking that ReplicationController has expected values @ 06/08/24 12:30:22.981
  STEP: deleting ReplicationControllers by collection @ 06/08/24 12:30:22.981
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 06/08/24 12:30:22.99
  Jun  8 12:30:23.035: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0608 12:30:23.035874      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-833" for this suite. @ 06/08/24 12:30:23.038
• [3.448 seconds]
------------------------------
S
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3154
  STEP: Creating a kubernetes client @ 06/08/24 12:30:23.045
  Jun  8 12:30:23.045: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename services @ 06/08/24 12:30:23.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:30:23.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:30:23.062
  STEP: creating an Endpoint @ 06/08/24 12:30:23.066
  STEP: waiting for available Endpoint @ 06/08/24 12:30:23.071
  STEP: listing all Endpoints @ 06/08/24 12:30:23.072
  STEP: updating the Endpoint @ 06/08/24 12:30:23.074
  STEP: fetching the Endpoint @ 06/08/24 12:30:23.079
  STEP: patching the Endpoint @ 06/08/24 12:30:23.082
  STEP: fetching the Endpoint @ 06/08/24 12:30:23.089
  STEP: deleting the Endpoint by Collection @ 06/08/24 12:30:23.091
  STEP: waiting for Endpoint deletion @ 06/08/24 12:30:23.098
  STEP: fetching the Endpoint @ 06/08/24 12:30:23.099
  Jun  8 12:30:23.102: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4809" for this suite. @ 06/08/24 12:30:23.105
• [0.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 06/08/24 12:30:23.112
  Jun  8 12:30:23.112: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename container-probe @ 06/08/24 12:30:23.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:30:23.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:30:23.134
  STEP: Creating pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843 @ 06/08/24 12:30:23.135
  E0608 12:30:24.035994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:30:25.036096      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/08/24 12:30:25.15
  Jun  8 12:30:25.153: INFO: Initial restart count of pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f is 0
  Jun  8 12:30:25.155: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:30:26.036529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:30:27.036854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:30:27.160: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:30:28.036967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:30:29.037072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:30:29.164: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:30:30.037938      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:30:31.038036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:30:31.168: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:30:32.038141      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:30:33.038301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:30:33.171: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:30:34.038436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:30:35.038632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:30:35.175: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:30:36.039239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:30:37.039350      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:30:37.180: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:30:38.039638      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:30:39.039690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:30:39.184: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:30:40.040725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:30:41.040816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:30:41.189: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:30:42.041332      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:30:43.041410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:30:43.193: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:30:44.041530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:30:45.041613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:30:45.196: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:30:46.041669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:30:47.041744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:30:47.200: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:30:48.042536      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:30:49.042620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:30:49.205: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:30:50.043308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:30:51.043397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:30:51.210: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:30:52.044179      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:30:53.044716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:30:53.214: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:30:54.044806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:30:55.045876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:30:55.218: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:30:56.046194      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:30:57.046350      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:30:57.223: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:30:58.046952      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:30:59.047128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:30:59.226: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:31:00.047622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:31:01.047714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:31:01.230: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:31:02.047808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:31:03.048781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:31:03.234: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:31:04.049749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:31:05.049952      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:31:05.238: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:31:06.050542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:31:07.051590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:31:07.244: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:31:08.052583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:31:09.052682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:31:09.248: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:31:10.053356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:31:11.053671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:31:11.252: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:31:12.054399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:31:13.054563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:31:13.257: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:31:14.054687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:31:15.054794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:31:15.261: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:31:16.055675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:31:17.055764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:31:17.265: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:31:18.056443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:31:19.056541      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:31:19.269: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:31:20.056704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:31:21.056942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:31:21.273: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:31:22.057994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:31:23.058084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:31:23.277: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:31:24.058914      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:31:25.059105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:31:25.283: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:31:26.060141      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:31:27.060232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:31:27.287: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:31:28.060728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:31:29.060937      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:31:29.293: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:31:30.061063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:31:31.061158      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:31:31.296: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:31:32.061896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:31:33.062537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:31:33.301: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:31:34.063566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:31:35.063759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:31:35.306: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:31:36.064176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:31:37.064269      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:31:37.310: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:31:38.064445      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:31:39.064534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:31:39.314: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:31:40.064655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:31:41.064895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:31:41.318: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:31:42.065347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:31:43.065449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:31:43.322: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:31:44.065732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:31:45.066014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:31:45.326: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:31:46.066881      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:31:47.067184      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:31:47.330: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:31:48.067625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:31:49.067723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:31:49.334: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:31:50.067824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:31:51.067924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:31:51.339: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:31:52.068406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:31:53.068813      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:31:53.343: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:31:54.069590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:31:55.069757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:31:55.347: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:31:56.070604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:31:57.070731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:31:57.352: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:31:58.071124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:31:59.071228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:31:59.357: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:32:00.071975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:32:01.072077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:32:01.361: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:32:02.073062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:32:03.073234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:32:03.367: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:32:04.073873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:32:05.074057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:32:05.370: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:32:06.074558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:32:07.075520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:32:07.376: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:32:08.075625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:32:09.076682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:32:09.380: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:32:10.077673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:32:11.077850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:32:11.384: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:32:12.078853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:32:13.078998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:32:13.389: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:32:14.079168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:32:15.079350      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:32:15.393: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:32:16.080060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:32:17.080776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:32:17.396: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:32:18.081805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:32:19.081901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:32:19.401: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:32:20.082424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:32:21.082342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:32:21.406: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:32:22.082992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:32:23.083324      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:32:23.410: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:32:24.083625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:32:25.084721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:32:25.414: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:32:26.084806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:32:27.085092      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:32:27.419: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:32:28.085771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:32:29.086029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:32:29.422: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:32:30.086186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:32:31.086388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:32:31.426: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:32:32.087211      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:32:33.087395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:32:33.430: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:32:34.088378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:32:35.088500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:32:35.434: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:32:36.089102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:32:37.089187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:32:37.439: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:32:38.089297      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:32:39.089496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:32:39.443: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:32:40.089660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:32:41.089864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:32:41.447: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:32:42.090729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:32:43.091001      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:32:43.452: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:32:44.091973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:32:45.092063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:32:45.457: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:32:46.093087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:32:47.093456      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:32:47.461: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:32:48.094542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:32:49.095615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:32:49.465: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:32:50.095708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:32:51.095812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:32:51.470: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:32:52.096462      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:32:53.096569      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:32:53.474: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:32:54.096635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:32:55.096819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:32:55.479: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:32:56.096916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:32:57.097006      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:32:57.484: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:32:58.097804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:32:59.098046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:32:59.487: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:33:00.098375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:33:01.098569      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:33:01.491: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:33:02.098760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:33:03.098970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:33:03.495: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:33:04.099070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:33:05.099260      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:33:05.499: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:33:06.099364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:33:07.099614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:33:07.504: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:33:08.100278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:33:09.100726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:33:09.508: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:33:10.100936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:33:11.101028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:33:11.513: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:33:12.101984      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:33:13.102121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:33:13.517: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:33:14.102241      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:33:15.102336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:33:15.521: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:33:16.102907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:33:17.103269      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:33:17.525: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:33:18.103366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:33:19.103605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:33:19.530: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:33:20.103712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:33:21.103843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:33:21.534: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:33:22.104705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:33:23.105409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:33:23.538: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:33:24.105507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:33:25.105684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:33:25.542: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:33:26.106605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:33:27.106704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:33:27.546: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:33:28.107582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:33:29.107699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:33:29.551: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:33:30.108695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:33:31.108922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:33:31.555: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:33:32.109715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:33:33.109858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:33:33.559: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:33:34.110776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:33:35.110966      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:33:35.563: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:33:36.111342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:33:37.111970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:33:37.568: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:33:38.112762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:33:39.112837      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:33:39.571: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:33:40.112934      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:33:41.113020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:33:41.577: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:33:42.113596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:33:43.113883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:33:43.580: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:33:44.113982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:33:45.114426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:33:45.586: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:33:46.114905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:33:47.114991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:33:47.589: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:33:48.115544      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:33:49.115665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:33:49.593: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:33:50.116609      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:33:51.116717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:33:51.598: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:33:52.116815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:33:53.116911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:33:53.603: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:33:54.117860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:33:55.118080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:33:55.606: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:33:56.118583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:33:57.118700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:33:57.611: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:33:58.118815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:33:59.118928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:33:59.614: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:34:00.119173      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:34:01.119376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:34:01.618: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:34:02.120193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:34:03.120696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:34:03.623: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:34:04.121408      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:34:05.121508      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:34:05.627: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:34:06.121788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:34:07.121974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:34:07.631: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:34:08.122855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:34:09.123603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:34:09.635: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:34:10.123703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:34:11.124722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:34:11.640: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:34:12.124806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:34:13.124932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:34:13.644: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:34:14.125277      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:34:15.125376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:34:15.648: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:34:16.126085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:34:17.126383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:34:17.653: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:34:18.126403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:34:19.126491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:34:19.657: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:34:20.126926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:34:21.127172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:34:21.661: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:34:22.127955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:34:23.128032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:34:23.665: INFO: Get pod test-webserver-4c061092-1c05-4a69-a899-4478fd99329f in namespace container-probe-2843
  E0608 12:34:24.128267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:34:25.128723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 06/08/24 12:34:25.666
  Jun  8 12:34:25.677: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2843" for this suite. @ 06/08/24 12:34:25.68
• [242.576 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 06/08/24 12:34:25.688
  Jun  8 12:34:25.688: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename emptydir @ 06/08/24 12:34:25.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:34:25.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:34:25.704
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 06/08/24 12:34:25.705
  E0608 12:34:26.129703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:34:27.129811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:34:28.130482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:34:29.130733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 12:34:29.723
  Jun  8 12:34:29.726: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-f60abf57-a216-4281-91ab-384e0647bae4 container test-container: <nil>
  STEP: delete the pod @ 06/08/24 12:34:29.739
  Jun  8 12:34:29.751: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3350" for this suite. @ 06/08/24 12:34:29.754
• [4.070 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 06/08/24 12:34:29.759
  Jun  8 12:34:29.759: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename dns @ 06/08/24 12:34:29.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:34:29.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:34:29.776
  STEP: Creating a test externalName service @ 06/08/24 12:34:29.777
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5694.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-5694.svc.cluster.local; sleep 1; done
   @ 06/08/24 12:34:29.782
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5694.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-5694.svc.cluster.local; sleep 1; done
   @ 06/08/24 12:34:29.782
  STEP: creating a pod to probe DNS @ 06/08/24 12:34:29.783
  STEP: submitting the pod to kubernetes @ 06/08/24 12:34:29.783
  E0608 12:34:30.130804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:34:31.130924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:34:32.130973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:34:33.131217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:34:34.131300      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:34:35.131449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/08/24 12:34:35.804
  STEP: looking for the results for each expected name from probers @ 06/08/24 12:34:35.807
  Jun  8 12:34:35.814: INFO: DNS probes using dns-test-5fcb46bd-286b-48a3-9f93-06bfb45f2fd9 succeeded

  STEP: changing the externalName to bar.example.com @ 06/08/24 12:34:35.814
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5694.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-5694.svc.cluster.local; sleep 1; done
   @ 06/08/24 12:34:35.82
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5694.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-5694.svc.cluster.local; sleep 1; done
   @ 06/08/24 12:34:35.82
  STEP: creating a second pod to probe DNS @ 06/08/24 12:34:35.82
  STEP: submitting the pod to kubernetes @ 06/08/24 12:34:35.82
  E0608 12:34:36.132529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:34:37.132663      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:34:38.132811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:34:39.132853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:34:40.133526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:34:41.133568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/08/24 12:34:41.841
  STEP: looking for the results for each expected name from probers @ 06/08/24 12:34:41.845
  Jun  8 12:34:41.848: INFO: File wheezy_udp@dns-test-service-3.dns-5694.svc.cluster.local from pod  dns-5694/dns-test-1a19e3ba-832b-433d-a978-aacb916bfb39 contains '' instead of 'bar.example.com.'
  Jun  8 12:34:41.851: INFO: Lookups using dns-5694/dns-test-1a19e3ba-832b-433d-a978-aacb916bfb39 failed for: [wheezy_udp@dns-test-service-3.dns-5694.svc.cluster.local]

  Jun  8 12:34:41.870: INFO: Pod client logs for webserver: 
  Jun  8 12:34:41.875: INFO: Pod client logs for querier: 
  Jun  8 12:34:41.880: INFO: Pod client logs for jessie-querier: 
  E0608 12:34:42.134501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:34:43.134615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:34:44.134707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:34:45.135020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:34:46.136058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:34:46.852: INFO: DNS probes using dns-test-1a19e3ba-832b-433d-a978-aacb916bfb39 succeeded

  STEP: changing the service to type=ClusterIP @ 06/08/24 12:34:46.852
  W0608 12:34:46.864911      19 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5694.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-5694.svc.cluster.local; sleep 1; done
   @ 06/08/24 12:34:46.865
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5694.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-5694.svc.cluster.local; sleep 1; done
   @ 06/08/24 12:34:46.865
  STEP: creating a third pod to probe DNS @ 06/08/24 12:34:46.865
  STEP: submitting the pod to kubernetes @ 06/08/24 12:34:46.867
  E0608 12:34:47.136141      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:34:48.136721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/08/24 12:34:48.886
  STEP: looking for the results for each expected name from probers @ 06/08/24 12:34:48.889
  Jun  8 12:34:48.896: INFO: DNS probes using dns-test-a537d74c-1328-43a9-a242-a3cd162e8214 succeeded

  STEP: deleting the pod @ 06/08/24 12:34:48.897
  STEP: deleting the pod @ 06/08/24 12:34:48.906
  STEP: deleting the pod @ 06/08/24 12:34:48.923
  STEP: deleting the test externalName service @ 06/08/24 12:34:48.934
  Jun  8 12:34:48.949: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5694" for this suite. @ 06/08/24 12:34:48.952
• [19.198 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 06/08/24 12:34:48.957
  Jun  8 12:34:48.957: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename emptydir @ 06/08/24 12:34:48.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:34:48.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:34:48.98
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 06/08/24 12:34:48.982
  E0608 12:34:49.136756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:34:50.137020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:34:51.137405      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:34:52.137553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 12:34:52.998
  Jun  8 12:34:53.001: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-b2ff0f9c-4055-4f30-bf1c-c72dd87bea45 container test-container: <nil>
  STEP: delete the pod @ 06/08/24 12:34:53.007
  Jun  8 12:34:53.019: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6316" for this suite. @ 06/08/24 12:34:53.021
• [4.070 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 06/08/24 12:34:53.028
  Jun  8 12:34:53.028: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename projected @ 06/08/24 12:34:53.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:34:53.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:34:53.047
  STEP: Creating a pod to test downward API volume plugin @ 06/08/24 12:34:53.049
  E0608 12:34:53.138584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:34:54.138697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 12:34:55.062
  Jun  8 12:34:55.065: INFO: Trying to get logs from node ip-172-31-31-116 pod downwardapi-volume-967140d5-89d5-4418-8a1c-6afd5bf704f4 container client-container: <nil>
  STEP: delete the pod @ 06/08/24 12:34:55.07
  Jun  8 12:34:55.083: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3664" for this suite. @ 06/08/24 12:34:55.086
• [2.064 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 06/08/24 12:34:55.092
  Jun  8 12:34:55.092: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename var-expansion @ 06/08/24 12:34:55.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:34:55.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:34:55.111
  STEP: Creating a pod to test substitution in volume subpath @ 06/08/24 12:34:55.112
  E0608 12:34:55.139714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:34:56.140502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 12:34:57.125
  Jun  8 12:34:57.128: INFO: Trying to get logs from node ip-172-31-31-116 pod var-expansion-af594581-04d8-4720-8a4a-c86dc7074d2d container dapi-container: <nil>
  STEP: delete the pod @ 06/08/24 12:34:57.134
  E0608 12:34:57.140978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:34:57.148: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6629" for this suite. @ 06/08/24 12:34:57.151
• [2.066 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 06/08/24 12:34:57.158
  Jun  8 12:34:57.158: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename emptydir @ 06/08/24 12:34:57.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:34:57.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:34:57.174
  STEP: Creating Pod @ 06/08/24 12:34:57.179
  E0608 12:34:58.141836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:34:59.142007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 06/08/24 12:34:59.194
  Jun  8 12:34:59.194: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-7803 PodName:pod-sharedvolume-d7d1da76-9f05-4979-947a-fee1bdf135dd ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  8 12:34:59.194: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  Jun  8 12:34:59.194: INFO: ExecWithOptions: Clientset creation
  Jun  8 12:34:59.194: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-7803/pods/pod-sharedvolume-d7d1da76-9f05-4979-947a-fee1bdf135dd/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Jun  8 12:34:59.247: INFO: Exec stderr: ""
  Jun  8 12:34:59.247: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7803" for this suite. @ 06/08/24 12:34:59.25
• [2.098 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 06/08/24 12:34:59.256
  Jun  8 12:34:59.256: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename pod-network-test @ 06/08/24 12:34:59.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:34:59.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:34:59.275
  STEP: Performing setup for networking test in namespace pod-network-test-21 @ 06/08/24 12:34:59.276
  STEP: creating a selector @ 06/08/24 12:34:59.276
  STEP: Creating the service pods in kubernetes @ 06/08/24 12:34:59.276
  Jun  8 12:34:59.276: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0608 12:35:00.142204      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:01.142278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:02.142673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:03.142728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:04.143106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:05.143360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:06.144242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:07.144457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:08.144582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:09.144657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:10.144747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:11.144852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:12.145029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:13.145108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:14.146026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:15.146118      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:16.147099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:17.147446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:18.147653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:19.147737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:20.147867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:21.147951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 06/08/24 12:35:21.37
  E0608 12:35:22.148202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:23.149083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:35:23.385: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jun  8 12:35:23.385: INFO: Breadth first check of 192.168.81.152 on host 172.31.31.116...
  Jun  8 12:35:23.387: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.81.153:9080/dial?request=hostname&protocol=http&host=192.168.81.152&port=8083&tries=1'] Namespace:pod-network-test-21 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  8 12:35:23.387: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  Jun  8 12:35:23.387: INFO: ExecWithOptions: Clientset creation
  Jun  8 12:35:23.387: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-21/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.81.153%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.81.152%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun  8 12:35:23.437: INFO: Waiting for responses: map[]
  Jun  8 12:35:23.437: INFO: reached 192.168.81.152 after 0/1 tries
  Jun  8 12:35:23.437: INFO: Breadth first check of 192.168.165.6 on host 172.31.42.99...
  Jun  8 12:35:23.440: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.81.153:9080/dial?request=hostname&protocol=http&host=192.168.165.6&port=8083&tries=1'] Namespace:pod-network-test-21 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  8 12:35:23.440: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  Jun  8 12:35:23.441: INFO: ExecWithOptions: Clientset creation
  Jun  8 12:35:23.441: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-21/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.81.153%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.165.6%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun  8 12:35:23.487: INFO: Waiting for responses: map[]
  Jun  8 12:35:23.487: INFO: reached 192.168.165.6 after 0/1 tries
  Jun  8 12:35:23.487: INFO: Breadth first check of 192.168.82.137 on host 172.31.74.243...
  Jun  8 12:35:23.491: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.81.153:9080/dial?request=hostname&protocol=http&host=192.168.82.137&port=8083&tries=1'] Namespace:pod-network-test-21 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  8 12:35:23.491: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  Jun  8 12:35:23.491: INFO: ExecWithOptions: Clientset creation
  Jun  8 12:35:23.491: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-21/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.81.153%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.82.137%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun  8 12:35:23.546: INFO: Waiting for responses: map[]
  Jun  8 12:35:23.546: INFO: reached 192.168.82.137 after 0/1 tries
  Jun  8 12:35:23.546: INFO: Going to retry 0 out of 3 pods....
  Jun  8 12:35:23.546: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-21" for this suite. @ 06/08/24 12:35:23.551
• [24.299 seconds]
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 06/08/24 12:35:23.555
  Jun  8 12:35:23.555: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename runtimeclass @ 06/08/24 12:35:23.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:35:23.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:35:23.577
  E0608 12:35:24.149172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:25.149268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:35:25.603: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6329" for this suite. @ 06/08/24 12:35:25.606
• [2.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 06/08/24 12:35:25.61
  Jun  8 12:35:25.610: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename svcaccounts @ 06/08/24 12:35:25.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:35:25.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:35:25.655
  Jun  8 12:35:25.667: INFO: created pod
  E0608 12:35:26.149481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:27.149568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:28.149677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:29.149791      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 12:35:29.677
  E0608 12:35:30.149866      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:31.149962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:32.150038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:33.150140      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:34.150244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:35.150449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:36.150502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:37.150632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:38.150839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:39.151099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:40.151209      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:41.151331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:42.151387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:43.151585      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:44.151650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:45.151724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:46.152043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:47.152124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:48.152722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:49.152807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:50.152986      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:51.153085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:52.153501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:53.153721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:54.154470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:55.155427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:56.155609      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:57.155658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:58.155834      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:35:59.156773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:35:59.677: INFO: polling logs
  Jun  8 12:35:59.685: INFO: Pod logs: 
  I0608 12:35:26.243493       1 log.go:245] OK: Got token
  I0608 12:35:26.243538       1 log.go:245] validating with in-cluster discovery
  I0608 12:35:26.243759       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I0608 12:35:26.243796       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-9731:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000013130), NotBefore:(*jwt.NumericDate)(0xc000013218), IssuedAt:(*jwt.NumericDate)(0xc000013140), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-9731", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"f9fe32fa-5f55-4421-b9a6-3f4532062f87"}}}
  I0608 12:35:26.251591       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0608 12:35:26.255018       1 log.go:245] OK: Validated signature on JWT
  I0608 12:35:26.255125       1 log.go:245] OK: Got valid claims from token!
  I0608 12:35:26.255145       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-9731:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0001287b0), NotBefore:(*jwt.NumericDate)(0xc0001287d8), IssuedAt:(*jwt.NumericDate)(0xc0001287b8), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-9731", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"f9fe32fa-5f55-4421-b9a6-3f4532062f87"}}}

  Jun  8 12:35:59.685: INFO: completed pod
  Jun  8 12:35:59.693: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9731" for this suite. @ 06/08/24 12:35:59.696
• [34.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 06/08/24 12:35:59.702
  Jun  8 12:35:59.702: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename webhook @ 06/08/24 12:35:59.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:35:59.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:35:59.719
  STEP: Setting up server cert @ 06/08/24 12:35:59.742
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/08/24 12:35:59.949
  STEP: Deploying the webhook pod @ 06/08/24 12:35:59.958
  STEP: Wait for the deployment to be ready @ 06/08/24 12:35:59.969
  Jun  8 12:35:59.976: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0608 12:36:00.157163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:36:01.157316      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/08/24 12:36:01.983
  STEP: Verifying the service has paired with the endpoint @ 06/08/24 12:36:01.991
  E0608 12:36:02.157721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:36:02.991: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 06/08/24 12:36:02.998
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 06/08/24 12:36:03.01
  STEP: Creating a dummy validating-webhook-configuration object @ 06/08/24 12:36:03.021
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 06/08/24 12:36:03.028
  STEP: Creating a dummy mutating-webhook-configuration object @ 06/08/24 12:36:03.033
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 06/08/24 12:36:03.04
  Jun  8 12:36:03.086: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6152" for this suite. @ 06/08/24 12:36:03.091
  STEP: Destroying namespace "webhook-markers-9250" for this suite. @ 06/08/24 12:36:03.097
• [3.401 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 06/08/24 12:36:03.103
  Jun  8 12:36:03.103: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename kubelet-test @ 06/08/24 12:36:03.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:36:03.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:36:03.13
  STEP: Waiting for pod completion @ 06/08/24 12:36:03.138
  E0608 12:36:03.158150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:36:04.158386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:36:05.153: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9337" for this suite. @ 06/08/24 12:36:05.156
  E0608 12:36:05.158686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
• [2.060 seconds]
------------------------------
SS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 06/08/24 12:36:05.163
  Jun  8 12:36:05.163: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename containers @ 06/08/24 12:36:05.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:36:05.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:36:05.181
  STEP: Creating a pod to test override command @ 06/08/24 12:36:05.183
  E0608 12:36:06.159352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:36:07.159446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 12:36:07.194
  Jun  8 12:36:07.197: INFO: Trying to get logs from node ip-172-31-31-116 pod client-containers-66a36ba2-e248-43cc-a426-c6d0ad3bff8b container agnhost-container: <nil>
  STEP: delete the pod @ 06/08/24 12:36:07.203
  Jun  8 12:36:07.215: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1433" for this suite. @ 06/08/24 12:36:07.218
• [2.059 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 06/08/24 12:36:07.222
  Jun  8 12:36:07.222: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename namespaces @ 06/08/24 12:36:07.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:36:07.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:36:07.24
  STEP: Creating namespace "e2e-ns-pzqw5" @ 06/08/24 12:36:07.242
  Jun  8 12:36:07.257: INFO: Namespace "e2e-ns-pzqw5-5143" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-pzqw5-5143" @ 06/08/24 12:36:07.257
  Jun  8 12:36:07.263: INFO: Namespace "e2e-ns-pzqw5-5143" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-pzqw5-5143" @ 06/08/24 12:36:07.263
  Jun  8 12:36:07.269: INFO: Namespace "e2e-ns-pzqw5-5143" has []v1.FinalizerName{"kubernetes"}
  Jun  8 12:36:07.269: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7287" for this suite. @ 06/08/24 12:36:07.272
  STEP: Destroying namespace "e2e-ns-pzqw5-5143" for this suite. @ 06/08/24 12:36:07.278
• [0.063 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 06/08/24 12:36:07.285
  Jun  8 12:36:07.285: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename projected @ 06/08/24 12:36:07.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:36:07.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:36:07.302
  STEP: Creating a pod to test downward API volume plugin @ 06/08/24 12:36:07.303
  E0608 12:36:08.159668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:36:09.159716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 12:36:09.318
  Jun  8 12:36:09.320: INFO: Trying to get logs from node ip-172-31-31-116 pod downwardapi-volume-abbae584-e964-4e0c-b3b8-fd5550092f72 container client-container: <nil>
  STEP: delete the pod @ 06/08/24 12:36:09.325
  Jun  8 12:36:09.337: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1744" for this suite. @ 06/08/24 12:36:09.345
• [2.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 06/08/24 12:36:09.356
  Jun  8 12:36:09.356: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename projected @ 06/08/24 12:36:09.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:36:09.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:36:09.376
  STEP: Creating projection with secret that has name projected-secret-test-map-d5d86d6e-fc6f-4c48-9ef3-a17ca6d197ec @ 06/08/24 12:36:09.377
  STEP: Creating a pod to test consume secrets @ 06/08/24 12:36:09.381
  E0608 12:36:10.160702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:36:11.160802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:36:12.160891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:36:13.161001      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 12:36:13.397
  Jun  8 12:36:13.400: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-projected-secrets-309deaaa-9545-4698-8ce6-48b6ca994c55 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/08/24 12:36:13.405
  Jun  8 12:36:13.419: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2989" for this suite. @ 06/08/24 12:36:13.421
• [4.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 06/08/24 12:36:13.427
  Jun  8 12:36:13.427: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename gc @ 06/08/24 12:36:13.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:36:13.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:36:13.446
  STEP: create the deployment @ 06/08/24 12:36:13.448
  W0608 12:36:13.453178      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 06/08/24 12:36:13.453
  STEP: delete the deployment @ 06/08/24 12:36:13.959
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 06/08/24 12:36:13.967
  E0608 12:36:14.162019      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 06/08/24 12:36:14.481
  W0608 12:36:14.484847      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jun  8 12:36:14.484: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun  8 12:36:14.484: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-78" for this suite. @ 06/08/24 12:36:14.487
• [1.066 seconds]
------------------------------
S
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:94
  STEP: Creating a kubernetes client @ 06/08/24 12:36:14.494
  Jun  8 12:36:14.494: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename configmap @ 06/08/24 12:36:14.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:36:14.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:36:14.512
  STEP: Creating configMap configmap-1915/configmap-test-9577e3f1-7937-4f8a-891b-a1add1e54681 @ 06/08/24 12:36:14.513
  STEP: Creating a pod to test consume configMaps @ 06/08/24 12:36:14.517
  E0608 12:36:15.162126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:36:16.163100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:36:17.163208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:36:18.163397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 12:36:18.536
  Jun  8 12:36:18.538: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-configmaps-f9090782-f06c-4cab-81e3-4dc0d0113ef8 container env-test: <nil>
  STEP: delete the pod @ 06/08/24 12:36:18.544
  Jun  8 12:36:18.563: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1915" for this suite. @ 06/08/24 12:36:18.565
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 06/08/24 12:36:18.572
  Jun  8 12:36:18.572: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename dns @ 06/08/24 12:36:18.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:36:18.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:36:18.589
  STEP: Creating a test headless service @ 06/08/24 12:36:18.59
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2520.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-2520.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2520.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2520.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-2520.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-2520.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-2520.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-2520.svc.cluster.local;sleep 1; done
   @ 06/08/24 12:36:18.595
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2520.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-2520.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2520.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-2520.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-2520.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-2520.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-2520.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-2520.svc.cluster.local;sleep 1; done
   @ 06/08/24 12:36:18.595
  STEP: creating a pod to probe DNS @ 06/08/24 12:36:18.595
  STEP: submitting the pod to kubernetes @ 06/08/24 12:36:18.595
  E0608 12:36:19.163451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:36:20.163646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/08/24 12:36:20.613
  STEP: looking for the results for each expected name from probers @ 06/08/24 12:36:20.616
  Jun  8 12:36:20.620: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-2520.svc.cluster.local from pod dns-2520/dns-test-085786b1-81dc-4329-b353-9763c443ae4f: the server could not find the requested resource (get pods dns-test-085786b1-81dc-4329-b353-9763c443ae4f)
  Jun  8 12:36:20.623: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2520.svc.cluster.local from pod dns-2520/dns-test-085786b1-81dc-4329-b353-9763c443ae4f: the server could not find the requested resource (get pods dns-test-085786b1-81dc-4329-b353-9763c443ae4f)
  Jun  8 12:36:20.625: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-2520.svc.cluster.local from pod dns-2520/dns-test-085786b1-81dc-4329-b353-9763c443ae4f: the server could not find the requested resource (get pods dns-test-085786b1-81dc-4329-b353-9763c443ae4f)
  Jun  8 12:36:20.628: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-2520.svc.cluster.local from pod dns-2520/dns-test-085786b1-81dc-4329-b353-9763c443ae4f: the server could not find the requested resource (get pods dns-test-085786b1-81dc-4329-b353-9763c443ae4f)
  Jun  8 12:36:20.632: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2520.svc.cluster.local from pod dns-2520/dns-test-085786b1-81dc-4329-b353-9763c443ae4f: the server could not find the requested resource (get pods dns-test-085786b1-81dc-4329-b353-9763c443ae4f)
  Jun  8 12:36:20.634: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2520.svc.cluster.local from pod dns-2520/dns-test-085786b1-81dc-4329-b353-9763c443ae4f: the server could not find the requested resource (get pods dns-test-085786b1-81dc-4329-b353-9763c443ae4f)
  Jun  8 12:36:20.637: INFO: Unable to read jessie_udp@dns-test-service-2.dns-2520.svc.cluster.local from pod dns-2520/dns-test-085786b1-81dc-4329-b353-9763c443ae4f: the server could not find the requested resource (get pods dns-test-085786b1-81dc-4329-b353-9763c443ae4f)
  Jun  8 12:36:20.641: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-2520.svc.cluster.local from pod dns-2520/dns-test-085786b1-81dc-4329-b353-9763c443ae4f: the server could not find the requested resource (get pods dns-test-085786b1-81dc-4329-b353-9763c443ae4f)
  Jun  8 12:36:20.641: INFO: Lookups using dns-2520/dns-test-085786b1-81dc-4329-b353-9763c443ae4f failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-2520.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2520.svc.cluster.local wheezy_udp@dns-test-service-2.dns-2520.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-2520.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2520.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2520.svc.cluster.local jessie_udp@dns-test-service-2.dns-2520.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2520.svc.cluster.local]

  Jun  8 12:36:20.646: INFO: Pod client logs for webserver: 
  Jun  8 12:36:20.651: INFO: Pod client logs for querier: 
  Jun  8 12:36:20.655: INFO: Pod client logs for jessie-querier: 
  E0608 12:36:21.163862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:36:22.163977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:36:23.164231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:36:24.165278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:36:25.165360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:36:25.643: INFO: DNS probes using dns-2520/dns-test-085786b1-81dc-4329-b353-9763c443ae4f succeeded

  STEP: deleting the pod @ 06/08/24 12:36:25.643
  STEP: deleting the test headless service @ 06/08/24 12:36:25.658
  Jun  8 12:36:25.673: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2520" for this suite. @ 06/08/24 12:36:25.676
• [7.109 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 06/08/24 12:36:25.681
  Jun  8 12:36:25.681: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename gc @ 06/08/24 12:36:25.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:36:25.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:36:25.699
  STEP: create the rc1 @ 06/08/24 12:36:25.703
  STEP: create the rc2 @ 06/08/24 12:36:25.709
  E0608 12:36:26.165603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:36:27.165914      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:36:28.167713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:36:29.168221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:36:30.170511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:36:31.176876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 06/08/24 12:36:31.717
  STEP: delete the rc simpletest-rc-to-be-deleted @ 06/08/24 12:36:32.1
  STEP: wait for the rc to be deleted @ 06/08/24 12:36:32.109
  E0608 12:36:32.177624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:36:33.183731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:36:34.184714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:36:35.184912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:36:36.186693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:36:37.120: INFO: 75 pods remaining
  Jun  8 12:36:37.120: INFO: 75 pods has nil DeletionTimestamp
  Jun  8 12:36:37.120: INFO: 
  E0608 12:36:37.186809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:36:38.186949      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:36:39.186981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:36:40.187183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:36:41.187416      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 06/08/24 12:36:42.116
  W0608 12:36:42.121541      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jun  8 12:36:42.121: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun  8 12:36:42.121: INFO: Deleting pod "simpletest-rc-to-be-deleted-2ln29" in namespace "gc-6927"
  Jun  8 12:36:42.135: INFO: Deleting pod "simpletest-rc-to-be-deleted-2nszd" in namespace "gc-6927"
  Jun  8 12:36:42.148: INFO: Deleting pod "simpletest-rc-to-be-deleted-2rn4c" in namespace "gc-6927"
  Jun  8 12:36:42.162: INFO: Deleting pod "simpletest-rc-to-be-deleted-45xxk" in namespace "gc-6927"
  Jun  8 12:36:42.174: INFO: Deleting pod "simpletest-rc-to-be-deleted-4mc22" in namespace "gc-6927"
  Jun  8 12:36:42.183: INFO: Deleting pod "simpletest-rc-to-be-deleted-4t8v4" in namespace "gc-6927"
  E0608 12:36:42.187402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:36:42.198: INFO: Deleting pod "simpletest-rc-to-be-deleted-4xs2b" in namespace "gc-6927"
  Jun  8 12:36:42.214: INFO: Deleting pod "simpletest-rc-to-be-deleted-57tvd" in namespace "gc-6927"
  Jun  8 12:36:42.226: INFO: Deleting pod "simpletest-rc-to-be-deleted-5ct97" in namespace "gc-6927"
  Jun  8 12:36:42.236: INFO: Deleting pod "simpletest-rc-to-be-deleted-5g8zt" in namespace "gc-6927"
  Jun  8 12:36:42.246: INFO: Deleting pod "simpletest-rc-to-be-deleted-5gdt2" in namespace "gc-6927"
  Jun  8 12:36:42.260: INFO: Deleting pod "simpletest-rc-to-be-deleted-64tzp" in namespace "gc-6927"
  Jun  8 12:36:42.274: INFO: Deleting pod "simpletest-rc-to-be-deleted-67v6f" in namespace "gc-6927"
  Jun  8 12:36:42.287: INFO: Deleting pod "simpletest-rc-to-be-deleted-6jv8z" in namespace "gc-6927"
  Jun  8 12:36:42.299: INFO: Deleting pod "simpletest-rc-to-be-deleted-6mmqz" in namespace "gc-6927"
  Jun  8 12:36:42.308: INFO: Deleting pod "simpletest-rc-to-be-deleted-6ngtb" in namespace "gc-6927"
  Jun  8 12:36:42.319: INFO: Deleting pod "simpletest-rc-to-be-deleted-6nm75" in namespace "gc-6927"
  Jun  8 12:36:42.332: INFO: Deleting pod "simpletest-rc-to-be-deleted-6vdxm" in namespace "gc-6927"
  Jun  8 12:36:42.347: INFO: Deleting pod "simpletest-rc-to-be-deleted-6xd8q" in namespace "gc-6927"
  Jun  8 12:36:42.362: INFO: Deleting pod "simpletest-rc-to-be-deleted-6zv7m" in namespace "gc-6927"
  Jun  8 12:36:42.382: INFO: Deleting pod "simpletest-rc-to-be-deleted-7bhf5" in namespace "gc-6927"
  Jun  8 12:36:42.391: INFO: Deleting pod "simpletest-rc-to-be-deleted-7v67q" in namespace "gc-6927"
  Jun  8 12:36:42.410: INFO: Deleting pod "simpletest-rc-to-be-deleted-88j2n" in namespace "gc-6927"
  Jun  8 12:36:42.436: INFO: Deleting pod "simpletest-rc-to-be-deleted-8g4xn" in namespace "gc-6927"
  Jun  8 12:36:42.449: INFO: Deleting pod "simpletest-rc-to-be-deleted-8ln2s" in namespace "gc-6927"
  Jun  8 12:36:42.461: INFO: Deleting pod "simpletest-rc-to-be-deleted-96vrh" in namespace "gc-6927"
  Jun  8 12:36:42.474: INFO: Deleting pod "simpletest-rc-to-be-deleted-996v9" in namespace "gc-6927"
  Jun  8 12:36:42.487: INFO: Deleting pod "simpletest-rc-to-be-deleted-99q2x" in namespace "gc-6927"
  Jun  8 12:36:42.502: INFO: Deleting pod "simpletest-rc-to-be-deleted-9bcc2" in namespace "gc-6927"
  Jun  8 12:36:42.513: INFO: Deleting pod "simpletest-rc-to-be-deleted-9j9n9" in namespace "gc-6927"
  Jun  8 12:36:42.525: INFO: Deleting pod "simpletest-rc-to-be-deleted-9jjd2" in namespace "gc-6927"
  Jun  8 12:36:42.536: INFO: Deleting pod "simpletest-rc-to-be-deleted-9tq8g" in namespace "gc-6927"
  Jun  8 12:36:42.547: INFO: Deleting pod "simpletest-rc-to-be-deleted-b44gf" in namespace "gc-6927"
  Jun  8 12:36:42.556: INFO: Deleting pod "simpletest-rc-to-be-deleted-bjbh7" in namespace "gc-6927"
  Jun  8 12:36:42.578: INFO: Deleting pod "simpletest-rc-to-be-deleted-bn9zk" in namespace "gc-6927"
  Jun  8 12:36:42.591: INFO: Deleting pod "simpletest-rc-to-be-deleted-chgvq" in namespace "gc-6927"
  Jun  8 12:36:42.610: INFO: Deleting pod "simpletest-rc-to-be-deleted-cn4qp" in namespace "gc-6927"
  Jun  8 12:36:42.623: INFO: Deleting pod "simpletest-rc-to-be-deleted-cwd7n" in namespace "gc-6927"
  Jun  8 12:36:42.636: INFO: Deleting pod "simpletest-rc-to-be-deleted-cwkhc" in namespace "gc-6927"
  Jun  8 12:36:42.649: INFO: Deleting pod "simpletest-rc-to-be-deleted-czsfb" in namespace "gc-6927"
  Jun  8 12:36:42.669: INFO: Deleting pod "simpletest-rc-to-be-deleted-d74h8" in namespace "gc-6927"
  Jun  8 12:36:42.685: INFO: Deleting pod "simpletest-rc-to-be-deleted-d7f24" in namespace "gc-6927"
  Jun  8 12:36:42.702: INFO: Deleting pod "simpletest-rc-to-be-deleted-dzbhg" in namespace "gc-6927"
  Jun  8 12:36:42.712: INFO: Deleting pod "simpletest-rc-to-be-deleted-fldwn" in namespace "gc-6927"
  Jun  8 12:36:42.724: INFO: Deleting pod "simpletest-rc-to-be-deleted-hrdqj" in namespace "gc-6927"
  Jun  8 12:36:42.735: INFO: Deleting pod "simpletest-rc-to-be-deleted-hx2dq" in namespace "gc-6927"
  Jun  8 12:36:42.746: INFO: Deleting pod "simpletest-rc-to-be-deleted-j2z8m" in namespace "gc-6927"
  Jun  8 12:36:42.758: INFO: Deleting pod "simpletest-rc-to-be-deleted-jc9nm" in namespace "gc-6927"
  Jun  8 12:36:42.774: INFO: Deleting pod "simpletest-rc-to-be-deleted-jf6q7" in namespace "gc-6927"
  Jun  8 12:36:42.792: INFO: Deleting pod "simpletest-rc-to-be-deleted-jpw7j" in namespace "gc-6927"
  Jun  8 12:36:42.802: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6927" for this suite. @ 06/08/24 12:36:42.807
• [17.132 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 06/08/24 12:36:42.813
  Jun  8 12:36:42.813: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename projected @ 06/08/24 12:36:42.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:36:42.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:36:42.837
  STEP: Creating configMap with name projected-configmap-test-volume-map-f1f5c661-8764-40ad-9f33-fffbb16a29ab @ 06/08/24 12:36:42.839
  STEP: Creating a pod to test consume configMaps @ 06/08/24 12:36:42.843
  E0608 12:36:43.187967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:36:44.188350      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:36:45.188437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:36:46.188809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 12:36:46.861
  Jun  8 12:36:46.864: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-projected-configmaps-93a321fd-de73-453d-9924-e15d7b8b8e41 container agnhost-container: <nil>
  STEP: delete the pod @ 06/08/24 12:36:46.869
  Jun  8 12:36:46.881: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2036" for this suite. @ 06/08/24 12:36:46.883
• [4.075 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 06/08/24 12:36:46.888
  Jun  8 12:36:46.888: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename secrets @ 06/08/24 12:36:46.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:36:46.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:36:46.905
  STEP: Creating secret with name secret-test-map-88c4d6c1-d3d5-4c50-8bc0-8e59738dff72 @ 06/08/24 12:36:46.907
  STEP: Creating a pod to test consume secrets @ 06/08/24 12:36:46.912
  E0608 12:36:47.189357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:36:48.189450      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:36:49.189545      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:36:50.189677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 12:36:50.93
  Jun  8 12:36:50.932: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-secrets-63f1366a-6947-4a01-9b56-8d9f557e833d container secret-volume-test: <nil>
  STEP: delete the pod @ 06/08/24 12:36:50.937
  Jun  8 12:36:50.950: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1129" for this suite. @ 06/08/24 12:36:50.953
• [4.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 06/08/24 12:36:50.959
  Jun  8 12:36:50.959: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename csi-storageclass @ 06/08/24 12:36:50.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:36:50.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:36:50.976
  STEP: Creating a StorageClass @ 06/08/24 12:36:50.978
  STEP: Get StorageClass "e2e-8r4jc" @ 06/08/24 12:36:50.984
  STEP: Patching the StorageClass "e2e-8r4jc" @ 06/08/24 12:36:50.986
  STEP: Delete StorageClass "e2e-8r4jc" @ 06/08/24 12:36:50.992
  STEP: Confirm deletion of StorageClass "e2e-8r4jc" @ 06/08/24 12:36:50.996
  STEP: Create a replacement StorageClass @ 06/08/24 12:36:50.999
  STEP: Updating StorageClass "e2e-v2-hw9dr" @ 06/08/24 12:36:51.002
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-hw9dr=updated" @ 06/08/24 12:36:51.012
  STEP: Deleting StorageClass "e2e-v2-hw9dr" via DeleteCollection @ 06/08/24 12:36:51.014
  STEP: Confirm deletion of StorageClass "e2e-v2-hw9dr" @ 06/08/24 12:36:51.021
  Jun  8 12:36:51.023: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-1570" for this suite. @ 06/08/24 12:36:51.025
• [0.072 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 06/08/24 12:36:51.031
  Jun  8 12:36:51.031: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename var-expansion @ 06/08/24 12:36:51.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:36:51.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:36:51.049
  E0608 12:36:51.190126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:36:52.190207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:36:53.065: INFO: Deleting pod "var-expansion-7cbf4da2-ea8e-41e8-bb71-ca7e71fa40df" in namespace "var-expansion-6872"
  Jun  8 12:36:53.073: INFO: Wait up to 5m0s for pod "var-expansion-7cbf4da2-ea8e-41e8-bb71-ca7e71fa40df" to be fully deleted
  E0608 12:36:53.190535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:36:54.190710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:36:55.078: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6872" for this suite. @ 06/08/24 12:36:55.081
• [4.055 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 06/08/24 12:36:55.087
  Jun  8 12:36:55.087: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename downward-api @ 06/08/24 12:36:55.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:36:55.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:36:55.104
  STEP: Creating a pod to test downward API volume plugin @ 06/08/24 12:36:55.106
  E0608 12:36:55.190836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:36:56.191705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:36:57.191732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:36:58.191877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 12:36:59.125
  Jun  8 12:36:59.128: INFO: Trying to get logs from node ip-172-31-31-116 pod downwardapi-volume-1cfc6e07-d292-425f-a8c6-930543dc52c5 container client-container: <nil>
  STEP: delete the pod @ 06/08/24 12:36:59.133
  Jun  8 12:36:59.148: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3997" for this suite. @ 06/08/24 12:36:59.15
• [4.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:627
  STEP: Creating a kubernetes client @ 06/08/24 12:36:59.157
  Jun  8 12:36:59.157: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename job @ 06/08/24 12:36:59.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:36:59.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:36:59.176
  STEP: Creating a job @ 06/08/24 12:36:59.178
  STEP: Ensuring active pods == parallelism @ 06/08/24 12:36:59.182
  E0608 12:36:59.192433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:00.192590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete a job @ 06/08/24 12:37:01.185
  STEP: deleting Job.batch foo in namespace job-1681, will wait for the garbage collector to delete the pods @ 06/08/24 12:37:01.185
  E0608 12:37:01.193237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:37:01.245: INFO: Deleting Job.batch foo took: 5.99755ms
  Jun  8 12:37:01.345: INFO: Terminating Job.batch foo pods took: 100.279355ms
  E0608 12:37:02.194171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 06/08/24 12:37:02.246
  Jun  8 12:37:02.249: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1681" for this suite. @ 06/08/24 12:37:02.252
• [3.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 06/08/24 12:37:02.26
  Jun  8 12:37:02.260: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename proxy @ 06/08/24 12:37:02.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:37:02.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:37:02.276
  Jun  8 12:37:02.278: INFO: Creating pod...
  E0608 12:37:03.194445      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:04.194534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:37:04.291: INFO: Creating service...
  Jun  8 12:37:04.301: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6482/pods/agnhost/proxy?method=DELETE
  Jun  8 12:37:04.308: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jun  8 12:37:04.308: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6482/pods/agnhost/proxy?method=OPTIONS
  Jun  8 12:37:04.310: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jun  8 12:37:04.310: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6482/pods/agnhost/proxy?method=PATCH
  Jun  8 12:37:04.314: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jun  8 12:37:04.314: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6482/pods/agnhost/proxy?method=POST
  Jun  8 12:37:04.317: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jun  8 12:37:04.317: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6482/pods/agnhost/proxy?method=PUT
  Jun  8 12:37:04.323: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jun  8 12:37:04.323: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6482/services/e2e-proxy-test-service/proxy?method=DELETE
  Jun  8 12:37:04.327: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jun  8 12:37:04.327: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6482/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Jun  8 12:37:04.332: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jun  8 12:37:04.332: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6482/services/e2e-proxy-test-service/proxy?method=PATCH
  Jun  8 12:37:04.336: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jun  8 12:37:04.336: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6482/services/e2e-proxy-test-service/proxy?method=POST
  Jun  8 12:37:04.339: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jun  8 12:37:04.340: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6482/services/e2e-proxy-test-service/proxy?method=PUT
  Jun  8 12:37:04.345: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jun  8 12:37:04.345: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6482/pods/agnhost/proxy?method=GET
  Jun  8 12:37:04.347: INFO: http.Client request:GET StatusCode:301
  Jun  8 12:37:04.347: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6482/services/e2e-proxy-test-service/proxy?method=GET
  Jun  8 12:37:04.350: INFO: http.Client request:GET StatusCode:301
  Jun  8 12:37:04.350: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6482/pods/agnhost/proxy?method=HEAD
  Jun  8 12:37:04.356: INFO: http.Client request:HEAD StatusCode:301
  Jun  8 12:37:04.356: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6482/services/e2e-proxy-test-service/proxy?method=HEAD
  Jun  8 12:37:04.359: INFO: http.Client request:HEAD StatusCode:301
  Jun  8 12:37:04.360: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-6482" for this suite. @ 06/08/24 12:37:04.363
• [2.108 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 06/08/24 12:37:04.367
  Jun  8 12:37:04.367: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename projected @ 06/08/24 12:37:04.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:37:04.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:37:04.394
  STEP: Creating projection with secret that has name projected-secret-test-9d79228f-ef3b-4556-9f0f-1a58f92a663b @ 06/08/24 12:37:04.396
  STEP: Creating a pod to test consume secrets @ 06/08/24 12:37:04.399
  E0608 12:37:05.194637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:06.195375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 12:37:06.413
  Jun  8 12:37:06.415: INFO: Trying to get logs from node ip-172-31-74-243 pod pod-projected-secrets-4cdd461a-ce6d-4a1d-bb1d-bf56b2f87ca0 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/08/24 12:37:06.423
  Jun  8 12:37:06.437: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1765" for this suite. @ 06/08/24 12:37:06.44
• [2.077 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 06/08/24 12:37:06.445
  Jun  8 12:37:06.445: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename sched-preemption @ 06/08/24 12:37:06.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:37:06.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:37:06.464
  Jun  8 12:37:06.476: INFO: Waiting up to 1m0s for all nodes to be ready
  E0608 12:37:07.195465      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:08.195636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:09.195724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:10.196693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:11.197110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:12.197221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:13.197260      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:14.197790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:15.197940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:16.198866      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:17.199008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:18.199082      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:19.199626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:20.199744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:21.200344      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:22.200443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:23.200480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:24.200662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:25.200910      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:26.201134      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:27.201430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:28.202316      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:29.203046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:30.203249      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:31.203335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:32.203655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:33.203725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:34.203812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:35.204871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:36.205691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:37.205798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:38.205907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:39.206367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:40.206462      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:41.206642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:42.206710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:43.207562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:44.207619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:45.208693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:46.208822      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:47.208899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:48.209093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:49.209179      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:50.209270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:51.209409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:52.209642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:53.209815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:54.210049      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:55.210592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:56.210621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:57.211151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:58.211244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:37:59.212286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:00.212371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:01.213448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:02.213633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:03.214530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:04.214722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:05.214826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:06.215083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:38:06.480: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 06/08/24 12:38:06.483
  Jun  8 12:38:06.483: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename sched-preemption-path @ 06/08/24 12:38:06.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:38:06.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:38:06.501
  STEP: Finding an available node @ 06/08/24 12:38:06.503
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 06/08/24 12:38:06.503
  E0608 12:38:07.215653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:08.215748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 06/08/24 12:38:08.517
  Jun  8 12:38:08.527: INFO: found a healthy node: ip-172-31-31-116
  E0608 12:38:09.215851      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:10.215942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:11.216034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:12.216127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:13.216764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:14.216874      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:38:14.578: INFO: pods created so far: [1 1 1]
  Jun  8 12:38:14.578: INFO: length of pods created so far: 3
  E0608 12:38:15.217458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:16.218164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:38:16.589: INFO: pods created so far: [2 2 1]
  E0608 12:38:17.218268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:18.218357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:19.218458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:20.218652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:21.218783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:22.219117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:23.220138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:38:23.640: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-6540" for this suite. @ 06/08/24 12:38:23.645
  Jun  8 12:38:23.650: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9355" for this suite. @ 06/08/24 12:38:23.653
• [77.214 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 06/08/24 12:38:23.659
  Jun  8 12:38:23.659: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename container-runtime @ 06/08/24 12:38:23.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:38:23.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:38:23.677
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 06/08/24 12:38:23.687
  E0608 12:38:24.220752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:25.221805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:26.221964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:27.222010      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:28.222856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:29.223322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:30.223418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:31.223812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:32.225889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:33.226024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:34.227008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:35.227911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:36.228701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:37.228751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 06/08/24 12:38:37.746
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 06/08/24 12:38:37.749
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 06/08/24 12:38:37.754
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 06/08/24 12:38:37.754
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 06/08/24 12:38:37.776
  E0608 12:38:38.228951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:39.229588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:40.229695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 06/08/24 12:38:40.791
  E0608 12:38:41.230625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 06/08/24 12:38:41.799
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 06/08/24 12:38:41.804
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 06/08/24 12:38:41.804
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 06/08/24 12:38:41.822
  E0608 12:38:42.230726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 06/08/24 12:38:42.828
  E0608 12:38:43.230894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:44.231417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 06/08/24 12:38:44.838
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 06/08/24 12:38:44.843
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 06/08/24 12:38:44.843
  Jun  8 12:38:44.864: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5955" for this suite. @ 06/08/24 12:38:44.866
• [21.212 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 06/08/24 12:38:44.872
  Jun  8 12:38:44.872: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename projected @ 06/08/24 12:38:44.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:38:44.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:38:44.887
  STEP: Creating the pod @ 06/08/24 12:38:44.889
  E0608 12:38:45.232076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:46.232822      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:47.233278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:38:47.427: INFO: Successfully updated pod "labelsupdatef6b6aac7-bce8-4e62-be61-2a554cf0bea7"
  E0608 12:38:48.233373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:49.233478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:50.233582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:51.234398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:38:51.448: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2528" for this suite. @ 06/08/24 12:38:51.452
• [6.589 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 06/08/24 12:38:51.461
  Jun  8 12:38:51.461: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename projected @ 06/08/24 12:38:51.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:38:51.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:38:51.48
  STEP: Creating a pod to test downward API volume plugin @ 06/08/24 12:38:51.482
  E0608 12:38:52.235411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:53.235704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:54.235838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:55.235936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 12:38:55.499
  Jun  8 12:38:55.502: INFO: Trying to get logs from node ip-172-31-31-116 pod downwardapi-volume-613ef371-5278-4f16-9ce5-9bc01aaf4776 container client-container: <nil>
  STEP: delete the pod @ 06/08/24 12:38:55.507
  Jun  8 12:38:55.520: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8787" for this suite. @ 06/08/24 12:38:55.523
• [4.069 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 06/08/24 12:38:55.53
  Jun  8 12:38:55.530: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename downward-api @ 06/08/24 12:38:55.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:38:55.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:38:55.549
  STEP: Creating the pod @ 06/08/24 12:38:55.551
  E0608 12:38:56.236709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:57.236822      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:38:58.086: INFO: Successfully updated pod "labelsupdate5dd53186-35fa-46d5-a77e-3a51aff42907"
  E0608 12:38:58.237815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:38:59.237911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:00.238030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:01.238144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:39:02.105: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-880" for this suite. @ 06/08/24 12:39:02.109
• [6.584 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 06/08/24 12:39:02.114
  Jun  8 12:39:02.115: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename init-container @ 06/08/24 12:39:02.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:39:02.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:39:02.133
  STEP: creating the pod @ 06/08/24 12:39:02.135
  Jun  8 12:39:02.135: INFO: PodSpec: initContainers in spec.initContainers
  E0608 12:39:02.238480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:03.239069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:04.239640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:05.239723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:06.240705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:07.241166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:08.241258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:09.241960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:10.242116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:11.242148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:12.242231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:13.243281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:14.243390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:15.243596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:16.243666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:17.244168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:18.244244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:19.244434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:20.244711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:21.244850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:22.244952      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:23.245056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:24.245225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:25.246114      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:26.246193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:27.246526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:28.246734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:29.246901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:30.247057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:31.247229      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:32.247575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:33.248633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:34.248730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:35.248811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:36.249711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:37.249825      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:38.250025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:39.250109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:40.250203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:41.250591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:42.250698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:43.250872      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:44.250976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:45.251177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:46.252202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:39:46.452: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-b28ca713-aa4f-422a-8303-dcee570fbdc7", GenerateName:"", Namespace:"init-container-5004", SelfLink:"", UID:"e3147099-96e0-4816-915e-50c41a980842", ResourceVersion:"13292", Generation:0, CreationTimestamp:time.Date(2024, time.June, 8, 12, 39, 2, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"135183607"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 12, 39, 2, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005e3ef0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 12, 39, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0005e3f20), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-zjts5", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc005a58fc0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-zjts5", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-zjts5", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-zjts5", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0015ab990), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-74-243", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0000033b0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0015aba20)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0015aba40)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0015aba48), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0015aba4c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc004083f60), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 8, 12, 39, 3, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 8, 12, 39, 2, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 8, 12, 39, 2, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 8, 12, 39, 2, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 8, 12, 39, 2, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.74.243", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.74.243"}}, PodIP:"192.168.82.174", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.82.174"}}, StartTime:time.Date(2024, time.June, 8, 12, 39, 2, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000003500)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000003570)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://2dcb04303ee4418fd3a8ea342571f51ffd03649e95a9847df2a1832125242bb6", Started:(*bool)(0xc0015abc9f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc005a59020), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc0015abd95), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc005a59000), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc0015abc74), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Jun  8 12:39:46.453: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5004" for this suite. @ 06/08/24 12:39:46.456
• [44.347 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1632
  STEP: Creating a kubernetes client @ 06/08/24 12:39:46.461
  Jun  8 12:39:46.461: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename kubectl @ 06/08/24 12:39:46.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:39:46.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:39:46.482
  STEP: creating the pod @ 06/08/24 12:39:46.484
  Jun  8 12:39:46.484: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-7339 create -f -'
  Jun  8 12:39:46.570: INFO: stderr: ""
  Jun  8 12:39:46.570: INFO: stdout: "pod/pause created\n"
  E0608 12:39:47.252859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:48.253114      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 06/08/24 12:39:48.579
  Jun  8 12:39:48.579: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-7339 label pods pause testing-label=testing-label-value'
  Jun  8 12:39:48.630: INFO: stderr: ""
  Jun  8 12:39:48.630: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 06/08/24 12:39:48.63
  Jun  8 12:39:48.630: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-7339 get pod pause -L testing-label'
  Jun  8 12:39:48.672: INFO: stderr: ""
  Jun  8 12:39:48.672: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 06/08/24 12:39:48.672
  Jun  8 12:39:48.672: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-7339 label pods pause testing-label-'
  Jun  8 12:39:48.719: INFO: stderr: ""
  Jun  8 12:39:48.719: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 06/08/24 12:39:48.719
  Jun  8 12:39:48.719: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-7339 get pod pause -L testing-label'
  Jun  8 12:39:48.759: INFO: stderr: ""
  Jun  8 12:39:48.759: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 06/08/24 12:39:48.759
  Jun  8 12:39:48.759: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-7339 delete --grace-period=0 --force -f -'
  Jun  8 12:39:48.813: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun  8 12:39:48.813: INFO: stdout: "pod \"pause\" force deleted\n"
  Jun  8 12:39:48.813: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-7339 get rc,svc -l name=pause --no-headers'
  Jun  8 12:39:48.856: INFO: stderr: "No resources found in kubectl-7339 namespace.\n"
  Jun  8 12:39:48.856: INFO: stdout: ""
  Jun  8 12:39:48.856: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-7339 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jun  8 12:39:48.896: INFO: stderr: ""
  Jun  8 12:39:48.897: INFO: stdout: ""
  Jun  8 12:39:48.897: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7339" for this suite. @ 06/08/24 12:39:48.9
• [2.444 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 06/08/24 12:39:48.905
  Jun  8 12:39:48.905: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename init-container @ 06/08/24 12:39:48.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:39:48.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:39:48.921
  STEP: creating the pod @ 06/08/24 12:39:48.923
  Jun  8 12:39:48.923: INFO: PodSpec: initContainers in spec.initContainers
  E0608 12:39:49.253347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:50.254060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:51.254686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:52.254833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:53.254939      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:39:53.627: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5919" for this suite. @ 06/08/24 12:39:53.63
• [4.732 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1764
  STEP: Creating a kubernetes client @ 06/08/24 12:39:53.637
  Jun  8 12:39:53.637: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename kubectl @ 06/08/24 12:39:53.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:39:53.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:39:53.654
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/08/24 12:39:53.656
  Jun  8 12:39:53.656: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-4742 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Jun  8 12:39:53.706: INFO: stderr: ""
  Jun  8 12:39:53.706: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 06/08/24 12:39:53.706
  Jun  8 12:39:53.709: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-4742 delete pods e2e-test-httpd-pod'
  E0608 12:39:54.255020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:55.255775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:39:55.495: INFO: stderr: ""
  Jun  8 12:39:55.495: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jun  8 12:39:55.495: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4742" for this suite. @ 06/08/24 12:39:55.499
• [1.868 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 06/08/24 12:39:55.506
  Jun  8 12:39:55.506: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename var-expansion @ 06/08/24 12:39:55.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:39:55.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:39:55.528
  E0608 12:39:56.255972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:57.256064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:39:57.551: INFO: Deleting pod "var-expansion-3a8d83e4-7576-4d05-92e5-4952608297bf" in namespace "var-expansion-3342"
  Jun  8 12:39:57.558: INFO: Wait up to 5m0s for pod "var-expansion-3a8d83e4-7576-4d05-92e5-4952608297bf" to be fully deleted
  E0608 12:39:58.256153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:39:59.257219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:39:59.565: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3342" for this suite. @ 06/08/24 12:39:59.568
• [4.069 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 06/08/24 12:39:59.575
  Jun  8 12:39:59.575: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename endpointslice @ 06/08/24 12:39:59.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:39:59.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:39:59.593
  STEP: getting /apis @ 06/08/24 12:39:59.595
  STEP: getting /apis/discovery.k8s.io @ 06/08/24 12:39:59.597
  STEP: getting /apis/discovery.k8s.iov1 @ 06/08/24 12:39:59.598
  STEP: creating @ 06/08/24 12:39:59.598
  STEP: getting @ 06/08/24 12:39:59.611
  STEP: listing @ 06/08/24 12:39:59.613
  STEP: watching @ 06/08/24 12:39:59.616
  Jun  8 12:39:59.616: INFO: starting watch
  STEP: cluster-wide listing @ 06/08/24 12:39:59.617
  STEP: cluster-wide watching @ 06/08/24 12:39:59.619
  Jun  8 12:39:59.619: INFO: starting watch
  STEP: patching @ 06/08/24 12:39:59.62
  STEP: updating @ 06/08/24 12:39:59.625
  Jun  8 12:39:59.631: INFO: waiting for watch events with expected annotations
  Jun  8 12:39:59.631: INFO: saw patched and updated annotations
  STEP: deleting @ 06/08/24 12:39:59.631
  STEP: deleting a collection @ 06/08/24 12:39:59.639
  Jun  8 12:39:59.651: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7667" for this suite. @ 06/08/24 12:39:59.654
• [0.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 06/08/24 12:39:59.66
  Jun  8 12:39:59.660: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename discovery @ 06/08/24 12:39:59.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:39:59.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:39:59.675
  STEP: Setting up server cert @ 06/08/24 12:39:59.677
  Jun  8 12:39:59.944: INFO: Checking APIGroup: apiregistration.k8s.io
  Jun  8 12:39:59.945: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Jun  8 12:39:59.945: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Jun  8 12:39:59.945: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Jun  8 12:39:59.945: INFO: Checking APIGroup: apps
  Jun  8 12:39:59.945: INFO: PreferredVersion.GroupVersion: apps/v1
  Jun  8 12:39:59.945: INFO: Versions found [{apps/v1 v1}]
  Jun  8 12:39:59.945: INFO: apps/v1 matches apps/v1
  Jun  8 12:39:59.945: INFO: Checking APIGroup: events.k8s.io
  Jun  8 12:39:59.946: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Jun  8 12:39:59.946: INFO: Versions found [{events.k8s.io/v1 v1}]
  Jun  8 12:39:59.946: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Jun  8 12:39:59.946: INFO: Checking APIGroup: authentication.k8s.io
  Jun  8 12:39:59.946: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Jun  8 12:39:59.946: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Jun  8 12:39:59.946: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Jun  8 12:39:59.946: INFO: Checking APIGroup: authorization.k8s.io
  Jun  8 12:39:59.947: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Jun  8 12:39:59.947: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Jun  8 12:39:59.947: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Jun  8 12:39:59.947: INFO: Checking APIGroup: autoscaling
  Jun  8 12:39:59.947: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Jun  8 12:39:59.947: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Jun  8 12:39:59.947: INFO: autoscaling/v2 matches autoscaling/v2
  Jun  8 12:39:59.947: INFO: Checking APIGroup: batch
  Jun  8 12:39:59.948: INFO: PreferredVersion.GroupVersion: batch/v1
  Jun  8 12:39:59.948: INFO: Versions found [{batch/v1 v1}]
  Jun  8 12:39:59.948: INFO: batch/v1 matches batch/v1
  Jun  8 12:39:59.948: INFO: Checking APIGroup: certificates.k8s.io
  Jun  8 12:39:59.948: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Jun  8 12:39:59.948: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Jun  8 12:39:59.948: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Jun  8 12:39:59.948: INFO: Checking APIGroup: networking.k8s.io
  Jun  8 12:39:59.949: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Jun  8 12:39:59.949: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Jun  8 12:39:59.949: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Jun  8 12:39:59.949: INFO: Checking APIGroup: policy
  Jun  8 12:39:59.949: INFO: PreferredVersion.GroupVersion: policy/v1
  Jun  8 12:39:59.949: INFO: Versions found [{policy/v1 v1}]
  Jun  8 12:39:59.949: INFO: policy/v1 matches policy/v1
  Jun  8 12:39:59.949: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Jun  8 12:39:59.950: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Jun  8 12:39:59.950: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Jun  8 12:39:59.950: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Jun  8 12:39:59.950: INFO: Checking APIGroup: storage.k8s.io
  Jun  8 12:39:59.950: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Jun  8 12:39:59.950: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Jun  8 12:39:59.950: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Jun  8 12:39:59.950: INFO: Checking APIGroup: admissionregistration.k8s.io
  Jun  8 12:39:59.951: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Jun  8 12:39:59.951: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Jun  8 12:39:59.951: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Jun  8 12:39:59.951: INFO: Checking APIGroup: apiextensions.k8s.io
  Jun  8 12:39:59.951: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Jun  8 12:39:59.951: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Jun  8 12:39:59.952: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Jun  8 12:39:59.952: INFO: Checking APIGroup: scheduling.k8s.io
  Jun  8 12:39:59.952: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Jun  8 12:39:59.952: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Jun  8 12:39:59.952: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Jun  8 12:39:59.952: INFO: Checking APIGroup: coordination.k8s.io
  Jun  8 12:39:59.952: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Jun  8 12:39:59.952: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Jun  8 12:39:59.952: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Jun  8 12:39:59.952: INFO: Checking APIGroup: node.k8s.io
  Jun  8 12:39:59.953: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Jun  8 12:39:59.953: INFO: Versions found [{node.k8s.io/v1 v1}]
  Jun  8 12:39:59.953: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Jun  8 12:39:59.953: INFO: Checking APIGroup: discovery.k8s.io
  Jun  8 12:39:59.953: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Jun  8 12:39:59.953: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Jun  8 12:39:59.953: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Jun  8 12:39:59.953: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Jun  8 12:39:59.954: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  Jun  8 12:39:59.954: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  Jun  8 12:39:59.954: INFO: flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  Jun  8 12:39:59.954: INFO: Checking APIGroup: metrics.k8s.io
  Jun  8 12:39:59.954: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  Jun  8 12:39:59.954: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  Jun  8 12:39:59.954: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  Jun  8 12:39:59.955: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-5066" for this suite. @ 06/08/24 12:39:59.958
• [0.303 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 06/08/24 12:39:59.964
  Jun  8 12:39:59.964: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename discovery @ 06/08/24 12:39:59.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:39:59.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:39:59.981
  STEP: Setting up server cert @ 06/08/24 12:39:59.983
  STEP: Requesting APIResourceList from "/api/v1" @ 06/08/24 12:40:00.16
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 06/08/24 12:40:00.161
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 06/08/24 12:40:00.162
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 06/08/24 12:40:00.162
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 06/08/24 12:40:00.163
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 06/08/24 12:40:00.163
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 06/08/24 12:40:00.164
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 06/08/24 12:40:00.165
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 06/08/24 12:40:00.165
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 06/08/24 12:40:00.166
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 06/08/24 12:40:00.166
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 06/08/24 12:40:00.167
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 06/08/24 12:40:00.167
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 06/08/24 12:40:00.168
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 06/08/24 12:40:00.168
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 06/08/24 12:40:00.169
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 06/08/24 12:40:00.169
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 06/08/24 12:40:00.17
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 06/08/24 12:40:00.17
  Jun  8 12:40:00.171: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-7651" for this suite. @ 06/08/24 12:40:00.174
• [0.216 seconds]
------------------------------
SS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 06/08/24 12:40:00.18
  Jun  8 12:40:00.180: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename disruption @ 06/08/24 12:40:00.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:40:00.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:40:00.198
  STEP: creating the pdb @ 06/08/24 12:40:00.199
  STEP: Waiting for the pdb to be processed @ 06/08/24 12:40:00.205
  E0608 12:40:00.257502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:01.257614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 06/08/24 12:40:02.211
  STEP: Waiting for the pdb to be processed @ 06/08/24 12:40:02.218
  E0608 12:40:02.258471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:03.258597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 06/08/24 12:40:04.221
  STEP: Waiting for the pdb to be processed @ 06/08/24 12:40:04.23
  E0608 12:40:04.259073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:05.259203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 06/08/24 12:40:06.239
  Jun  8 12:40:06.241: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6439" for this suite. @ 06/08/24 12:40:06.245
• [6.071 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:708
  STEP: Creating a kubernetes client @ 06/08/24 12:40:06.251
  Jun  8 12:40:06.251: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename sched-pred @ 06/08/24 12:40:06.252
  E0608 12:40:06.259291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:40:06.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:40:06.269
  Jun  8 12:40:06.270: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jun  8 12:40:06.278: INFO: Waiting for terminating namespaces to be deleted...
  Jun  8 12:40:06.280: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-31-116 before test
  Jun  8 12:40:06.285: INFO: nginx-ingress-controller-kubernetes-worker-8zk8n from ingress-nginx-kubernetes-worker started at 2024-06-08 12:21:38 +0000 UTC (1 container statuses recorded)
  Jun  8 12:40:06.285: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jun  8 12:40:06.285: INFO: calico-node-w2nxw from kube-system started at 2024-06-08 12:15:03 +0000 UTC (1 container statuses recorded)
  Jun  8 12:40:06.285: INFO: 	Container calico-node ready: true, restart count 0
  Jun  8 12:40:06.285: INFO: sonobuoy from sonobuoy started at 2024-06-08 12:18:05 +0000 UTC (1 container statuses recorded)
  Jun  8 12:40:06.285: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jun  8 12:40:06.285: INFO: sonobuoy-systemd-logs-daemon-set-2372ce3de819483f-qmcng from sonobuoy started at 2024-06-08 12:18:07 +0000 UTC (2 container statuses recorded)
  Jun  8 12:40:06.285: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  8 12:40:06.285: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun  8 12:40:06.285: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-42-99 before test
  Jun  8 12:40:06.289: INFO: nginx-ingress-controller-kubernetes-worker-9c5bq from ingress-nginx-kubernetes-worker started at 2024-06-08 12:12:03 +0000 UTC (1 container statuses recorded)
  Jun  8 12:40:06.289: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jun  8 12:40:06.289: INFO: calico-node-5rtlx from kube-system started at 2024-06-08 12:14:57 +0000 UTC (1 container statuses recorded)
  Jun  8 12:40:06.289: INFO: 	Container calico-node ready: true, restart count 0
  Jun  8 12:40:06.289: INFO: coredns-bddfd76d7-t89xt from kube-system started at 2024-06-08 12:12:03 +0000 UTC (1 container statuses recorded)
  Jun  8 12:40:06.289: INFO: 	Container coredns ready: true, restart count 0
  Jun  8 12:40:06.289: INFO: kube-state-metrics-6f48cdd76-9f275 from kube-system started at 2024-06-08 12:12:03 +0000 UTC (1 container statuses recorded)
  Jun  8 12:40:06.289: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Jun  8 12:40:06.289: INFO: metrics-server-v0.6.3-69d7fbfdf8-4grs5 from kube-system started at 2024-06-08 12:12:03 +0000 UTC (2 container statuses recorded)
  Jun  8 12:40:06.289: INFO: 	Container metrics-server ready: true, restart count 0
  Jun  8 12:40:06.289: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Jun  8 12:40:06.289: INFO: dashboard-metrics-scraper-5dd7cb5fc-z4qb8 from kubernetes-dashboard started at 2024-06-08 12:12:03 +0000 UTC (1 container statuses recorded)
  Jun  8 12:40:06.289: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Jun  8 12:40:06.289: INFO: kubernetes-dashboard-7b899cb9d9-ghnj4 from kubernetes-dashboard started at 2024-06-08 12:12:03 +0000 UTC (1 container statuses recorded)
  Jun  8 12:40:06.289: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Jun  8 12:40:06.289: INFO: sonobuoy-systemd-logs-daemon-set-2372ce3de819483f-trjkm from sonobuoy started at 2024-06-08 12:18:07 +0000 UTC (2 container statuses recorded)
  Jun  8 12:40:06.289: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  8 12:40:06.289: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun  8 12:40:06.289: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-74-243 before test
  Jun  8 12:40:06.293: INFO: nginx-ingress-controller-kubernetes-worker-rbvbn from ingress-nginx-kubernetes-worker started at 2024-06-08 12:13:50 +0000 UTC (1 container statuses recorded)
  Jun  8 12:40:06.293: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jun  8 12:40:06.293: INFO: calico-node-5r27r from kube-system started at 2024-06-08 12:15:44 +0000 UTC (1 container statuses recorded)
  Jun  8 12:40:06.293: INFO: 	Container calico-node ready: true, restart count 0
  Jun  8 12:40:06.293: INFO: sonobuoy-e2e-job-06d012d91c064577 from sonobuoy started at 2024-06-08 12:18:07 +0000 UTC (2 container statuses recorded)
  Jun  8 12:40:06.293: INFO: 	Container e2e ready: true, restart count 0
  Jun  8 12:40:06.293: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  8 12:40:06.293: INFO: sonobuoy-systemd-logs-daemon-set-2372ce3de819483f-ftvnv from sonobuoy started at 2024-06-08 12:18:07 +0000 UTC (2 container statuses recorded)
  Jun  8 12:40:06.293: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  8 12:40:06.293: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 06/08/24 12:40:06.293
  E0608 12:40:07.259640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:08.259753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 06/08/24 12:40:08.308
  STEP: Trying to apply a random label on the found node. @ 06/08/24 12:40:08.324
  STEP: verifying the node has the label kubernetes.io/e2e-677461d6-d1a0-45f0-a6d3-9b2c3f682f06 95 @ 06/08/24 12:40:08.331
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 06/08/24 12:40:08.333
  E0608 12:40:09.259870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:10.259928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.31.116 on the node which pod4 resides and expect not scheduled @ 06/08/24 12:40:10.344
  E0608 12:40:11.260731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:12.260823      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:13.261064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:14.261285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:15.261355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:16.262167      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:17.262313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:18.262525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:19.262637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:20.262741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:21.262842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:22.263020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:23.263156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:24.263350      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:25.263639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:26.264341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:27.265060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:28.265193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:29.265287      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:30.265322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:31.265430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:32.265527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:33.266013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:34.266118      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:35.266213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:36.267267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:37.268245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:38.268740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:39.269234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:40.269847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:41.270034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:42.270125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:43.270732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:44.270826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:45.270989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:46.271116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:47.271260      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:48.271485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:49.272470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:50.272555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:51.272638      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:52.273145      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:53.273452      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:54.273536      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:55.273821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:56.274009      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:57.274485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:58.274789      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:40:59.275617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:00.276736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:01.277365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:02.277491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:03.278137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:04.278262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:05.279193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:06.279219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:07.279292      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:08.279642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:09.279709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:10.280688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:11.281512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:12.281627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:13.281725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:14.281899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:15.282110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:16.282200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:17.283133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:18.283797      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:19.284736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:20.284921      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:21.285972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:22.286269      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:23.287005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:24.287091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:25.288081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:26.288169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:27.288264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:28.288725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:29.288822      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:30.289026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:31.289636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:32.289726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:33.290032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:34.290214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:35.290319      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:36.291028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:37.291102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:38.291220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:39.292166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:40.292934      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:41.293556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:42.293649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:43.293760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:44.294037      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:45.294253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:46.295267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:47.295769      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:48.296696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:49.297434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:50.297633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:51.298518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:52.298608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:53.299424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:54.299545      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:55.299968      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:56.300691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:57.301189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:58.301549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:41:59.301624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:00.302622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:01.302715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:02.303752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:03.304687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:04.304808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:05.305493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:06.305941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:07.306790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:08.307625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:09.307689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:10.307737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:11.308687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:12.308795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:13.309820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:14.309949      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:15.310890      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:16.311481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:17.312345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:18.312440      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:19.312986      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:20.313757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:21.313852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:22.313939      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:23.314219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:24.314394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:25.314526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:26.314648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:27.314728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:28.314920      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:29.315002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:30.315201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:31.315620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:32.315720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:33.316718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:34.316922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:35.317718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:36.318623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:37.319231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:38.319435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:39.319624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:40.319717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:41.320558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:42.321194      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:43.321480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:44.321579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:45.322491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:46.322582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:47.323279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:48.323414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:49.324249      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:50.324371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:51.324470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:52.324708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:53.324740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:54.324919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:55.325655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:56.325750      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:57.325893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:58.326027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:42:59.326429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:00.326542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:01.326655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:02.326976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:03.327109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:04.327356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:05.327523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:06.327636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:07.328429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:08.328542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:09.328770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:10.328862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:11.329883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:12.330246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:13.330376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:14.331298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:15.331421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:16.331618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:17.331711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:18.331847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:19.332697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:20.332807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:21.333783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:22.333847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:23.334838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:24.335067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:25.335619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:26.335703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:27.336524      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:28.336745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:29.337485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:30.337586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:31.338295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:32.338620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:33.338737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:34.338919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:35.339258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:36.339996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:37.340187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:38.340279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:39.340813      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:40.341038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:41.341639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:42.341942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:43.342040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:44.342224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:45.342296      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:46.342506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:47.343268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:48.343717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:49.344076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:50.344150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:51.344239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:52.344709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:53.344913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:54.345077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:55.345179      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:56.345259      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:57.345392      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:58.345676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:43:59.346582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:00.346762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:01.347346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:02.347613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:03.347711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:04.347828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:05.347924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:06.348018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:07.348276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:08.348337      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:09.348551      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:10.348654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:11.348740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:12.348844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:13.349920      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:14.350198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:15.350595      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:16.350692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:17.350785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:18.350987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:19.352068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:20.352930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:21.353013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:22.353126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:23.353275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:24.353966      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:25.354807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:26.355014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:27.355199      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:28.355435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:29.355540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:30.355618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:31.356541      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:32.357606      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:33.358342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:34.358537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:35.359265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:36.360413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:37.360689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:38.360897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:39.360995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:40.361108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:41.361185      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:42.361578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:43.361717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:44.362045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:45.362774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:46.362943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:47.363849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:48.363960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:49.364760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:50.364961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:51.365710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:52.365932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:53.366895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:54.367002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:55.367855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:56.367995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:57.368715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:58.368820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:44:59.369002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:00.369242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:01.369886      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:02.369985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:03.370914      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:04.371033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:05.371132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:06.371227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:07.371815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:08.372148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:09.372710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-677461d6-d1a0-45f0-a6d3-9b2c3f682f06 off the node ip-172-31-31-116 @ 06/08/24 12:45:10.351
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-677461d6-d1a0-45f0-a6d3-9b2c3f682f06 @ 06/08/24 12:45:10.362
  Jun  8 12:45:10.365: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4681" for this suite. @ 06/08/24 12:45:10.368
  E0608 12:45:10.372681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
• [304.123 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 06/08/24 12:45:10.374
  Jun  8 12:45:10.374: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename emptydir @ 06/08/24 12:45:10.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:45:10.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:45:10.39
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 06/08/24 12:45:10.392
  E0608 12:45:11.373354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:12.373426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:13.373549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:14.373720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 12:45:14.411
  Jun  8 12:45:14.414: INFO: Trying to get logs from node ip-172-31-74-243 pod pod-c32e817f-2b15-4171-9ea9-0339885f9c1b container test-container: <nil>
  STEP: delete the pod @ 06/08/24 12:45:14.425
  Jun  8 12:45:14.440: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7819" for this suite. @ 06/08/24 12:45:14.443
• [4.074 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1031
  STEP: Creating a kubernetes client @ 06/08/24 12:45:14.448
  Jun  8 12:45:14.448: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename statefulset @ 06/08/24 12:45:14.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:45:14.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:45:14.465
  STEP: Creating service test in namespace statefulset-8494 @ 06/08/24 12:45:14.466
  STEP: Creating statefulset ss in namespace statefulset-8494 @ 06/08/24 12:45:14.476
  Jun  8 12:45:14.481: INFO: Found 0 stateful pods, waiting for 1
  E0608 12:45:15.373913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:16.374937      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:17.375071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:18.375252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:19.375455      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:20.375629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:21.375722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:22.375792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:23.375892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:24.376693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:45:24.484: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 06/08/24 12:45:24.49
  STEP: Getting /status @ 06/08/24 12:45:24.496
  Jun  8 12:45:24.498: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 06/08/24 12:45:24.498
  Jun  8 12:45:24.507: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 06/08/24 12:45:24.507
  Jun  8 12:45:24.508: INFO: Observed &StatefulSet event: ADDED
  Jun  8 12:45:24.508: INFO: Found Statefulset ss in namespace statefulset-8494 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun  8 12:45:24.508: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 06/08/24 12:45:24.508
  Jun  8 12:45:24.508: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jun  8 12:45:24.513: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 06/08/24 12:45:24.513
  Jun  8 12:45:24.514: INFO: Observed &StatefulSet event: ADDED
  Jun  8 12:45:24.514: INFO: Observed Statefulset ss in namespace statefulset-8494 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun  8 12:45:24.514: INFO: Observed &StatefulSet event: MODIFIED
  Jun  8 12:45:24.514: INFO: Deleting all statefulset in ns statefulset-8494
  Jun  8 12:45:24.517: INFO: Scaling statefulset ss to 0
  E0608 12:45:25.376983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:26.377070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:27.377260      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:28.377362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:29.377597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:30.377802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:31.378054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:32.378173      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:33.378292      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:34.378546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:45:34.529: INFO: Waiting for statefulset status.replicas updated to 0
  Jun  8 12:45:34.531: INFO: Deleting statefulset ss
  Jun  8 12:45:34.542: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8494" for this suite. @ 06/08/24 12:45:34.545
• [20.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 06/08/24 12:45:34.551
  Jun  8 12:45:34.551: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename daemonsets @ 06/08/24 12:45:34.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:45:34.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:45:34.568
  STEP: Creating a simple DaemonSet "daemon-set" @ 06/08/24 12:45:34.582
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/08/24 12:45:34.593
  Jun  8 12:45:34.596: INFO: DaemonSet pods can't tolerate node ip-172-31-68-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 12:45:34.596: INFO: DaemonSet pods can't tolerate node ip-172-31-83-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 12:45:34.598: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  8 12:45:34.598: INFO: Node ip-172-31-31-116 is running 0 daemon pod, expected 1
  E0608 12:45:35.378725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:45:35.599: INFO: DaemonSet pods can't tolerate node ip-172-31-68-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 12:45:35.599: INFO: DaemonSet pods can't tolerate node ip-172-31-83-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 12:45:35.602: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  8 12:45:35.602: INFO: Node ip-172-31-31-116 is running 0 daemon pod, expected 1
  E0608 12:45:36.378875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:45:36.598: INFO: DaemonSet pods can't tolerate node ip-172-31-68-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 12:45:36.598: INFO: DaemonSet pods can't tolerate node ip-172-31-83-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 12:45:36.601: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun  8 12:45:36.601: INFO: Node ip-172-31-42-99 is running 0 daemon pod, expected 1
  E0608 12:45:37.379709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:45:37.598: INFO: DaemonSet pods can't tolerate node ip-172-31-68-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 12:45:37.598: INFO: DaemonSet pods can't tolerate node ip-172-31-83-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 12:45:37.601: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun  8 12:45:37.601: INFO: Node ip-172-31-74-243 is running 0 daemon pod, expected 1
  E0608 12:45:38.379814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:45:38.598: INFO: DaemonSet pods can't tolerate node ip-172-31-68-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 12:45:38.598: INFO: DaemonSet pods can't tolerate node ip-172-31-83-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 12:45:38.601: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun  8 12:45:38.601: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 06/08/24 12:45:38.604
  Jun  8 12:45:38.619: INFO: DaemonSet pods can't tolerate node ip-172-31-68-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 12:45:38.619: INFO: DaemonSet pods can't tolerate node ip-172-31-83-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 12:45:38.625: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun  8 12:45:38.625: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 06/08/24 12:45:38.625
  E0608 12:45:39.379913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting DaemonSet "daemon-set" @ 06/08/24 12:45:39.632
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2715, will wait for the garbage collector to delete the pods @ 06/08/24 12:45:39.632
  Jun  8 12:45:39.693: INFO: Deleting DaemonSet.extensions daemon-set took: 5.294983ms
  Jun  8 12:45:39.794: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.594551ms
  E0608 12:45:40.380484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:41.380759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:45:41.397: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  8 12:45:41.397: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun  8 12:45:41.400: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"14489"},"items":null}

  Jun  8 12:45:41.402: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"14489"},"items":null}

  Jun  8 12:45:41.412: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2715" for this suite. @ 06/08/24 12:45:41.415
• [6.869 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 06/08/24 12:45:41.42
  Jun  8 12:45:41.420: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename watch @ 06/08/24 12:45:41.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:45:41.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:45:41.438
  STEP: creating a new configmap @ 06/08/24 12:45:41.44
  STEP: modifying the configmap once @ 06/08/24 12:45:41.443
  STEP: modifying the configmap a second time @ 06/08/24 12:45:41.45
  STEP: deleting the configmap @ 06/08/24 12:45:41.456
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 06/08/24 12:45:41.462
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 06/08/24 12:45:41.462
  Jun  8 12:45:41.462: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-5153  e327ad3c-dd95-46a9-9fb9-ae2ab4e1bf65 14498 0 2024-06-08 12:45:41 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-06-08 12:45:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  8 12:45:41.463: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-5153  e327ad3c-dd95-46a9-9fb9-ae2ab4e1bf65 14499 0 2024-06-08 12:45:41 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-06-08 12:45:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  8 12:45:41.463: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5153" for this suite. @ 06/08/24 12:45:41.466
• [0.053 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 06/08/24 12:45:41.474
  Jun  8 12:45:41.474: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename emptydir @ 06/08/24 12:45:41.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:45:41.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:45:41.49
  STEP: Creating a pod to test emptydir volume type on node default medium @ 06/08/24 12:45:41.492
  E0608 12:45:42.380857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:43.381082      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:44.381177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:45.381410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 12:45:45.51
  Jun  8 12:45:45.512: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-95e40928-1ceb-45a9-bc86-9e2528aaadaf container test-container: <nil>
  STEP: delete the pod @ 06/08/24 12:45:45.527
  Jun  8 12:45:45.541: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6219" for this suite. @ 06/08/24 12:45:45.547
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 06/08/24 12:45:45.554
  Jun  8 12:45:45.554: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename secrets @ 06/08/24 12:45:45.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:45:45.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:45:45.571
  STEP: Creating secret with name secret-test-ecd30f70-b7ef-4443-bcd3-57b31ab25d3e @ 06/08/24 12:45:45.573
  STEP: Creating a pod to test consume secrets @ 06/08/24 12:45:45.578
  E0608 12:45:46.381820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:47.381932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:48.382133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:49.383186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 12:45:49.594
  Jun  8 12:45:49.596: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-secrets-accafd2e-b2ee-4144-8feb-7367b8d5fe51 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/08/24 12:45:49.602
  Jun  8 12:45:49.620: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3017" for this suite. @ 06/08/24 12:45:49.622
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 06/08/24 12:45:49.629
  Jun  8 12:45:49.629: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename subpath @ 06/08/24 12:45:49.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:45:49.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:45:49.646
  STEP: Setting up data @ 06/08/24 12:45:49.648
  STEP: Creating pod pod-subpath-test-downwardapi-g78z @ 06/08/24 12:45:49.658
  STEP: Creating a pod to test atomic-volume-subpath @ 06/08/24 12:45:49.658
  E0608 12:45:50.383285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:51.383378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:52.383900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:53.384083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:54.384177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:55.384263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:56.384349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:57.384592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:58.384705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:45:59.384799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:00.384898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:01.384974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:02.385980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:03.386168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:04.386292      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:05.386544      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:06.386624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:07.386696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:08.386855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:09.387066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:10.387513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:11.387688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:12.387786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:13.387884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 12:46:13.719
  Jun  8 12:46:13.722: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-subpath-test-downwardapi-g78z container test-container-subpath-downwardapi-g78z: <nil>
  STEP: delete the pod @ 06/08/24 12:46:13.728
  STEP: Deleting pod pod-subpath-test-downwardapi-g78z @ 06/08/24 12:46:13.742
  Jun  8 12:46:13.742: INFO: Deleting pod "pod-subpath-test-downwardapi-g78z" in namespace "subpath-4445"
  Jun  8 12:46:13.744: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4445" for this suite. @ 06/08/24 12:46:13.746
• [24.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 06/08/24 12:46:13.752
  Jun  8 12:46:13.752: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename pods @ 06/08/24 12:46:13.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:46:13.77
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:46:13.771
  STEP: creating a Pod with a static label @ 06/08/24 12:46:13.776
  STEP: watching for Pod to be ready @ 06/08/24 12:46:13.783
  Jun  8 12:46:13.785: INFO: observed Pod pod-test in namespace pods-8549 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Jun  8 12:46:13.788: INFO: observed Pod pod-test in namespace pods-8549 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:46:13 +0000 UTC  }]
  Jun  8 12:46:13.801: INFO: observed Pod pod-test in namespace pods-8549 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:46:13 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:46:13 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:46:13 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:46:13 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:46:13 +0000 UTC  }]
  E0608 12:46:14.387979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:46:15.066: INFO: Found Pod pod-test in namespace pods-8549 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:46:15 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:46:13 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:46:15 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:46:15 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:46:13 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 06/08/24 12:46:15.069
  STEP: getting the Pod and ensuring that it's patched @ 06/08/24 12:46:15.076
  STEP: replacing the Pod's status Ready condition to False @ 06/08/24 12:46:15.079
  STEP: check the Pod again to ensure its Ready conditions are False @ 06/08/24 12:46:15.087
  STEP: deleting the Pod via a Collection with a LabelSelector @ 06/08/24 12:46:15.087
  STEP: watching for the Pod to be deleted @ 06/08/24 12:46:15.094
  Jun  8 12:46:15.095: INFO: observed event type MODIFIED
  E0608 12:46:15.388393      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:16.388594      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:46:17.071: INFO: observed event type MODIFIED
  Jun  8 12:46:17.243: INFO: observed event type MODIFIED
  E0608 12:46:17.389417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:46:18.072: INFO: observed event type MODIFIED
  Jun  8 12:46:18.087: INFO: observed event type MODIFIED
  Jun  8 12:46:18.096: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8549" for this suite. @ 06/08/24 12:46:18.099
• [4.354 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 06/08/24 12:46:18.106
  Jun  8 12:46:18.106: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename csiinlinevolumes @ 06/08/24 12:46:18.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:46:18.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:46:18.124
  STEP: Creating two CSIDrivers @ 06/08/24 12:46:18.125
  STEP: Getting "inline-driver-ecdf2dd7-2690-4d54-b7df-3e40019b6a21" & "inline-driver-8bb00a99-2c27-4ce0-937a-e5f2643d0747" @ 06/08/24 12:46:18.138
  STEP: Patching the CSIDriver "inline-driver-8bb00a99-2c27-4ce0-937a-e5f2643d0747" @ 06/08/24 12:46:18.142
  STEP: Updating the CSIDriver "inline-driver-8bb00a99-2c27-4ce0-937a-e5f2643d0747" @ 06/08/24 12:46:18.148
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-956" @ 06/08/24 12:46:18.154
  STEP: Deleting CSIDriver "inline-driver-ecdf2dd7-2690-4d54-b7df-3e40019b6a21" @ 06/08/24 12:46:18.157
  STEP: Confirm deletion of CSIDriver "inline-driver-ecdf2dd7-2690-4d54-b7df-3e40019b6a21" @ 06/08/24 12:46:18.163
  STEP: Deleting CSIDriver "inline-driver-8bb00a99-2c27-4ce0-937a-e5f2643d0747" via DeleteCollection @ 06/08/24 12:46:18.165
  STEP: Confirm deletion of CSIDriver "inline-driver-8bb00a99-2c27-4ce0-937a-e5f2643d0747" @ 06/08/24 12:46:18.171
  Jun  8 12:46:18.172: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-956" for this suite. @ 06/08/24 12:46:18.175
• [0.073 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 06/08/24 12:46:18.18
  Jun  8 12:46:18.180: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename crd-watch @ 06/08/24 12:46:18.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:46:18.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:46:18.196
  Jun  8 12:46:18.197: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  E0608 12:46:18.390517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:19.390954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:20.391032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 06/08/24 12:46:20.726
  Jun  8 12:46:20.730: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-08T12:46:20Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-08T12:46:20Z]] name:name1 resourceVersion:14783 uid:d74e3df1-7483-4e9a-adcd-5b4f60d93e84] num:map[num1:9223372036854775807 num2:1000000]]}
  E0608 12:46:21.391139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:22.391197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:23.391246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:24.391894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:25.392016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:26.392092      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:27.392189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:28.393056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:29.393123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:30.393239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 06/08/24 12:46:30.731
  Jun  8 12:46:30.738: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-08T12:46:30Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-08T12:46:30Z]] name:name2 resourceVersion:14821 uid:29dc3120-0821-4ebc-9ce2-b474af846764] num:map[num1:9223372036854775807 num2:1000000]]}
  E0608 12:46:31.393513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:32.393774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:33.394010      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:34.394159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:35.394255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:36.394743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:37.395029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:38.395256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:39.395467      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:40.395613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 06/08/24 12:46:40.738
  Jun  8 12:46:40.744: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-08T12:46:20Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-08T12:46:40Z]] name:name1 resourceVersion:14841 uid:d74e3df1-7483-4e9a-adcd-5b4f60d93e84] num:map[num1:9223372036854775807 num2:1000000]]}
  E0608 12:46:41.395652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:42.395718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:43.396735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:44.396933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:45.397145      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:46.397290      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:47.397419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:48.397639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:49.397853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:50.398089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 06/08/24 12:46:50.744
  Jun  8 12:46:50.751: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-08T12:46:30Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-08T12:46:50Z]] name:name2 resourceVersion:14860 uid:29dc3120-0821-4ebc-9ce2-b474af846764] num:map[num1:9223372036854775807 num2:1000000]]}
  E0608 12:46:51.398190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:52.398418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:53.398514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:54.398545      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:55.398737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:56.398846      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:57.398942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:58.399132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:46:59.399330      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:00.399557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 06/08/24 12:47:00.752
  Jun  8 12:47:00.757: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-08T12:46:20Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-08T12:46:40Z]] name:name1 resourceVersion:14880 uid:d74e3df1-7483-4e9a-adcd-5b4f60d93e84] num:map[num1:9223372036854775807 num2:1000000]]}
  E0608 12:47:01.400546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:02.400947      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:03.401118      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:04.401306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:05.401480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:06.401641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:07.402701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:08.403042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:09.403137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:10.403307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 06/08/24 12:47:10.758
  Jun  8 12:47:10.764: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-08T12:46:30Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-08T12:46:50Z]] name:name2 resourceVersion:14899 uid:29dc3120-0821-4ebc-9ce2-b474af846764] num:map[num1:9223372036854775807 num2:1000000]]}
  E0608 12:47:11.403626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:12.403720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:13.404842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:14.404954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:15.405024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:16.405116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:17.405215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:18.405378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:19.406332      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:20.406426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:47:21.277: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-3948" for this suite. @ 06/08/24 12:47:21.28
• [63.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 06/08/24 12:47:21.285
  Jun  8 12:47:21.285: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename var-expansion @ 06/08/24 12:47:21.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:47:21.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:47:21.303
  STEP: Creating a pod to test substitution in container's args @ 06/08/24 12:47:21.305
  E0608 12:47:21.406772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:22.406895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:23.407214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:24.407343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 12:47:25.323
  Jun  8 12:47:25.326: INFO: Trying to get logs from node ip-172-31-31-116 pod var-expansion-ca891b69-63a6-411e-879b-047c6ad567b8 container dapi-container: <nil>
  STEP: delete the pod @ 06/08/24 12:47:25.332
  Jun  8 12:47:25.343: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8217" for this suite. @ 06/08/24 12:47:25.346
• [4.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:751
  STEP: Creating a kubernetes client @ 06/08/24 12:47:25.352
  Jun  8 12:47:25.352: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename statefulset @ 06/08/24 12:47:25.353
  E0608 12:47:25.407639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:47:25.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:47:25.42
  STEP: Creating service test in namespace statefulset-8244 @ 06/08/24 12:47:25.421
  STEP: Creating stateful set ss in namespace statefulset-8244 @ 06/08/24 12:47:25.425
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-8244 @ 06/08/24 12:47:25.431
  Jun  8 12:47:25.436: INFO: Found 0 stateful pods, waiting for 1
  E0608 12:47:26.408717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:27.408857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:28.409371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:29.409490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:30.409587      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:31.409715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:32.409860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:33.409989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:34.410084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:35.410178      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:47:35.436: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 06/08/24 12:47:35.436
  Jun  8 12:47:35.442: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=statefulset-8244 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun  8 12:47:35.535: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun  8 12:47:35.535: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun  8 12:47:35.535: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun  8 12:47:35.538: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0608 12:47:36.411036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:37.411351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:38.411450      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:39.411648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:40.411723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:41.411836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:42.412113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:43.412183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:44.412293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:45.412319      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:47:45.539: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jun  8 12:47:45.539: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jun  8 12:47:45.553: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
  Jun  8 12:47:45.553: INFO: ss-0  ip-172-31-31-116  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:47:26 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:47:25 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:47:35 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:47:35 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:47:25 +0000 UTC  }]
  Jun  8 12:47:45.553: INFO: 
  Jun  8 12:47:45.553: INFO: StatefulSet ss has not reached scale 3, at 1
  E0608 12:47:46.412531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:47:46.556: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.996931933s
  E0608 12:47:47.413388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:47:47.560: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.994158428s
  E0608 12:47:48.414226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:47:48.564: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.990289097s
  E0608 12:47:49.414355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:47:49.568: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.986180295s
  E0608 12:47:50.414489      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:47:50.573: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.981936708s
  E0608 12:47:51.415133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:47:51.577: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.977229741s
  E0608 12:47:52.415647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:47:52.581: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.972832513s
  E0608 12:47:53.415753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:47:53.586: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.968662496s
  E0608 12:47:54.415840      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:47:54.590: INFO: Verifying statefulset ss doesn't scale past 3 for another 963.698189ms
  E0608 12:47:55.416778      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-8244 @ 06/08/24 12:47:55.592
  Jun  8 12:47:55.596: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=statefulset-8244 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun  8 12:47:55.680: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun  8 12:47:55.680: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun  8 12:47:55.680: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun  8 12:47:55.680: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=statefulset-8244 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun  8 12:47:55.764: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Jun  8 12:47:55.764: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun  8 12:47:55.764: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun  8 12:47:55.764: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=statefulset-8244 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun  8 12:47:55.845: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Jun  8 12:47:55.845: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun  8 12:47:55.845: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun  8 12:47:55.848: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun  8 12:47:55.848: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun  8 12:47:55.848: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 06/08/24 12:47:55.848
  Jun  8 12:47:55.851: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=statefulset-8244 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun  8 12:47:55.939: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun  8 12:47:55.939: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun  8 12:47:55.939: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun  8 12:47:55.940: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=statefulset-8244 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun  8 12:47:56.026: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun  8 12:47:56.026: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun  8 12:47:56.026: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun  8 12:47:56.026: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=statefulset-8244 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun  8 12:47:56.111: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun  8 12:47:56.111: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun  8 12:47:56.111: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun  8 12:47:56.111: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jun  8 12:47:56.113: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0608 12:47:56.417248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:57.417555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:58.417668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:47:59.417762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:00.417844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:01.417930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:02.418052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:03.418271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:04.418423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:05.418507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:48:06.117: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jun  8 12:48:06.117: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Jun  8 12:48:06.117: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Jun  8 12:48:06.128: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
  Jun  8 12:48:06.128: INFO: ss-0  ip-172-31-31-116  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:47:26 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:47:25 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:47:56 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:47:56 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:47:25 +0000 UTC  }]
  Jun  8 12:48:06.128: INFO: ss-1  ip-172-31-42-99   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:47:46 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:47:45 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:47:56 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:47:56 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:47:45 +0000 UTC  }]
  Jun  8 12:48:06.128: INFO: ss-2  ip-172-31-74-243  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:47:46 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:47:45 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:47:56 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:47:56 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:47:45 +0000 UTC  }]
  Jun  8 12:48:06.128: INFO: 
  Jun  8 12:48:06.128: INFO: StatefulSet ss has not reached scale 0, at 3
  E0608 12:48:06.418718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:48:07.131: INFO: POD   NODE              PHASE      GRACE  CONDITIONS
  Jun  8 12:48:07.131: INFO: ss-0  ip-172-31-31-116  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:48:06 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:47:25 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:47:56 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:47:56 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:47:25 +0000 UTC  }]
  Jun  8 12:48:07.131: INFO: ss-2  ip-172-31-74-243  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:48:06 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:47:45 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:47:56 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:47:56 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-08 12:47:45 +0000 UTC  }]
  Jun  8 12:48:07.131: INFO: 
  Jun  8 12:48:07.131: INFO: StatefulSet ss has not reached scale 0, at 2
  E0608 12:48:07.418887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:48:08.135: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.994006558s
  E0608 12:48:08.419004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:48:09.138: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.989904886s
  E0608 12:48:09.419152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:48:10.141: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.986889691s
  E0608 12:48:10.419363      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:48:11.146: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.983649832s
  E0608 12:48:11.419640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:48:12.149: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.979155565s
  E0608 12:48:12.420064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:48:13.153: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.975849497s
  E0608 12:48:13.420586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:48:14.157: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.972325175s
  E0608 12:48:14.420662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:48:15.160: INFO: Verifying statefulset ss doesn't scale past 0 for another 968.06853ms
  E0608 12:48:15.421170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-8244 @ 06/08/24 12:48:16.16
  Jun  8 12:48:16.164: INFO: Scaling statefulset ss to 0
  Jun  8 12:48:16.173: INFO: Waiting for statefulset status.replicas updated to 0
  Jun  8 12:48:16.175: INFO: Deleting all statefulset in ns statefulset-8244
  Jun  8 12:48:16.177: INFO: Scaling statefulset ss to 0
  Jun  8 12:48:16.185: INFO: Waiting for statefulset status.replicas updated to 0
  Jun  8 12:48:16.187: INFO: Deleting statefulset ss
  Jun  8 12:48:16.197: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8244" for this suite. @ 06/08/24 12:48:16.2
• [50.854 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 06/08/24 12:48:16.207
  Jun  8 12:48:16.207: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename subpath @ 06/08/24 12:48:16.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:48:16.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:48:16.227
  STEP: Setting up data @ 06/08/24 12:48:16.229
  STEP: Creating pod pod-subpath-test-configmap-q2v7 @ 06/08/24 12:48:16.234
  STEP: Creating a pod to test atomic-volume-subpath @ 06/08/24 12:48:16.234
  E0608 12:48:16.421947      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:17.422305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:18.422661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:19.423247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:20.423324      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:21.423355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:22.423863      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:23.423963      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:24.424334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:25.424483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:26.424795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:27.425566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:28.425924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:29.426014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:30.426821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:31.426918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:32.426994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:33.427110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:34.427362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:35.427453      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:36.427992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:37.428803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:38.429140      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:39.429394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 12:48:40.288
  Jun  8 12:48:40.291: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-subpath-test-configmap-q2v7 container test-container-subpath-configmap-q2v7: <nil>
  STEP: delete the pod @ 06/08/24 12:48:40.297
  STEP: Deleting pod pod-subpath-test-configmap-q2v7 @ 06/08/24 12:48:40.308
  Jun  8 12:48:40.308: INFO: Deleting pod "pod-subpath-test-configmap-q2v7" in namespace "subpath-9861"
  Jun  8 12:48:40.310: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9861" for this suite. @ 06/08/24 12:48:40.313
• [24.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 06/08/24 12:48:40.319
  Jun  8 12:48:40.319: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename resourcequota @ 06/08/24 12:48:40.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:48:40.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:48:40.336
  STEP: Discovering how many secrets are in namespace by default @ 06/08/24 12:48:40.338
  E0608 12:48:40.429536      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:41.429878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:42.430567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:43.430854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:44.431035      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 06/08/24 12:48:45.34
  E0608 12:48:45.431077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:46.431841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:47.432894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:48.433596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:49.434565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/08/24 12:48:50.345
  STEP: Ensuring resource quota status is calculated @ 06/08/24 12:48:50.351
  E0608 12:48:50.435336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:51.435464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 06/08/24 12:48:52.355
  STEP: Ensuring resource quota status captures secret creation @ 06/08/24 12:48:52.366
  E0608 12:48:52.435669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:53.435896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 06/08/24 12:48:54.371
  STEP: Ensuring resource quota status released usage @ 06/08/24 12:48:54.376
  E0608 12:48:54.436546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:55.436660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:48:56.380: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3785" for this suite. @ 06/08/24 12:48:56.384
• [16.071 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 06/08/24 12:48:56.391
  Jun  8 12:48:56.391: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename disruption @ 06/08/24 12:48:56.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:48:56.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:48:56.409
  STEP: Waiting for the pdb to be processed @ 06/08/24 12:48:56.414
  E0608 12:48:56.437630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:57.437988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:48:58.438554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 06/08/24 12:48:58.438
  Jun  8 12:48:58.441: INFO: running pods: 0 < 3
  E0608 12:48:59.438945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:00.439158      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:49:00.443: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-64" for this suite. @ 06/08/24 12:49:00.446
• [4.061 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 06/08/24 12:49:00.452
  Jun  8 12:49:00.452: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename field-validation @ 06/08/24 12:49:00.452
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:49:00.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:49:00.469
  Jun  8 12:49:00.471: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  E0608 12:49:01.440093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:02.440166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0608 12:49:03.001141      19 warnings.go:70] unknown field "alpha"
  W0608 12:49:03.001157      19 warnings.go:70] unknown field "beta"
  W0608 12:49:03.001160      19 warnings.go:70] unknown field "delta"
  W0608 12:49:03.001163      19 warnings.go:70] unknown field "epsilon"
  W0608 12:49:03.001166      19 warnings.go:70] unknown field "gamma"
  E0608 12:49:03.441232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:49:03.536: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-315" for this suite. @ 06/08/24 12:49:03.538
• [3.092 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 06/08/24 12:49:03.543
  Jun  8 12:49:03.544: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename watch @ 06/08/24 12:49:03.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:49:03.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:49:03.559
  STEP: creating a watch on configmaps with a certain label @ 06/08/24 12:49:03.563
  STEP: creating a new configmap @ 06/08/24 12:49:03.564
  STEP: modifying the configmap once @ 06/08/24 12:49:03.569
  STEP: changing the label value of the configmap @ 06/08/24 12:49:03.576
  STEP: Expecting to observe a delete notification for the watched object @ 06/08/24 12:49:03.581
  Jun  8 12:49:03.581: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1463  0dff08d0-88a4-4c9f-8ac4-12efce6df194 15503 0 2024-06-08 12:49:03 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-08 12:49:03 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  8 12:49:03.581: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1463  0dff08d0-88a4-4c9f-8ac4-12efce6df194 15505 0 2024-06-08 12:49:03 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-08 12:49:03 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  8 12:49:03.581: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1463  0dff08d0-88a4-4c9f-8ac4-12efce6df194 15506 0 2024-06-08 12:49:03 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-08 12:49:03 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 06/08/24 12:49:03.581
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 06/08/24 12:49:03.587
  E0608 12:49:04.441331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:05.441543      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:06.441629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:07.441770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:08.441972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:09.442071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:10.442169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:11.442256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:12.442332      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:13.442390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 06/08/24 12:49:13.588
  STEP: modifying the configmap a third time @ 06/08/24 12:49:13.596
  STEP: deleting the configmap @ 06/08/24 12:49:13.6
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 06/08/24 12:49:13.606
  Jun  8 12:49:13.606: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1463  0dff08d0-88a4-4c9f-8ac4-12efce6df194 15584 0 2024-06-08 12:49:03 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-08 12:49:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  8 12:49:13.606: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1463  0dff08d0-88a4-4c9f-8ac4-12efce6df194 15585 0 2024-06-08 12:49:03 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-08 12:49:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  8 12:49:13.606: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1463  0dff08d0-88a4-4c9f-8ac4-12efce6df194 15586 0 2024-06-08 12:49:03 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-08 12:49:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  8 12:49:13.606: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1463" for this suite. @ 06/08/24 12:49:13.609
• [10.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 06/08/24 12:49:13.614
  Jun  8 12:49:13.614: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 06/08/24 12:49:13.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:49:13.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:49:13.631
  STEP: creating a target pod @ 06/08/24 12:49:13.632
  E0608 12:49:14.443368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:15.443438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 06/08/24 12:49:15.648
  E0608 12:49:16.443620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:17.444713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 06/08/24 12:49:17.662
  Jun  8 12:49:17.662: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-628 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  8 12:49:17.662: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  Jun  8 12:49:17.663: INFO: ExecWithOptions: Clientset creation
  Jun  8 12:49:17.663: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-628/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Jun  8 12:49:17.708: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 06/08/24 12:49:17.714
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 06/08/24 12:49:17.717
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 06/08/24 12:49:17.727
  Jun  8 12:49:17.729: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-628" for this suite. @ 06/08/24 12:49:17.732
• [4.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:136
  STEP: Creating a kubernetes client @ 06/08/24 12:49:17.744
  Jun  8 12:49:17.744: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/08/24 12:49:17.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:49:17.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:49:17.762
  STEP: create the container to handle the HTTPGet hook request. @ 06/08/24 12:49:17.766
  E0608 12:49:18.444833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:19.444922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 06/08/24 12:49:19.783
  E0608 12:49:20.445931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:21.446106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 06/08/24 12:49:21.796
  STEP: delete the pod with lifecycle hook @ 06/08/24 12:49:21.81
  E0608 12:49:22.446207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:23.446287      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:49:23.821: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8529" for this suite. @ 06/08/24 12:49:23.824
• [6.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 06/08/24 12:49:23.83
  Jun  8 12:49:23.830: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename services @ 06/08/24 12:49:23.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:49:23.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:49:23.848
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-6510 @ 06/08/24 12:49:23.85
  STEP: changing the ExternalName service to type=NodePort @ 06/08/24 12:49:23.855
  STEP: creating replication controller externalname-service in namespace services-6510 @ 06/08/24 12:49:23.871
  I0608 12:49:23.876594      19 runners.go:197] Created replication controller with name: externalname-service, namespace: services-6510, replica count: 2
  E0608 12:49:24.447244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:25.447714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:26.448730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0608 12:49:26.927520      19 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun  8 12:49:26.927: INFO: Creating new exec pod
  E0608 12:49:27.449655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:28.449870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:29.450091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:49:29.946: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-6510 exec execpod48rn4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jun  8 12:49:30.040: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jun  8 12:49:30.040: INFO: stdout: ""
  E0608 12:49:30.450671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:49:30.947: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-6510 exec execpod48rn4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jun  8 12:49:31.034: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jun  8 12:49:31.034: INFO: stdout: ""
  E0608 12:49:31.451287      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:49:31.947: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-6510 exec execpod48rn4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jun  8 12:49:32.050: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jun  8 12:49:32.050: INFO: stdout: ""
  E0608 12:49:32.452167      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:49:32.947: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-6510 exec execpod48rn4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jun  8 12:49:33.039: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jun  8 12:49:33.039: INFO: stdout: "externalname-service-ltrvk"
  Jun  8 12:49:33.039: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-6510 exec execpod48rn4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.76 80'
  Jun  8 12:49:33.122: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.76 80\nConnection to 10.152.183.76 80 port [tcp/http] succeeded!\n"
  Jun  8 12:49:33.122: INFO: stdout: "externalname-service-ltrvk"
  Jun  8 12:49:33.122: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-6510 exec execpod48rn4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.74.243 32165'
  Jun  8 12:49:33.201: INFO: stderr: "+ nc -v -t -w 2 172.31.74.243 32165\n+ echo hostName\nConnection to 172.31.74.243 32165 port [tcp/*] succeeded!\n"
  Jun  8 12:49:33.201: INFO: stdout: ""
  E0608 12:49:33.452279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:49:34.122: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-6510 exec execpod48rn4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.74.243 32165'
  Jun  8 12:49:34.216: INFO: stderr: "+ nc -v -t -w 2 172.31.74.243 32165\n+ echo hostName\nConnection to 172.31.74.243 32165 port [tcp/*] succeeded!\n"
  Jun  8 12:49:34.216: INFO: stdout: "externalname-service-ltrvk"
  Jun  8 12:49:34.216: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-6510 exec execpod48rn4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.42.99 32165'
  Jun  8 12:49:34.304: INFO: stderr: "+ + ncecho -v hostName\n -t -w 2 172.31.42.99 32165\nConnection to 172.31.42.99 32165 port [tcp/*] succeeded!\n"
  Jun  8 12:49:34.304: INFO: stdout: "externalname-service-wljbt"
  Jun  8 12:49:34.304: INFO: Cleaning up the ExternalName to NodePort test service
  Jun  8 12:49:34.322: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6510" for this suite. @ 06/08/24 12:49:34.325
• [10.500 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 06/08/24 12:49:34.33
  Jun  8 12:49:34.330: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename proxy @ 06/08/24 12:49:34.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:49:34.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:49:34.347
  STEP: starting an echo server on multiple ports @ 06/08/24 12:49:34.359
  STEP: creating replication controller proxy-service-xkqd2 in namespace proxy-5849 @ 06/08/24 12:49:34.359
  I0608 12:49:34.368212      19 runners.go:197] Created replication controller with name: proxy-service-xkqd2, namespace: proxy-5849, replica count: 1
  E0608 12:49:34.452707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0608 12:49:35.418824      19 runners.go:197] proxy-service-xkqd2 Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun  8 12:49:35.423: INFO: setup took 1.073241868s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 06/08/24 12:49:35.423
  Jun  8 12:49:35.426: INFO: (0) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 3.401163ms)
  Jun  8 12:49:35.428: INFO: (0) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 5.301328ms)
  Jun  8 12:49:35.428: INFO: (0) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">... (200; 5.039525ms)
  Jun  8 12:49:35.429: INFO: (0) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 6.185245ms)
  Jun  8 12:49:35.429: INFO: (0) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/rewriteme">test</a> (200; 6.279434ms)
  Jun  8 12:49:35.430: INFO: (0) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 7.180147ms)
  Jun  8 12:49:35.430: INFO: (0) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">test<... (200; 7.23358ms)
  Jun  8 12:49:35.430: INFO: (0) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname2/proxy/: bar (200; 7.515228ms)
  Jun  8 12:49:35.433: INFO: (0) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname2/proxy/: bar (200; 9.610079ms)
  Jun  8 12:49:35.433: INFO: (0) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname1/proxy/: foo (200; 10.196649ms)
  Jun  8 12:49:35.433: INFO: (0) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname1/proxy/: foo (200; 10.120949ms)
  Jun  8 12:49:35.434: INFO: (0) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:460/proxy/: tls baz (200; 10.830341ms)
  Jun  8 12:49:35.434: INFO: (0) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:462/proxy/: tls qux (200; 11.154221ms)
  Jun  8 12:49:35.434: INFO: (0) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname1/proxy/: tls baz (200; 10.846271ms)
  Jun  8 12:49:35.434: INFO: (0) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname2/proxy/: tls qux (200; 10.983006ms)
  Jun  8 12:49:35.434: INFO: (0) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/tlsrewritem... (200; 10.953947ms)
  Jun  8 12:49:35.437: INFO: (1) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/tlsrewritem... (200; 2.843917ms)
  Jun  8 12:49:35.438: INFO: (1) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 3.934028ms)
  Jun  8 12:49:35.438: INFO: (1) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">... (200; 3.963101ms)
  Jun  8 12:49:35.439: INFO: (1) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">test<... (200; 4.669418ms)
  Jun  8 12:49:35.439: INFO: (1) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:462/proxy/: tls qux (200; 4.479487ms)
  Jun  8 12:49:35.439: INFO: (1) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 4.68095ms)
  Jun  8 12:49:35.439: INFO: (1) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 4.906567ms)
  Jun  8 12:49:35.440: INFO: (1) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/rewriteme">test</a> (200; 5.709071ms)
  Jun  8 12:49:35.441: INFO: (1) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 6.359516ms)
  Jun  8 12:49:35.441: INFO: (1) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname2/proxy/: bar (200; 6.501583ms)
  Jun  8 12:49:35.441: INFO: (1) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname2/proxy/: bar (200; 6.623169ms)
  Jun  8 12:49:35.441: INFO: (1) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname1/proxy/: tls baz (200; 6.456174ms)
  Jun  8 12:49:35.441: INFO: (1) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:460/proxy/: tls baz (200; 6.431402ms)
  Jun  8 12:49:35.441: INFO: (1) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname1/proxy/: foo (200; 6.964922ms)
  Jun  8 12:49:35.441: INFO: (1) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname2/proxy/: tls qux (200; 7.095038ms)
  Jun  8 12:49:35.441: INFO: (1) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname1/proxy/: foo (200; 7.133327ms)
  Jun  8 12:49:35.449: INFO: (2) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 6.969128ms)
  Jun  8 12:49:35.449: INFO: (2) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 7.261849ms)
  Jun  8 12:49:35.450: INFO: (2) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">... (200; 8.280491ms)
  Jun  8 12:49:35.451: INFO: (2) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">test<... (200; 8.821093ms)
  Jun  8 12:49:35.451: INFO: (2) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 8.662055ms)
  Jun  8 12:49:35.452: INFO: (2) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 10.218318ms)
  E0608 12:49:35.452743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:49:35.453: INFO: (2) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname2/proxy/: bar (200; 10.621681ms)
  Jun  8 12:49:35.453: INFO: (2) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/rewriteme">test</a> (200; 10.744354ms)
  Jun  8 12:49:35.453: INFO: (2) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname1/proxy/: foo (200; 11.143607ms)
  Jun  8 12:49:35.453: INFO: (2) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname1/proxy/: tls baz (200; 11.183334ms)
  Jun  8 12:49:35.454: INFO: (2) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:460/proxy/: tls baz (200; 11.719815ms)
  Jun  8 12:49:35.454: INFO: (2) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname1/proxy/: foo (200; 12.003307ms)
  Jun  8 12:49:35.454: INFO: (2) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:462/proxy/: tls qux (200; 11.941548ms)
  Jun  8 12:49:35.454: INFO: (2) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/tlsrewritem... (200; 11.73674ms)
  Jun  8 12:49:35.455: INFO: (2) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname2/proxy/: bar (200; 13.087358ms)
  Jun  8 12:49:35.455: INFO: (2) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname2/proxy/: tls qux (200; 13.062144ms)
  Jun  8 12:49:35.463: INFO: (3) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 7.592598ms)
  Jun  8 12:49:35.463: INFO: (3) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:460/proxy/: tls baz (200; 8.153075ms)
  Jun  8 12:49:35.463: INFO: (3) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:462/proxy/: tls qux (200; 8.134305ms)
  Jun  8 12:49:35.464: INFO: (3) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 8.871519ms)
  Jun  8 12:49:35.464: INFO: (3) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">... (200; 8.782048ms)
  Jun  8 12:49:35.464: INFO: (3) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/rewriteme">test</a> (200; 8.945891ms)
  Jun  8 12:49:35.464: INFO: (3) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">test<... (200; 8.91396ms)
  Jun  8 12:49:35.464: INFO: (3) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 9.107168ms)
  Jun  8 12:49:35.464: INFO: (3) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname2/proxy/: bar (200; 9.028408ms)
  Jun  8 12:49:35.464: INFO: (3) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname2/proxy/: bar (200; 9.0429ms)
  Jun  8 12:49:35.464: INFO: (3) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 9.089257ms)
  Jun  8 12:49:35.465: INFO: (3) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname1/proxy/: foo (200; 9.488529ms)
  Jun  8 12:49:35.465: INFO: (3) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname2/proxy/: tls qux (200; 9.627076ms)
  Jun  8 12:49:35.465: INFO: (3) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname1/proxy/: tls baz (200; 9.748106ms)
  Jun  8 12:49:35.465: INFO: (3) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/tlsrewritem... (200; 9.890395ms)
  Jun  8 12:49:35.465: INFO: (3) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname1/proxy/: foo (200; 10.227675ms)
  Jun  8 12:49:35.468: INFO: (4) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 2.307937ms)
  Jun  8 12:49:35.468: INFO: (4) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:460/proxy/: tls baz (200; 2.882244ms)
  Jun  8 12:49:35.469: INFO: (4) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/rewriteme">test</a> (200; 3.519594ms)
  Jun  8 12:49:35.469: INFO: (4) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">test<... (200; 3.792881ms)
  Jun  8 12:49:35.470: INFO: (4) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:462/proxy/: tls qux (200; 4.531326ms)
  Jun  8 12:49:35.470: INFO: (4) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/tlsrewritem... (200; 4.654479ms)
  Jun  8 12:49:35.470: INFO: (4) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">... (200; 4.686672ms)
  Jun  8 12:49:35.470: INFO: (4) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname1/proxy/: foo (200; 4.767291ms)
  Jun  8 12:49:35.471: INFO: (4) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 5.172588ms)
  Jun  8 12:49:35.472: INFO: (4) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 6.560433ms)
  Jun  8 12:49:35.472: INFO: (4) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 6.788822ms)
  Jun  8 12:49:35.472: INFO: (4) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname1/proxy/: foo (200; 6.790379ms)
  Jun  8 12:49:35.472: INFO: (4) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname1/proxy/: tls baz (200; 6.647815ms)
  Jun  8 12:49:35.472: INFO: (4) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname2/proxy/: bar (200; 6.625988ms)
  Jun  8 12:49:35.472: INFO: (4) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname2/proxy/: tls qux (200; 6.932968ms)
  Jun  8 12:49:35.472: INFO: (4) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname2/proxy/: bar (200; 6.842194ms)
  Jun  8 12:49:35.477: INFO: (5) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:462/proxy/: tls qux (200; 4.549335ms)
  Jun  8 12:49:35.477: INFO: (5) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">test<... (200; 4.394117ms)
  Jun  8 12:49:35.477: INFO: (5) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 4.54121ms)
  Jun  8 12:49:35.477: INFO: (5) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:460/proxy/: tls baz (200; 5.023265ms)
  Jun  8 12:49:35.478: INFO: (5) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname2/proxy/: bar (200; 5.038661ms)
  Jun  8 12:49:35.479: INFO: (5) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname1/proxy/: foo (200; 6.795692ms)
  Jun  8 12:49:35.480: INFO: (5) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname1/proxy/: foo (200; 7.137334ms)
  Jun  8 12:49:35.482: INFO: (5) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname2/proxy/: tls qux (200; 8.847408ms)
  Jun  8 12:49:35.484: INFO: (5) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">... (200; 10.279563ms)
  Jun  8 12:49:35.485: INFO: (5) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/rewriteme">test</a> (200; 11.409846ms)
  Jun  8 12:49:35.485: INFO: (5) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/tlsrewritem... (200; 12.050812ms)
  Jun  8 12:49:35.486: INFO: (5) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 13.232465ms)
  Jun  8 12:49:35.486: INFO: (5) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 12.364649ms)
  Jun  8 12:49:35.486: INFO: (5) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname1/proxy/: tls baz (200; 12.49863ms)
  Jun  8 12:49:35.486: INFO: (5) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname2/proxy/: bar (200; 12.597551ms)
  Jun  8 12:49:35.486: INFO: (5) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 12.638766ms)
  Jun  8 12:49:35.491: INFO: (6) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/rewriteme">test</a> (200; 4.242841ms)
  Jun  8 12:49:35.492: INFO: (6) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 5.305336ms)
  Jun  8 12:49:35.492: INFO: (6) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 5.732406ms)
  Jun  8 12:49:35.494: INFO: (6) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 7.06548ms)
  Jun  8 12:49:35.494: INFO: (6) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">... (200; 7.099005ms)
  Jun  8 12:49:35.494: INFO: (6) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 7.286842ms)
  Jun  8 12:49:35.494: INFO: (6) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname1/proxy/: foo (200; 7.506126ms)
  Jun  8 12:49:35.494: INFO: (6) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:460/proxy/: tls baz (200; 7.732463ms)
  Jun  8 12:49:35.494: INFO: (6) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname1/proxy/: tls baz (200; 7.869047ms)
  Jun  8 12:49:35.495: INFO: (6) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname2/proxy/: bar (200; 8.642628ms)
  Jun  8 12:49:35.497: INFO: (6) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/tlsrewritem... (200; 10.301322ms)
  Jun  8 12:49:35.497: INFO: (6) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname2/proxy/: tls qux (200; 10.543584ms)
  Jun  8 12:49:35.497: INFO: (6) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname2/proxy/: bar (200; 10.287931ms)
  Jun  8 12:49:35.497: INFO: (6) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">test<... (200; 10.468961ms)
  Jun  8 12:49:35.497: INFO: (6) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:462/proxy/: tls qux (200; 10.601523ms)
  Jun  8 12:49:35.497: INFO: (6) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname1/proxy/: foo (200; 10.55569ms)
  Jun  8 12:49:35.503: INFO: (7) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:460/proxy/: tls baz (200; 5.748612ms)
  Jun  8 12:49:35.503: INFO: (7) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 5.8042ms)
  Jun  8 12:49:35.503: INFO: (7) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:462/proxy/: tls qux (200; 5.749597ms)
  Jun  8 12:49:35.503: INFO: (7) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">... (200; 6.121238ms)
  Jun  8 12:49:35.505: INFO: (7) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname2/proxy/: bar (200; 7.751439ms)
  Jun  8 12:49:35.505: INFO: (7) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 7.878302ms)
  Jun  8 12:49:35.505: INFO: (7) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname2/proxy/: bar (200; 7.799417ms)
  Jun  8 12:49:35.506: INFO: (7) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/tlsrewritem... (200; 8.721038ms)
  Jun  8 12:49:35.507: INFO: (7) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 9.668414ms)
  Jun  8 12:49:35.507: INFO: (7) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/rewriteme">test</a> (200; 9.864516ms)
  Jun  8 12:49:35.507: INFO: (7) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 9.881694ms)
  Jun  8 12:49:35.507: INFO: (7) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname1/proxy/: foo (200; 9.965091ms)
  Jun  8 12:49:35.507: INFO: (7) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname2/proxy/: tls qux (200; 10.263377ms)
  Jun  8 12:49:35.508: INFO: (7) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname1/proxy/: tls baz (200; 10.492128ms)
  Jun  8 12:49:35.509: INFO: (7) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname1/proxy/: foo (200; 11.628948ms)
  Jun  8 12:49:35.509: INFO: (7) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">test<... (200; 11.842878ms)
  Jun  8 12:49:35.517: INFO: (8) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 7.772355ms)
  Jun  8 12:49:35.519: INFO: (8) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">test<... (200; 9.33052ms)
  Jun  8 12:49:35.519: INFO: (8) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname1/proxy/: foo (200; 10.05793ms)
  Jun  8 12:49:35.519: INFO: (8) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 9.967493ms)
  Jun  8 12:49:35.519: INFO: (8) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">... (200; 10.094289ms)
  Jun  8 12:49:35.520: INFO: (8) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname2/proxy/: bar (200; 10.952735ms)
  Jun  8 12:49:35.522: INFO: (8) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:462/proxy/: tls qux (200; 12.958122ms)
  Jun  8 12:49:35.523: INFO: (8) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/rewriteme">test</a> (200; 13.25357ms)
  Jun  8 12:49:35.523: INFO: (8) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname2/proxy/: bar (200; 13.231998ms)
  Jun  8 12:49:35.523: INFO: (8) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 13.196463ms)
  Jun  8 12:49:35.523: INFO: (8) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:460/proxy/: tls baz (200; 13.170371ms)
  Jun  8 12:49:35.523: INFO: (8) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 13.142421ms)
  Jun  8 12:49:35.523: INFO: (8) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname2/proxy/: tls qux (200; 13.383864ms)
  Jun  8 12:49:35.523: INFO: (8) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/tlsrewritem... (200; 13.339089ms)
  Jun  8 12:49:35.523: INFO: (8) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname1/proxy/: tls baz (200; 13.328849ms)
  Jun  8 12:49:35.524: INFO: (8) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname1/proxy/: foo (200; 15.042755ms)
  Jun  8 12:49:35.530: INFO: (9) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:460/proxy/: tls baz (200; 5.089777ms)
  Jun  8 12:49:35.531: INFO: (9) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/rewriteme">test</a> (200; 6.118462ms)
  Jun  8 12:49:35.531: INFO: (9) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 6.598413ms)
  Jun  8 12:49:35.531: INFO: (9) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 6.74488ms)
  Jun  8 12:49:35.531: INFO: (9) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 6.81531ms)
  Jun  8 12:49:35.531: INFO: (9) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 6.669838ms)
  Jun  8 12:49:35.533: INFO: (9) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/tlsrewritem... (200; 7.948705ms)
  Jun  8 12:49:35.533: INFO: (9) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">... (200; 7.898987ms)
  Jun  8 12:49:35.534: INFO: (9) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">test<... (200; 9.189643ms)
  Jun  8 12:49:35.534: INFO: (9) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:462/proxy/: tls qux (200; 9.34701ms)
  Jun  8 12:49:35.534: INFO: (9) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname2/proxy/: bar (200; 9.468833ms)
  Jun  8 12:49:35.534: INFO: (9) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname1/proxy/: foo (200; 9.399771ms)
  Jun  8 12:49:35.534: INFO: (9) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname2/proxy/: tls qux (200; 9.513282ms)
  Jun  8 12:49:35.534: INFO: (9) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname1/proxy/: foo (200; 9.670942ms)
  Jun  8 12:49:35.534: INFO: (9) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname1/proxy/: tls baz (200; 9.807473ms)
  Jun  8 12:49:35.535: INFO: (9) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname2/proxy/: bar (200; 10.177204ms)
  Jun  8 12:49:35.541: INFO: (10) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/rewriteme">test</a> (200; 6.399989ms)
  Jun  8 12:49:35.542: INFO: (10) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">test<... (200; 6.816343ms)
  Jun  8 12:49:35.542: INFO: (10) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:460/proxy/: tls baz (200; 6.603056ms)
  Jun  8 12:49:35.542: INFO: (10) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">... (200; 6.725558ms)
  Jun  8 12:49:35.542: INFO: (10) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/tlsrewritem... (200; 6.964564ms)
  Jun  8 12:49:35.542: INFO: (10) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 6.93205ms)
  Jun  8 12:49:35.542: INFO: (10) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 7.209938ms)
  Jun  8 12:49:35.542: INFO: (10) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 7.110364ms)
  Jun  8 12:49:35.542: INFO: (10) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 7.16194ms)
  Jun  8 12:49:35.542: INFO: (10) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:462/proxy/: tls qux (200; 6.929786ms)
  Jun  8 12:49:35.543: INFO: (10) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname1/proxy/: tls baz (200; 7.640519ms)
  Jun  8 12:49:35.543: INFO: (10) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname1/proxy/: foo (200; 7.656533ms)
  Jun  8 12:49:35.543: INFO: (10) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname1/proxy/: foo (200; 7.765005ms)
  Jun  8 12:49:35.543: INFO: (10) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname2/proxy/: tls qux (200; 7.827164ms)
  Jun  8 12:49:35.543: INFO: (10) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname2/proxy/: bar (200; 8.24564ms)
  Jun  8 12:49:35.544: INFO: (10) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname2/proxy/: bar (200; 8.40442ms)
  Jun  8 12:49:35.547: INFO: (11) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 2.895846ms)
  Jun  8 12:49:35.548: INFO: (11) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">... (200; 3.985879ms)
  Jun  8 12:49:35.548: INFO: (11) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:462/proxy/: tls qux (200; 4.054575ms)
  Jun  8 12:49:35.549: INFO: (11) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/rewriteme">test</a> (200; 5.750276ms)
  Jun  8 12:49:35.550: INFO: (11) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 6.090261ms)
  Jun  8 12:49:35.550: INFO: (11) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:460/proxy/: tls baz (200; 5.990622ms)
  Jun  8 12:49:35.550: INFO: (11) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 6.072849ms)
  Jun  8 12:49:35.550: INFO: (11) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">test<... (200; 6.025682ms)
  Jun  8 12:49:35.550: INFO: (11) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname2/proxy/: tls qux (200; 6.017155ms)
  Jun  8 12:49:35.550: INFO: (11) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/tlsrewritem... (200; 6.18895ms)
  Jun  8 12:49:35.550: INFO: (11) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname1/proxy/: foo (200; 6.409108ms)
  Jun  8 12:49:35.550: INFO: (11) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 6.83991ms)
  Jun  8 12:49:35.550: INFO: (11) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname2/proxy/: bar (200; 6.626813ms)
  Jun  8 12:49:35.551: INFO: (11) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname2/proxy/: bar (200; 6.770699ms)
  Jun  8 12:49:35.551: INFO: (11) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname1/proxy/: tls baz (200; 6.949517ms)
  Jun  8 12:49:35.551: INFO: (11) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname1/proxy/: foo (200; 7.412502ms)
  Jun  8 12:49:35.555: INFO: (12) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 3.212824ms)
  Jun  8 12:49:35.555: INFO: (12) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/tlsrewritem... (200; 3.160394ms)
  Jun  8 12:49:35.555: INFO: (12) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">test<... (200; 3.60152ms)
  Jun  8 12:49:35.556: INFO: (12) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/rewriteme">test</a> (200; 4.494876ms)
  Jun  8 12:49:35.556: INFO: (12) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 4.72664ms)
  Jun  8 12:49:35.556: INFO: (12) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">... (200; 4.684815ms)
  Jun  8 12:49:35.557: INFO: (12) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 5.2082ms)
  Jun  8 12:49:35.557: INFO: (12) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:462/proxy/: tls qux (200; 5.489602ms)
  Jun  8 12:49:35.557: INFO: (12) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:460/proxy/: tls baz (200; 5.590899ms)
  Jun  8 12:49:35.557: INFO: (12) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 5.534037ms)
  Jun  8 12:49:35.557: INFO: (12) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname2/proxy/: bar (200; 5.689441ms)
  Jun  8 12:49:35.558: INFO: (12) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname2/proxy/: tls qux (200; 6.249231ms)
  Jun  8 12:49:35.558: INFO: (12) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname1/proxy/: foo (200; 6.525322ms)
  Jun  8 12:49:35.558: INFO: (12) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname1/proxy/: tls baz (200; 6.769479ms)
  Jun  8 12:49:35.558: INFO: (12) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname2/proxy/: bar (200; 6.94016ms)
  Jun  8 12:49:35.559: INFO: (12) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname1/proxy/: foo (200; 7.555653ms)
  Jun  8 12:49:35.562: INFO: (13) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 2.526602ms)
  Jun  8 12:49:35.564: INFO: (13) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">... (200; 4.965403ms)
  Jun  8 12:49:35.564: INFO: (13) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 4.947394ms)
  Jun  8 12:49:35.566: INFO: (13) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname2/proxy/: bar (200; 6.804654ms)
  Jun  8 12:49:35.566: INFO: (13) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 6.729753ms)
  Jun  8 12:49:35.566: INFO: (13) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:460/proxy/: tls baz (200; 6.72174ms)
  Jun  8 12:49:35.566: INFO: (13) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:462/proxy/: tls qux (200; 6.715912ms)
  Jun  8 12:49:35.566: INFO: (13) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/tlsrewritem... (200; 6.70514ms)
  Jun  8 12:49:35.566: INFO: (13) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/rewriteme">test</a> (200; 6.702143ms)
  Jun  8 12:49:35.566: INFO: (13) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname1/proxy/: foo (200; 6.663364ms)
  Jun  8 12:49:35.566: INFO: (13) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">test<... (200; 6.824508ms)
  Jun  8 12:49:35.566: INFO: (13) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 6.848148ms)
  Jun  8 12:49:35.566: INFO: (13) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname2/proxy/: bar (200; 7.246427ms)
  Jun  8 12:49:35.567: INFO: (13) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname2/proxy/: tls qux (200; 7.298317ms)
  Jun  8 12:49:35.567: INFO: (13) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname1/proxy/: foo (200; 7.364273ms)
  Jun  8 12:49:35.567: INFO: (13) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname1/proxy/: tls baz (200; 7.448082ms)
  Jun  8 12:49:35.584: INFO: (14) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/rewriteme">test</a> (200; 17.332031ms)
  Jun  8 12:49:35.588: INFO: (14) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 21.230485ms)
  Jun  8 12:49:35.588: INFO: (14) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 21.467586ms)
  Jun  8 12:49:35.591: INFO: (14) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 23.334553ms)
  Jun  8 12:49:35.594: INFO: (14) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname1/proxy/: tls baz (200; 27.171791ms)
  Jun  8 12:49:35.595: INFO: (14) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 28.212674ms)
  Jun  8 12:49:35.598: INFO: (14) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">test<... (200; 31.255848ms)
  Jun  8 12:49:35.598: INFO: (14) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">... (200; 31.194754ms)
  Jun  8 12:49:35.598: INFO: (14) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:462/proxy/: tls qux (200; 31.538172ms)
  Jun  8 12:49:35.599: INFO: (14) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:460/proxy/: tls baz (200; 31.671925ms)
  Jun  8 12:49:35.603: INFO: (14) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname2/proxy/: bar (200; 35.697904ms)
  Jun  8 12:49:35.603: INFO: (14) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname1/proxy/: foo (200; 35.915551ms)
  Jun  8 12:49:35.603: INFO: (14) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname2/proxy/: bar (200; 35.920989ms)
  Jun  8 12:49:35.603: INFO: (14) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname1/proxy/: foo (200; 35.895834ms)
  Jun  8 12:49:35.603: INFO: (14) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/tlsrewritem... (200; 35.817408ms)
  Jun  8 12:49:35.603: INFO: (14) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname2/proxy/: tls qux (200; 36.023505ms)
  Jun  8 12:49:35.614: INFO: (15) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 10.594088ms)
  Jun  8 12:49:35.620: INFO: (15) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:462/proxy/: tls qux (200; 16.920682ms)
  Jun  8 12:49:35.625: INFO: (15) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 21.610202ms)
  Jun  8 12:49:35.625: INFO: (15) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 21.745381ms)
  Jun  8 12:49:35.626: INFO: (15) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">... (200; 22.06725ms)
  Jun  8 12:49:35.626: INFO: (15) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname1/proxy/: foo (200; 22.301004ms)
  Jun  8 12:49:35.626: INFO: (15) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/tlsrewritem... (200; 22.289233ms)
  Jun  8 12:49:35.626: INFO: (15) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/rewriteme">test</a> (200; 22.362029ms)
  Jun  8 12:49:35.626: INFO: (15) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">test<... (200; 22.479027ms)
  Jun  8 12:49:35.630: INFO: (15) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:460/proxy/: tls baz (200; 26.707368ms)
  Jun  8 12:49:35.630: INFO: (15) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname2/proxy/: bar (200; 26.632737ms)
  Jun  8 12:49:35.630: INFO: (15) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname2/proxy/: bar (200; 26.474741ms)
  Jun  8 12:49:35.630: INFO: (15) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 26.455416ms)
  Jun  8 12:49:35.631: INFO: (15) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname1/proxy/: foo (200; 28.09852ms)
  Jun  8 12:49:35.633: INFO: (15) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname1/proxy/: tls baz (200; 29.618368ms)
  Jun  8 12:49:35.633: INFO: (15) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname2/proxy/: tls qux (200; 29.769255ms)
  Jun  8 12:49:35.645: INFO: (16) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">... (200; 11.880669ms)
  Jun  8 12:49:35.646: INFO: (16) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 12.65834ms)
  Jun  8 12:49:35.647: INFO: (16) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/tlsrewritem... (200; 13.590122ms)
  Jun  8 12:49:35.647: INFO: (16) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:460/proxy/: tls baz (200; 13.787244ms)
  Jun  8 12:49:35.649: INFO: (16) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/rewriteme">test</a> (200; 15.316848ms)
  Jun  8 12:49:35.649: INFO: (16) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname1/proxy/: foo (200; 15.385539ms)
  Jun  8 12:49:35.649: INFO: (16) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">test<... (200; 16.04981ms)
  Jun  8 12:49:35.650: INFO: (16) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 16.21474ms)
  Jun  8 12:49:35.650: INFO: (16) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname2/proxy/: tls qux (200; 16.274336ms)
  Jun  8 12:49:35.650: INFO: (16) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:462/proxy/: tls qux (200; 16.309241ms)
  Jun  8 12:49:35.651: INFO: (16) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 17.383832ms)
  Jun  8 12:49:35.651: INFO: (16) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname2/proxy/: bar (200; 17.161814ms)
  Jun  8 12:49:35.651: INFO: (16) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname2/proxy/: bar (200; 17.687502ms)
  Jun  8 12:49:35.651: INFO: (16) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 17.487371ms)
  Jun  8 12:49:35.651: INFO: (16) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname1/proxy/: tls baz (200; 17.501726ms)
  Jun  8 12:49:35.651: INFO: (16) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname1/proxy/: foo (200; 17.949729ms)
  Jun  8 12:49:35.655: INFO: (17) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 3.449959ms)
  Jun  8 12:49:35.655: INFO: (17) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">test<... (200; 3.656651ms)
  Jun  8 12:49:35.656: INFO: (17) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/rewriteme">test</a> (200; 4.276033ms)
  Jun  8 12:49:35.657: INFO: (17) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 4.929507ms)
  Jun  8 12:49:35.657: INFO: (17) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 5.115594ms)
  Jun  8 12:49:35.657: INFO: (17) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 5.304231ms)
  Jun  8 12:49:35.657: INFO: (17) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname2/proxy/: bar (200; 5.551837ms)
  Jun  8 12:49:35.657: INFO: (17) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:460/proxy/: tls baz (200; 5.410112ms)
  Jun  8 12:49:35.657: INFO: (17) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/tlsrewritem... (200; 5.802264ms)
  Jun  8 12:49:35.658: INFO: (17) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname1/proxy/: foo (200; 5.909679ms)
  Jun  8 12:49:35.658: INFO: (17) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">... (200; 6.204366ms)
  Jun  8 12:49:35.658: INFO: (17) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname2/proxy/: bar (200; 6.559827ms)
  Jun  8 12:49:35.658: INFO: (17) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:462/proxy/: tls qux (200; 6.416843ms)
  Jun  8 12:49:35.658: INFO: (17) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname1/proxy/: tls baz (200; 6.53909ms)
  Jun  8 12:49:35.658: INFO: (17) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname1/proxy/: foo (200; 6.820856ms)
  Jun  8 12:49:35.659: INFO: (17) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname2/proxy/: tls qux (200; 7.05348ms)
  Jun  8 12:49:35.661: INFO: (18) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:462/proxy/: tls qux (200; 2.687599ms)
  Jun  8 12:49:35.661: INFO: (18) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 2.794909ms)
  Jun  8 12:49:35.662: INFO: (18) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:460/proxy/: tls baz (200; 3.476068ms)
  Jun  8 12:49:35.663: INFO: (18) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 4.127907ms)
  Jun  8 12:49:35.663: INFO: (18) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">... (200; 4.072988ms)
  Jun  8 12:49:35.664: INFO: (18) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/rewriteme">test</a> (200; 4.68487ms)
  Jun  8 12:49:35.664: INFO: (18) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 4.638159ms)
  Jun  8 12:49:35.664: INFO: (18) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname2/proxy/: bar (200; 5.192867ms)
  Jun  8 12:49:35.664: INFO: (18) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/tlsrewritem... (200; 5.473883ms)
  Jun  8 12:49:35.664: INFO: (18) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 5.510085ms)
  Jun  8 12:49:35.664: INFO: (18) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">test<... (200; 5.578797ms)
  Jun  8 12:49:35.665: INFO: (18) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname2/proxy/: bar (200; 5.77079ms)
  Jun  8 12:49:35.665: INFO: (18) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname1/proxy/: tls baz (200; 6.061752ms)
  Jun  8 12:49:35.665: INFO: (18) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname1/proxy/: foo (200; 6.382242ms)
  Jun  8 12:49:35.665: INFO: (18) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname2/proxy/: tls qux (200; 6.521738ms)
  Jun  8 12:49:35.666: INFO: (18) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname1/proxy/: foo (200; 6.778956ms)
  Jun  8 12:49:35.668: INFO: (19) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:443/proxy/tlsrewritem... (200; 2.418057ms)
  Jun  8 12:49:35.669: INFO: (19) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 3.459934ms)
  Jun  8 12:49:35.670: INFO: (19) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">... (200; 3.992321ms)
  Jun  8 12:49:35.670: INFO: (19) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:462/proxy/: tls qux (200; 4.515521ms)
  Jun  8 12:49:35.670: INFO: (19) /api/v1/namespaces/proxy-5849/pods/https:proxy-service-xkqd2-rmzd4:460/proxy/: tls baz (200; 4.597416ms)
  Jun  8 12:49:35.671: INFO: (19) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname1/proxy/: foo (200; 5.225651ms)
  Jun  8 12:49:35.671: INFO: (19) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname2/proxy/: bar (200; 5.413683ms)
  Jun  8 12:49:35.671: INFO: (19) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 5.114578ms)
  Jun  8 12:49:35.671: INFO: (19) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4:1080/proxy/rewriteme">test<... (200; 5.430773ms)
  Jun  8 12:49:35.672: INFO: (19) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:160/proxy/: foo (200; 5.968179ms)
  Jun  8 12:49:35.672: INFO: (19) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname1/proxy/: tls baz (200; 5.944501ms)
  Jun  8 12:49:35.672: INFO: (19) /api/v1/namespaces/proxy-5849/services/http:proxy-service-xkqd2:portname1/proxy/: foo (200; 6.184514ms)
  Jun  8 12:49:35.672: INFO: (19) /api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/: <a href="/api/v1/namespaces/proxy-5849/pods/proxy-service-xkqd2-rmzd4/proxy/rewriteme">test</a> (200; 6.234132ms)
  Jun  8 12:49:35.672: INFO: (19) /api/v1/namespaces/proxy-5849/pods/http:proxy-service-xkqd2-rmzd4:162/proxy/: bar (200; 6.353684ms)
  Jun  8 12:49:35.672: INFO: (19) /api/v1/namespaces/proxy-5849/services/proxy-service-xkqd2:portname2/proxy/: bar (200; 6.638907ms)
  Jun  8 12:49:35.673: INFO: (19) /api/v1/namespaces/proxy-5849/services/https:proxy-service-xkqd2:tlsportname2/proxy/: tls qux (200; 6.740072ms)
  STEP: deleting ReplicationController proxy-service-xkqd2 in namespace proxy-5849, will wait for the garbage collector to delete the pods @ 06/08/24 12:49:35.673
  Jun  8 12:49:35.731: INFO: Deleting ReplicationController proxy-service-xkqd2 took: 5.33022ms
  Jun  8 12:49:35.832: INFO: Terminating ReplicationController proxy-service-xkqd2 pods took: 101.121947ms
  E0608 12:49:36.453639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:37.453675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:49:38.432: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5849" for this suite. @ 06/08/24 12:49:38.435
• [4.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 06/08/24 12:49:38.444
  Jun  8 12:49:38.444: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename cronjob @ 06/08/24 12:49:38.444
  E0608 12:49:38.454601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:49:38.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:49:38.463
  STEP: Creating a cronjob @ 06/08/24 12:49:38.464
  STEP: Ensuring more than one job is running at a time @ 06/08/24 12:49:38.468
  E0608 12:49:39.454749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:40.454862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:41.455792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:42.456712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:43.457796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:44.457909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:45.458011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:46.458584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:47.458974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:48.459377      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:49.459892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:50.459999      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:51.460876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:52.461637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:53.462218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:54.462326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:55.463178      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:56.464176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:57.464268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:58.464712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:49:59.464818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:00.464915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:01.465962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:02.466234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:03.466450      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:04.466632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:05.466671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:06.466829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:07.467730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:08.467711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:09.467797      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:10.468029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:11.468999      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:12.469560      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:13.470573      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:14.470983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:15.471191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:16.471823      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:17.471966      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:18.472277      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:19.472384      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:20.472601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:21.472925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:22.473607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:23.474607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:24.474929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:25.475912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:26.476807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:27.476929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:28.477366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:29.477554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:30.478147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:31.478873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:32.479251      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:33.479329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:34.480062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:35.480707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:36.481451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:37.481636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:38.482617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:39.483717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:40.483928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:41.484343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:42.485126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:43.485311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:44.485593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:45.486297      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:46.487020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:47.487195      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:48.488095      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:49.488708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:50.489454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:51.489867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:52.490800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:53.490954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:54.491104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:55.491270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:56.491758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:57.492714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:58.492823      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:50:59.493004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 06/08/24 12:51:00.471
  STEP: Removing cronjob @ 06/08/24 12:51:00.474
  Jun  8 12:51:00.479: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6376" for this suite. @ 06/08/24 12:51:00.481
• [82.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 06/08/24 12:51:00.488
  Jun  8 12:51:00.488: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename crd-webhook @ 06/08/24 12:51:00.489
  E0608 12:51:00.493161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:51:00.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:51:00.517
  STEP: Setting up server cert @ 06/08/24 12:51:00.519
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 06/08/24 12:51:00.875
  STEP: Deploying the custom resource conversion webhook pod @ 06/08/24 12:51:00.884
  STEP: Wait for the deployment to be ready @ 06/08/24 12:51:00.897
  Jun  8 12:51:00.903: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  E0608 12:51:01.493954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:02.494061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/08/24 12:51:02.913
  STEP: Verifying the service has paired with the endpoint @ 06/08/24 12:51:02.922
  E0608 12:51:03.494593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:51:03.922: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Jun  8 12:51:03.930: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  E0608 12:51:04.494595      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:05.495372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 06/08/24 12:51:06.476
  STEP: Create a v2 custom resource @ 06/08/24 12:51:06.49
  E0608 12:51:06.496357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: List CRs in v1 @ 06/08/24 12:51:06.515
  STEP: List CRs in v2 @ 06/08/24 12:51:06.519
  Jun  8 12:51:07.062: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-6360" for this suite. @ 06/08/24 12:51:07.066
• [6.585 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1838
  STEP: Creating a kubernetes client @ 06/08/24 12:51:07.074
  Jun  8 12:51:07.074: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename kubectl @ 06/08/24 12:51:07.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:51:07.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:51:07.094
  STEP: starting the proxy server @ 06/08/24 12:51:07.095
  Jun  8 12:51:07.095: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-6053 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 06/08/24 12:51:07.126
  Jun  8 12:51:07.131: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6053" for this suite. @ 06/08/24 12:51:07.134
• [0.066 seconds]
------------------------------
SSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 06/08/24 12:51:07.14
  Jun  8 12:51:07.140: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 06/08/24 12:51:07.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:51:07.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:51:07.16
  STEP: Setting up the test @ 06/08/24 12:51:07.162
  STEP: Creating hostNetwork=false pod @ 06/08/24 12:51:07.162
  E0608 12:51:07.497086      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:08.497187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 06/08/24 12:51:09.182
  E0608 12:51:09.497818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:10.497999      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 06/08/24 12:51:11.197
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 06/08/24 12:51:11.197
  Jun  8 12:51:11.197: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6739 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  8 12:51:11.197: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  Jun  8 12:51:11.198: INFO: ExecWithOptions: Clientset creation
  Jun  8 12:51:11.198: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6739/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jun  8 12:51:11.238: INFO: Exec stderr: ""
  Jun  8 12:51:11.238: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6739 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  8 12:51:11.238: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  Jun  8 12:51:11.239: INFO: ExecWithOptions: Clientset creation
  Jun  8 12:51:11.239: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6739/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jun  8 12:51:11.278: INFO: Exec stderr: ""
  Jun  8 12:51:11.278: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6739 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  8 12:51:11.278: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  Jun  8 12:51:11.278: INFO: ExecWithOptions: Clientset creation
  Jun  8 12:51:11.278: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6739/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jun  8 12:51:11.322: INFO: Exec stderr: ""
  Jun  8 12:51:11.322: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6739 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  8 12:51:11.322: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  Jun  8 12:51:11.322: INFO: ExecWithOptions: Clientset creation
  Jun  8 12:51:11.322: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6739/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jun  8 12:51:11.366: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 06/08/24 12:51:11.366
  Jun  8 12:51:11.366: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6739 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  8 12:51:11.366: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  Jun  8 12:51:11.366: INFO: ExecWithOptions: Clientset creation
  Jun  8 12:51:11.366: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6739/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Jun  8 12:51:11.410: INFO: Exec stderr: ""
  Jun  8 12:51:11.410: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6739 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  8 12:51:11.410: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  Jun  8 12:51:11.410: INFO: ExecWithOptions: Clientset creation
  Jun  8 12:51:11.410: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6739/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Jun  8 12:51:11.434: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 06/08/24 12:51:11.434
  Jun  8 12:51:11.434: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6739 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  8 12:51:11.434: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  Jun  8 12:51:11.435: INFO: ExecWithOptions: Clientset creation
  Jun  8 12:51:11.435: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6739/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jun  8 12:51:11.471: INFO: Exec stderr: ""
  Jun  8 12:51:11.471: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6739 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  8 12:51:11.471: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  Jun  8 12:51:11.472: INFO: ExecWithOptions: Clientset creation
  Jun  8 12:51:11.472: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6739/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  E0608 12:51:11.498268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:51:11.519: INFO: Exec stderr: ""
  Jun  8 12:51:11.519: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6739 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  8 12:51:11.519: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  Jun  8 12:51:11.519: INFO: ExecWithOptions: Clientset creation
  Jun  8 12:51:11.519: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6739/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jun  8 12:51:11.563: INFO: Exec stderr: ""
  Jun  8 12:51:11.563: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6739 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  8 12:51:11.563: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  Jun  8 12:51:11.563: INFO: ExecWithOptions: Clientset creation
  Jun  8 12:51:11.563: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6739/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jun  8 12:51:11.603: INFO: Exec stderr: ""
  Jun  8 12:51:11.603: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-6739" for this suite. @ 06/08/24 12:51:11.606
• [4.471 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 06/08/24 12:51:11.611
  Jun  8 12:51:11.611: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename cronjob @ 06/08/24 12:51:11.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:51:11.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:51:11.63
  STEP: Creating a ForbidConcurrent cronjob @ 06/08/24 12:51:11.631
  STEP: Ensuring a job is scheduled @ 06/08/24 12:51:11.636
  E0608 12:51:12.498819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:13.499007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:14.499106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:15.499312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:16.500159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:17.500237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:18.500704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:19.500816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:20.500948      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:21.501836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:22.502245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:23.502918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:24.503016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:25.503681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:26.504521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:27.504696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:28.504796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:29.504879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:30.505456      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:31.505637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:32.505704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:33.505825      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:34.505917      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:35.506139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:36.507009      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:37.507237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:38.507340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:39.507416      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:40.507839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:41.508958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:42.509495      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:43.510562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:44.510654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:45.510838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:46.510861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:47.511059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:48.511143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:49.511284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:50.511340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:51.511672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:52.511767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:53.511787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:54.511895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:55.511923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:56.512486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:57.513350      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:58.513684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:51:59.514207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:00.514633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:01.514887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 06/08/24 12:52:01.64
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 06/08/24 12:52:01.642
  STEP: Ensuring no more jobs are scheduled @ 06/08/24 12:52:01.644
  E0608 12:52:02.514982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:03.515184      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:04.515296      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:05.515478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:06.516073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:07.516741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:08.516868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:09.517095      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:10.517720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:11.517814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:12.518741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:13.518813      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:14.519622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:15.520680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:16.521064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:17.521172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:18.521690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:19.521890      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:20.522252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:21.522586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:22.522974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:23.523039      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:24.523638      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:25.524705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:26.524894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:27.525198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:28.525275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:29.525477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:30.526040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:31.526490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:32.526574      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:33.526741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:34.527622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:35.528707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:36.528874      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:37.528989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:38.529064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:39.529208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:40.529642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:41.529663      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:42.530083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:43.530332      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:44.531217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:45.532125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:46.532830      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:47.533367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:48.534153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:49.534373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:50.535325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:51.535682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:52.535912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:53.536015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:54.536701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:55.537019      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:56.537680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:57.537767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:58.538075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:52:59.538250      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:00.538435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:01.538689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:02.538806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:03.538904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:04.539344      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:05.539450      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:06.539868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:07.540689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:08.541371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:09.542167      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:10.542592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:11.542876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:12.543059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:13.543398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:14.543629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:15.544730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:16.544787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:17.545137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:18.545227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:19.545404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:20.545733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:21.545994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:22.546645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:23.546812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:24.547656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:25.548709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:26.548960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:27.549067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:28.549170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:29.549500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:30.550011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:31.550924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:32.551036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:33.551230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:34.551991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:35.553065      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:36.553141      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:37.553221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:38.554203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:39.554555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:40.555334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:41.555696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:42.555783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:43.556710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:44.556875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:45.556974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:46.557632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:47.558577      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:48.559088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:49.559267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:50.559362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:51.559744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:52.559864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:53.559961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:54.560725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:55.560812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:56.560885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:57.561462      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:58.562026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:53:59.562121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:00.562318      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:01.563087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:02.563184      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:03.563388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:04.563613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:05.563707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:06.563855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:07.564691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:08.564888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:09.564986      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:10.565451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:11.565811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:12.565910      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:13.566531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:14.567621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:15.567711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:16.567805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:17.568717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:18.568799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:19.568900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:20.569598      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:21.569936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:22.570064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:23.570161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:24.570351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:25.570447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:26.570607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:27.570931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:28.571634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:29.571739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:30.572020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:31.572919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:32.573352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:33.574147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:34.574461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:35.574557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:36.574903      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:37.575028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:38.575624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:39.575730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:40.575814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:41.575906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:42.576700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:43.576932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:44.577009      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:45.577106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:46.577643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:47.577715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:48.577841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:49.578070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:50.578611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:51.578996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:52.579379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:53.579722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:54.579678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:55.579782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:56.579863      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:57.580725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:58.581189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:54:59.581362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:00.581472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:01.581853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:02.581974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:03.582002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:04.582255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:05.582341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:06.582857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:07.583685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:08.583711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:09.584787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:10.584896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:11.585929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:12.586372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:13.586473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:14.587218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:15.587277      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:16.587990      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:17.588741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:18.589322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:19.589395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:20.589506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:21.589885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:22.589970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:23.590059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:24.590921      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:25.591206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:26.591338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:27.591426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:28.592000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:29.592892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:30.592991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:31.593948      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:32.594458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:33.594657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:34.595181      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:35.595447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:36.595701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:37.595828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:38.596245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:39.596313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:40.596442      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:41.596790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:42.596865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:43.597457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:44.597570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:45.597829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:46.598897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:47.598936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:48.599027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:49.599129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:50.599246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:51.600004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:52.600102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:53.600182      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:54.600270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:55.600375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:56.601420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:57.601560      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:58.601651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:55:59.602428      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:00.602526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:01.602952      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:02.603133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:03.603248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:04.603700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:05.604706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:06.604985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:07.605185      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:08.605711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:09.605846      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:10.606053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:11.606953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:12.607646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:13.607710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:14.607807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:15.608723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:16.608818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:17.608903      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:18.609333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:19.609810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:20.609920      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:21.610026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:22.610213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:23.610357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:24.610662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:25.610772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:26.610888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:27.611014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:28.611639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:29.611725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:30.611824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:31.611928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:32.612002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:33.613003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:34.615656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:35.615733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:36.616215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:37.616841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:38.616942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:39.617152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:40.617200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:41.618058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:42.618142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:43.618228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:44.618814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:45.618919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:46.620003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:47.620709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:48.620834      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:49.620923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:50.621024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:51.622013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:52.622270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:53.622222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:54.625931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:55.625991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:56.626543      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:57.626733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:58.627009      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:56:59.627170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:57:00.627617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:57:01.627943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 06/08/24 12:57:01.651
  Jun  8 12:57:01.656: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-230" for this suite. @ 06/08/24 12:57:01.659
• [350.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 06/08/24 12:57:01.663
  Jun  8 12:57:01.663: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename projected @ 06/08/24 12:57:01.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:57:01.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:57:01.682
  STEP: Creating projection with secret that has name projected-secret-test-c7aa12f3-c112-488f-9af3-5e3d9611f962 @ 06/08/24 12:57:01.683
  STEP: Creating a pod to test consume secrets @ 06/08/24 12:57:01.688
  E0608 12:57:02.628725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:57:03.628799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:57:04.630467      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:57:05.630617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 12:57:05.709
  Jun  8 12:57:05.711: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-projected-secrets-415040cf-70f6-43c4-b8a6-9c0599a993c0 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/08/24 12:57:05.725
  Jun  8 12:57:05.739: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4658" for this suite. @ 06/08/24 12:57:05.742
• [4.086 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2236
  STEP: Creating a kubernetes client @ 06/08/24 12:57:05.75
  Jun  8 12:57:05.750: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename services @ 06/08/24 12:57:05.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:57:05.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:57:05.766
  STEP: creating service in namespace services-5573 @ 06/08/24 12:57:05.767
  STEP: creating service affinity-nodeport-transition in namespace services-5573 @ 06/08/24 12:57:05.767
  STEP: creating replication controller affinity-nodeport-transition in namespace services-5573 @ 06/08/24 12:57:05.777
  I0608 12:57:05.785215      19 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-5573, replica count: 3
  E0608 12:57:06.630660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:57:07.631110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:57:08.631317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0608 12:57:08.836631      19 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun  8 12:57:08.845: INFO: Creating new exec pod
  E0608 12:57:09.632014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:57:10.633034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:57:11.633569      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:57:11.859: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-5573 exec execpod-affinityx5hl8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Jun  8 12:57:11.959: INFO: stderr: "+ nc -v -t -w 2 affinity-nodeport-transition 80\n+ echo hostName\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Jun  8 12:57:11.959: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  8 12:57:11.959: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-5573 exec execpod-affinityx5hl8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.193 80'
  Jun  8 12:57:12.046: INFO: stderr: "+ nc -v -t -w 2 10.152.183.193 80\n+ echo hostName\nConnection to 10.152.183.193 80 port [tcp/http] succeeded!\n"
  Jun  8 12:57:12.046: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  8 12:57:12.046: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-5573 exec execpod-affinityx5hl8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.31.116 30135'
  Jun  8 12:57:12.129: INFO: stderr: "+ nc -v -t -w 2 172.31.31.116 30135\n+ echo hostName\nConnection to 172.31.31.116 30135 port [tcp/*] succeeded!\n"
  Jun  8 12:57:12.129: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  8 12:57:12.129: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-5573 exec execpod-affinityx5hl8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.42.99 30135'
  Jun  8 12:57:12.213: INFO: stderr: "+ nc -v -t -w 2 172.31.42.99 30135\n+ echo hostName\nConnection to 172.31.42.99 30135 port [tcp/*] succeeded!\n"
  Jun  8 12:57:12.213: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  8 12:57:12.223: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-5573 exec execpod-affinityx5hl8 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.31.116:30135/ ; done'
  Jun  8 12:57:12.363: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30135/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30135/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30135/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30135/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30135/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30135/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30135/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30135/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30135/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30135/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30135/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30135/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30135/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30135/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30135/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30135/\n"
  Jun  8 12:57:12.364: INFO: stdout: "\naffinity-nodeport-transition-xwmkc\naffinity-nodeport-transition-zfttb\naffinity-nodeport-transition-zfttb\naffinity-nodeport-transition-hc4bz\naffinity-nodeport-transition-zfttb\naffinity-nodeport-transition-zfttb\naffinity-nodeport-transition-hc4bz\naffinity-nodeport-transition-zfttb\naffinity-nodeport-transition-zfttb\naffinity-nodeport-transition-xwmkc\naffinity-nodeport-transition-hc4bz\naffinity-nodeport-transition-zfttb\naffinity-nodeport-transition-xwmkc\naffinity-nodeport-transition-zfttb\naffinity-nodeport-transition-zfttb\naffinity-nodeport-transition-zfttb"
  Jun  8 12:57:12.364: INFO: Received response from host: affinity-nodeport-transition-xwmkc
  Jun  8 12:57:12.364: INFO: Received response from host: affinity-nodeport-transition-zfttb
  Jun  8 12:57:12.364: INFO: Received response from host: affinity-nodeport-transition-zfttb
  Jun  8 12:57:12.364: INFO: Received response from host: affinity-nodeport-transition-hc4bz
  Jun  8 12:57:12.364: INFO: Received response from host: affinity-nodeport-transition-zfttb
  Jun  8 12:57:12.364: INFO: Received response from host: affinity-nodeport-transition-zfttb
  Jun  8 12:57:12.364: INFO: Received response from host: affinity-nodeport-transition-hc4bz
  Jun  8 12:57:12.364: INFO: Received response from host: affinity-nodeport-transition-zfttb
  Jun  8 12:57:12.364: INFO: Received response from host: affinity-nodeport-transition-zfttb
  Jun  8 12:57:12.364: INFO: Received response from host: affinity-nodeport-transition-xwmkc
  Jun  8 12:57:12.364: INFO: Received response from host: affinity-nodeport-transition-hc4bz
  Jun  8 12:57:12.364: INFO: Received response from host: affinity-nodeport-transition-zfttb
  Jun  8 12:57:12.364: INFO: Received response from host: affinity-nodeport-transition-xwmkc
  Jun  8 12:57:12.364: INFO: Received response from host: affinity-nodeport-transition-zfttb
  Jun  8 12:57:12.364: INFO: Received response from host: affinity-nodeport-transition-zfttb
  Jun  8 12:57:12.364: INFO: Received response from host: affinity-nodeport-transition-zfttb
  Jun  8 12:57:12.371: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-5573 exec execpod-affinityx5hl8 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.31.116:30135/ ; done'
  Jun  8 12:57:12.502: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30135/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30135/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30135/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30135/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30135/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30135/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30135/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30135/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30135/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30135/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30135/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30135/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30135/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30135/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30135/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30135/\n"
  Jun  8 12:57:12.502: INFO: stdout: "\naffinity-nodeport-transition-hc4bz\naffinity-nodeport-transition-hc4bz\naffinity-nodeport-transition-hc4bz\naffinity-nodeport-transition-hc4bz\naffinity-nodeport-transition-hc4bz\naffinity-nodeport-transition-hc4bz\naffinity-nodeport-transition-hc4bz\naffinity-nodeport-transition-hc4bz\naffinity-nodeport-transition-hc4bz\naffinity-nodeport-transition-hc4bz\naffinity-nodeport-transition-hc4bz\naffinity-nodeport-transition-hc4bz\naffinity-nodeport-transition-hc4bz\naffinity-nodeport-transition-hc4bz\naffinity-nodeport-transition-hc4bz\naffinity-nodeport-transition-hc4bz"
  Jun  8 12:57:12.502: INFO: Received response from host: affinity-nodeport-transition-hc4bz
  Jun  8 12:57:12.502: INFO: Received response from host: affinity-nodeport-transition-hc4bz
  Jun  8 12:57:12.502: INFO: Received response from host: affinity-nodeport-transition-hc4bz
  Jun  8 12:57:12.502: INFO: Received response from host: affinity-nodeport-transition-hc4bz
  Jun  8 12:57:12.502: INFO: Received response from host: affinity-nodeport-transition-hc4bz
  Jun  8 12:57:12.502: INFO: Received response from host: affinity-nodeport-transition-hc4bz
  Jun  8 12:57:12.502: INFO: Received response from host: affinity-nodeport-transition-hc4bz
  Jun  8 12:57:12.502: INFO: Received response from host: affinity-nodeport-transition-hc4bz
  Jun  8 12:57:12.502: INFO: Received response from host: affinity-nodeport-transition-hc4bz
  Jun  8 12:57:12.502: INFO: Received response from host: affinity-nodeport-transition-hc4bz
  Jun  8 12:57:12.502: INFO: Received response from host: affinity-nodeport-transition-hc4bz
  Jun  8 12:57:12.502: INFO: Received response from host: affinity-nodeport-transition-hc4bz
  Jun  8 12:57:12.502: INFO: Received response from host: affinity-nodeport-transition-hc4bz
  Jun  8 12:57:12.502: INFO: Received response from host: affinity-nodeport-transition-hc4bz
  Jun  8 12:57:12.502: INFO: Received response from host: affinity-nodeport-transition-hc4bz
  Jun  8 12:57:12.502: INFO: Received response from host: affinity-nodeport-transition-hc4bz
  Jun  8 12:57:12.502: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-5573, will wait for the garbage collector to delete the pods @ 06/08/24 12:57:12.512
  Jun  8 12:57:12.575: INFO: Deleting ReplicationController affinity-nodeport-transition took: 7.275881ms
  E0608 12:57:12.634561      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:57:12.675: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.591173ms
  E0608 12:57:13.634732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:57:14.636275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:57:15.497: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5573" for this suite. @ 06/08/24 12:57:15.5
• [9.756 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 06/08/24 12:57:15.506
  Jun  8 12:57:15.506: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename container-probe @ 06/08/24 12:57:15.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:57:15.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:57:15.526
  STEP: Creating pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 in namespace container-probe-6269 @ 06/08/24 12:57:15.528
  E0608 12:57:15.636648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:57:16.637070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/08/24 12:57:17.541
  Jun  8 12:57:17.544: INFO: Initial restart count of pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 is 0
  Jun  8 12:57:17.547: INFO: Get pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 in namespace container-probe-6269
  E0608 12:57:17.637795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:57:18.638048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:57:19.550: INFO: Get pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 in namespace container-probe-6269
  E0608 12:57:19.638083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:57:20.638160      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:57:21.555: INFO: Get pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 in namespace container-probe-6269
  E0608 12:57:21.638908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:57:22.639118      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:57:23.559: INFO: Get pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 in namespace container-probe-6269
  E0608 12:57:23.639362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:57:24.640231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:57:25.563: INFO: Get pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 in namespace container-probe-6269
  E0608 12:57:25.640802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:57:26.640912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:57:27.567: INFO: Get pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 in namespace container-probe-6269
  E0608 12:57:27.641636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:57:28.641732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:57:29.570: INFO: Get pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 in namespace container-probe-6269
  E0608 12:57:29.641925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:57:30.642045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:57:31.575: INFO: Get pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 in namespace container-probe-6269
  E0608 12:57:31.643008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:57:32.644100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:57:33.580: INFO: Get pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 in namespace container-probe-6269
  E0608 12:57:33.644478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:57:34.644612      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:57:35.584: INFO: Get pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 in namespace container-probe-6269
  E0608 12:57:35.645171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:57:36.646017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:57:37.589: INFO: Get pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 in namespace container-probe-6269
  E0608 12:57:37.646335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:57:38.646477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:57:39.592: INFO: Get pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 in namespace container-probe-6269
  E0608 12:57:39.646997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:57:40.647133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:57:41.597: INFO: Get pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 in namespace container-probe-6269
  E0608 12:57:41.647612      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:57:42.647730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:57:43.601: INFO: Get pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 in namespace container-probe-6269
  E0608 12:57:43.647729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:57:44.650658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:57:45.604: INFO: Get pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 in namespace container-probe-6269
  E0608 12:57:45.650655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:57:46.650986      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:57:47.608: INFO: Get pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 in namespace container-probe-6269
  E0608 12:57:47.651048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:57:48.651203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:57:49.611: INFO: Get pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 in namespace container-probe-6269
  E0608 12:57:49.652060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:57:50.652176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:57:51.615: INFO: Get pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 in namespace container-probe-6269
  E0608 12:57:51.652493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:57:52.653500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:57:53.619: INFO: Get pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 in namespace container-probe-6269
  E0608 12:57:53.653982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:57:54.654347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:57:55.623: INFO: Get pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 in namespace container-probe-6269
  E0608 12:57:55.655170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:57:56.656147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:57:57.626: INFO: Get pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 in namespace container-probe-6269
  E0608 12:57:57.656515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:57:58.656725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:57:59.630: INFO: Get pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 in namespace container-probe-6269
  E0608 12:57:59.656900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:58:00.657026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:58:01.634: INFO: Get pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 in namespace container-probe-6269
  E0608 12:58:01.658063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:58:02.658329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:58:03.638: INFO: Get pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 in namespace container-probe-6269
  E0608 12:58:03.658735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:58:04.658879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:58:05.642: INFO: Get pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 in namespace container-probe-6269
  E0608 12:58:05.659435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:58:06.660038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:58:07.646: INFO: Get pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 in namespace container-probe-6269
  E0608 12:58:07.660633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:58:08.660782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:58:09.650: INFO: Get pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 in namespace container-probe-6269
  E0608 12:58:09.661711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:58:10.661843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:58:11.654: INFO: Get pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 in namespace container-probe-6269
  E0608 12:58:11.662104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:58:12.662241      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:58:13.658: INFO: Get pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 in namespace container-probe-6269
  E0608 12:58:13.662805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:58:14.663825      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:58:15.661: INFO: Get pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 in namespace container-probe-6269
  E0608 12:58:15.663954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:58:16.665057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:58:17.665045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:58:17.667: INFO: Get pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 in namespace container-probe-6269
  E0608 12:58:18.665351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:58:19.665582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:58:19.673: INFO: Get pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 in namespace container-probe-6269
  E0608 12:58:20.666195      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:58:21.667054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:58:21.676: INFO: Get pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 in namespace container-probe-6269
  E0608 12:58:22.667141      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:58:23.667614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:58:23.680: INFO: Get pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 in namespace container-probe-6269
  E0608 12:58:24.667710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:58:25.668043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:58:25.683: INFO: Get pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 in namespace container-probe-6269
  E0608 12:58:26.668644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:58:27.669549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:58:27.686: INFO: Get pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 in namespace container-probe-6269
  E0608 12:58:28.669684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:58:29.669781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:58:29.692: INFO: Get pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 in namespace container-probe-6269
  E0608 12:58:30.669900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:58:31.670009      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:58:31.696: INFO: Get pod test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 in namespace container-probe-6269
  Jun  8 12:58:31.696: INFO: Restart count of pod container-probe-6269/test-grpc-f32fd5a3-7e88-4e77-9b7c-40a7d67b2d70 is now 1 (1m14.151881747s elapsed)
  STEP: deleting the pod @ 06/08/24 12:58:31.696
  Jun  8 12:58:31.706: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6269" for this suite. @ 06/08/24 12:58:31.709
• [76.209 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 06/08/24 12:58:31.716
  Jun  8 12:58:31.716: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename dns @ 06/08/24 12:58:31.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:58:31.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:58:31.733
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-7998.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-7998.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 06/08/24 12:58:31.734
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-7998.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-7998.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 06/08/24 12:58:31.734
  STEP: creating a pod to probe /etc/hosts @ 06/08/24 12:58:31.734
  STEP: submitting the pod to kubernetes @ 06/08/24 12:58:31.734
  E0608 12:58:32.670152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:58:33.670345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/08/24 12:58:33.749
  STEP: looking for the results for each expected name from probers @ 06/08/24 12:58:33.751
  Jun  8 12:58:33.764: INFO: DNS probes using dns-7998/dns-test-2344704a-6408-4ad9-8913-69e9dce9f06d succeeded

  STEP: deleting the pod @ 06/08/24 12:58:33.764
  Jun  8 12:58:33.777: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7998" for this suite. @ 06/08/24 12:58:33.78
• [2.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 06/08/24 12:58:33.785
  Jun  8 12:58:33.785: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename pods @ 06/08/24 12:58:33.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:58:33.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:58:33.803
  Jun  8 12:58:33.805: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: creating the pod @ 06/08/24 12:58:33.805
  STEP: submitting the pod to kubernetes @ 06/08/24 12:58:33.806
  E0608 12:58:34.670438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:58:35.670800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:58:35.885: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2190" for this suite. @ 06/08/24 12:58:35.888
• [2.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 06/08/24 12:58:35.894
  Jun  8 12:58:35.894: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename resourcequota @ 06/08/24 12:58:35.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:58:35.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:58:35.911
  STEP: Counting existing ResourceQuota @ 06/08/24 12:58:35.913
  E0608 12:58:36.670887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:58:37.670999      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:58:38.671622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:58:39.671753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:58:40.671832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/08/24 12:58:40.916
  STEP: Ensuring resource quota status is calculated @ 06/08/24 12:58:40.922
  E0608 12:58:41.671915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:58:42.672994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 06/08/24 12:58:42.926
  STEP: Creating a NodePort Service @ 06/08/24 12:58:42.942
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 06/08/24 12:58:42.961
  STEP: Ensuring resource quota status captures service creation @ 06/08/24 12:58:42.978
  E0608 12:58:43.673275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:58:44.673902      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 06/08/24 12:58:44.983
  STEP: Ensuring resource quota status released usage @ 06/08/24 12:58:45.021
  E0608 12:58:45.673990      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:58:46.675075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:58:47.026: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8791" for this suite. @ 06/08/24 12:58:47.03
• [11.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 06/08/24 12:58:47.037
  Jun  8 12:58:47.037: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename webhook @ 06/08/24 12:58:47.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:58:47.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:58:47.055
  STEP: Setting up server cert @ 06/08/24 12:58:47.074
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/08/24 12:58:47.364
  STEP: Deploying the webhook pod @ 06/08/24 12:58:47.373
  STEP: Wait for the deployment to be ready @ 06/08/24 12:58:47.385
  Jun  8 12:58:47.391: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0608 12:58:47.675676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:58:48.675635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/08/24 12:58:49.401
  STEP: Verifying the service has paired with the endpoint @ 06/08/24 12:58:49.41
  E0608 12:58:49.676231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:58:50.410: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 06/08/24 12:58:50.471
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/08/24 12:58:50.491
  STEP: Deleting the collection of validation webhooks @ 06/08/24 12:58:50.511
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/08/24 12:58:50.552
  Jun  8 12:58:50.591: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5745" for this suite. @ 06/08/24 12:58:50.593
  STEP: Destroying namespace "webhook-markers-7699" for this suite. @ 06/08/24 12:58:50.602
• [3.572 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:530
  STEP: Creating a kubernetes client @ 06/08/24 12:58:50.609
  Jun  8 12:58:50.609: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename security-context-test @ 06/08/24 12:58:50.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:58:50.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:58:50.627
  E0608 12:58:50.676648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:58:51.677385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:58:52.659: INFO: Got logs for pod "busybox-privileged-false-6456fec2-0322-445d-a605-11d13c28baa3": "ip: RTNETLINK answers: Operation not permitted\n"
  Jun  8 12:58:52.659: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3020" for this suite. @ 06/08/24 12:58:52.664
• [2.063 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 06/08/24 12:58:52.672
  Jun  8 12:58:52.672: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/08/24 12:58:52.673
  E0608 12:58:52.677525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:58:52.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:58:52.69
  Jun  8 12:58:52.692: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  E0608 12:58:53.677655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:58:54.678043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:58:55.679073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:58:55.762: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9857" for this suite. @ 06/08/24 12:58:55.765
• [3.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 06/08/24 12:58:55.773
  Jun  8 12:58:55.773: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename webhook @ 06/08/24 12:58:55.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:58:55.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:58:55.797
  STEP: Setting up server cert @ 06/08/24 12:58:55.821
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/08/24 12:58:55.932
  STEP: Deploying the webhook pod @ 06/08/24 12:58:55.938
  STEP: Wait for the deployment to be ready @ 06/08/24 12:58:55.951
  Jun  8 12:58:55.957: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0608 12:58:56.679546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:58:57.679650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/08/24 12:58:57.965
  STEP: Verifying the service has paired with the endpoint @ 06/08/24 12:58:57.975
  E0608 12:58:58.680607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 12:58:58.975: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 06/08/24 12:58:58.981
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/08/24 12:58:58.993
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 06/08/24 12:58:58.998
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/08/24 12:58:59.007
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 06/08/24 12:58:59.014
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/08/24 12:58:59.024
  Jun  8 12:58:59.058: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3850" for this suite. @ 06/08/24 12:58:59.06
  STEP: Destroying namespace "webhook-markers-636" for this suite. @ 06/08/24 12:58:59.069
• [3.301 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 06/08/24 12:58:59.074
  Jun  8 12:58:59.074: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename secrets @ 06/08/24 12:58:59.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 12:58:59.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 12:58:59.093
  STEP: Creating secret with name s-test-opt-del-61905743-9321-492f-a73e-3225ed6ff9e9 @ 06/08/24 12:58:59.098
  STEP: Creating secret with name s-test-opt-upd-a130f202-c541-494c-9c6a-a5278f438f64 @ 06/08/24 12:58:59.102
  STEP: Creating the pod @ 06/08/24 12:58:59.107
  E0608 12:58:59.680729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:00.680975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-61905743-9321-492f-a73e-3225ed6ff9e9 @ 06/08/24 12:59:01.137
  STEP: Updating secret s-test-opt-upd-a130f202-c541-494c-9c6a-a5278f438f64 @ 06/08/24 12:59:01.143
  STEP: Creating secret with name s-test-opt-create-f73b12e9-eda6-4861-b1d6-a2bd79c10690 @ 06/08/24 12:59:01.146
  STEP: waiting to observe update in volume @ 06/08/24 12:59:01.15
  E0608 12:59:01.681055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:02.681171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:03.681931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:04.682125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:05.683069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:06.684034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:07.684142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:08.684305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:09.685201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:10.685419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:11.685881      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:12.686077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:13.686181      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:14.686481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:15.686993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:16.688057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:17.688589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:18.688691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:19.689604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:20.689689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:21.690081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:22.690282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:23.691343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:24.691426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:25.692235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:26.693029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:27.693148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:28.693236      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:29.694283      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:30.694471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:31.695141      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:32.695346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:33.695427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:34.695664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:35.696330      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:36.696722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:37.697521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:38.697652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:39.697689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:40.697765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:41.697932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:42.698054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:43.699051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:44.699458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:45.700401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:46.701326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:47.701430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:48.701493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:49.702186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:50.702270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:51.702949      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:52.703051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:53.703150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:54.703222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:55.704213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:56.704579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:57.705064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:58.705456      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 12:59:59.706352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:00.706532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:01.707427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:02.707651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:03.708553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:04.708723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:05.708815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:06.709219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:07.710067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:08.710241      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:09.711148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:10.711242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:11.711832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:12.711963      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:13.712063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:14.712937      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:15.713028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:16.713461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:17.714249      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:18.714448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:19.715442      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:20.715637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:21.716639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:22.716752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:23.716853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:24.716947      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:00:25.469: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6013" for this suite. @ 06/08/24 13:00:25.473
• [86.406 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 06/08/24 13:00:25.481
  Jun  8 13:00:25.481: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename server-version @ 06/08/24 13:00:25.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:00:25.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:00:25.503
  STEP: Request ServerVersion @ 06/08/24 13:00:25.504
  STEP: Confirm major version @ 06/08/24 13:00:25.505
  Jun  8 13:00:25.505: INFO: Major version: 1
  STEP: Confirm minor version @ 06/08/24 13:00:25.505
  Jun  8 13:00:25.505: INFO: cleanMinorVersion: 29
  Jun  8 13:00:25.505: INFO: Minor version: 29
  Jun  8 13:00:25.505: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-2222" for this suite. @ 06/08/24 13:00:25.507
• [0.032 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 06/08/24 13:00:25.513
  Jun  8 13:00:25.513: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename replicaset @ 06/08/24 13:00:25.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:00:25.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:00:25.54
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 06/08/24 13:00:25.542
  E0608 13:00:25.717458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:26.718481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 06/08/24 13:00:27.558
  STEP: Then the orphan pod is adopted @ 06/08/24 13:00:27.561
  E0608 13:00:27.719394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 06/08/24 13:00:28.568
  Jun  8 13:00:28.571: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 06/08/24 13:00:28.579
  E0608 13:00:28.720321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:00:29.585: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8175" for this suite. @ 06/08/24 13:00:29.588
• [4.079 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 06/08/24 13:00:29.593
  Jun  8 13:00:29.593: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename limitrange @ 06/08/24 13:00:29.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:00:29.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:00:29.611
  STEP: Creating LimitRange "e2e-limitrange-p6vsj" in namespace "limitrange-7955" @ 06/08/24 13:00:29.613
  STEP: Creating another limitRange in another namespace @ 06/08/24 13:00:29.617
  Jun  8 13:00:29.631: INFO: Namespace "e2e-limitrange-p6vsj-8011" created
  Jun  8 13:00:29.631: INFO: Creating LimitRange "e2e-limitrange-p6vsj" in namespace "e2e-limitrange-p6vsj-8011"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-p6vsj" @ 06/08/24 13:00:29.636
  Jun  8 13:00:29.639: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-p6vsj" in "limitrange-7955" namespace @ 06/08/24 13:00:29.639
  Jun  8 13:00:29.643: INFO: LimitRange "e2e-limitrange-p6vsj" has been patched
  STEP: Delete LimitRange "e2e-limitrange-p6vsj" by Collection with labelSelector: "e2e-limitrange-p6vsj=patched" @ 06/08/24 13:00:29.643
  STEP: Confirm that the limitRange "e2e-limitrange-p6vsj" has been deleted @ 06/08/24 13:00:29.65
  Jun  8 13:00:29.650: INFO: Requesting list of LimitRange to confirm quantity
  Jun  8 13:00:29.652: INFO: Found 0 LimitRange with label "e2e-limitrange-p6vsj=patched"
  Jun  8 13:00:29.652: INFO: LimitRange "e2e-limitrange-p6vsj" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-p6vsj" @ 06/08/24 13:00:29.652
  Jun  8 13:00:29.655: INFO: Found 1 limitRange
  Jun  8 13:00:29.655: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-7955" for this suite. @ 06/08/24 13:00:29.658
  STEP: Destroying namespace "e2e-limitrange-p6vsj-8011" for this suite. @ 06/08/24 13:00:29.664
• [0.075 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 06/08/24 13:00:29.668
  Jun  8 13:00:29.668: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename pods @ 06/08/24 13:00:29.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:00:29.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:00:29.682
  STEP: creating the pod @ 06/08/24 13:00:29.684
  STEP: submitting the pod to kubernetes @ 06/08/24 13:00:29.684
  E0608 13:00:29.720899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:30.721038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 06/08/24 13:00:31.7
  STEP: updating the pod @ 06/08/24 13:00:31.702
  E0608 13:00:31.721279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:00:32.218: INFO: Successfully updated pod "pod-update-54136089-c615-4713-aeba-e34a9badbf3d"
  STEP: verifying the updated pod is in kubernetes @ 06/08/24 13:00:32.221
  Jun  8 13:00:32.224: INFO: Pod update OK
  Jun  8 13:00:32.224: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5685" for this suite. @ 06/08/24 13:00:32.226
• [2.563 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 06/08/24 13:00:32.231
  Jun  8 13:00:32.231: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename resourcequota @ 06/08/24 13:00:32.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:00:32.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:00:32.25
  STEP: Counting existing ResourceQuota @ 06/08/24 13:00:32.252
  E0608 13:00:32.721602      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:33.722234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:34.722350      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:35.722474      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:36.722546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/08/24 13:00:37.255
  STEP: Ensuring resource quota status is calculated @ 06/08/24 13:00:37.261
  E0608 13:00:37.722997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:38.723110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 06/08/24 13:00:39.265
  STEP: Ensuring resource quota status captures replication controller creation @ 06/08/24 13:00:39.278
  E0608 13:00:39.723681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:40.723775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 06/08/24 13:00:41.282
  STEP: Ensuring resource quota status released usage @ 06/08/24 13:00:41.287
  E0608 13:00:41.724622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:42.724709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:00:43.291: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8110" for this suite. @ 06/08/24 13:00:43.294
• [11.069 seconds]
------------------------------
S
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 06/08/24 13:00:43.3
  Jun  8 13:00:43.300: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename services @ 06/08/24 13:00:43.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:00:43.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:00:43.32
  STEP: creating service multi-endpoint-test in namespace services-1531 @ 06/08/24 13:00:43.321
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1531 to expose endpoints map[] @ 06/08/24 13:00:43.329
  Jun  8 13:00:43.332: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0608 13:00:43.725420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:00:44.341: INFO: successfully validated that service multi-endpoint-test in namespace services-1531 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-1531 @ 06/08/24 13:00:44.341
  E0608 13:00:44.725501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:45.725597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1531 to expose endpoints map[pod1:[100]] @ 06/08/24 13:00:46.357
  Jun  8 13:00:46.364: INFO: successfully validated that service multi-endpoint-test in namespace services-1531 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-1531 @ 06/08/24 13:00:46.364
  E0608 13:00:46.726355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:47.727342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1531 to expose endpoints map[pod1:[100] pod2:[101]] @ 06/08/24 13:00:48.375
  Jun  8 13:00:48.385: INFO: successfully validated that service multi-endpoint-test in namespace services-1531 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 06/08/24 13:00:48.385
  Jun  8 13:00:48.385: INFO: Creating new exec pod
  E0608 13:00:48.727470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:49.727655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:50.728718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:00:51.398: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-1531 exec execpodzts8l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Jun  8 13:00:51.489: INFO: stderr: "+ nc -v -t -w 2 multi-endpoint-test 80\n+ echo hostName\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Jun  8 13:00:51.489: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  8 13:00:51.489: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-1531 exec execpodzts8l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.245 80'
  Jun  8 13:00:51.572: INFO: stderr: "+ nc -v -t -w 2 10.152.183.245 80\nConnection to 10.152.183.245 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Jun  8 13:00:51.572: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  8 13:00:51.572: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-1531 exec execpodzts8l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Jun  8 13:00:51.658: INFO: stderr: "+ nc -v -t -w 2 multi-endpoint-test 81\n+ echo hostName\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Jun  8 13:00:51.658: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  8 13:00:51.658: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-1531 exec execpodzts8l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.245 81'
  E0608 13:00:51.729776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:00:51.744: INFO: stderr: "+ nc -v -t -w 2 10.152.183.245 81\n+ echo hostName\nConnection to 10.152.183.245 81 port [tcp/*] succeeded!\n"
  Jun  8 13:00:51.744: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-1531 @ 06/08/24 13:00:51.745
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1531 to expose endpoints map[pod2:[101]] @ 06/08/24 13:00:51.759
  Jun  8 13:00:51.768: INFO: successfully validated that service multi-endpoint-test in namespace services-1531 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-1531 @ 06/08/24 13:00:51.768
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1531 to expose endpoints map[] @ 06/08/24 13:00:51.785
  Jun  8 13:00:51.791: INFO: successfully validated that service multi-endpoint-test in namespace services-1531 exposes endpoints map[]
  Jun  8 13:00:51.803: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1531" for this suite. @ 06/08/24 13:00:51.806
• [8.512 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 06/08/24 13:00:51.812
  Jun  8 13:00:51.812: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename emptydir @ 06/08/24 13:00:51.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:00:51.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:00:51.835
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 06/08/24 13:00:51.837
  E0608 13:00:52.730058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:53.730152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:00:53.849
  Jun  8 13:00:53.852: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-dac815a3-ed69-46e9-a6c1-e359080b59e9 container test-container: <nil>
  STEP: delete the pod @ 06/08/24 13:00:53.857
  Jun  8 13:00:53.871: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8226" for this suite. @ 06/08/24 13:00:53.874
• [2.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:170
  STEP: Creating a kubernetes client @ 06/08/24 13:00:53.879
  Jun  8 13:00:53.879: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename configmap @ 06/08/24 13:00:53.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:00:53.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:00:53.895
  STEP: creating a ConfigMap @ 06/08/24 13:00:53.896
  STEP: fetching the ConfigMap @ 06/08/24 13:00:53.9
  STEP: patching the ConfigMap @ 06/08/24 13:00:53.902
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 06/08/24 13:00:53.906
  STEP: deleting the ConfigMap by collection with a label selector @ 06/08/24 13:00:53.908
  STEP: listing all ConfigMaps in test namespace @ 06/08/24 13:00:53.914
  Jun  8 13:00:53.916: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6836" for this suite. @ 06/08/24 13:00:53.919
• [0.046 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 06/08/24 13:00:53.926
  Jun  8 13:00:53.926: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename pods @ 06/08/24 13:00:53.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:00:53.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:00:53.942
  STEP: creating the pod @ 06/08/24 13:00:53.943
  STEP: setting up watch @ 06/08/24 13:00:53.943
  STEP: submitting the pod to kubernetes @ 06/08/24 13:00:54.046
  STEP: verifying the pod is in kubernetes @ 06/08/24 13:00:54.052
  STEP: verifying pod creation was observed @ 06/08/24 13:00:54.055
  E0608 13:00:54.730295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:55.731270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 06/08/24 13:00:56.065
  STEP: verifying pod deletion was observed @ 06/08/24 13:00:56.073
  E0608 13:00:56.732068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:00:57.502: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1057" for this suite. @ 06/08/24 13:00:57.505
• [3.584 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 06/08/24 13:00:57.51
  Jun  8 13:00:57.510: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename svcaccounts @ 06/08/24 13:00:57.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:00:57.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:00:57.528
  Jun  8 13:00:57.546: INFO: created pod pod-service-account-defaultsa
  Jun  8 13:00:57.546: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Jun  8 13:00:57.552: INFO: created pod pod-service-account-mountsa
  Jun  8 13:00:57.552: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Jun  8 13:00:57.556: INFO: created pod pod-service-account-nomountsa
  Jun  8 13:00:57.556: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Jun  8 13:00:57.563: INFO: created pod pod-service-account-defaultsa-mountspec
  Jun  8 13:00:57.563: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Jun  8 13:00:57.567: INFO: created pod pod-service-account-mountsa-mountspec
  Jun  8 13:00:57.567: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Jun  8 13:00:57.572: INFO: created pod pod-service-account-nomountsa-mountspec
  Jun  8 13:00:57.572: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Jun  8 13:00:57.581: INFO: created pod pod-service-account-defaultsa-nomountspec
  Jun  8 13:00:57.581: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Jun  8 13:00:57.584: INFO: created pod pod-service-account-mountsa-nomountspec
  Jun  8 13:00:57.584: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Jun  8 13:00:57.591: INFO: created pod pod-service-account-nomountsa-nomountspec
  Jun  8 13:00:57.591: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Jun  8 13:00:57.591: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6782" for this suite. @ 06/08/24 13:00:57.601
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 06/08/24 13:00:57.611
  Jun  8 13:00:57.611: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename projected @ 06/08/24 13:00:57.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:00:57.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:00:57.633
  STEP: Creating projection with secret that has name projected-secret-test-f73cb137-3be3-447c-8d37-fb5383a58620 @ 06/08/24 13:00:57.635
  STEP: Creating a pod to test consume secrets @ 06/08/24 13:00:57.642
  E0608 13:00:57.733076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:58.733169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:00:59.733583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:00.733689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:01:01.667
  Jun  8 13:01:01.670: INFO: Trying to get logs from node ip-172-31-42-99 pod pod-projected-secrets-0e2a63ae-a219-4f91-a48b-171fdef20947 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/08/24 13:01:01.685
  Jun  8 13:01:01.702: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5876" for this suite. @ 06/08/24 13:01:01.704
• [4.097 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 06/08/24 13:01:01.708
  Jun  8 13:01:01.708: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename deployment @ 06/08/24 13:01:01.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:01:01.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:01:01.726
  Jun  8 13:01:01.728: INFO: Creating simple deployment test-new-deployment
  E0608 13:01:01.733632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:01:01.745: INFO: deployment "test-new-deployment" doesn't have the required revision set
  E0608 13:01:02.734374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:03.734474      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 06/08/24 13:01:03.756
  STEP: updating a scale subresource @ 06/08/24 13:01:03.758
  STEP: verifying the deployment Spec.Replicas was modified @ 06/08/24 13:01:03.763
  STEP: Patch a scale subresource @ 06/08/24 13:01:03.766
  Jun  8 13:01:03.791: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8477",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "33c50013-7676-4232-b66c-5297ca06e67e",
      ResourceVersion: (string) (len=5) "18685",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853448461,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853448461,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853448463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853448462,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853448461,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853448463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853448463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun  8 13:01:03.794: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8477",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a9a5a059-310d-4b62-9bdf-445ff2d9c883",
      ResourceVersion: (string) (len=5) "18688",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853448461,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "33c50013-7676-4232-b66c-5297ca06e67e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853448463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 33 63 35 30 30  31 33 2d 37 36 37 36 2d  |\"33c50013-7676-|
              00000120  34 32 33 32 2d 62 36 36  63 2d 35 32 39 37 63 61  |4232-b66c-5297ca|
              00000130  30 36 65 36 37 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |06e67e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853448463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun  8 13:01:03.798: INFO: Pod "test-new-deployment-557759b7c7-9clvz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-9clvz",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8477",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0815e0a9-9fd3-47a6-9f1f-c0775c7db1d9",
      ResourceVersion: (string) (len=5) "18686",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853448463,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a9a5a059-310d-4b62-9bdf-445ff2d9c883",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853448463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 39  61 35 61 30 35 39 2d 33  |d\":\"a9a5a059-3|
              00000090  31 30 64 2d 34 62 36 32  2d 39 62 64 66 2d 34 34  |10d-4b62-9bdf-44|
              000000a0  35 66 66 32 64 39 63 38  38 33 5c 22 7d 22 3a 7b  |5ff2d9c883\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x22zh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x22zh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-74-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853448463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:01:03.802: INFO: Pod "test-new-deployment-557759b7c7-kjqfg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-kjqfg",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8477",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a7618f0b-f42a-41cb-8ad8-dced91649fe8",
      ResourceVersion: (string) (len=5) "18635",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853448461,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a9a5a059-310d-4b62-9bdf-445ff2d9c883",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853448461,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 39  61 35 61 30 35 39 2d 33  |d\":\"a9a5a059-3|
              00000090  31 30 64 2d 34 62 36 32  2d 39 62 64 66 2d 34 34  |10d-4b62-9bdf-44|
              000000a0  35 66 66 32 64 39 63 38  38 33 5c 22 7d 22 3a 7b  |5ff2d9c883\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853448462,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 36  35 2e 34 36 5c 22 7d 22  |2.168.165.46\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rdnch",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rdnch",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-42-99",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853448462,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853448461,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853448462,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853448462,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853448461,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.42.99",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.42.99"
        }
      },
      PodIP: (string) (len=14) "192.168.165.46",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.165.46"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853448461,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853448462,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://795d88d7778a5135d7391b08c5bb5071d913cf63a35c8607de87e98d3c7c1ea5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:01:03.803: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8477" for this suite. @ 06/08/24 13:01:03.81
• [2.108 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1731
  STEP: Creating a kubernetes client @ 06/08/24 13:01:03.817
  Jun  8 13:01:03.817: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename kubectl @ 06/08/24 13:01:03.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:01:03.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:01:03.838
  Jun  8 13:01:03.840: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-4032 version'
  Jun  8 13:01:03.874: INFO: stderr: ""
  Jun  8 13:01:03.874: INFO: stdout: "Client Version: v1.29.5\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.29.5\n"
  Jun  8 13:01:03.875: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4032" for this suite. @ 06/08/24 13:01:03.877
• [0.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 06/08/24 13:01:03.884
  Jun  8 13:01:03.884: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename dns @ 06/08/24 13:01:03.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:01:03.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:01:03.9
  STEP: Creating a test headless service @ 06/08/24 13:01:03.902
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8247 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8247;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8247 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8247;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8247.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8247.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8247.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8247.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8247.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-8247.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8247.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-8247.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8247.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-8247.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8247.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-8247.svc;check="$$(dig +notcp +noall +answer +search 105.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.105_udp@PTR;check="$$(dig +tcp +noall +answer +search 105.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.105_tcp@PTR;sleep 1; done
   @ 06/08/24 13:01:03.92
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8247 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8247;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8247 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8247;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8247.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8247.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8247.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8247.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8247.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-8247.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8247.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-8247.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8247.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-8247.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8247.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-8247.svc;check="$$(dig +notcp +noall +answer +search 105.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.105_udp@PTR;check="$$(dig +tcp +noall +answer +search 105.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.105_tcp@PTR;sleep 1; done
   @ 06/08/24 13:01:03.92
  STEP: creating a pod to probe DNS @ 06/08/24 13:01:03.92
  STEP: submitting the pod to kubernetes @ 06/08/24 13:01:03.92
  E0608 13:01:04.734694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:05.734801      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/08/24 13:01:05.939
  STEP: looking for the results for each expected name from probers @ 06/08/24 13:01:05.941
  Jun  8 13:01:05.945: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8247/dns-test-d84d7b76-fba0-4b7a-a9d4-7d782b87f07e: the server could not find the requested resource (get pods dns-test-d84d7b76-fba0-4b7a-a9d4-7d782b87f07e)
  Jun  8 13:01:05.948: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8247/dns-test-d84d7b76-fba0-4b7a-a9d4-7d782b87f07e: the server could not find the requested resource (get pods dns-test-d84d7b76-fba0-4b7a-a9d4-7d782b87f07e)
  Jun  8 13:01:05.951: INFO: Unable to read wheezy_udp@dns-test-service.dns-8247 from pod dns-8247/dns-test-d84d7b76-fba0-4b7a-a9d4-7d782b87f07e: the server could not find the requested resource (get pods dns-test-d84d7b76-fba0-4b7a-a9d4-7d782b87f07e)
  Jun  8 13:01:05.954: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8247 from pod dns-8247/dns-test-d84d7b76-fba0-4b7a-a9d4-7d782b87f07e: the server could not find the requested resource (get pods dns-test-d84d7b76-fba0-4b7a-a9d4-7d782b87f07e)
  Jun  8 13:01:05.957: INFO: Unable to read wheezy_udp@dns-test-service.dns-8247.svc from pod dns-8247/dns-test-d84d7b76-fba0-4b7a-a9d4-7d782b87f07e: the server could not find the requested resource (get pods dns-test-d84d7b76-fba0-4b7a-a9d4-7d782b87f07e)
  Jun  8 13:01:05.960: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8247.svc from pod dns-8247/dns-test-d84d7b76-fba0-4b7a-a9d4-7d782b87f07e: the server could not find the requested resource (get pods dns-test-d84d7b76-fba0-4b7a-a9d4-7d782b87f07e)
  Jun  8 13:01:05.962: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8247.svc from pod dns-8247/dns-test-d84d7b76-fba0-4b7a-a9d4-7d782b87f07e: the server could not find the requested resource (get pods dns-test-d84d7b76-fba0-4b7a-a9d4-7d782b87f07e)
  Jun  8 13:01:05.965: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8247.svc from pod dns-8247/dns-test-d84d7b76-fba0-4b7a-a9d4-7d782b87f07e: the server could not find the requested resource (get pods dns-test-d84d7b76-fba0-4b7a-a9d4-7d782b87f07e)
  Jun  8 13:01:05.977: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8247/dns-test-d84d7b76-fba0-4b7a-a9d4-7d782b87f07e: the server could not find the requested resource (get pods dns-test-d84d7b76-fba0-4b7a-a9d4-7d782b87f07e)
  Jun  8 13:01:05.980: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8247/dns-test-d84d7b76-fba0-4b7a-a9d4-7d782b87f07e: the server could not find the requested resource (get pods dns-test-d84d7b76-fba0-4b7a-a9d4-7d782b87f07e)
  Jun  8 13:01:05.982: INFO: Unable to read jessie_udp@dns-test-service.dns-8247 from pod dns-8247/dns-test-d84d7b76-fba0-4b7a-a9d4-7d782b87f07e: the server could not find the requested resource (get pods dns-test-d84d7b76-fba0-4b7a-a9d4-7d782b87f07e)
  Jun  8 13:01:05.984: INFO: Unable to read jessie_tcp@dns-test-service.dns-8247 from pod dns-8247/dns-test-d84d7b76-fba0-4b7a-a9d4-7d782b87f07e: the server could not find the requested resource (get pods dns-test-d84d7b76-fba0-4b7a-a9d4-7d782b87f07e)
  Jun  8 13:01:05.987: INFO: Unable to read jessie_udp@dns-test-service.dns-8247.svc from pod dns-8247/dns-test-d84d7b76-fba0-4b7a-a9d4-7d782b87f07e: the server could not find the requested resource (get pods dns-test-d84d7b76-fba0-4b7a-a9d4-7d782b87f07e)
  Jun  8 13:01:05.990: INFO: Unable to read jessie_tcp@dns-test-service.dns-8247.svc from pod dns-8247/dns-test-d84d7b76-fba0-4b7a-a9d4-7d782b87f07e: the server could not find the requested resource (get pods dns-test-d84d7b76-fba0-4b7a-a9d4-7d782b87f07e)
  Jun  8 13:01:05.992: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8247.svc from pod dns-8247/dns-test-d84d7b76-fba0-4b7a-a9d4-7d782b87f07e: the server could not find the requested resource (get pods dns-test-d84d7b76-fba0-4b7a-a9d4-7d782b87f07e)
  Jun  8 13:01:05.995: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8247.svc from pod dns-8247/dns-test-d84d7b76-fba0-4b7a-a9d4-7d782b87f07e: the server could not find the requested resource (get pods dns-test-d84d7b76-fba0-4b7a-a9d4-7d782b87f07e)
  Jun  8 13:01:06.006: INFO: Lookups using dns-8247/dns-test-d84d7b76-fba0-4b7a-a9d4-7d782b87f07e failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8247 wheezy_tcp@dns-test-service.dns-8247 wheezy_udp@dns-test-service.dns-8247.svc wheezy_tcp@dns-test-service.dns-8247.svc wheezy_udp@_http._tcp.dns-test-service.dns-8247.svc wheezy_tcp@_http._tcp.dns-test-service.dns-8247.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8247 jessie_tcp@dns-test-service.dns-8247 jessie_udp@dns-test-service.dns-8247.svc jessie_tcp@dns-test-service.dns-8247.svc jessie_udp@_http._tcp.dns-test-service.dns-8247.svc jessie_tcp@_http._tcp.dns-test-service.dns-8247.svc]

  Jun  8 13:01:06.011: INFO: Pod client logs for webserver: 
  Jun  8 13:01:06.017: INFO: Pod client logs for querier: 
  Jun  8 13:01:06.021: INFO: Pod client logs for jessie-querier: 
  E0608 13:01:06.735640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:07.735722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:08.735822      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:09.735911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:10.736806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:01:11.013: INFO: DNS probes using dns-8247/dns-test-d84d7b76-fba0-4b7a-a9d4-7d782b87f07e succeeded

  STEP: deleting the pod @ 06/08/24 13:01:11.013
  STEP: deleting the test service @ 06/08/24 13:01:11.026
  STEP: deleting the test headless service @ 06/08/24 13:01:11.048
  Jun  8 13:01:11.058: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8247" for this suite. @ 06/08/24 13:01:11.063
• [7.184 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:558
  STEP: Creating a kubernetes client @ 06/08/24 13:01:11.068
  Jun  8 13:01:11.068: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename ingress @ 06/08/24 13:01:11.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:01:11.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:01:11.086
  STEP: getting /apis @ 06/08/24 13:01:11.088
  STEP: getting /apis/networking.k8s.io @ 06/08/24 13:01:11.09
  STEP: getting /apis/networking.k8s.iov1 @ 06/08/24 13:01:11.09
  STEP: creating @ 06/08/24 13:01:11.091
  STEP: getting @ 06/08/24 13:01:11.105
  STEP: listing @ 06/08/24 13:01:11.107
  STEP: watching @ 06/08/24 13:01:11.113
  Jun  8 13:01:11.113: INFO: starting watch
  STEP: cluster-wide listing @ 06/08/24 13:01:11.114
  STEP: cluster-wide watching @ 06/08/24 13:01:11.116
  Jun  8 13:01:11.116: INFO: starting watch
  STEP: patching @ 06/08/24 13:01:11.116
  STEP: updating @ 06/08/24 13:01:11.121
  Jun  8 13:01:11.128: INFO: waiting for watch events with expected annotations
  Jun  8 13:01:11.128: INFO: saw patched and updated annotations
  STEP: patching /status @ 06/08/24 13:01:11.128
  STEP: updating /status @ 06/08/24 13:01:11.137
  STEP: get /status @ 06/08/24 13:01:11.146
  STEP: deleting @ 06/08/24 13:01:11.151
  STEP: deleting a collection @ 06/08/24 13:01:11.162
  Jun  8 13:01:11.174: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-1447" for this suite. @ 06/08/24 13:01:11.177
• [0.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 06/08/24 13:01:11.185
  Jun  8 13:01:11.185: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename configmap @ 06/08/24 13:01:11.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:01:11.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:01:11.203
  STEP: Creating configMap with name configmap-test-volume-9f48e7e6-b08d-4ed4-8f62-aae092b31ff7 @ 06/08/24 13:01:11.204
  STEP: Creating a pod to test consume configMaps @ 06/08/24 13:01:11.208
  E0608 13:01:11.736910      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:12.737018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:13.737105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:14.737203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:01:15.225
  Jun  8 13:01:15.227: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-configmaps-743bf3fa-b157-4fdc-ad85-76d252140106 container configmap-volume-test: <nil>
  STEP: delete the pod @ 06/08/24 13:01:15.235
  Jun  8 13:01:15.249: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6561" for this suite. @ 06/08/24 13:01:15.252
• [4.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 06/08/24 13:01:15.258
  Jun  8 13:01:15.258: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename taint-single-pod @ 06/08/24 13:01:15.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:01:15.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:01:15.275
  Jun  8 13:01:15.276: INFO: Waiting up to 1m0s for all nodes to be ready
  E0608 13:01:15.737878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:16.737966      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:17.738569      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:18.738660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:19.738772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:20.738835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:21.738963      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:22.739038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:23.739159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:24.739358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:25.739478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:26.740003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:27.740707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:28.740894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:29.740981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:30.741074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:31.742126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:32.742218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:33.743077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:34.743340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:35.743382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:36.743830      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:37.744699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:38.744861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:39.744981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:40.745178      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:41.745447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:42.745565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:43.745658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:44.745802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:45.745854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:46.745993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:47.746839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:48.746928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:49.747032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:50.747633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:51.748022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:52.748709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:53.749477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:54.749576      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:55.749965      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:56.750393      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:57.751323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:58.751620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:01:59.751698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:00.752691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:01.752854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:02.752955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:03.753666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:04.753758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:05.754112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:06.754547      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:07.754748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:08.754946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:09.755125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:10.755374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:11.756422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:12.756697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:13.757562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:14.757723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:02:15.277: INFO: Waiting for terminating namespaces to be deleted...
  Jun  8 13:02:15.281: INFO: Starting informer...
  STEP: Starting pod... @ 06/08/24 13:02:15.281
  Jun  8 13:02:15.496: INFO: Pod is running on ip-172-31-31-116. Tainting Node
  STEP: Trying to apply a taint on the Node @ 06/08/24 13:02:15.496
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/08/24 13:02:15.505
  STEP: Waiting short time to make sure Pod is queued for deletion @ 06/08/24 13:02:15.508
  Jun  8 13:02:15.508: INFO: Pod wasn't evicted. Proceeding
  Jun  8 13:02:15.508: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/08/24 13:02:15.515
  STEP: Waiting some time to make sure that toleration time passed. @ 06/08/24 13:02:15.517
  E0608 13:02:15.757755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:16.758085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:17.758825      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:18.759516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:19.759680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:20.760714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:21.760779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:22.761029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:23.761130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:24.761214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:25.761349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:26.761842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:27.762084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:28.762205      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:29.763096      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:30.763188      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:31.763282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:32.763821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:33.763917      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:34.764770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:35.764874      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:36.764963      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:37.765145      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:38.765350      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:39.765529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:40.765703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:41.765757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:42.765951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:43.766192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:44.766368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:45.766534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:46.767470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:47.767626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:48.767710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:49.767732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:50.768749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:51.768847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:52.769045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:53.769289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:54.769478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:55.770310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:56.770405      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:57.770570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:58.770672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:02:59.770848      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:00.771035      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:01.771946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:02.772038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:03.772774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:04.772886      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:05.773058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:06.774029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:07.774221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:08.775084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:09.775204      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:10.775410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:11.775628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:12.775783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:13.775884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:14.775979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:15.776057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:16.776098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:17.776721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:18.776930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:19.777404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:20.777499      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:21.777575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:22.777787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:23.777957      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:24.778088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:25.778218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:26.778641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:27.778834      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:28.779546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:29.779673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:03:30.518: INFO: Pod wasn't evicted. Test successful
  Jun  8 13:03:30.518: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-8383" for this suite. @ 06/08/24 13:03:30.523
• [135.270 seconds]
------------------------------
SS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:46
  STEP: Creating a kubernetes client @ 06/08/24 13:03:30.528
  Jun  8 13:03:30.528: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename configmap @ 06/08/24 13:03:30.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:03:30.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:03:30.545
  STEP: Creating configMap configmap-476/configmap-test-296d98ea-a474-4a4d-9ae9-f8992e80e049 @ 06/08/24 13:03:30.547
  STEP: Creating a pod to test consume configMaps @ 06/08/24 13:03:30.552
  E0608 13:03:30.780711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:31.780885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:32.781804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:33.782274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:03:34.569
  Jun  8 13:03:34.571: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-configmaps-516271f0-0f23-4892-bc98-fa7156c677fc container env-test: <nil>
  STEP: delete the pod @ 06/08/24 13:03:34.586
  Jun  8 13:03:34.598: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-476" for this suite. @ 06/08/24 13:03:34.601
• [4.080 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 06/08/24 13:03:34.608
  Jun  8 13:03:34.608: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename container-runtime @ 06/08/24 13:03:34.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:03:34.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:03:34.637
  STEP: create the container @ 06/08/24 13:03:34.639
  W0608 13:03:34.646835      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 06/08/24 13:03:34.646
  E0608 13:03:34.782720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:35.783005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:36.783477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 06/08/24 13:03:37.662
  STEP: the container should be terminated @ 06/08/24 13:03:37.665
  STEP: the termination message should be set @ 06/08/24 13:03:37.665
  Jun  8 13:03:37.665: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 06/08/24 13:03:37.665
  Jun  8 13:03:37.679: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-188" for this suite. @ 06/08/24 13:03:37.682
• [3.078 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 06/08/24 13:03:37.687
  Jun  8 13:03:37.687: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename namespaces @ 06/08/24 13:03:37.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:03:37.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:03:37.704
  STEP: Read namespace status @ 06/08/24 13:03:37.706
  Jun  8 13:03:37.710: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 06/08/24 13:03:37.71
  Jun  8 13:03:37.714: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 06/08/24 13:03:37.714
  Jun  8 13:03:37.720: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Jun  8 13:03:37.720: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9734" for this suite. @ 06/08/24 13:03:37.722
• [0.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 06/08/24 13:03:37.73
  Jun  8 13:03:37.730: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename svcaccounts @ 06/08/24 13:03:37.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:03:37.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:03:37.748
  Jun  8 13:03:37.753: INFO: Got root ca configmap in namespace "svcaccounts-4366"
  Jun  8 13:03:37.757: INFO: Deleted root ca configmap in namespace "svcaccounts-4366"
  E0608 13:03:37.783969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for a new root ca configmap created @ 06/08/24 13:03:38.258
  Jun  8 13:03:38.262: INFO: Recreated root ca configmap in namespace "svcaccounts-4366"
  Jun  8 13:03:38.267: INFO: Updated root ca configmap in namespace "svcaccounts-4366"
  STEP: waiting for the root ca configmap reconciled @ 06/08/24 13:03:38.767
  Jun  8 13:03:38.771: INFO: Reconciled root ca configmap in namespace "svcaccounts-4366"
  Jun  8 13:03:38.771: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4366" for this suite. @ 06/08/24 13:03:38.773
• [1.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 06/08/24 13:03:38.781
  Jun  8 13:03:38.781: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename emptydir @ 06/08/24 13:03:38.781
  E0608 13:03:38.784748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:03:38.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:03:38.798
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 06/08/24 13:03:38.8
  E0608 13:03:39.784913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:40.785272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:41.785887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:42.786103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:03:42.815
  Jun  8 13:03:42.817: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-a95208d4-1381-43df-aa40-d91231ec7603 container test-container: <nil>
  STEP: delete the pod @ 06/08/24 13:03:42.823
  Jun  8 13:03:42.835: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-340" for this suite. @ 06/08/24 13:03:42.838
• [4.064 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 06/08/24 13:03:42.845
  Jun  8 13:03:42.845: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename watch @ 06/08/24 13:03:42.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:03:42.86
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:03:42.861
  STEP: creating a watch on configmaps @ 06/08/24 13:03:42.863
  STEP: creating a new configmap @ 06/08/24 13:03:42.864
  STEP: modifying the configmap once @ 06/08/24 13:03:42.868
  STEP: closing the watch once it receives two notifications @ 06/08/24 13:03:42.873
  Jun  8 13:03:42.873: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3823  bc69a069-2726-43b4-b7a1-577b0029d147 19438 0 2024-06-08 13:03:42 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-08 13:03:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  8 13:03:42.873: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3823  bc69a069-2726-43b4-b7a1-577b0029d147 19439 0 2024-06-08 13:03:42 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-08 13:03:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 06/08/24 13:03:42.873
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 06/08/24 13:03:42.88
  STEP: deleting the configmap @ 06/08/24 13:03:42.881
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 06/08/24 13:03:42.886
  Jun  8 13:03:42.886: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3823  bc69a069-2726-43b4-b7a1-577b0029d147 19440 0 2024-06-08 13:03:42 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-08 13:03:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  8 13:03:42.886: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3823  bc69a069-2726-43b4-b7a1-577b0029d147 19442 0 2024-06-08 13:03:42 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-08 13:03:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  8 13:03:42.886: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3823" for this suite. @ 06/08/24 13:03:42.888
• [0.050 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 06/08/24 13:03:42.895
  Jun  8 13:03:42.895: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename webhook @ 06/08/24 13:03:42.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:03:42.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:03:42.91
  STEP: Setting up server cert @ 06/08/24 13:03:42.932
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/08/24 13:03:43.237
  STEP: Deploying the webhook pod @ 06/08/24 13:03:43.247
  STEP: Wait for the deployment to be ready @ 06/08/24 13:03:43.258
  Jun  8 13:03:43.264: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0608 13:03:43.786319      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:44.786423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/08/24 13:03:45.273
  STEP: Verifying the service has paired with the endpoint @ 06/08/24 13:03:45.282
  E0608 13:03:45.787165      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:03:46.283: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 06/08/24 13:03:46.289
  STEP: Creating a custom resource definition that should be denied by the webhook @ 06/08/24 13:03:46.301
  Jun  8 13:03:46.301: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  Jun  8 13:03:46.343: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-470" for this suite. @ 06/08/24 13:03:46.347
  STEP: Destroying namespace "webhook-markers-1432" for this suite. @ 06/08/24 13:03:46.365
• [3.476 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 06/08/24 13:03:46.371
  Jun  8 13:03:46.371: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename disruption @ 06/08/24 13:03:46.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:03:46.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:03:46.389
  STEP: Creating a kubernetes client @ 06/08/24 13:03:46.39
  Jun  8 13:03:46.390: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename disruption-2 @ 06/08/24 13:03:46.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:03:46.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:03:46.406
  STEP: Waiting for the pdb to be processed @ 06/08/24 13:03:46.411
  E0608 13:03:46.787793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:47.787871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 06/08/24 13:03:48.419
  E0608 13:03:48.787946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:49.788062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 06/08/24 13:03:50.427
  E0608 13:03:50.788565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:51.788689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 06/08/24 13:03:52.43
  STEP: listing a collection of PDBs in namespace disruption-1046 @ 06/08/24 13:03:52.432
  STEP: deleting a collection of PDBs @ 06/08/24 13:03:52.435
  STEP: Waiting for the PDB collection to be deleted @ 06/08/24 13:03:52.445
  Jun  8 13:03:52.447: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-8655" for this suite. @ 06/08/24 13:03:52.45
  Jun  8 13:03:52.454: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1046" for this suite. @ 06/08/24 13:03:52.457
• [6.091 seconds]
------------------------------
S
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 06/08/24 13:03:52.462
  Jun  8 13:03:52.462: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename subjectreview @ 06/08/24 13:03:52.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:03:52.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:03:52.477
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-4818" @ 06/08/24 13:03:52.479
  Jun  8 13:03:52.483: INFO: saUsername: "system:serviceaccount:subjectreview-4818:e2e"
  Jun  8 13:03:52.483: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-4818"}
  Jun  8 13:03:52.483: INFO: saUID: "009f3bc3-91a1-4202-aebc-1345796cb5d9"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-4818:e2e" @ 06/08/24 13:03:52.483
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-4818:e2e" @ 06/08/24 13:03:52.483
  Jun  8 13:03:52.485: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-4818:e2e" api 'list' configmaps in "subjectreview-4818" namespace @ 06/08/24 13:03:52.485
  Jun  8 13:03:52.486: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-4818:e2e" @ 06/08/24 13:03:52.486
  Jun  8 13:03:52.487: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Jun  8 13:03:52.487: INFO: LocalSubjectAccessReview has been verified
  Jun  8 13:03:52.487: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-4818" for this suite. @ 06/08/24 13:03:52.49
• [0.033 seconds]
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 06/08/24 13:03:52.495
  Jun  8 13:03:52.495: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename field-validation @ 06/08/24 13:03:52.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:03:52.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:03:52.512
  STEP: apply creating a deployment @ 06/08/24 13:03:52.514
  Jun  8 13:03:52.523: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7386" for this suite. @ 06/08/24 13:03:52.525
• [0.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 06/08/24 13:03:52.531
  Jun  8 13:03:52.531: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename field-validation @ 06/08/24 13:03:52.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:03:52.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:03:52.551
  Jun  8 13:03:52.552: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  E0608 13:03:52.789034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:53.789223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:54.789545      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:03:55.621: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5802" for this suite. @ 06/08/24 13:03:55.624
• [3.099 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 06/08/24 13:03:55.63
  Jun  8 13:03:55.630: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename container-runtime @ 06/08/24 13:03:55.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:03:55.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:03:55.647
  STEP: create the container @ 06/08/24 13:03:55.649
  W0608 13:03:55.656302      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 06/08/24 13:03:55.656
  E0608 13:03:55.790169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:56.790950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:57.791262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 06/08/24 13:03:58.672
  STEP: the container should be terminated @ 06/08/24 13:03:58.675
  STEP: the termination message should be set @ 06/08/24 13:03:58.675
  Jun  8 13:03:58.675: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 06/08/24 13:03:58.675
  Jun  8 13:03:58.689: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3024" for this suite. @ 06/08/24 13:03:58.691
• [3.067 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 06/08/24 13:03:58.697
  Jun  8 13:03:58.697: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename downward-api @ 06/08/24 13:03:58.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:03:58.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:03:58.714
  STEP: Creating a pod to test downward API volume plugin @ 06/08/24 13:03:58.715
  E0608 13:03:58.791875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:03:59.792207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:00.793148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:01.793258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:04:02.73
  Jun  8 13:04:02.734: INFO: Trying to get logs from node ip-172-31-31-116 pod downwardapi-volume-a4cd996a-d678-4a26-b720-76b3635beeae container client-container: <nil>
  STEP: delete the pod @ 06/08/24 13:04:02.739
  Jun  8 13:04:02.752: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-172" for this suite. @ 06/08/24 13:04:02.755
• [4.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 06/08/24 13:04:02.76
  Jun  8 13:04:02.760: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename var-expansion @ 06/08/24 13:04:02.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:04:02.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:04:02.778
  STEP: creating the pod @ 06/08/24 13:04:02.779
  STEP: waiting for pod running @ 06/08/24 13:04:02.788
  E0608 13:04:02.793454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:03.793644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:04.794654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 06/08/24 13:04:04.794
  Jun  8 13:04:04.797: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-5134 PodName:var-expansion-98620643-4446-4232-8201-15b0ab3565e4 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  8 13:04:04.797: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  Jun  8 13:04:04.798: INFO: ExecWithOptions: Clientset creation
  Jun  8 13:04:04.798: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-5134/pods/var-expansion-98620643-4446-4232-8201-15b0ab3565e4/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 06/08/24 13:04:04.847
  Jun  8 13:04:04.850: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-5134 PodName:var-expansion-98620643-4446-4232-8201-15b0ab3565e4 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  8 13:04:04.850: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  Jun  8 13:04:04.851: INFO: ExecWithOptions: Clientset creation
  Jun  8 13:04:04.851: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-5134/pods/var-expansion-98620643-4446-4232-8201-15b0ab3565e4/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 06/08/24 13:04:04.89
  Jun  8 13:04:05.401: INFO: Successfully updated pod "var-expansion-98620643-4446-4232-8201-15b0ab3565e4"
  STEP: waiting for annotated pod running @ 06/08/24 13:04:05.401
  STEP: deleting the pod gracefully @ 06/08/24 13:04:05.404
  Jun  8 13:04:05.404: INFO: Deleting pod "var-expansion-98620643-4446-4232-8201-15b0ab3565e4" in namespace "var-expansion-5134"
  Jun  8 13:04:05.411: INFO: Wait up to 5m0s for pod "var-expansion-98620643-4446-4232-8201-15b0ab3565e4" to be fully deleted
  E0608 13:04:05.794734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:06.795716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:07.795803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:08.795909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:09.795997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:10.796109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:11.796644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:12.796732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:13.796841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:14.796907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:15.797394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:16.797926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:17.798884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:18.799599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:19.800543      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:20.800662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:21.801014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:22.801550      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:23.802016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:24.802138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:25.802327      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:26.802777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:27.802891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:28.802939      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:29.803854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:30.803950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:31.804038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:32.804132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:33.804320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:34.804430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:35.804964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:36.805205      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:04:37.477: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5134" for this suite. @ 06/08/24 13:04:37.481
• [34.726 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 06/08/24 13:04:37.487
  Jun  8 13:04:37.487: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename container-probe @ 06/08/24 13:04:37.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:04:37.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:04:37.506
  STEP: Creating pod liveness-d010c055-8861-4222-80b3-1507f72163af in namespace container-probe-9453 @ 06/08/24 13:04:37.507
  E0608 13:04:37.805235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:38.805326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/08/24 13:04:39.52
  Jun  8 13:04:39.523: INFO: Initial restart count of pod liveness-d010c055-8861-4222-80b3-1507f72163af is 0
  Jun  8 13:04:39.526: INFO: Get pod liveness-d010c055-8861-4222-80b3-1507f72163af in namespace container-probe-9453
  E0608 13:04:39.805788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:40.805898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:04:41.529: INFO: Get pod liveness-d010c055-8861-4222-80b3-1507f72163af in namespace container-probe-9453
  E0608 13:04:41.806110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:42.806303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:04:43.534: INFO: Get pod liveness-d010c055-8861-4222-80b3-1507f72163af in namespace container-probe-9453
  E0608 13:04:43.807373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:44.807562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:04:45.536: INFO: Get pod liveness-d010c055-8861-4222-80b3-1507f72163af in namespace container-probe-9453
  E0608 13:04:45.808271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:46.809190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:04:47.541: INFO: Get pod liveness-d010c055-8861-4222-80b3-1507f72163af in namespace container-probe-9453
  E0608 13:04:47.809709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:48.809792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:04:49.544: INFO: Get pod liveness-d010c055-8861-4222-80b3-1507f72163af in namespace container-probe-9453
  E0608 13:04:49.809939      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:50.810143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:04:51.548: INFO: Get pod liveness-d010c055-8861-4222-80b3-1507f72163af in namespace container-probe-9453
  E0608 13:04:51.810914      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:52.811016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:04:53.552: INFO: Get pod liveness-d010c055-8861-4222-80b3-1507f72163af in namespace container-probe-9453
  E0608 13:04:53.811101      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:54.812135      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:04:55.556: INFO: Get pod liveness-d010c055-8861-4222-80b3-1507f72163af in namespace container-probe-9453
  E0608 13:04:55.812184      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:56.813198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:04:57.560: INFO: Get pod liveness-d010c055-8861-4222-80b3-1507f72163af in namespace container-probe-9453
  E0608 13:04:57.813271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:04:58.813723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:04:59.563: INFO: Get pod liveness-d010c055-8861-4222-80b3-1507f72163af in namespace container-probe-9453
  Jun  8 13:04:59.563: INFO: Restart count of pod container-probe-9453/liveness-d010c055-8861-4222-80b3-1507f72163af is now 1 (20.039681665s elapsed)
  STEP: deleting the pod @ 06/08/24 13:04:59.563
  Jun  8 13:04:59.574: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9453" for this suite. @ 06/08/24 13:04:59.576
• [22.094 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:357
  STEP: Creating a kubernetes client @ 06/08/24 13:04:59.581
  Jun  8 13:04:59.581: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename kubectl @ 06/08/24 13:04:59.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:04:59.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:04:59.599
  STEP: creating a replication controller @ 06/08/24 13:04:59.601
  Jun  8 13:04:59.601: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-8143 create -f -'
  Jun  8 13:04:59.677: INFO: stderr: ""
  Jun  8 13:04:59.677: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/08/24 13:04:59.677
  Jun  8 13:04:59.677: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-8143 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun  8 13:04:59.721: INFO: stderr: ""
  Jun  8 13:04:59.721: INFO: stdout: "update-demo-nautilus-25mxs update-demo-nautilus-fvsqx "
  Jun  8 13:04:59.721: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-8143 get pods update-demo-nautilus-25mxs -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun  8 13:04:59.759: INFO: stderr: ""
  Jun  8 13:04:59.759: INFO: stdout: ""
  Jun  8 13:04:59.759: INFO: update-demo-nautilus-25mxs is created but not running
  E0608 13:04:59.814156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:00.814274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:01.815239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:02.815905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:03.816011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:05:04.760: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-8143 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun  8 13:05:04.803: INFO: stderr: ""
  Jun  8 13:05:04.803: INFO: stdout: "update-demo-nautilus-25mxs update-demo-nautilus-fvsqx "
  Jun  8 13:05:04.803: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-8143 get pods update-demo-nautilus-25mxs -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0608 13:05:04.816572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:05:04.844: INFO: stderr: ""
  Jun  8 13:05:04.844: INFO: stdout: "true"
  Jun  8 13:05:04.844: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-8143 get pods update-demo-nautilus-25mxs -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun  8 13:05:04.890: INFO: stderr: ""
  Jun  8 13:05:04.890: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun  8 13:05:04.890: INFO: validating pod update-demo-nautilus-25mxs
  Jun  8 13:05:04.894: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun  8 13:05:04.894: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun  8 13:05:04.894: INFO: update-demo-nautilus-25mxs is verified up and running
  Jun  8 13:05:04.894: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-8143 get pods update-demo-nautilus-fvsqx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun  8 13:05:04.934: INFO: stderr: ""
  Jun  8 13:05:04.934: INFO: stdout: "true"
  Jun  8 13:05:04.934: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-8143 get pods update-demo-nautilus-fvsqx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun  8 13:05:04.973: INFO: stderr: ""
  Jun  8 13:05:04.973: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun  8 13:05:04.973: INFO: validating pod update-demo-nautilus-fvsqx
  Jun  8 13:05:04.978: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun  8 13:05:04.978: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun  8 13:05:04.978: INFO: update-demo-nautilus-fvsqx is verified up and running
  STEP: scaling down the replication controller @ 06/08/24 13:05:04.978
  Jun  8 13:05:04.979: INFO: scanned /root for discovery docs: <nil>
  Jun  8 13:05:04.979: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-8143 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0608 13:05:05.816721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:05:06.034: INFO: stderr: ""
  Jun  8 13:05:06.034: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/08/24 13:05:06.034
  Jun  8 13:05:06.034: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-8143 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun  8 13:05:06.076: INFO: stderr: ""
  Jun  8 13:05:06.076: INFO: stdout: "update-demo-nautilus-fvsqx "
  Jun  8 13:05:06.076: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-8143 get pods update-demo-nautilus-fvsqx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun  8 13:05:06.114: INFO: stderr: ""
  Jun  8 13:05:06.114: INFO: stdout: "true"
  Jun  8 13:05:06.114: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-8143 get pods update-demo-nautilus-fvsqx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun  8 13:05:06.156: INFO: stderr: ""
  Jun  8 13:05:06.156: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun  8 13:05:06.156: INFO: validating pod update-demo-nautilus-fvsqx
  Jun  8 13:05:06.159: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun  8 13:05:06.159: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun  8 13:05:06.159: INFO: update-demo-nautilus-fvsqx is verified up and running
  STEP: scaling up the replication controller @ 06/08/24 13:05:06.159
  Jun  8 13:05:06.160: INFO: scanned /root for discovery docs: <nil>
  Jun  8 13:05:06.160: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-8143 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0608 13:05:06.817222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:05:07.222: INFO: stderr: ""
  Jun  8 13:05:07.222: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/08/24 13:05:07.222
  Jun  8 13:05:07.222: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-8143 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun  8 13:05:07.265: INFO: stderr: ""
  Jun  8 13:05:07.265: INFO: stdout: "update-demo-nautilus-c7242 update-demo-nautilus-fvsqx "
  Jun  8 13:05:07.265: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-8143 get pods update-demo-nautilus-c7242 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun  8 13:05:07.307: INFO: stderr: ""
  Jun  8 13:05:07.307: INFO: stdout: "true"
  Jun  8 13:05:07.307: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-8143 get pods update-demo-nautilus-c7242 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun  8 13:05:07.346: INFO: stderr: ""
  Jun  8 13:05:07.346: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun  8 13:05:07.346: INFO: validating pod update-demo-nautilus-c7242
  Jun  8 13:05:07.350: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun  8 13:05:07.350: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun  8 13:05:07.350: INFO: update-demo-nautilus-c7242 is verified up and running
  Jun  8 13:05:07.350: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-8143 get pods update-demo-nautilus-fvsqx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun  8 13:05:07.389: INFO: stderr: ""
  Jun  8 13:05:07.389: INFO: stdout: "true"
  Jun  8 13:05:07.389: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-8143 get pods update-demo-nautilus-fvsqx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun  8 13:05:07.430: INFO: stderr: ""
  Jun  8 13:05:07.430: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun  8 13:05:07.430: INFO: validating pod update-demo-nautilus-fvsqx
  Jun  8 13:05:07.434: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun  8 13:05:07.434: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun  8 13:05:07.434: INFO: update-demo-nautilus-fvsqx is verified up and running
  STEP: using delete to clean up resources @ 06/08/24 13:05:07.434
  Jun  8 13:05:07.434: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-8143 delete --grace-period=0 --force -f -'
  Jun  8 13:05:07.480: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun  8 13:05:07.480: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Jun  8 13:05:07.480: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-8143 get rc,svc -l name=update-demo --no-headers'
  Jun  8 13:05:07.524: INFO: stderr: "No resources found in kubectl-8143 namespace.\n"
  Jun  8 13:05:07.524: INFO: stdout: ""
  Jun  8 13:05:07.524: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-8143 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jun  8 13:05:07.568: INFO: stderr: ""
  Jun  8 13:05:07.568: INFO: stdout: ""
  Jun  8 13:05:07.568: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8143" for this suite. @ 06/08/24 13:05:07.572
• [7.995 seconds]
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 06/08/24 13:05:07.577
  Jun  8 13:05:07.577: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename secrets @ 06/08/24 13:05:07.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:05:07.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:05:07.593
  STEP: Creating secret with name secret-test-803a006d-9b1a-4a01-a8dd-435daa10ca3a @ 06/08/24 13:05:07.595
  STEP: Creating a pod to test consume secrets @ 06/08/24 13:05:07.599
  E0608 13:05:07.818070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:08.818557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:09.818692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:10.818921      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:05:11.615
  Jun  8 13:05:11.617: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-secrets-b667a3f6-9767-4642-83ac-614f107b5ca6 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/08/24 13:05:11.623
  Jun  8 13:05:11.636: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7720" for this suite. @ 06/08/24 13:05:11.639
• [4.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:141
  STEP: Creating a kubernetes client @ 06/08/24 13:05:11.646
  Jun  8 13:05:11.646: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename secrets @ 06/08/24 13:05:11.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:05:11.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:05:11.664
  STEP: Creating projection with secret that has name secret-emptykey-test-fff5c1b8-3275-4ebf-9bea-c9fac07fe744 @ 06/08/24 13:05:11.665
  Jun  8 13:05:11.666: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4224" for this suite. @ 06/08/24 13:05:11.669
• [0.028 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 06/08/24 13:05:11.675
  Jun  8 13:05:11.675: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename resourcequota @ 06/08/24 13:05:11.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:05:11.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:05:11.69
  E0608 13:05:11.819346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:12.820302      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:13.821220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:14.822206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:15.822498      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:16.823485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:17.823818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:18.824330      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:19.824368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:20.824944      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:21.825324      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:22.826304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:23.826412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:24.826451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:25.826546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:26.827224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:27.827754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 06/08/24 13:05:28.697
  E0608 13:05:28.828219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:29.828248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:30.829282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:31.829524      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:32.829855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/08/24 13:05:33.7
  STEP: Ensuring resource quota status is calculated @ 06/08/24 13:05:33.705
  E0608 13:05:33.830251      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:34.830341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 06/08/24 13:05:35.71
  STEP: Ensuring resource quota status captures configMap creation @ 06/08/24 13:05:35.72
  E0608 13:05:35.831384      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:36.832107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 06/08/24 13:05:37.724
  STEP: Ensuring resource quota status released usage @ 06/08/24 13:05:37.73
  E0608 13:05:37.832470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:38.832787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:05:39.733: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4258" for this suite. @ 06/08/24 13:05:39.736
• [28.066 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:902
  STEP: Creating a kubernetes client @ 06/08/24 13:05:39.741
  Jun  8 13:05:39.741: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename statefulset @ 06/08/24 13:05:39.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:05:39.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:05:39.761
  STEP: Creating service test in namespace statefulset-6438 @ 06/08/24 13:05:39.762
  STEP: Creating statefulset ss in namespace statefulset-6438 @ 06/08/24 13:05:39.768
  Jun  8 13:05:39.777: INFO: Found 0 stateful pods, waiting for 1
  E0608 13:05:39.833271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:40.833422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:41.833533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:42.833632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:43.833702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:44.833820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:45.833934      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:46.834053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:47.834123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:48.834419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:05:49.779: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 06/08/24 13:05:49.783
  STEP: updating a scale subresource @ 06/08/24 13:05:49.785
  STEP: verifying the statefulset Spec.Replicas was modified @ 06/08/24 13:05:49.791
  STEP: Patch a scale subresource @ 06/08/24 13:05:49.793
  STEP: verifying the statefulset Spec.Replicas was modified @ 06/08/24 13:05:49.799
  Jun  8 13:05:49.801: INFO: Deleting all statefulset in ns statefulset-6438
  Jun  8 13:05:49.806: INFO: Scaling statefulset ss to 0
  E0608 13:05:49.835116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:50.835298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:51.835392      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:52.835657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:53.835709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:54.836735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:55.837044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:56.837254      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:57.838299      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:05:58.839303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:05:59.818: INFO: Waiting for statefulset status.replicas updated to 0
  Jun  8 13:05:59.820: INFO: Deleting statefulset ss
  Jun  8 13:05:59.831: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6438" for this suite. @ 06/08/24 13:05:59.833
• [20.096 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 06/08/24 13:05:59.838
  Jun  8 13:05:59.838: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename projected @ 06/08/24 13:05:59.838
  E0608 13:05:59.840004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:05:59.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:05:59.856
  STEP: Creating secret with name projected-secret-test-1f35bda3-d643-4cd0-ac0e-6e9d1d35db5c @ 06/08/24 13:05:59.857
  STEP: Creating a pod to test consume secrets @ 06/08/24 13:05:59.861
  E0608 13:06:00.840249      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:01.840716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:02.841622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:03.841854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:06:03.879
  Jun  8 13:06:03.881: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-projected-secrets-6358a088-bf32-4850-a8ab-8d0bae61f748 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/08/24 13:06:03.886
  Jun  8 13:06:03.907: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4088" for this suite. @ 06/08/24 13:06:03.91
• [4.078 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:962
  STEP: Creating a kubernetes client @ 06/08/24 13:06:03.915
  Jun  8 13:06:03.915: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename statefulset @ 06/08/24 13:06:03.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:06:03.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:06:03.932
  STEP: Creating service test in namespace statefulset-8116 @ 06/08/24 13:06:03.933
  Jun  8 13:06:03.945: INFO: Found 0 stateful pods, waiting for 1
  E0608 13:06:04.841976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:05.842550      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:06.842621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:07.843343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:08.843540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:09.843621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:10.843879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:11.843972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:12.844060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:13.844174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:06:13.947: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 06/08/24 13:06:13.953
  W0608 13:06:13.959690      19 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Jun  8 13:06:13.963: INFO: Found 1 stateful pods, waiting for 2
  E0608 13:06:14.844678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:15.845559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:16.845696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:17.845771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:18.845963      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:19.846158      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:20.846270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:21.846352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:22.846590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:23.847474      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:06:23.967: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun  8 13:06:23.967: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 06/08/24 13:06:23.974
  STEP: Delete all of the StatefulSets @ 06/08/24 13:06:23.976
  STEP: Verify that StatefulSets have been deleted @ 06/08/24 13:06:23.983
  Jun  8 13:06:23.986: INFO: Deleting all statefulset in ns statefulset-8116
  Jun  8 13:06:23.998: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8116" for this suite. @ 06/08/24 13:06:24.003
• [20.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 06/08/24 13:06:24.009
  Jun  8 13:06:24.010: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename services @ 06/08/24 13:06:24.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:06:24.027
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:06:24.029
  STEP: creating service nodeport-test with type=NodePort in namespace services-2460 @ 06/08/24 13:06:24.031
  STEP: creating replication controller nodeport-test in namespace services-2460 @ 06/08/24 13:06:24.042
  I0608 13:06:24.049318      19 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-2460, replica count: 2
  E0608 13:06:24.847715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:25.847857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:26.847909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0608 13:06:27.100162      19 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun  8 13:06:27.100: INFO: Creating new exec pod
  E0608 13:06:27.848714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:28.848815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:29.848883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:06:30.118: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-2460 exec execpod6d9hr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Jun  8 13:06:30.195: INFO: stderr: "+ nc -v -t -w 2 nodeport-test 80\n+ echo hostName\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Jun  8 13:06:30.195: INFO: stdout: "nodeport-test-cpbrh"
  Jun  8 13:06:30.195: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-2460 exec execpod6d9hr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.240 80'
  Jun  8 13:06:30.283: INFO: stderr: "+ nc -v -t -w 2 10.152.183.240 80\nConnection to 10.152.183.240 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Jun  8 13:06:30.283: INFO: stdout: ""
  E0608 13:06:30.848997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:06:31.195: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-2460 exec execpod6d9hr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.240 80'
  Jun  8 13:06:31.281: INFO: stderr: "+ nc -v -t -w 2 10.152.183.240 80\n+ echo hostName\nConnection to 10.152.183.240 80 port [tcp/http] succeeded!\n"
  Jun  8 13:06:31.281: INFO: stdout: "nodeport-test-cpbrh"
  Jun  8 13:06:31.281: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-2460 exec execpod6d9hr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.74.243 30771'
  Jun  8 13:06:31.364: INFO: stderr: "+ nc -v -t -w 2 172.31.74.243 30771\n+ echo hostName\nConnection to 172.31.74.243 30771 port [tcp/*] succeeded!\n"
  Jun  8 13:06:31.364: INFO: stdout: "nodeport-test-cpbrh"
  Jun  8 13:06:31.364: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-2460 exec execpod6d9hr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.42.99 30771'
  Jun  8 13:06:31.451: INFO: stderr: "+ nc -v -t -w 2 172.31.42.99 30771\n+ echo hostName\nConnection to 172.31.42.99 30771 port [tcp/*] succeeded!\n"
  Jun  8 13:06:31.451: INFO: stdout: "nodeport-test-q269f"
  Jun  8 13:06:31.451: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2460" for this suite. @ 06/08/24 13:06:31.454
• [7.451 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:793
  STEP: Creating a kubernetes client @ 06/08/24 13:06:31.46
  Jun  8 13:06:31.460: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename statefulset @ 06/08/24 13:06:31.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:06:31.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:06:31.477
  STEP: Creating service test in namespace statefulset-8921 @ 06/08/24 13:06:31.478
  STEP: Looking for a node to schedule stateful set and pod @ 06/08/24 13:06:31.482
  STEP: Creating pod with conflicting port in namespace statefulset-8921 @ 06/08/24 13:06:31.488
  STEP: Waiting until pod test-pod will start running in namespace statefulset-8921 @ 06/08/24 13:06:31.493
  E0608 13:06:31.849856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:32.849977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-8921 @ 06/08/24 13:06:33.499
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-8921 @ 06/08/24 13:06:33.504
  Jun  8 13:06:33.517: INFO: Observed stateful pod in namespace: statefulset-8921, name: ss-0, uid: 788fd9ed-645d-4393-9ad6-3ad97e8ce116, status phase: Pending. Waiting for statefulset controller to delete.
  Jun  8 13:06:33.531: INFO: Observed stateful pod in namespace: statefulset-8921, name: ss-0, uid: 788fd9ed-645d-4393-9ad6-3ad97e8ce116, status phase: Failed. Waiting for statefulset controller to delete.
  Jun  8 13:06:33.538: INFO: Observed stateful pod in namespace: statefulset-8921, name: ss-0, uid: 788fd9ed-645d-4393-9ad6-3ad97e8ce116, status phase: Failed. Waiting for statefulset controller to delete.
  Jun  8 13:06:33.544: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-8921
  STEP: Removing pod with conflicting port in namespace statefulset-8921 @ 06/08/24 13:06:33.544
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-8921 and will be in running state @ 06/08/24 13:06:33.563
  E0608 13:06:33.850991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:34.851190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:06:35.570: INFO: Deleting all statefulset in ns statefulset-8921
  Jun  8 13:06:35.572: INFO: Scaling statefulset ss to 0
  E0608 13:06:35.852165      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:36.853211      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:37.853439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:38.853529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:39.853733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:40.853872      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:41.853958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:42.854318      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:43.854439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:44.854690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:06:45.584: INFO: Waiting for statefulset status.replicas updated to 0
  Jun  8 13:06:45.586: INFO: Deleting statefulset ss
  Jun  8 13:06:45.596: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8921" for this suite. @ 06/08/24 13:06:45.599
• [14.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 06/08/24 13:06:45.605
  Jun  8 13:06:45.605: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename var-expansion @ 06/08/24 13:06:45.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:06:45.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:06:45.622
  STEP: creating the pod with failed condition @ 06/08/24 13:06:45.624
  E0608 13:06:45.854961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:46.855100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:47.855278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:48.855510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:49.855582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:50.855652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:51.856637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:52.857066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:53.857132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:54.857324      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:55.857701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:56.857861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:57.858136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:58.858227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:06:59.858583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:00.858674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:01.859280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:02.859768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:03.860688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:04.861452      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:05.862017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:06.862128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:07.862956      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:08.863088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:09.863197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:10.863380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:11.863839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:12.864702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:13.865326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:14.865410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:15.866321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:16.866439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:17.866817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:18.866906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:19.867361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:20.867626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:21.868493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:22.868951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:23.869499      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:24.869626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:25.870378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:26.870428      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:27.870526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:28.870625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:29.871017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:30.871217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:31.871302      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:32.871399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:33.871873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:34.871942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:35.872425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:36.873200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:37.873592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:38.873690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:39.873914      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:40.874008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:41.874322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:42.874503      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:43.874748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:44.874958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:45.875783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:46.875960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:47.876613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:48.876774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:49.877533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:50.877708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:51.878241      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:52.878381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:53.878378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:54.879267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:55.880183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:56.880380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:57.881265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:58.882079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:07:59.882357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:00.883115      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:01.883157      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:02.883515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:03.883802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:04.884686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:05.885638      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:06.885792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:07.886473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:08.886676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:09.887032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:10.887220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:11.888164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:12.888258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:13.889361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:14.889495      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:15.889669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:16.889849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:17.890401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:18.890515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:19.891554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:20.891641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:21.892519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:22.892636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:23.893004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:24.893173      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:25.893769      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:26.894160      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:27.895102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:28.895221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:29.895610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:30.896579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:31.896904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:32.897138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:33.897344      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:34.898307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:35.899183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:36.899402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:37.900064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:38.900361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:39.900431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:40.900695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:41.901174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:42.901350      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:43.901610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:44.901740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pod @ 06/08/24 13:08:45.632
  E0608 13:08:45.902329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:08:46.144: INFO: Successfully updated pod "var-expansion-959e4c78-dfe3-4790-9f09-52fa20c56a87"
  STEP: waiting for pod running @ 06/08/24 13:08:46.144
  E0608 13:08:46.903064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:47.903255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 06/08/24 13:08:48.151
  Jun  8 13:08:48.151: INFO: Deleting pod "var-expansion-959e4c78-dfe3-4790-9f09-52fa20c56a87" in namespace "var-expansion-6568"
  Jun  8 13:08:48.158: INFO: Wait up to 5m0s for pod "var-expansion-959e4c78-dfe3-4790-9f09-52fa20c56a87" to be fully deleted
  E0608 13:08:48.903348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:49.903575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:50.903677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:51.903784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:52.903880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:53.904709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:54.904815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:55.905176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:56.906098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:57.906202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:58.906627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:08:59.906737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:00.906865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:01.906943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:02.907114      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:03.907608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:04.907702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:05.907874      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:06.907967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:07.908034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:08.908117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:09.908803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:10.909735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:11.910027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:12.910854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:13.910970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:14.911076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:15.911883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:16.912705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:17.912787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:18.912879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:19.912971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:09:20.228: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6568" for this suite. @ 06/08/24 13:09:20.231
• [154.631 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 06/08/24 13:09:20.237
  Jun  8 13:09:20.237: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename webhook @ 06/08/24 13:09:20.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:09:20.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:09:20.254
  STEP: Setting up server cert @ 06/08/24 13:09:20.273
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/08/24 13:09:20.582
  STEP: Deploying the webhook pod @ 06/08/24 13:09:20.59
  STEP: Wait for the deployment to be ready @ 06/08/24 13:09:20.601
  Jun  8 13:09:20.607: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0608 13:09:20.913958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:21.914086      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/08/24 13:09:22.615
  STEP: Verifying the service has paired with the endpoint @ 06/08/24 13:09:22.623
  E0608 13:09:22.915040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:09:23.624: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun  8 13:09:23.631: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  E0608 13:09:23.915804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3142-crds.webhook.example.com via the AdmissionRegistration API @ 06/08/24 13:09:24.14
  STEP: Creating a custom resource that should be mutated by the webhook @ 06/08/24 13:09:24.151
  E0608 13:09:24.916796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:25.917031      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:09:26.722: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6270" for this suite. @ 06/08/24 13:09:26.725
  STEP: Destroying namespace "webhook-markers-8459" for this suite. @ 06/08/24 13:09:26.73
• [6.499 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1053
  STEP: Creating a kubernetes client @ 06/08/24 13:09:26.736
  Jun  8 13:09:26.736: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename kubectl @ 06/08/24 13:09:26.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:09:26.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:09:26.754
  STEP: create deployment with httpd image @ 06/08/24 13:09:26.756
  Jun  8 13:09:26.756: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-641 create -f -'
  Jun  8 13:09:26.816: INFO: stderr: ""
  Jun  8 13:09:26.816: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 06/08/24 13:09:26.816
  Jun  8 13:09:26.816: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-641 diff -f -'
  E0608 13:09:26.917854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:27.918068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:28.918245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:29.918447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:30.918553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:09:31.077: INFO: rc: 1
  Jun  8 13:09:31.078: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-641 delete -f -'
  Jun  8 13:09:31.118: INFO: stderr: ""
  Jun  8 13:09:31.118: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Jun  8 13:09:31.119: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-641" for this suite. @ 06/08/24 13:09:31.122
• [4.392 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 06/08/24 13:09:31.129
  Jun  8 13:09:31.129: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename field-validation @ 06/08/24 13:09:31.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:09:31.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:09:31.148
  Jun  8 13:09:31.150: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  W0608 13:09:31.150575      19 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc000fb9170 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0608 13:09:31.918645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:32.918775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0608 13:09:33.681427      19 warnings.go:70] unknown field "alpha"
  W0608 13:09:33.681445      19 warnings.go:70] unknown field "beta"
  W0608 13:09:33.681448      19 warnings.go:70] unknown field "delta"
  W0608 13:09:33.681450      19 warnings.go:70] unknown field "epsilon"
  W0608 13:09:33.681453      19 warnings.go:70] unknown field "gamma"
  E0608 13:09:33.919193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:09:34.217: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1341" for this suite. @ 06/08/24 13:09:34.219
• [3.096 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 06/08/24 13:09:34.225
  Jun  8 13:09:34.225: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename webhook @ 06/08/24 13:09:34.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:09:34.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:09:34.244
  STEP: Setting up server cert @ 06/08/24 13:09:34.268
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/08/24 13:09:34.694
  STEP: Deploying the webhook pod @ 06/08/24 13:09:34.699
  STEP: Wait for the deployment to be ready @ 06/08/24 13:09:34.71
  Jun  8 13:09:34.717: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0608 13:09:34.920094      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:35.920399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/08/24 13:09:36.726
  STEP: Verifying the service has paired with the endpoint @ 06/08/24 13:09:36.735
  E0608 13:09:36.921002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:09:37.735: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 06/08/24 13:09:37.742
  STEP: create a pod that should be updated by the webhook @ 06/08/24 13:09:37.754
  Jun  8 13:09:37.808: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3820" for this suite. @ 06/08/24 13:09:37.813
  STEP: Destroying namespace "webhook-markers-9763" for this suite. @ 06/08/24 13:09:37.819
• [3.598 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 06/08/24 13:09:37.823
  Jun  8 13:09:37.823: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename services @ 06/08/24 13:09:37.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:09:37.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:09:37.838
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-1326 @ 06/08/24 13:09:37.84
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 06/08/24 13:09:37.85
  STEP: creating service externalsvc in namespace services-1326 @ 06/08/24 13:09:37.85
  STEP: creating replication controller externalsvc in namespace services-1326 @ 06/08/24 13:09:37.86
  I0608 13:09:37.867848      19 runners.go:197] Created replication controller with name: externalsvc, namespace: services-1326, replica count: 2
  E0608 13:09:37.921383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:38.921982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:39.922953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0608 13:09:40.918441      19 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 06/08/24 13:09:40.922
  E0608 13:09:40.923045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:09:40.932: INFO: Creating new exec pod
  E0608 13:09:41.923182      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:42.923270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:09:42.946: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-1326 exec execpodfx6qf -- /bin/sh -x -c nslookup clusterip-service.services-1326.svc.cluster.local'
  Jun  8 13:09:43.054: INFO: stderr: "+ nslookup clusterip-service.services-1326.svc.cluster.local\n"
  Jun  8 13:09:43.054: INFO: stdout: "Server:\t\t10.152.183.150\nAddress:\t10.152.183.150#53\n\nclusterip-service.services-1326.svc.cluster.local\tcanonical name = externalsvc.services-1326.svc.cluster.local.\nName:\texternalsvc.services-1326.svc.cluster.local\nAddress: 10.152.183.56\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-1326, will wait for the garbage collector to delete the pods @ 06/08/24 13:09:43.054
  Jun  8 13:09:43.113: INFO: Deleting ReplicationController externalsvc took: 5.962278ms
  Jun  8 13:09:43.214: INFO: Terminating ReplicationController externalsvc pods took: 100.209687ms
  E0608 13:09:43.923466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:44.924213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:45.924361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:09:46.333: INFO: Cleaning up the ClusterIP to ExternalName test service
  Jun  8 13:09:46.343: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1326" for this suite. @ 06/08/24 13:09:46.346
• [8.531 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:447
  STEP: Creating a kubernetes client @ 06/08/24 13:09:46.355
  Jun  8 13:09:46.355: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename sched-pred @ 06/08/24 13:09:46.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:09:46.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:09:46.373
  Jun  8 13:09:46.420: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jun  8 13:09:46.426: INFO: Waiting for terminating namespaces to be deleted...
  Jun  8 13:09:46.428: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-31-116 before test
  Jun  8 13:09:46.431: INFO: nginx-ingress-controller-kubernetes-worker-6k9dl from ingress-nginx-kubernetes-worker started at 2024-06-08 13:02:26 +0000 UTC (1 container statuses recorded)
  Jun  8 13:09:46.431: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jun  8 13:09:46.431: INFO: calico-node-w2nxw from kube-system started at 2024-06-08 12:15:03 +0000 UTC (1 container statuses recorded)
  Jun  8 13:09:46.431: INFO: 	Container calico-node ready: true, restart count 0
  Jun  8 13:09:46.431: INFO: sonobuoy from sonobuoy started at 2024-06-08 12:18:05 +0000 UTC (1 container statuses recorded)
  Jun  8 13:09:46.431: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jun  8 13:09:46.431: INFO: sonobuoy-systemd-logs-daemon-set-2372ce3de819483f-qmcng from sonobuoy started at 2024-06-08 12:18:07 +0000 UTC (2 container statuses recorded)
  Jun  8 13:09:46.431: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  8 13:09:46.431: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun  8 13:09:46.431: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-42-99 before test
  Jun  8 13:09:46.435: INFO: nginx-ingress-controller-kubernetes-worker-9c5bq from ingress-nginx-kubernetes-worker started at 2024-06-08 12:12:03 +0000 UTC (1 container statuses recorded)
  Jun  8 13:09:46.435: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jun  8 13:09:46.435: INFO: calico-node-5rtlx from kube-system started at 2024-06-08 12:14:57 +0000 UTC (1 container statuses recorded)
  Jun  8 13:09:46.435: INFO: 	Container calico-node ready: true, restart count 0
  Jun  8 13:09:46.435: INFO: coredns-bddfd76d7-t89xt from kube-system started at 2024-06-08 12:12:03 +0000 UTC (1 container statuses recorded)
  Jun  8 13:09:46.435: INFO: 	Container coredns ready: true, restart count 0
  Jun  8 13:09:46.435: INFO: kube-state-metrics-6f48cdd76-9f275 from kube-system started at 2024-06-08 12:12:03 +0000 UTC (1 container statuses recorded)
  Jun  8 13:09:46.435: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Jun  8 13:09:46.435: INFO: metrics-server-v0.6.3-69d7fbfdf8-4grs5 from kube-system started at 2024-06-08 12:12:03 +0000 UTC (2 container statuses recorded)
  Jun  8 13:09:46.435: INFO: 	Container metrics-server ready: true, restart count 0
  Jun  8 13:09:46.435: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Jun  8 13:09:46.436: INFO: dashboard-metrics-scraper-5dd7cb5fc-z4qb8 from kubernetes-dashboard started at 2024-06-08 12:12:03 +0000 UTC (1 container statuses recorded)
  Jun  8 13:09:46.436: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Jun  8 13:09:46.436: INFO: kubernetes-dashboard-7b899cb9d9-ghnj4 from kubernetes-dashboard started at 2024-06-08 12:12:03 +0000 UTC (1 container statuses recorded)
  Jun  8 13:09:46.436: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Jun  8 13:09:46.436: INFO: sonobuoy-systemd-logs-daemon-set-2372ce3de819483f-trjkm from sonobuoy started at 2024-06-08 12:18:07 +0000 UTC (2 container statuses recorded)
  Jun  8 13:09:46.436: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  8 13:09:46.436: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun  8 13:09:46.436: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-74-243 before test
  Jun  8 13:09:46.440: INFO: nginx-ingress-controller-kubernetes-worker-rbvbn from ingress-nginx-kubernetes-worker started at 2024-06-08 12:13:50 +0000 UTC (1 container statuses recorded)
  Jun  8 13:09:46.440: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jun  8 13:09:46.440: INFO: calico-node-5r27r from kube-system started at 2024-06-08 12:15:44 +0000 UTC (1 container statuses recorded)
  Jun  8 13:09:46.440: INFO: 	Container calico-node ready: true, restart count 0
  Jun  8 13:09:46.440: INFO: execpodfx6qf from services-1326 started at 2024-06-08 13:09:40 +0000 UTC (1 container statuses recorded)
  Jun  8 13:09:46.440: INFO: 	Container agnhost-container ready: true, restart count 0
  Jun  8 13:09:46.440: INFO: sonobuoy-e2e-job-06d012d91c064577 from sonobuoy started at 2024-06-08 12:18:07 +0000 UTC (2 container statuses recorded)
  Jun  8 13:09:46.440: INFO: 	Container e2e ready: true, restart count 0
  Jun  8 13:09:46.440: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  8 13:09:46.440: INFO: sonobuoy-systemd-logs-daemon-set-2372ce3de819483f-ftvnv from sonobuoy started at 2024-06-08 12:18:07 +0000 UTC (2 container statuses recorded)
  Jun  8 13:09:46.440: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  8 13:09:46.440: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 06/08/24 13:09:46.44
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17d70976464d461c], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.] @ 06/08/24 13:09:46.462
  E0608 13:09:46.924678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:09:47.459: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5480" for this suite. @ 06/08/24 13:09:47.462
• [1.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 06/08/24 13:09:47.468
  Jun  8 13:09:47.468: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename resourcequota @ 06/08/24 13:09:47.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:09:47.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:09:47.486
  STEP: Counting existing ResourceQuota @ 06/08/24 13:09:47.487
  E0608 13:09:47.925334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:48.925423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:49.926199      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:50.926960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:51.927375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/08/24 13:09:52.491
  STEP: Ensuring resource quota status is calculated @ 06/08/24 13:09:52.495
  E0608 13:09:52.927628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:53.927733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:09:54.498: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9991" for this suite. @ 06/08/24 13:09:54.501
• [7.040 seconds]
------------------------------
SS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 06/08/24 13:09:54.508
  Jun  8 13:09:54.508: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename subpath @ 06/08/24 13:09:54.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:09:54.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:09:54.526
  STEP: Setting up data @ 06/08/24 13:09:54.528
  STEP: Creating pod pod-subpath-test-secret-wrjz @ 06/08/24 13:09:54.537
  STEP: Creating a pod to test atomic-volume-subpath @ 06/08/24 13:09:54.537
  E0608 13:09:54.928418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:55.929405      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:56.929465      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:57.929610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:58.930294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:09:59.930504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:00.930610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:01.930714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:02.931693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:03.932717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:04.933583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:05.934422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:06.934954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:07.935927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:08.936534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:09.936649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:10.937569      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:11.937716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:12.937981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:13.938819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:14.938888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:15.939408      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:10:16.591
  Jun  8 13:10:16.594: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-subpath-test-secret-wrjz container test-container-subpath-secret-wrjz: <nil>
  STEP: delete the pod @ 06/08/24 13:10:16.605
  STEP: Deleting pod pod-subpath-test-secret-wrjz @ 06/08/24 13:10:16.619
  Jun  8 13:10:16.619: INFO: Deleting pod "pod-subpath-test-secret-wrjz" in namespace "subpath-3687"
  Jun  8 13:10:16.621: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3687" for this suite. @ 06/08/24 13:10:16.624
• [22.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 06/08/24 13:10:16.632
  Jun  8 13:10:16.632: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename replicaset @ 06/08/24 13:10:16.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:10:16.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:10:16.649
  Jun  8 13:10:16.650: INFO: Creating ReplicaSet my-hostname-basic-6d1d3049-df7f-4360-9b4d-f2fcb3730178
  Jun  8 13:10:16.656: INFO: Pod name my-hostname-basic-6d1d3049-df7f-4360-9b4d-f2fcb3730178: Found 0 pods out of 1
  E0608 13:10:16.940110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:17.940753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:18.940879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:19.941385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:20.941502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:10:21.661: INFO: Pod name my-hostname-basic-6d1d3049-df7f-4360-9b4d-f2fcb3730178: Found 1 pods out of 1
  Jun  8 13:10:21.661: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-6d1d3049-df7f-4360-9b4d-f2fcb3730178" is running
  Jun  8 13:10:21.664: INFO: Pod "my-hostname-basic-6d1d3049-df7f-4360-9b4d-f2fcb3730178-4rwvj" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-08 13:10:17 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-08 13:10:16 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-08 13:10:17 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-08 13:10:17 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-08 13:10:16 +0000 UTC Reason: Message:}])
  Jun  8 13:10:21.664: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 06/08/24 13:10:21.664
  Jun  8 13:10:21.673: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6382" for this suite. @ 06/08/24 13:10:21.676
• [5.048 seconds]
------------------------------
S
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:47
  STEP: Creating a kubernetes client @ 06/08/24 13:10:21.68
  Jun  8 13:10:21.680: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename secrets @ 06/08/24 13:10:21.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:10:21.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:10:21.697
  STEP: Creating secret with name secret-test-9bf86cde-fefd-4497-aef9-57465e18bf44 @ 06/08/24 13:10:21.699
  STEP: Creating a pod to test consume secrets @ 06/08/24 13:10:21.704
  E0608 13:10:21.941567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:22.941658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:23.942459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:24.942577      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:10:25.722
  Jun  8 13:10:25.725: INFO: Trying to get logs from node ip-172-31-74-243 pod pod-secrets-3dc45cf1-6187-4656-a15e-bb6c32756138 container secret-env-test: <nil>
  STEP: delete the pod @ 06/08/24 13:10:25.739
  Jun  8 13:10:25.751: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7653" for this suite. @ 06/08/24 13:10:25.754
• [4.079 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 06/08/24 13:10:25.759
  Jun  8 13:10:25.759: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename dns @ 06/08/24 13:10:25.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:10:25.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:10:25.778
  STEP: Creating a test headless service @ 06/08/24 13:10:25.779
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6780.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-6780.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6780.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-6780.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6780.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-6780.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6780.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-6780.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6780.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-6780.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6780.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-6780.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 29.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.29_udp@PTR;check="$$(dig +tcp +noall +answer +search 29.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.29_tcp@PTR;sleep 1; done
   @ 06/08/24 13:10:25.794
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6780.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6780.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6780.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6780.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6780.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-6780.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6780.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-6780.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6780.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-6780.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6780.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-6780.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 29.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.29_udp@PTR;check="$$(dig +tcp +noall +answer +search 29.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.29_tcp@PTR;sleep 1; done
   @ 06/08/24 13:10:25.794
  STEP: creating a pod to probe DNS @ 06/08/24 13:10:25.794
  STEP: submitting the pod to kubernetes @ 06/08/24 13:10:25.795
  E0608 13:10:25.943019      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:26.943178      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/08/24 13:10:27.809
  STEP: looking for the results for each expected name from probers @ 06/08/24 13:10:27.812
  Jun  8 13:10:27.817: INFO: Unable to read wheezy_udp@dns-test-service.dns-6780.svc.cluster.local from pod dns-6780/dns-test-7c49170d-e75c-4e60-81db-79616d4105c5: the server could not find the requested resource (get pods dns-test-7c49170d-e75c-4e60-81db-79616d4105c5)
  Jun  8 13:10:27.819: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6780.svc.cluster.local from pod dns-6780/dns-test-7c49170d-e75c-4e60-81db-79616d4105c5: the server could not find the requested resource (get pods dns-test-7c49170d-e75c-4e60-81db-79616d4105c5)
  Jun  8 13:10:27.823: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6780.svc.cluster.local from pod dns-6780/dns-test-7c49170d-e75c-4e60-81db-79616d4105c5: the server could not find the requested resource (get pods dns-test-7c49170d-e75c-4e60-81db-79616d4105c5)
  Jun  8 13:10:27.825: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6780.svc.cluster.local from pod dns-6780/dns-test-7c49170d-e75c-4e60-81db-79616d4105c5: the server could not find the requested resource (get pods dns-test-7c49170d-e75c-4e60-81db-79616d4105c5)
  Jun  8 13:10:27.839: INFO: Unable to read jessie_udp@dns-test-service.dns-6780.svc.cluster.local from pod dns-6780/dns-test-7c49170d-e75c-4e60-81db-79616d4105c5: the server could not find the requested resource (get pods dns-test-7c49170d-e75c-4e60-81db-79616d4105c5)
  Jun  8 13:10:27.842: INFO: Unable to read jessie_tcp@dns-test-service.dns-6780.svc.cluster.local from pod dns-6780/dns-test-7c49170d-e75c-4e60-81db-79616d4105c5: the server could not find the requested resource (get pods dns-test-7c49170d-e75c-4e60-81db-79616d4105c5)
  Jun  8 13:10:27.845: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6780.svc.cluster.local from pod dns-6780/dns-test-7c49170d-e75c-4e60-81db-79616d4105c5: the server could not find the requested resource (get pods dns-test-7c49170d-e75c-4e60-81db-79616d4105c5)
  Jun  8 13:10:27.848: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6780.svc.cluster.local from pod dns-6780/dns-test-7c49170d-e75c-4e60-81db-79616d4105c5: the server could not find the requested resource (get pods dns-test-7c49170d-e75c-4e60-81db-79616d4105c5)
  Jun  8 13:10:27.858: INFO: Lookups using dns-6780/dns-test-7c49170d-e75c-4e60-81db-79616d4105c5 failed for: [wheezy_udp@dns-test-service.dns-6780.svc.cluster.local wheezy_tcp@dns-test-service.dns-6780.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-6780.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-6780.svc.cluster.local jessie_udp@dns-test-service.dns-6780.svc.cluster.local jessie_tcp@dns-test-service.dns-6780.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-6780.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-6780.svc.cluster.local]

  Jun  8 13:10:27.863: INFO: Pod client logs for webserver: 
  Jun  8 13:10:27.867: INFO: Pod client logs for querier: 
  Jun  8 13:10:27.872: INFO: Pod client logs for jessie-querier: 
  E0608 13:10:27.943979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:28.944102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:29.944192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:30.944276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:31.944389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:10:32.858: INFO: DNS probes using dns-6780/dns-test-7c49170d-e75c-4e60-81db-79616d4105c5 succeeded

  STEP: deleting the pod @ 06/08/24 13:10:32.858
  STEP: deleting the test service @ 06/08/24 13:10:32.87
  STEP: deleting the test headless service @ 06/08/24 13:10:32.889
  Jun  8 13:10:32.905: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6780" for this suite. @ 06/08/24 13:10:32.908
• [7.154 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:169
  STEP: Creating a kubernetes client @ 06/08/24 13:10:32.913
  Jun  8 13:10:32.913: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/08/24 13:10:32.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:10:32.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:10:32.932
  STEP: create the container to handle the HTTPGet hook request. @ 06/08/24 13:10:32.936
  E0608 13:10:32.944371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:33.945332      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:34.945434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 06/08/24 13:10:34.95
  E0608 13:10:35.946135      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:36.946269      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 06/08/24 13:10:36.966
  STEP: delete the pod with lifecycle hook @ 06/08/24 13:10:36.971
  E0608 13:10:37.946378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:38.946462      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:10:38.982: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1949" for this suite. @ 06/08/24 13:10:38.985
• [6.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 06/08/24 13:10:38.991
  Jun  8 13:10:38.991: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename kubelet-test @ 06/08/24 13:10:38.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:10:39.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:10:39.007
  E0608 13:10:39.946589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:40.946798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:10:41.032: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3877" for this suite. @ 06/08/24 13:10:41.035
• [2.050 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 06/08/24 13:10:41.041
  Jun  8 13:10:41.041: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename resourcequota @ 06/08/24 13:10:41.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:10:41.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:10:41.06
  STEP: Counting existing ResourceQuota @ 06/08/24 13:10:41.063
  E0608 13:10:41.946900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:42.947008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:43.947721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:44.947773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:45.948474      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/08/24 13:10:46.066
  STEP: Ensuring resource quota status is calculated @ 06/08/24 13:10:46.07
  E0608 13:10:46.948713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:47.948830      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 06/08/24 13:10:48.074
  STEP: Ensuring ResourceQuota status captures the pod usage @ 06/08/24 13:10:48.087
  E0608 13:10:48.948927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:49.949095      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 06/08/24 13:10:50.091
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 06/08/24 13:10:50.093
  STEP: Ensuring a pod cannot update its resource requirements @ 06/08/24 13:10:50.094
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 06/08/24 13:10:50.098
  E0608 13:10:50.949109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:51.949279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 06/08/24 13:10:52.101
  STEP: Ensuring resource quota status released the pod usage @ 06/08/24 13:10:52.111
  E0608 13:10:52.949420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:53.949488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:10:54.114: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7286" for this suite. @ 06/08/24 13:10:54.117
• [13.084 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 06/08/24 13:10:54.125
  Jun  8 13:10:54.125: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename emptydir @ 06/08/24 13:10:54.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:10:54.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:10:54.143
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 06/08/24 13:10:54.145
  E0608 13:10:54.949605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:55.949746      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:56.950380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:57.950547      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:10:58.161
  Jun  8 13:10:58.164: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-788acc74-bf3b-423f-b654-ba053cf9a086 container test-container: <nil>
  STEP: delete the pod @ 06/08/24 13:10:58.17
  Jun  8 13:10:58.182: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4944" for this suite. @ 06/08/24 13:10:58.185
• [4.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 06/08/24 13:10:58.19
  Jun  8 13:10:58.190: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename conformance-tests @ 06/08/24 13:10:58.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:10:58.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:10:58.207
  STEP: Getting node addresses @ 06/08/24 13:10:58.212
  Jun  8 13:10:58.212: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Jun  8 13:10:58.215: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-698" for this suite. @ 06/08/24 13:10:58.218
• [0.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 06/08/24 13:10:58.223
  Jun  8 13:10:58.223: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename pods @ 06/08/24 13:10:58.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:10:58.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:10:58.241
  STEP: creating pod @ 06/08/24 13:10:58.242
  E0608 13:10:58.951181      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:10:59.951847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:11:00.263: INFO: Pod pod-hostip-ca612933-7bda-4895-be5a-2b07077f6b07 has hostIP: 172.31.31.116
  Jun  8 13:11:00.263: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1261" for this suite. @ 06/08/24 13:11:00.266
• [2.047 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 06/08/24 13:11:00.271
  Jun  8 13:11:00.271: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename kubelet-test @ 06/08/24 13:11:00.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:11:00.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:11:00.292
  E0608 13:11:00.951955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:01.953024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:02.953088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:03.953173      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:11:04.305: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7486" for this suite. @ 06/08/24 13:11:04.308
• [4.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 06/08/24 13:11:04.316
  Jun  8 13:11:04.316: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/08/24 13:11:04.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:11:04.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:11:04.335
  STEP: set up a multi version CRD @ 06/08/24 13:11:04.337
  Jun  8 13:11:04.337: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  E0608 13:11:04.953888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:05.954741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:06.955182      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: rename a version @ 06/08/24 13:11:07.416
  STEP: check the new version name is served @ 06/08/24 13:11:07.426
  E0608 13:11:07.956002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 06/08/24 13:11:08.122
  STEP: check the other version is not changed @ 06/08/24 13:11:08.71
  E0608 13:11:08.956491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:09.957317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:10.958101      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:11:11.165: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2857" for this suite. @ 06/08/24 13:11:11.172
• [6.862 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:641
  STEP: Creating a kubernetes client @ 06/08/24 13:11:11.178
  Jun  8 13:11:11.178: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename statefulset @ 06/08/24 13:11:11.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:11:11.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:11:11.196
  STEP: Creating service test in namespace statefulset-205 @ 06/08/24 13:11:11.198
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 06/08/24 13:11:11.202
  STEP: Creating stateful set ss in namespace statefulset-205 @ 06/08/24 13:11:11.209
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-205 @ 06/08/24 13:11:11.216
  Jun  8 13:11:11.221: INFO: Found 0 stateful pods, waiting for 1
  E0608 13:11:11.958377      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:12.959392      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:13.959617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:14.959699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:15.960447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:16.960727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:17.960912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:18.961730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:19.961820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:20.962012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:11:21.220: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 06/08/24 13:11:21.22
  Jun  8 13:11:21.223: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=statefulset-205 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun  8 13:11:21.314: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun  8 13:11:21.314: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun  8 13:11:21.314: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun  8 13:11:21.318: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0608 13:11:21.963024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:22.963139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:23.963199      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:24.963435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:25.964462      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:26.965361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:27.965942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:28.966428      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:29.966568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:30.966675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:11:31.319: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jun  8 13:11:31.319: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jun  8 13:11:31.336: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999775s
  E0608 13:11:31.967153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:11:32.340: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.99656s
  E0608 13:11:32.967261      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:11:33.344: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.992426892s
  E0608 13:11:33.967985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:11:34.349: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.988718817s
  E0608 13:11:34.968757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:11:35.352: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.983918503s
  E0608 13:11:35.969802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:11:36.357: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.979701692s
  E0608 13:11:36.970287      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:11:37.363: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.974204684s
  E0608 13:11:37.970511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:11:38.368: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.968450177s
  E0608 13:11:38.970807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:11:39.373: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.963998343s
  E0608 13:11:39.970912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:11:40.378: INFO: Verifying statefulset ss doesn't scale past 1 for another 958.702187ms
  E0608 13:11:40.971448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-205 @ 06/08/24 13:11:41.379
  Jun  8 13:11:41.383: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=statefulset-205 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun  8 13:11:41.463: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun  8 13:11:41.463: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun  8 13:11:41.463: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun  8 13:11:41.468: INFO: Found 1 stateful pods, waiting for 3
  E0608 13:11:41.971620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:42.971678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:43.971886      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:44.971935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:45.972430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:46.972992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:47.973088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:48.973165      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:49.973285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:50.973385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:11:51.467: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun  8 13:11:51.467: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun  8 13:11:51.467: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 06/08/24 13:11:51.467
  STEP: Scale down will halt with unhealthy stateful pod @ 06/08/24 13:11:51.467
  Jun  8 13:11:51.474: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=statefulset-205 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun  8 13:11:51.555: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun  8 13:11:51.555: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun  8 13:11:51.555: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun  8 13:11:51.555: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=statefulset-205 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun  8 13:11:51.643: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun  8 13:11:51.643: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun  8 13:11:51.643: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun  8 13:11:51.643: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=statefulset-205 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun  8 13:11:51.726: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun  8 13:11:51.726: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun  8 13:11:51.726: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun  8 13:11:51.726: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jun  8 13:11:51.729: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0608 13:11:51.974378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:52.974488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:53.974672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:54.974761      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:55.975438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:56.976363      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:57.976487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:58.976876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:11:59.976968      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:12:00.977151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:12:01.734: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jun  8 13:12:01.734: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Jun  8 13:12:01.734: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Jun  8 13:12:01.747: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999805s
  E0608 13:12:01.977726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:12:02.751: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.996690967s
  E0608 13:12:02.978265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:12:03.757: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.991649266s
  E0608 13:12:03.978645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:12:04.760: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.986857072s
  E0608 13:12:04.979151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:12:05.765: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.98313256s
  E0608 13:12:05.979660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:12:06.769: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.978837391s
  E0608 13:12:06.980354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:12:07.772: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.975098141s
  E0608 13:12:07.980710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:12:08.777: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.971592799s
  E0608 13:12:08.981060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:12:09.782: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.96631664s
  E0608 13:12:09.981201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:12:10.786: INFO: Verifying statefulset ss doesn't scale past 3 for another 961.221829ms
  E0608 13:12:10.982032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-205 @ 06/08/24 13:12:11.786
  Jun  8 13:12:11.790: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=statefulset-205 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun  8 13:12:11.875: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun  8 13:12:11.875: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun  8 13:12:11.875: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun  8 13:12:11.875: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=statefulset-205 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun  8 13:12:11.961: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun  8 13:12:11.961: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun  8 13:12:11.961: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun  8 13:12:11.961: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=statefulset-205 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0608 13:12:11.982779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:12:12.049: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun  8 13:12:12.049: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun  8 13:12:12.049: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun  8 13:12:12.049: INFO: Scaling statefulset ss to 0
  E0608 13:12:12.982900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:12:13.983938      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:12:14.984688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:12:15.984760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:12:16.984858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:12:17.984977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:12:18.985059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:12:19.985340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:12:20.985423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:12:21.986463      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 06/08/24 13:12:22.06
  Jun  8 13:12:22.060: INFO: Deleting all statefulset in ns statefulset-205
  Jun  8 13:12:22.065: INFO: Scaling statefulset ss to 0
  Jun  8 13:12:22.075: INFO: Waiting for statefulset status.replicas updated to 0
  Jun  8 13:12:22.077: INFO: Deleting statefulset ss
  Jun  8 13:12:22.088: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-205" for this suite. @ 06/08/24 13:12:22.091
• [70.918 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 06/08/24 13:12:22.096
  Jun  8 13:12:22.096: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename aggregator @ 06/08/24 13:12:22.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:12:22.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:12:22.118
  Jun  8 13:12:22.120: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Registering the sample API server. @ 06/08/24 13:12:22.12
  Jun  8 13:12:22.396: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Jun  8 13:12:22.423: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
  E0608 13:12:22.987044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:12:23.987195      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:12:24.461: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0608 13:12:24.987514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:12:25.988489      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:12:26.467: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0608 13:12:26.988678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:12:27.988766      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:12:28.466: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0608 13:12:28.988854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:12:29.988957      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:12:30.466: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0608 13:12:30.989041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:12:31.989207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:12:32.466: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0608 13:12:32.989747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:12:33.989935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:12:34.467: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0608 13:12:34.990486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:12:35.991542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:12:36.466: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0608 13:12:36.992244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:12:37.993085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:12:38.466: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0608 13:12:38.993236      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:12:39.993338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:12:40.467: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0608 13:12:40.993619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:12:41.993713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:12:42.466: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0608 13:12:42.994237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:12:43.994318      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:12:44.466: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0608 13:12:44.995244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:12:45.996218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:12:46.466: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 8, 13, 12, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0608 13:12:46.996311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:12:47.996412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:12:48.584: INFO: Waited 111.548307ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 06/08/24 13:12:48.613
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 06/08/24 13:12:48.616
  STEP: List APIServices @ 06/08/24 13:12:48.623
  Jun  8 13:12:48.626: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 06/08/24 13:12:48.626
  Jun  8 13:12:48.637: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 06/08/24 13:12:48.637
  Jun  8 13:12:48.645: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.June, 8, 13, 12, 48, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 06/08/24 13:12:48.645
  Jun  8 13:12:48.650: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-06-08 13:12:48 +0000 UTC Passed all checks passed}
  Jun  8 13:12:48.650: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun  8 13:12:48.650: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 06/08/24 13:12:48.65
  Jun  8 13:12:48.659: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-2094044285" @ 06/08/24 13:12:48.659
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 06/08/24 13:12:48.666
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 06/08/24 13:12:48.671
  STEP: Patch APIService Status @ 06/08/24 13:12:48.674
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 06/08/24 13:12:48.68
  Jun  8 13:12:48.683: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-06-08 13:12:48 +0000 UTC Passed all checks passed}
  Jun  8 13:12:48.683: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun  8 13:12:48.683: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Jun  8 13:12:48.683: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 06/08/24 13:12:48.683
  STEP: Confirm that the generated APIService has been deleted @ 06/08/24 13:12:48.693
  Jun  8 13:12:48.693: INFO: Requesting list of APIServices to confirm quantity
  Jun  8 13:12:48.697: INFO: Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  Jun  8 13:12:48.697: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Jun  8 13:12:48.785: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-9885" for this suite. @ 06/08/24 13:12:48.788
• [26.700 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 06/08/24 13:12:48.796
  Jun  8 13:12:48.796: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename namespaces @ 06/08/24 13:12:48.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:12:48.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:12:48.813
  STEP: creating a Namespace @ 06/08/24 13:12:48.816
  STEP: patching the Namespace @ 06/08/24 13:12:48.834
  STEP: get the Namespace and ensuring it has the label @ 06/08/24 13:12:48.842
  Jun  8 13:12:48.844: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2671" for this suite. @ 06/08/24 13:12:48.847
  STEP: Destroying namespace "nspatchtest-f3705cad-c53d-4e32-b305-e74f338fe286-1708" for this suite. @ 06/08/24 13:12:48.854
• [0.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 06/08/24 13:12:48.862
  Jun  8 13:12:48.862: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename configmap @ 06/08/24 13:12:48.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:12:48.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:12:48.879
  STEP: Creating configMap with name configmap-test-volume-68e6aa0f-750f-415f-a747-f23d2a8a0645 @ 06/08/24 13:12:48.883
  STEP: Creating a pod to test consume configMaps @ 06/08/24 13:12:48.887
  E0608 13:12:48.996800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:12:49.997005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:12:50.997681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:12:51.997827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:12:52.909
  Jun  8 13:12:52.912: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-configmaps-c8029f88-8bcd-4906-8b65-43d6590802d1 container agnhost-container: <nil>
  STEP: delete the pod @ 06/08/24 13:12:52.921
  Jun  8 13:12:52.938: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2679" for this suite. @ 06/08/24 13:12:52.94
• [4.084 seconds]
------------------------------
SSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 06/08/24 13:12:52.947
  Jun  8 13:12:52.947: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename downward-api @ 06/08/24 13:12:52.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:12:52.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:12:52.966
  STEP: Creating a pod to test downward api env vars @ 06/08/24 13:12:52.969
  E0608 13:12:52.998020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:12:53.998240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:12:54.983
  Jun  8 13:12:54.986: INFO: Trying to get logs from node ip-172-31-31-116 pod downward-api-ee09de55-b02c-4f93-8c2f-e51fc314dbf2 container dapi-container: <nil>
  STEP: delete the pod @ 06/08/24 13:12:54.992
  E0608 13:12:54.998925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:12:55.009: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2922" for this suite. @ 06/08/24 13:12:55.012
• [2.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 06/08/24 13:12:55.017
  Jun  8 13:12:55.017: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename tables @ 06/08/24 13:12:55.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:12:55.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:12:55.034
  Jun  8 13:12:55.039: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-1607" for this suite. @ 06/08/24 13:12:55.042
• [0.029 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 06/08/24 13:12:55.047
  Jun  8 13:12:55.047: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename replication-controller @ 06/08/24 13:12:55.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:12:55.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:12:55.065
  STEP: Given a ReplicationController is created @ 06/08/24 13:12:55.067
  STEP: When the matched label of one of its pods change @ 06/08/24 13:12:55.074
  Jun  8 13:12:55.076: INFO: Pod name pod-release: Found 0 pods out of 1
  E0608 13:12:55.999311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:12:56.999649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:12:57.999715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:12:58.999796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:00.000687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:13:00.083: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 06/08/24 13:13:00.091
  E0608 13:13:01.000965      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:13:01.109: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7784" for this suite. @ 06/08/24 13:13:01.112
• [6.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 06/08/24 13:13:01.118
  Jun  8 13:13:01.118: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename webhook @ 06/08/24 13:13:01.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:13:01.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:13:01.135
  STEP: Setting up server cert @ 06/08/24 13:13:01.157
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/08/24 13:13:01.378
  STEP: Deploying the webhook pod @ 06/08/24 13:13:01.385
  STEP: Wait for the deployment to be ready @ 06/08/24 13:13:01.397
  Jun  8 13:13:01.403: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0608 13:13:02.001612      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:03.001725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/08/24 13:13:03.414
  STEP: Verifying the service has paired with the endpoint @ 06/08/24 13:13:03.427
  E0608 13:13:04.002298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:13:04.428: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 06/08/24 13:13:04.435
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/08/24 13:13:04.435
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 06/08/24 13:13:04.448
  E0608 13:13:05.002394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 06/08/24 13:13:05.459
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/08/24 13:13:05.459
  E0608 13:13:06.003334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 06/08/24 13:13:06.486
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/08/24 13:13:06.486
  E0608 13:13:07.004402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:08.004477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:09.004575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:10.004773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:11.004898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 06/08/24 13:13:11.514
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/08/24 13:13:11.514
  E0608 13:13:12.004996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:13.005092      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:14.005170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:15.005249      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:16.005383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:13:16.596: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7770" for this suite. @ 06/08/24 13:13:16.6
  STEP: Destroying namespace "webhook-markers-2048" for this suite. @ 06/08/24 13:13:16.605
• [15.493 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 06/08/24 13:13:16.611
  Jun  8 13:13:16.611: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename lease-test @ 06/08/24 13:13:16.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:13:16.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:13:16.628
  Jun  8 13:13:16.675: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-5056" for this suite. @ 06/08/24 13:13:16.678
• [0.074 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 06/08/24 13:13:16.685
  Jun  8 13:13:16.685: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename secrets @ 06/08/24 13:13:16.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:13:16.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:13:16.705
  STEP: Creating secret with name secret-test-map-57d04ccb-df34-4b15-8741-535b191b02d9 @ 06/08/24 13:13:16.707
  STEP: Creating a pod to test consume secrets @ 06/08/24 13:13:16.713
  E0608 13:13:17.006237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:18.006362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:19.007235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:20.007414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:13:20.735
  Jun  8 13:13:20.738: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-secrets-4244055e-a1a1-478a-a936-9cdab9847682 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/08/24 13:13:20.743
  Jun  8 13:13:20.759: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9112" for this suite. @ 06/08/24 13:13:20.762
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 06/08/24 13:13:20.769
  Jun  8 13:13:20.769: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename crd-webhook @ 06/08/24 13:13:20.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:13:20.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:13:20.787
  STEP: Setting up server cert @ 06/08/24 13:13:20.79
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 06/08/24 13:13:20.889
  STEP: Deploying the custom resource conversion webhook pod @ 06/08/24 13:13:20.894
  STEP: Wait for the deployment to be ready @ 06/08/24 13:13:20.906
  Jun  8 13:13:20.920: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0608 13:13:21.007475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:22.007647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/08/24 13:13:22.931
  STEP: Verifying the service has paired with the endpoint @ 06/08/24 13:13:22.939
  E0608 13:13:23.008183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:13:23.940: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Jun  8 13:13:23.946: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  E0608 13:13:24.008379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:25.008731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:26.009126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 06/08/24 13:13:26.502
  STEP: v2 custom resource should be converted @ 06/08/24 13:13:26.508
  E0608 13:13:27.009684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:13:27.059: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-8881" for this suite. @ 06/08/24 13:13:27.062
• [6.304 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 06/08/24 13:13:27.073
  Jun  8 13:13:27.073: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename configmap @ 06/08/24 13:13:27.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:13:27.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:13:27.091
  Jun  8 13:13:27.128: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8632" for this suite. @ 06/08/24 13:13:27.131
• [0.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 06/08/24 13:13:27.136
  Jun  8 13:13:27.136: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename endpointslice @ 06/08/24 13:13:27.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:13:27.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:13:27.153
  Jun  8 13:13:27.163: INFO: Endpoints addresses: [172.31.68.184 172.31.83.136] , ports: [6443]
  Jun  8 13:13:27.163: INFO: EndpointSlices addresses: [172.31.68.184 172.31.83.136] , ports: [6443]
  Jun  8 13:13:27.163: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8057" for this suite. @ 06/08/24 13:13:27.165
• [0.036 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 06/08/24 13:13:27.172
  Jun  8 13:13:27.172: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename webhook @ 06/08/24 13:13:27.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:13:27.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:13:27.185
  STEP: Setting up server cert @ 06/08/24 13:13:27.208
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/08/24 13:13:27.391
  STEP: Deploying the webhook pod @ 06/08/24 13:13:27.397
  STEP: Wait for the deployment to be ready @ 06/08/24 13:13:27.407
  Jun  8 13:13:27.417: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0608 13:13:28.009846      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:29.009930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/08/24 13:13:29.427
  STEP: Verifying the service has paired with the endpoint @ 06/08/24 13:13:29.434
  E0608 13:13:30.010920      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:13:30.434: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 06/08/24 13:13:30.501
  STEP: Creating a configMap that should be mutated @ 06/08/24 13:13:30.51
  STEP: Deleting the collection of validation webhooks @ 06/08/24 13:13:30.53
  STEP: Creating a configMap that should not be mutated @ 06/08/24 13:13:30.573
  Jun  8 13:13:30.624: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1092" for this suite. @ 06/08/24 13:13:30.63
  STEP: Destroying namespace "webhook-markers-953" for this suite. @ 06/08/24 13:13:30.636
• [3.470 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 06/08/24 13:13:30.643
  Jun  8 13:13:30.643: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename kubectl-logs @ 06/08/24 13:13:30.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:13:30.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:13:30.659
  STEP: creating an pod @ 06/08/24 13:13:30.661
  Jun  8 13:13:30.661: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-logs-6112 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Jun  8 13:13:30.707: INFO: stderr: ""
  Jun  8 13:13:30.707: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 06/08/24 13:13:30.707
  Jun  8 13:13:30.707: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0608 13:13:31.011479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:32.011963      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:13:32.714: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 06/08/24 13:13:32.714
  Jun  8 13:13:32.714: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-logs-6112 logs logs-generator logs-generator'
  Jun  8 13:13:32.764: INFO: stderr: ""
  Jun  8 13:13:32.764: INFO: stdout: "I0608 13:13:31.266140       1 logs_generator.go:76] 0 POST /api/v1/namespaces/default/pods/fvf4 284\nI0608 13:13:31.466587       1 logs_generator.go:76] 1 GET /api/v1/namespaces/default/pods/dwdd 406\nI0608 13:13:31.666884       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/bdq4 365\nI0608 13:13:31.866649       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/cj7 243\nI0608 13:13:32.067107       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/9tv 445\nI0608 13:13:32.266330       1 logs_generator.go:76] 5 GET /api/v1/namespaces/kube-system/pods/429f 575\nI0608 13:13:32.466643       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/98c 381\nI0608 13:13:32.666943       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/bd5 483\n"
  STEP: limiting log lines @ 06/08/24 13:13:32.764
  Jun  8 13:13:32.764: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-logs-6112 logs logs-generator logs-generator --tail=1'
  Jun  8 13:13:32.809: INFO: stderr: ""
  Jun  8 13:13:32.809: INFO: stdout: "I0608 13:13:32.666943       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/bd5 483\n"
  Jun  8 13:13:32.809: INFO: got output "I0608 13:13:32.666943       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/bd5 483\n"
  STEP: limiting log bytes @ 06/08/24 13:13:32.809
  Jun  8 13:13:32.809: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-logs-6112 logs logs-generator logs-generator --limit-bytes=1'
  Jun  8 13:13:32.853: INFO: stderr: ""
  Jun  8 13:13:32.853: INFO: stdout: "I"
  Jun  8 13:13:32.853: INFO: got output "I"
  STEP: exposing timestamps @ 06/08/24 13:13:32.853
  Jun  8 13:13:32.853: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-logs-6112 logs logs-generator logs-generator --tail=1 --timestamps'
  Jun  8 13:13:32.899: INFO: stderr: ""
  Jun  8 13:13:32.899: INFO: stdout: "2024-06-08T13:13:32.866260776Z I0608 13:13:32.866183       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/8gm9 503\n"
  Jun  8 13:13:32.900: INFO: got output "2024-06-08T13:13:32.866260776Z I0608 13:13:32.866183       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/8gm9 503\n"
  STEP: restricting to a time range @ 06/08/24 13:13:32.9
  E0608 13:13:33.012254      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:34.012722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:35.012814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:13:35.400: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-logs-6112 logs logs-generator logs-generator --since=1s'
  Jun  8 13:13:35.446: INFO: stderr: ""
  Jun  8 13:13:35.446: INFO: stdout: "I0608 13:13:34.466574       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/jtn 558\nI0608 13:13:34.666941       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/default/pods/m5fh 512\nI0608 13:13:34.867056       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/kube-system/pods/vsvr 244\nI0608 13:13:35.066295       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/gjbn 515\nI0608 13:13:35.266591       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/ns/pods/4htz 444\n"
  Jun  8 13:13:35.446: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-logs-6112 logs logs-generator logs-generator --since=24h'
  Jun  8 13:13:35.492: INFO: stderr: ""
  Jun  8 13:13:35.492: INFO: stdout: "I0608 13:13:31.266140       1 logs_generator.go:76] 0 POST /api/v1/namespaces/default/pods/fvf4 284\nI0608 13:13:31.466587       1 logs_generator.go:76] 1 GET /api/v1/namespaces/default/pods/dwdd 406\nI0608 13:13:31.666884       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/bdq4 365\nI0608 13:13:31.866649       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/cj7 243\nI0608 13:13:32.067107       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/9tv 445\nI0608 13:13:32.266330       1 logs_generator.go:76] 5 GET /api/v1/namespaces/kube-system/pods/429f 575\nI0608 13:13:32.466643       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/98c 381\nI0608 13:13:32.666943       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/bd5 483\nI0608 13:13:32.866183       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/8gm9 503\nI0608 13:13:33.066446       1 logs_generator.go:76] 9 POST /api/v1/namespaces/default/pods/7fx 365\nI0608 13:13:33.266760       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/default/pods/wgpr 415\nI0608 13:13:33.467058       1 logs_generator.go:76] 11 POST /api/v1/namespaces/kube-system/pods/9xh 467\nI0608 13:13:33.666325       1 logs_generator.go:76] 12 GET /api/v1/namespaces/kube-system/pods/rrm 460\nI0608 13:13:33.866649       1 logs_generator.go:76] 13 POST /api/v1/namespaces/ns/pods/kc4f 572\nI0608 13:13:34.066966       1 logs_generator.go:76] 14 POST /api/v1/namespaces/ns/pods/9xk4 262\nI0608 13:13:34.266233       1 logs_generator.go:76] 15 GET /api/v1/namespaces/default/pods/427c 520\nI0608 13:13:34.466574       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/jtn 558\nI0608 13:13:34.666941       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/default/pods/m5fh 512\nI0608 13:13:34.867056       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/kube-system/pods/vsvr 244\nI0608 13:13:35.066295       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/gjbn 515\nI0608 13:13:35.266591       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/ns/pods/4htz 444\nI0608 13:13:35.466870       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/kube-system/pods/hb4 365\n"
  Jun  8 13:13:35.493: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-logs-6112 delete pod logs-generator'
  E0608 13:13:36.012895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:13:36.090: INFO: stderr: ""
  Jun  8 13:13:36.090: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Jun  8 13:13:36.090: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-6112" for this suite. @ 06/08/24 13:13:36.093
• [5.456 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 06/08/24 13:13:36.099
  Jun  8 13:13:36.099: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename downward-api @ 06/08/24 13:13:36.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:13:36.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:13:36.116
  STEP: Creating a pod to test downward API volume plugin @ 06/08/24 13:13:36.123
  E0608 13:13:37.013399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:38.014311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:39.014411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:40.014496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:13:40.2
  Jun  8 13:13:40.203: INFO: Trying to get logs from node ip-172-31-31-116 pod downwardapi-volume-f431ae33-3682-4edb-803e-4f0035000776 container client-container: <nil>
  STEP: delete the pod @ 06/08/24 13:13:40.209
  Jun  8 13:13:40.224: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8406" for this suite. @ 06/08/24 13:13:40.227
• [4.135 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 06/08/24 13:13:40.234
  Jun  8 13:13:40.234: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename dns @ 06/08/24 13:13:40.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:13:40.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:13:40.25
  STEP: Creating a test headless service @ 06/08/24 13:13:40.252
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2542.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-2542.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 06/08/24 13:13:40.258
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2542.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-2542.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 06/08/24 13:13:40.258
  STEP: creating a pod to probe DNS @ 06/08/24 13:13:40.258
  STEP: submitting the pod to kubernetes @ 06/08/24 13:13:40.258
  E0608 13:13:41.014587      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:42.014688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/08/24 13:13:42.282
  STEP: looking for the results for each expected name from probers @ 06/08/24 13:13:42.285
  Jun  8 13:13:42.301: INFO: DNS probes using dns-2542/dns-test-2a03078d-d32d-4cdd-9eaf-273435b2c994 succeeded

  STEP: deleting the pod @ 06/08/24 13:13:42.301
  STEP: deleting the test headless service @ 06/08/24 13:13:42.315
  Jun  8 13:13:42.335: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2542" for this suite. @ 06/08/24 13:13:42.339
• [2.112 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 06/08/24 13:13:42.346
  Jun  8 13:13:42.346: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename cronjob @ 06/08/24 13:13:42.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:13:42.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:13:42.366
  STEP: Creating a suspended cronjob @ 06/08/24 13:13:42.369
  STEP: Ensuring no jobs are scheduled @ 06/08/24 13:13:42.373
  E0608 13:13:43.015529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:44.015643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:45.015874      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:46.016497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:47.016606      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:48.016696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:49.016790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:50.016987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:51.017060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:52.017978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:53.018081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:54.018183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:55.018292      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:56.018406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:57.019314      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:58.020013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:13:59.020091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:00.020172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:01.020716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:02.021792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:03.022028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:04.022110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:05.022204      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:06.022531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:07.022620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:08.023701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:09.023785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:10.023881      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:11.024723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:12.025114      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:13.026085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:14.026178      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:15.026268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:16.026350      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:17.026482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:18.026581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:19.026681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:20.026930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:21.027013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:22.027111      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:23.027989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:24.028091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:25.028595      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:26.029527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:27.029622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:28.029838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:29.029935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:30.030026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:31.030988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:32.031098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:33.032049      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:34.032142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:35.032247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:36.033014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:37.033700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:38.033888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:39.034237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:40.034456      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:41.035299      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:42.035374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:43.035456      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:44.035643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:45.036273      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:46.036442      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:47.036543      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:48.036664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:49.037593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:50.037691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:51.037811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:52.037922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:53.038018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:54.038111      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:55.038906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:56.039529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:57.039666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:58.039771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:14:59.039882      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:00.040802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:01.041493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:02.041591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:03.041911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:04.042104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:05.042291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:06.042320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:07.042408      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:08.042523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:09.042570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:10.042751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:11.043633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:12.043863      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:13.044869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:14.045056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:15.045785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:16.046500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:17.046913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:18.047077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:19.047996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:20.048100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:21.048877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:22.049415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:23.050412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:24.050510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:25.051022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:26.051386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:27.052133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:28.052167      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:29.052344      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:30.052709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:31.052791      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:32.053696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:33.053771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:34.053947      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:35.054590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:36.055615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:37.056260      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:38.056393      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:39.057087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:40.057277      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:41.057875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:42.057978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:43.058444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:44.058635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:45.059264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:46.059479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:47.060476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:48.060755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:49.061618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:50.061815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:51.062675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:52.062989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:53.063834      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:54.064687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:55.065490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:56.065661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:57.066074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:58.066288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:15:59.067307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:00.067403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:01.067531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:02.067629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:03.068401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:04.068651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:05.069196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:06.070083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:07.070196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:08.070466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:09.070549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:10.071616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:11.071722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:12.071809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:13.071961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:14.072066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:15.072360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:16.073033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:17.073435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:18.073528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:19.074204      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:20.074349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:21.075138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:22.075260      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:23.075429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:24.075625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:25.075724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:26.075947      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:27.076034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:28.076180      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:29.076262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:30.076761      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:31.076859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:32.077169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:33.077530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:34.077720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:35.078590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:36.079629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:37.079910      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:38.080014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:39.080563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:40.080755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:41.081256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:42.081472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:43.081677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:44.081768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:45.082848      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:46.083564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:47.083637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:48.084714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:49.084819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:50.084899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:51.085030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:52.085294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:53.085400      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:54.085702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:55.085896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:56.086142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:57.087108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:58.087295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:16:59.087635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:00.087709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:01.088695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:02.088787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:03.088892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:04.089217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:05.089312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:06.090135      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:07.091236      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:08.091368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:09.091948      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:10.092117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:11.092207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:12.092447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:13.093092      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:14.093166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:15.093932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:16.093994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:17.094053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:18.095033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:19.095132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:20.095225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:21.095615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:22.095708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:23.095803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:24.096687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:25.096790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:26.096986      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:27.097818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:28.098040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:29.098140      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:30.098344      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:31.099391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:32.099622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:33.100688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:34.100799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:35.100894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:36.101592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:37.102588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:38.102690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:39.103476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:40.103621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:41.104686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:42.104786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:43.104873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:44.104978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:45.105177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:46.106061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:47.106164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:48.106263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:49.107015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:50.107126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:51.108072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:52.108170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:53.109048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:54.110042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:55.110637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:56.111616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:57.112683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:58.113357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:17:59.113445      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:00.113660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:01.114595      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:02.114709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:03.114822      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:04.115250      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:05.115615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:06.115896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:07.115984      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:08.116682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:09.116780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:10.117030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:11.117683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:12.117773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:13.117884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:14.118070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:15.118177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:16.119125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:17.120138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:18.120717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:19.121730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:20.121852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:21.122671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:22.122971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:23.123066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:24.123285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:25.123552      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:26.123626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:27.123720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:28.124716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:29.124886      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:30.124979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:31.125091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:32.125408      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:33.126082      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:34.126250      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:35.126324      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:36.127013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:37.127446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:38.127622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:39.128657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:40.128752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:41.129472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:42.129691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 06/08/24 13:18:42.38
  STEP: Removing cronjob @ 06/08/24 13:18:42.383
  Jun  8 13:18:42.389: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7389" for this suite. @ 06/08/24 13:18:42.396
• [300.055 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:488
  STEP: Creating a kubernetes client @ 06/08/24 13:18:42.402
  Jun  8 13:18:42.402: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename security-context-test @ 06/08/24 13:18:42.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:18:42.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:18:42.419
  E0608 13:18:43.129812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:44.129903      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:18:44.441: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6990" for this suite. @ 06/08/24 13:18:44.445
• [2.051 seconds]
------------------------------
SSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 06/08/24 13:18:44.453
  Jun  8 13:18:44.453: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename podtemplate @ 06/08/24 13:18:44.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:18:44.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:18:44.465
  Jun  8 13:18:44.494: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-5231" for this suite. @ 06/08/24 13:18:44.498
• [0.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 06/08/24 13:18:44.503
  Jun  8 13:18:44.503: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename apf @ 06/08/24 13:18:44.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:18:44.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:18:44.519
  STEP: getting /apis @ 06/08/24 13:18:44.522
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 06/08/24 13:18:44.524
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 06/08/24 13:18:44.525
  STEP: creating @ 06/08/24 13:18:44.526
  STEP: getting @ 06/08/24 13:18:44.541
  STEP: listing @ 06/08/24 13:18:44.543
  STEP: watching @ 06/08/24 13:18:44.546
  Jun  8 13:18:44.546: INFO: starting watch
  STEP: patching @ 06/08/24 13:18:44.547
  STEP: updating @ 06/08/24 13:18:44.552
  Jun  8 13:18:44.559: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 06/08/24 13:18:44.559
  STEP: patching /status @ 06/08/24 13:18:44.562
  STEP: updating /status @ 06/08/24 13:18:44.565
  STEP: deleting @ 06/08/24 13:18:44.573
  STEP: deleting a collection @ 06/08/24 13:18:44.585
  Jun  8 13:18:44.601: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-6721" for this suite. @ 06/08/24 13:18:44.604
• [0.106 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 06/08/24 13:18:44.61
  Jun  8 13:18:44.610: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename container-runtime @ 06/08/24 13:18:44.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:18:44.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:18:44.642
  STEP: create the container @ 06/08/24 13:18:44.65
  W0608 13:18:44.660710      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 06/08/24 13:18:44.661
  E0608 13:18:45.130804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:46.131297      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 06/08/24 13:18:46.672
  STEP: the container should be terminated @ 06/08/24 13:18:46.675
  STEP: the termination message should be set @ 06/08/24 13:18:46.675
  Jun  8 13:18:46.675: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 06/08/24 13:18:46.675
  Jun  8 13:18:46.689: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3274" for this suite. @ 06/08/24 13:18:46.693
• [2.089 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 06/08/24 13:18:46.7
  Jun  8 13:18:46.700: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename projected @ 06/08/24 13:18:46.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:18:46.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:18:46.717
  STEP: Creating configMap with name projected-configmap-test-volume-390e30d1-d32c-4a3c-ab08-4305b8332b08 @ 06/08/24 13:18:46.72
  STEP: Creating a pod to test consume configMaps @ 06/08/24 13:18:46.725
  E0608 13:18:47.131401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:48.131507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:49.132127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:50.133041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:18:50.744
  Jun  8 13:18:50.746: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-projected-configmaps-337f2830-c6f1-467f-be2f-9885a8fdf620 container agnhost-container: <nil>
  STEP: delete the pod @ 06/08/24 13:18:50.762
  Jun  8 13:18:50.777: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3455" for this suite. @ 06/08/24 13:18:50.78
• [4.086 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:155
  STEP: Creating a kubernetes client @ 06/08/24 13:18:50.786
  Jun  8 13:18:50.786: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename secrets @ 06/08/24 13:18:50.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:18:50.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:18:50.8
  STEP: creating a secret @ 06/08/24 13:18:50.802
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 06/08/24 13:18:50.806
  STEP: patching the secret @ 06/08/24 13:18:50.808
  STEP: deleting the secret using a LabelSelector @ 06/08/24 13:18:50.816
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 06/08/24 13:18:50.822
  Jun  8 13:18:50.825: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2629" for this suite. @ 06/08/24 13:18:50.827
• [0.047 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 06/08/24 13:18:50.832
  Jun  8 13:18:50.832: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename webhook @ 06/08/24 13:18:50.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:18:50.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:18:50.849
  STEP: Setting up server cert @ 06/08/24 13:18:50.874
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/08/24 13:18:51.097
  STEP: Deploying the webhook pod @ 06/08/24 13:18:51.105
  STEP: Wait for the deployment to be ready @ 06/08/24 13:18:51.119
  Jun  8 13:18:51.125: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0608 13:18:51.133498      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:52.133618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:53.133853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/08/24 13:18:53.135
  STEP: Verifying the service has paired with the endpoint @ 06/08/24 13:18:53.144
  E0608 13:18:54.134421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:18:54.144: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun  8 13:18:54.151: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8266-crds.webhook.example.com via the AdmissionRegistration API @ 06/08/24 13:18:54.664
  STEP: Creating a custom resource that should be mutated by the webhook @ 06/08/24 13:18:54.676
  E0608 13:18:55.134705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:56.135100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:57.135239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:18:57.266: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9026" for this suite. @ 06/08/24 13:18:57.27
  STEP: Destroying namespace "webhook-markers-5212" for this suite. @ 06/08/24 13:18:57.275
• [6.449 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 06/08/24 13:18:57.281
  Jun  8 13:18:57.281: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename secrets @ 06/08/24 13:18:57.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:18:57.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:18:57.3
  STEP: Creating secret with name secret-test-49c1404c-95da-41cf-b301-c3bb24f3c113 @ 06/08/24 13:18:57.302
  STEP: Creating a pod to test consume secrets @ 06/08/24 13:18:57.306
  E0608 13:18:58.135558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:18:59.135696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:19:00.135785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:19:01.135863      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:19:01.334
  Jun  8 13:19:01.338: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-secrets-1da23a74-466f-4616-906c-63a389fb5819 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/08/24 13:19:01.344
  Jun  8 13:19:01.359: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2865" for this suite. @ 06/08/24 13:19:01.363
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 06/08/24 13:19:01.369
  Jun  8 13:19:01.369: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename webhook @ 06/08/24 13:19:01.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:19:01.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:19:01.385
  STEP: Setting up server cert @ 06/08/24 13:19:01.406
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/08/24 13:19:01.646
  STEP: Deploying the webhook pod @ 06/08/24 13:19:01.651
  STEP: Wait for the deployment to be ready @ 06/08/24 13:19:01.663
  Jun  8 13:19:01.675: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0608 13:19:02.135964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:19:03.136058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/08/24 13:19:03.687
  STEP: Verifying the service has paired with the endpoint @ 06/08/24 13:19:03.696
  E0608 13:19:04.136517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:19:04.697: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 06/08/24 13:19:04.703
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 06/08/24 13:19:04.718
  STEP: Creating a configMap that should not be mutated @ 06/08/24 13:19:04.725
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 06/08/24 13:19:04.733
  STEP: Creating a configMap that should be mutated @ 06/08/24 13:19:04.739
  Jun  8 13:19:04.791: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1410" for this suite. @ 06/08/24 13:19:04.794
  STEP: Destroying namespace "webhook-markers-6254" for this suite. @ 06/08/24 13:19:04.8
• [3.440 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 06/08/24 13:19:04.809
  Jun  8 13:19:04.809: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename pv @ 06/08/24 13:19:04.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:19:04.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:19:04.824
  STEP: Creating initial PV and PVC @ 06/08/24 13:19:04.826
  Jun  8 13:19:04.826: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-9160" @ 06/08/24 13:19:04.836
  STEP: Listing PVCs in namespace "pv-9160" @ 06/08/24 13:19:04.839
  STEP: Patching the PV "pv-9160-vfbjt" @ 06/08/24 13:19:04.845
  STEP: Patching the PVC "pvc-xl2rs" @ 06/08/24 13:19:04.853
  STEP: Getting PV "pv-9160-vfbjt" @ 06/08/24 13:19:04.859
  STEP: Getting PVC "pvc-xl2rs" @ 06/08/24 13:19:04.863
  STEP: Deleting PVC "pvc-xl2rs" @ 06/08/24 13:19:04.865
  STEP: Confirm deletion of PVC "pvc-xl2rs" @ 06/08/24 13:19:04.872
  E0608 13:19:05.136755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:19:06.136846      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-9160-vfbjt" @ 06/08/24 13:19:06.88
  STEP: Confirm deletion of PV "pv-9160-vfbjt" @ 06/08/24 13:19:06.886
  E0608 13:19:07.137280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:19:08.137622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 06/08/24 13:19:08.894
  Jun  8 13:19:08.894: INFO: Creating a PV followed by a PVC
  STEP: Updating the PV "pv-9160-jgv5d" @ 06/08/24 13:19:08.904
  STEP: Updating the PVC "pvc-mphc4" @ 06/08/24 13:19:08.931
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-mphc4=updated" @ 06/08/24 13:19:08.939
  STEP: Deleting PVC "pvc-mphc4" via DeleteCollection @ 06/08/24 13:19:08.942
  STEP: Confirm deletion of PVC "pvc-mphc4" @ 06/08/24 13:19:08.949
  E0608 13:19:09.137687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:19:10.137798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-9160-jgv5d" via DeleteCollection @ 06/08/24 13:19:10.956
  STEP: Confirm deletion of PV "pv-9160-jgv5d" @ 06/08/24 13:19:10.965
  E0608 13:19:11.138467      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:19:12.138714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:19:12.972: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Jun  8 13:19:12.972: INFO: Deleting PersistentVolumeClaim "pvc-mphc4"
  Jun  8 13:19:12.975: INFO: Deleting PersistentVolume "pv-9160-jgv5d"
  Jun  8 13:19:12.977: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-9160" for this suite. @ 06/08/24 13:19:12.981
• [8.178 seconds]
------------------------------
SSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 06/08/24 13:19:12.987
  Jun  8 13:19:12.987: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename podtemplate @ 06/08/24 13:19:12.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:19:13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:19:13.003
  STEP: Create set of pod templates @ 06/08/24 13:19:13.005
  Jun  8 13:19:13.010: INFO: created test-podtemplate-1
  Jun  8 13:19:13.014: INFO: created test-podtemplate-2
  Jun  8 13:19:13.017: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 06/08/24 13:19:13.017
  STEP: delete collection of pod templates @ 06/08/24 13:19:13.02
  Jun  8 13:19:13.020: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 06/08/24 13:19:13.035
  Jun  8 13:19:13.035: INFO: requesting list of pod templates to confirm quantity
  Jun  8 13:19:13.037: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3668" for this suite. @ 06/08/24 13:19:13.04
• [0.058 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:611
  STEP: Creating a kubernetes client @ 06/08/24 13:19:13.045
  Jun  8 13:19:13.045: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename security-context-test @ 06/08/24 13:19:13.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:19:13.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:19:13.061
  E0608 13:19:13.139313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:19:14.139405      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:19:15.140122      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:19:16.141118      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:19:17.089: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3173" for this suite. @ 06/08/24 13:19:17.092
• [4.053 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 06/08/24 13:19:17.099
  Jun  8 13:19:17.099: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename webhook @ 06/08/24 13:19:17.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:19:17.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:19:17.116
  STEP: Setting up server cert @ 06/08/24 13:19:17.136
  E0608 13:19:17.141092      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/08/24 13:19:17.264
  STEP: Deploying the webhook pod @ 06/08/24 13:19:17.269
  STEP: Wait for the deployment to be ready @ 06/08/24 13:19:17.28
  Jun  8 13:19:17.289: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0608 13:19:18.141226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:19:19.141330      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/08/24 13:19:19.3
  STEP: Verifying the service has paired with the endpoint @ 06/08/24 13:19:19.311
  E0608 13:19:20.141846      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:19:20.312: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 06/08/24 13:19:20.319
  STEP: create a pod that should be denied by the webhook @ 06/08/24 13:19:20.331
  STEP: create a pod that causes the webhook to hang @ 06/08/24 13:19:20.337
  E0608 13:19:21.142483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:19:22.142537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:19:23.142729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:19:24.142827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:19:25.142887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:19:26.143628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:19:27.143704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:19:28.144698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:19:29.144876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:19:30.145071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 06/08/24 13:19:30.344
  STEP: create a configmap that should be admitted by the webhook @ 06/08/24 13:19:30.38
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 06/08/24 13:19:30.387
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 06/08/24 13:19:30.395
  STEP: create a namespace that bypass the webhook @ 06/08/24 13:19:30.399
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 06/08/24 13:19:30.416
  Jun  8 13:19:30.472: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1685" for this suite. @ 06/08/24 13:19:30.477
  STEP: Destroying namespace "webhook-markers-2323" for this suite. @ 06/08/24 13:19:30.483
  STEP: Destroying namespace "exempted-namespace-6356" for this suite. @ 06/08/24 13:19:30.489
• [13.395 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 06/08/24 13:19:30.494
  Jun  8 13:19:30.494: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename projected @ 06/08/24 13:19:30.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:19:30.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:19:30.51
  STEP: Creating configMap with name configmap-projected-all-test-volume-e6e87658-ef46-454e-af03-feb8025ea08c @ 06/08/24 13:19:30.513
  STEP: Creating secret with name secret-projected-all-test-volume-60abd2ad-1681-448b-aa84-789aaace6869 @ 06/08/24 13:19:30.518
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 06/08/24 13:19:30.522
  E0608 13:19:31.145165      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:19:32.145490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:19:32.539
  Jun  8 13:19:32.541: INFO: Trying to get logs from node ip-172-31-31-116 pod projected-volume-4ed76515-78a2-4c01-9360-6d9f0b557ed8 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 06/08/24 13:19:32.547
  Jun  8 13:19:32.561: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6619" for this suite. @ 06/08/24 13:19:32.564
• [2.077 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 06/08/24 13:19:32.571
  Jun  8 13:19:32.571: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename container-probe @ 06/08/24 13:19:32.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:19:32.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:19:32.59
  STEP: Creating pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678 @ 06/08/24 13:19:32.592
  E0608 13:19:33.145606      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:19:34.145797      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/08/24 13:19:34.612
  Jun  8 13:19:34.621: INFO: Initial restart count of pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 is 0
  Jun  8 13:19:34.624: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:19:35.146191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:19:36.147132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:19:36.628: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:19:37.148002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:19:38.148106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:19:38.632: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:19:39.148757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:19:40.148827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:19:40.636: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:19:41.149132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:19:42.149412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:19:42.640: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:19:43.150466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:19:44.150644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:19:44.648: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:19:45.150834      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:19:46.151639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:19:46.656: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:19:47.152656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:19:48.152737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:19:48.658: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:19:49.153550      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:19:50.153835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:19:50.664: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:19:51.154572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:19:52.154671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:19:52.668: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:19:53.155691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:19:54.155777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:19:54.672: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:19:55.156435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:19:56.156598      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:19:56.677: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:19:57.156990      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:19:58.157086      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:19:58.681: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:19:59.157989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:20:00.158087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:20:00.686: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:20:01.158989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:20:02.159066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:20:02.691: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:20:03.159244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:20:04.159706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:20:04.696: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:20:05.159795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:20:06.160644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:20:06.700: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:20:07.160750      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:20:08.160841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:20:08.704: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:20:09.161675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:20:10.162006      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:20:10.708: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:20:11.162935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:20:12.163021      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:20:12.712: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:20:13.163093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:20:14.163282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:20:14.716: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:20:15.163647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:20:16.164676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:20:16.721: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:20:17.164740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:20:18.164873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:20:18.725: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:20:19.165247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:20:20.165919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:20:20.729: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:20:21.166765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:20:22.166861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:20:22.734: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:20:23.167866      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:20:24.168736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:20:24.739: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:20:25.168973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:20:26.169077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:20:26.744: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:20:27.170065      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:20:28.170143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:20:28.749: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:20:29.170249      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:20:30.170516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:20:30.754: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:20:31.170770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:20:32.170952      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:20:32.759: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:20:33.171647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:20:34.171731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:20:34.763: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:20:35.172644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:20:36.173090      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:20:36.767: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:20:37.173194      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:20:38.173305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:20:38.773: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:20:39.173360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:20:40.173563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:20:40.777: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:20:41.174268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:20:42.174372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:20:42.781: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:20:43.174433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:20:44.175461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:20:44.786: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:20:45.176162      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:20:46.177079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:20:46.790: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:20:47.177369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:20:48.177593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:20:48.795: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:20:49.178299      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:20:50.178378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:20:50.800: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:20:51.179093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:20:52.179182      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:20:52.805: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:20:53.179765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:20:54.179857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:20:54.809: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:20:55.179946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:20:56.180395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:20:56.813: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:20:57.180874      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:20:58.180969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:20:58.817: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:20:59.181350      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:21:00.181541      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:21:00.822: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:21:01.181619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:21:02.181799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:21:02.826: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:21:03.181946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:21:04.182256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:21:04.830: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:21:05.182979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:21:06.183039      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:21:06.835: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:21:07.183929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:21:08.184011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:21:08.839: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:21:09.184274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:21:10.184840      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:21:10.844: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:21:11.185501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:21:12.185889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:21:12.849: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:21:13.185907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:21:14.186083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:21:14.852: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:21:15.186281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:21:16.187135      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:21:16.858: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:21:17.187762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:21:18.187939      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:21:18.862: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:21:19.188520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:21:20.188690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:21:20.866: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:21:21.189250      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:21:22.189981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:21:22.871: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:21:23.190093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:21:24.190250      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:21:24.876: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:21:25.190813      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:21:26.190929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:21:26.880: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:21:27.191698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:21:28.191802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:21:28.884: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:21:29.191892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:21:30.192714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:21:30.889: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:21:31.193097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:21:32.193471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:21:32.894: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:21:33.193865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:21:34.193950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:21:34.898: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:21:35.195041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:21:36.195108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:21:36.905: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:21:37.195460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:21:38.195654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:21:38.909: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:21:39.196092      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:21:40.196214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:21:40.913: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:21:41.197212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:21:42.197422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:21:42.918: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:21:43.198126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:21:44.198323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:21:44.923: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:21:45.199012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:21:46.199108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:21:46.927: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:21:47.199851      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:21:48.199944      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:21:48.931: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:21:49.200041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:21:50.200137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:21:50.936: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:21:51.200691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:21:52.200986      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:21:52.940: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:21:53.202019      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:21:54.202112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:21:54.944: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:21:55.202610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:21:56.203689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:21:56.948: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:21:57.204687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:21:58.205437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:21:58.953: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:21:59.205847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:22:00.206003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:22:00.958: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:22:01.206833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:22:02.207223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:22:02.962: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:22:03.208233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:22:04.208804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:22:04.967: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:22:05.209090      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:22:06.209154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:22:06.972: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:22:07.209358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:22:08.209455      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:22:08.977: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:22:09.209678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:22:10.210773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:22:10.980: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:22:11.210937      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:22:12.211110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:22:12.985: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:22:13.211691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:22:14.212691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:22:14.989: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:22:15.213395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:22:16.213474      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:22:16.994: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:22:17.213611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:22:18.213788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:22:18.998: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:22:19.214433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:22:20.214663      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:22:21.003: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:22:21.215436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:22:22.215618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:22:23.007: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:22:23.216600      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:22:24.216726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:22:25.012: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:22:25.217532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:22:26.217613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:22:27.015: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:22:27.218270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:22:28.218448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:22:29.020: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:22:29.218618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:22:30.218697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:22:31.023: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:22:31.219715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:22:32.219827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:22:33.028: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:22:33.219893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:22:34.220862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:22:35.031: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:22:35.220995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:22:36.221279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:22:37.035: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:22:37.221682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:22:38.221783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:22:39.039: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:22:39.222827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:22:40.222921      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:22:41.043: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:22:41.223008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:22:42.223131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:22:43.048: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:22:43.223691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:22:44.224698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:22:45.051: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:22:45.225171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:22:46.226199      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:22:47.054: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:22:47.227144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:22:48.227314      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:22:49.058: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:22:49.228218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:22:50.228704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:22:51.062: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:22:51.228789      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:22:52.229239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:22:53.067: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:22:53.229387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:22:54.229575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:22:55.071: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:22:55.230482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:22:56.231565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:22:57.075: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:22:57.232064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:22:58.232151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:22:59.079: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:22:59.233113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:23:00.233482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:23:01.083: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:23:01.233567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:23:02.234292      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:23:03.088: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:23:03.234375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:23:04.234446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:23:05.092: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:23:05.234930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:23:06.235926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:23:07.096: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:23:07.236068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:23:08.236150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:23:09.100: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:23:09.236177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:23:10.236283      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:23:11.105: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:23:11.236430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:23:12.236669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:23:13.109: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:23:13.236912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:23:14.237097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:23:15.113: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:23:15.237163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:23:16.238197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:23:17.117: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:23:17.238946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:23:18.239039      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:23:19.122: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:23:19.239592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:23:20.239650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:23:21.126: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:23:21.240248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:23:22.240499      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:23:23.131: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:23:23.241375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:23:24.241468      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:23:25.134: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:23:25.242131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:23:26.243027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:23:27.139: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:23:27.243668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:23:28.244687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:23:29.142: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:23:29.244942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:23:30.245373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:23:31.146: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:23:31.246168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:23:32.247226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:23:33.150: INFO: Get pod busybox-6977ca1d-305b-4ca5-8417-c611ea6efc00 in namespace container-probe-7678
  E0608 13:23:33.248138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:23:34.248720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 06/08/24 13:23:35.151
  Jun  8 13:23:35.171: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7678" for this suite. @ 06/08/24 13:23:35.175
• [242.611 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2177
  STEP: Creating a kubernetes client @ 06/08/24 13:23:35.182
  Jun  8 13:23:35.182: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename services @ 06/08/24 13:23:35.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:23:35.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:23:35.2
  STEP: creating service in namespace services-3586 @ 06/08/24 13:23:35.203
  STEP: creating service affinity-clusterip in namespace services-3586 @ 06/08/24 13:23:35.203
  STEP: creating replication controller affinity-clusterip in namespace services-3586 @ 06/08/24 13:23:35.214
  I0608 13:23:35.224899      19 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-3586, replica count: 3
  E0608 13:23:35.249281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:23:36.250017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:23:37.250146      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:23:38.250209      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0608 13:23:38.276446      19 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun  8 13:23:38.283: INFO: Creating new exec pod
  E0608 13:23:39.250340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:23:40.250624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:23:41.250926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:23:41.300: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-3586 exec execpod-affinityjfn72 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Jun  8 13:23:41.390: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Jun  8 13:23:41.390: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  8 13:23:41.390: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-3586 exec execpod-affinityjfn72 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.187 80'
  Jun  8 13:23:41.474: INFO: stderr: "+ nc -v -t -w 2 10.152.183.187 80\n+ echo hostName\nConnection to 10.152.183.187 80 port [tcp/http] succeeded!\n"
  Jun  8 13:23:41.474: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  8 13:23:41.474: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-3586 exec execpod-affinityjfn72 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.187:80/ ; done'
  Jun  8 13:23:41.602: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.187:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.187:80/\n"
  Jun  8 13:23:41.602: INFO: stdout: "\naffinity-clusterip-rkpvz\naffinity-clusterip-rkpvz\naffinity-clusterip-rkpvz\naffinity-clusterip-rkpvz\naffinity-clusterip-rkpvz\naffinity-clusterip-rkpvz\naffinity-clusterip-rkpvz\naffinity-clusterip-rkpvz\naffinity-clusterip-rkpvz\naffinity-clusterip-rkpvz\naffinity-clusterip-rkpvz\naffinity-clusterip-rkpvz\naffinity-clusterip-rkpvz\naffinity-clusterip-rkpvz\naffinity-clusterip-rkpvz\naffinity-clusterip-rkpvz"
  Jun  8 13:23:41.602: INFO: Received response from host: affinity-clusterip-rkpvz
  Jun  8 13:23:41.602: INFO: Received response from host: affinity-clusterip-rkpvz
  Jun  8 13:23:41.602: INFO: Received response from host: affinity-clusterip-rkpvz
  Jun  8 13:23:41.602: INFO: Received response from host: affinity-clusterip-rkpvz
  Jun  8 13:23:41.602: INFO: Received response from host: affinity-clusterip-rkpvz
  Jun  8 13:23:41.602: INFO: Received response from host: affinity-clusterip-rkpvz
  Jun  8 13:23:41.602: INFO: Received response from host: affinity-clusterip-rkpvz
  Jun  8 13:23:41.602: INFO: Received response from host: affinity-clusterip-rkpvz
  Jun  8 13:23:41.602: INFO: Received response from host: affinity-clusterip-rkpvz
  Jun  8 13:23:41.602: INFO: Received response from host: affinity-clusterip-rkpvz
  Jun  8 13:23:41.602: INFO: Received response from host: affinity-clusterip-rkpvz
  Jun  8 13:23:41.602: INFO: Received response from host: affinity-clusterip-rkpvz
  Jun  8 13:23:41.602: INFO: Received response from host: affinity-clusterip-rkpvz
  Jun  8 13:23:41.602: INFO: Received response from host: affinity-clusterip-rkpvz
  Jun  8 13:23:41.602: INFO: Received response from host: affinity-clusterip-rkpvz
  Jun  8 13:23:41.602: INFO: Received response from host: affinity-clusterip-rkpvz
  Jun  8 13:23:41.602: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-3586, will wait for the garbage collector to delete the pods @ 06/08/24 13:23:41.617
  Jun  8 13:23:41.677: INFO: Deleting ReplicationController affinity-clusterip took: 7.922407ms
  Jun  8 13:23:41.778: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.975176ms
  E0608 13:23:42.250952      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:23:43.251718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:23:44.251955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:23:45.002: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3586" for this suite. @ 06/08/24 13:23:45.005
• [9.828 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 06/08/24 13:23:45.01
  Jun  8 13:23:45.010: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename configmap @ 06/08/24 13:23:45.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:23:45.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:23:45.029
  STEP: Creating configMap with name configmap-test-volume-a2fa944e-160b-427a-b1d2-b16250975b97 @ 06/08/24 13:23:45.032
  STEP: Creating a pod to test consume configMaps @ 06/08/24 13:23:45.035
  E0608 13:23:45.252967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:23:46.253334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:23:47.048
  Jun  8 13:23:47.052: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-configmaps-0210d654-2c74-4ecc-ba60-0bb8d5a255dd container agnhost-container: <nil>
  STEP: delete the pod @ 06/08/24 13:23:47.061
  Jun  8 13:23:47.076: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5699" for this suite. @ 06/08/24 13:23:47.079
• [2.074 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:335
  STEP: Creating a kubernetes client @ 06/08/24 13:23:47.085
  Jun  8 13:23:47.085: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename sched-pred @ 06/08/24 13:23:47.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:23:47.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:23:47.102
  Jun  8 13:23:47.106: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jun  8 13:23:47.112: INFO: Waiting for terminating namespaces to be deleted...
  Jun  8 13:23:47.114: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-31-116 before test
  Jun  8 13:23:47.118: INFO: nginx-ingress-controller-kubernetes-worker-6k9dl from ingress-nginx-kubernetes-worker started at 2024-06-08 13:02:26 +0000 UTC (1 container statuses recorded)
  Jun  8 13:23:47.118: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jun  8 13:23:47.118: INFO: calico-node-w2nxw from kube-system started at 2024-06-08 12:15:03 +0000 UTC (1 container statuses recorded)
  Jun  8 13:23:47.118: INFO: 	Container calico-node ready: true, restart count 0
  Jun  8 13:23:47.118: INFO: sonobuoy from sonobuoy started at 2024-06-08 12:18:05 +0000 UTC (1 container statuses recorded)
  Jun  8 13:23:47.118: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jun  8 13:23:47.118: INFO: sonobuoy-systemd-logs-daemon-set-2372ce3de819483f-qmcng from sonobuoy started at 2024-06-08 12:18:07 +0000 UTC (2 container statuses recorded)
  Jun  8 13:23:47.118: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  8 13:23:47.118: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun  8 13:23:47.118: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-42-99 before test
  Jun  8 13:23:47.122: INFO: nginx-ingress-controller-kubernetes-worker-9c5bq from ingress-nginx-kubernetes-worker started at 2024-06-08 12:12:03 +0000 UTC (1 container statuses recorded)
  Jun  8 13:23:47.122: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jun  8 13:23:47.122: INFO: calico-node-5rtlx from kube-system started at 2024-06-08 12:14:57 +0000 UTC (1 container statuses recorded)
  Jun  8 13:23:47.122: INFO: 	Container calico-node ready: true, restart count 0
  Jun  8 13:23:47.122: INFO: coredns-bddfd76d7-t89xt from kube-system started at 2024-06-08 12:12:03 +0000 UTC (1 container statuses recorded)
  Jun  8 13:23:47.122: INFO: 	Container coredns ready: true, restart count 0
  Jun  8 13:23:47.122: INFO: kube-state-metrics-6f48cdd76-9f275 from kube-system started at 2024-06-08 12:12:03 +0000 UTC (1 container statuses recorded)
  Jun  8 13:23:47.122: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Jun  8 13:23:47.122: INFO: metrics-server-v0.6.3-69d7fbfdf8-4grs5 from kube-system started at 2024-06-08 12:12:03 +0000 UTC (2 container statuses recorded)
  Jun  8 13:23:47.122: INFO: 	Container metrics-server ready: true, restart count 0
  Jun  8 13:23:47.122: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Jun  8 13:23:47.122: INFO: dashboard-metrics-scraper-5dd7cb5fc-z4qb8 from kubernetes-dashboard started at 2024-06-08 12:12:03 +0000 UTC (1 container statuses recorded)
  Jun  8 13:23:47.122: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Jun  8 13:23:47.122: INFO: kubernetes-dashboard-7b899cb9d9-ghnj4 from kubernetes-dashboard started at 2024-06-08 12:12:03 +0000 UTC (1 container statuses recorded)
  Jun  8 13:23:47.122: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Jun  8 13:23:47.122: INFO: sonobuoy-systemd-logs-daemon-set-2372ce3de819483f-trjkm from sonobuoy started at 2024-06-08 12:18:07 +0000 UTC (2 container statuses recorded)
  Jun  8 13:23:47.122: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  8 13:23:47.122: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun  8 13:23:47.122: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-74-243 before test
  Jun  8 13:23:47.127: INFO: nginx-ingress-controller-kubernetes-worker-rbvbn from ingress-nginx-kubernetes-worker started at 2024-06-08 12:13:50 +0000 UTC (1 container statuses recorded)
  Jun  8 13:23:47.127: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jun  8 13:23:47.127: INFO: calico-node-5r27r from kube-system started at 2024-06-08 12:15:44 +0000 UTC (1 container statuses recorded)
  Jun  8 13:23:47.127: INFO: 	Container calico-node ready: true, restart count 0
  Jun  8 13:23:47.127: INFO: sonobuoy-e2e-job-06d012d91c064577 from sonobuoy started at 2024-06-08 12:18:07 +0000 UTC (2 container statuses recorded)
  Jun  8 13:23:47.127: INFO: 	Container e2e ready: true, restart count 0
  Jun  8 13:23:47.127: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  8 13:23:47.127: INFO: sonobuoy-systemd-logs-daemon-set-2372ce3de819483f-ftvnv from sonobuoy started at 2024-06-08 12:18:07 +0000 UTC (2 container statuses recorded)
  Jun  8 13:23:47.127: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  8 13:23:47.127: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-31-116 @ 06/08/24 13:23:47.141
  STEP: verifying the node has the label node ip-172-31-42-99 @ 06/08/24 13:23:47.155
  STEP: verifying the node has the label node ip-172-31-74-243 @ 06/08/24 13:23:47.169
  Jun  8 13:23:47.182: INFO: Pod nginx-ingress-controller-kubernetes-worker-6k9dl requesting resource cpu=0m on Node ip-172-31-31-116
  Jun  8 13:23:47.182: INFO: Pod nginx-ingress-controller-kubernetes-worker-9c5bq requesting resource cpu=0m on Node ip-172-31-42-99
  Jun  8 13:23:47.182: INFO: Pod nginx-ingress-controller-kubernetes-worker-rbvbn requesting resource cpu=0m on Node ip-172-31-74-243
  Jun  8 13:23:47.182: INFO: Pod calico-node-5r27r requesting resource cpu=250m on Node ip-172-31-74-243
  Jun  8 13:23:47.182: INFO: Pod calico-node-5rtlx requesting resource cpu=250m on Node ip-172-31-42-99
  Jun  8 13:23:47.182: INFO: Pod calico-node-w2nxw requesting resource cpu=250m on Node ip-172-31-31-116
  Jun  8 13:23:47.182: INFO: Pod coredns-bddfd76d7-t89xt requesting resource cpu=100m on Node ip-172-31-42-99
  Jun  8 13:23:47.182: INFO: Pod kube-state-metrics-6f48cdd76-9f275 requesting resource cpu=0m on Node ip-172-31-42-99
  Jun  8 13:23:47.182: INFO: Pod metrics-server-v0.6.3-69d7fbfdf8-4grs5 requesting resource cpu=5m on Node ip-172-31-42-99
  Jun  8 13:23:47.183: INFO: Pod dashboard-metrics-scraper-5dd7cb5fc-z4qb8 requesting resource cpu=0m on Node ip-172-31-42-99
  Jun  8 13:23:47.183: INFO: Pod kubernetes-dashboard-7b899cb9d9-ghnj4 requesting resource cpu=0m on Node ip-172-31-42-99
  Jun  8 13:23:47.183: INFO: Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-31-116
  Jun  8 13:23:47.183: INFO: Pod sonobuoy-e2e-job-06d012d91c064577 requesting resource cpu=0m on Node ip-172-31-74-243
  Jun  8 13:23:47.183: INFO: Pod sonobuoy-systemd-logs-daemon-set-2372ce3de819483f-ftvnv requesting resource cpu=0m on Node ip-172-31-74-243
  Jun  8 13:23:47.183: INFO: Pod sonobuoy-systemd-logs-daemon-set-2372ce3de819483f-qmcng requesting resource cpu=0m on Node ip-172-31-31-116
  Jun  8 13:23:47.183: INFO: Pod sonobuoy-systemd-logs-daemon-set-2372ce3de819483f-trjkm requesting resource cpu=0m on Node ip-172-31-42-99
  STEP: Starting Pods to consume most of the cluster CPU. @ 06/08/24 13:23:47.183
  Jun  8 13:23:47.183: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-31-116
  Jun  8 13:23:47.191: INFO: Creating a pod which consumes cpu=1151m on Node ip-172-31-42-99
  Jun  8 13:23:47.200: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-74-243
  E0608 13:23:47.254277      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:23:48.254421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 06/08/24 13:23:49.228
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9f9f3864-c203-41d2-95af-7ab928036cfc.17d70a3a079ad1f8], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1466/filler-pod-9f9f3864-c203-41d2-95af-7ab928036cfc to ip-172-31-74-243] @ 06/08/24 13:23:49.231
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9f9f3864-c203-41d2-95af-7ab928036cfc.17d70a3a24f0480f], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 06/08/24 13:23:49.231
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9f9f3864-c203-41d2-95af-7ab928036cfc.17d70a3a25e7ff3b], Reason = [Created], Message = [Created container filler-pod-9f9f3864-c203-41d2-95af-7ab928036cfc] @ 06/08/24 13:23:49.231
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9f9f3864-c203-41d2-95af-7ab928036cfc.17d70a3a28d63999], Reason = [Started], Message = [Started container filler-pod-9f9f3864-c203-41d2-95af-7ab928036cfc] @ 06/08/24 13:23:49.231
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a7f7a58d-3e38-4d1b-b260-7731567b8de0.17d70a3a06ebe381], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1466/filler-pod-a7f7a58d-3e38-4d1b-b260-7731567b8de0 to ip-172-31-42-99] @ 06/08/24 13:23:49.231
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a7f7a58d-3e38-4d1b-b260-7731567b8de0.17d70a3a24a8a63f], Reason = [Pulling], Message = [Pulling image "registry.k8s.io/pause:3.9"] @ 06/08/24 13:23:49.231
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a7f7a58d-3e38-4d1b-b260-7731567b8de0.17d70a3a29d95beb], Reason = [Pulled], Message = [Successfully pulled image "registry.k8s.io/pause:3.9" in 87ms (87ms including waiting)] @ 06/08/24 13:23:49.231
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a7f7a58d-3e38-4d1b-b260-7731567b8de0.17d70a3a2acc2e8e], Reason = [Created], Message = [Created container filler-pod-a7f7a58d-3e38-4d1b-b260-7731567b8de0] @ 06/08/24 13:23:49.231
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a7f7a58d-3e38-4d1b-b260-7731567b8de0.17d70a3a2d5e2f78], Reason = [Started], Message = [Started container filler-pod-a7f7a58d-3e38-4d1b-b260-7731567b8de0] @ 06/08/24 13:23:49.231
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-bd40716a-f55f-47f1-a1c4-06439d6dd7be.17d70a3a0670f6c0], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1466/filler-pod-bd40716a-f55f-47f1-a1c4-06439d6dd7be to ip-172-31-31-116] @ 06/08/24 13:23:49.231
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-bd40716a-f55f-47f1-a1c4-06439d6dd7be.17d70a3a230f9700], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 06/08/24 13:23:49.231
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-bd40716a-f55f-47f1-a1c4-06439d6dd7be.17d70a3a24345f3d], Reason = [Created], Message = [Created container filler-pod-bd40716a-f55f-47f1-a1c4-06439d6dd7be] @ 06/08/24 13:23:49.231
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-bd40716a-f55f-47f1-a1c4-06439d6dd7be.17d70a3a2794452c], Reason = [Started], Message = [Started container filler-pod-bd40716a-f55f-47f1-a1c4-06439d6dd7be] @ 06/08/24 13:23:49.231
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17d70a3a7ffa149e], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.] @ 06/08/24 13:23:49.242
  E0608 13:23:49.254615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node ip-172-31-31-116 @ 06/08/24 13:23:50.24
  STEP: verifying the node doesn't have the label node @ 06/08/24 13:23:50.253
  E0608 13:23:50.255106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node ip-172-31-42-99 @ 06/08/24 13:23:50.256
  STEP: verifying the node doesn't have the label node @ 06/08/24 13:23:50.267
  STEP: removing the label node off the node ip-172-31-74-243 @ 06/08/24 13:23:50.272
  STEP: verifying the node doesn't have the label node @ 06/08/24 13:23:50.283
  Jun  8 13:23:50.286: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1466" for this suite. @ 06/08/24 13:23:50.293
• [3.217 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 06/08/24 13:23:50.302
  Jun  8 13:23:50.302: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename downward-api @ 06/08/24 13:23:50.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:23:50.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:23:50.325
  STEP: Creating a pod to test downward api env vars @ 06/08/24 13:23:50.33
  E0608 13:23:51.255637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:23:52.255714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:23:53.255814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:23:54.255906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:23:54.354
  Jun  8 13:23:54.357: INFO: Trying to get logs from node ip-172-31-31-116 pod downward-api-02dea371-b317-40d1-8795-823f78067839 container dapi-container: <nil>
  STEP: delete the pod @ 06/08/24 13:23:54.368
  Jun  8 13:23:54.385: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5375" for this suite. @ 06/08/24 13:23:54.388
• [4.095 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 06/08/24 13:23:54.398
  Jun  8 13:23:54.398: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/08/24 13:23:54.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:23:54.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:23:54.418
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 06/08/24 13:23:54.423
  Jun  8 13:23:54.424: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  E0608 13:23:55.255996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:23:55.686: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  E0608 13:23:56.256715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:23:57.256789      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:23:58.257838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:23:59.258497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:24:00.258866      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:24:00.598: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3875" for this suite. @ 06/08/24 13:24:00.603
• [6.212 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 06/08/24 13:24:00.61
  Jun  8 13:24:00.610: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename deployment @ 06/08/24 13:24:00.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:24:00.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:24:00.63
  Jun  8 13:24:00.631: INFO: Creating deployment "webserver-deployment"
  Jun  8 13:24:00.635: INFO: Waiting for observed generation 1
  E0608 13:24:01.259466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:24:02.259674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:24:02.641: INFO: Waiting for all required pods to come up
  Jun  8 13:24:02.643: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 06/08/24 13:24:02.643
  Jun  8 13:24:02.643: INFO: Waiting for deployment "webserver-deployment" to complete
  Jun  8 13:24:02.648: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Jun  8 13:24:02.655: INFO: Updating deployment webserver-deployment
  Jun  8 13:24:02.655: INFO: Waiting for observed generation 2
  E0608 13:24:03.259780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:24:04.260732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:24:04.663: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Jun  8 13:24:04.666: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Jun  8 13:24:04.669: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Jun  8 13:24:04.675: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Jun  8 13:24:04.675: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Jun  8 13:24:04.677: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Jun  8 13:24:04.681: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Jun  8 13:24:04.681: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Jun  8 13:24:04.687: INFO: Updating deployment webserver-deployment
  Jun  8 13:24:04.687: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Jun  8 13:24:04.694: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Jun  8 13:24:04.695: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  E0608 13:24:05.260904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:24:06.261489      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:24:06.701: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2b0a3fb1-de60-45ab-a1bf-293c8a0d84c1",
      ResourceVersion: (string) (len=5) "26243",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 15,
      AvailableReplicas: (int32) 15,
      UnavailableReplicas: (int32) 18,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun  8 13:24:06.705: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1b19560d-29a9-4db5-8036-76f861bfef7e",
      ResourceVersion: (string) (len=5) "26049",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "2b0a3fb1-de60-45ab-a1bf-293c8a0d84c1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 62 30 61 33 66  62 31 2d 64 65 36 30 2d  |\"2b0a3fb1-de60-|
              00000120  34 35 61 62 2d 61 31 62  66 2d 32 39 33 63 38 61  |45ab-a1bf-293c8a|
              00000130  30 64 38 34 63 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0d84c1\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun  8 13:24:06.706: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Jun  8 13:24:06.706: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3b2d565c-f2c2-465d-af35-06524191c6a7",
      ResourceVersion: (string) (len=5) "26242",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "2b0a3fb1-de60-45ab-a1bf-293c8a0d84c1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 62 30 61 33 66  62 31 2d 64 65 36 30 2d  |\"2b0a3fb1-de60-|
              00000120  34 35 61 62 2d 61 31 62  66 2d 32 39 33 63 38 61  |45ab-a1bf-293c8a|
              00000130  30 64 38 34 63 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0d84c1\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 15,
      AvailableReplicas: (int32) 15,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun  8 13:24:06.713: INFO: Pod "webserver-deployment-557759b7c7-2dxg5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-2dxg5",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7added3a-cabe-48f4-8c95-c8e5311c852e",
      ResourceVersion: (string) (len=5) "26065",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "3b2d565c-f2c2-465d-af35-06524191c6a7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  32 64 35 36 35 63 2d 66  |d\":\"3b2d565c-f|
              00000090  32 63 32 2d 34 36 35 64  2d 61 66 33 35 2d 30 36  |2c2-465d-af35-06|
              000000a0  35 32 34 31 39 31 63 36  61 37 5c 22 7d 22 3a 7b  |524191c6a7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-65sgh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-65sgh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-31-116",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.116",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.116"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:24:06.714: INFO: Pod "webserver-deployment-557759b7c7-4gsj9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-4gsj9",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "38cde7ca-55b4-40cf-93b9-873af9aca1db",
      ResourceVersion: (string) (len=5) "25859",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "3b2d565c-f2c2-465d-af35-06524191c6a7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  32 64 35 36 35 63 2d 66  |d\":\"3b2d565c-f|
              00000090  32 63 32 2d 34 36 35 64  2d 61 66 33 35 2d 30 36  |2c2-465d-af35-06|
              000000a0  35 32 34 31 39 31 63 36  61 37 5c 22 7d 22 3a 7b  |524191c6a7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 36  35 2e 35 30 5c 22 7d 22  |2.168.165.50\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-99rg5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-99rg5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-42-99",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.42.99",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.42.99"
        }
      },
      PodIP: (string) (len=14) "192.168.165.50",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.165.50"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853449841,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://926daf5063ed4a23c0c618b4a4dd0b3593a096b36134b41d3384bf3a1d445ecd",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:24:06.715: INFO: Pod "webserver-deployment-557759b7c7-5fqpr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-5fqpr",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6e3adcc5-441d-473b-95f5-937a7a94deae",
      ResourceVersion: (string) (len=5) "26070",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "3b2d565c-f2c2-465d-af35-06524191c6a7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  32 64 35 36 35 63 2d 66  |d\":\"3b2d565c-f|
              00000090  32 63 32 2d 34 36 35 64  2d 61 66 33 35 2d 30 36  |2c2-465d-af35-06|
              000000a0  35 32 34 31 39 31 63 36  61 37 5c 22 7d 22 3a 7b  |524191c6a7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-78wxj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-78wxj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-31-116",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.116",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.116"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:24:06.717: INFO: Pod "webserver-deployment-557759b7c7-5pl89" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-5pl89",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e07a3f8b-0e9e-4c65-a36b-71d26ebebb84",
      ResourceVersion: (string) (len=5) "26060",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "3b2d565c-f2c2-465d-af35-06524191c6a7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  32 64 35 36 35 63 2d 66  |d\":\"3b2d565c-f|
              00000090  32 63 32 2d 34 36 35 64  2d 61 66 33 35 2d 30 36  |2c2-465d-af35-06|
              000000a0  35 32 34 31 39 31 63 36  61 37 5c 22 7d 22 3a 7b  |524191c6a7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-84g6w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-84g6w",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-31-116",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.116",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.116"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:24:06.718: INFO: Pod "webserver-deployment-557759b7c7-66fbw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-66fbw",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a5d7c219-d672-44a8-8d5f-8a85ddbe7a82",
      ResourceVersion: (string) (len=5) "25856",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "3b2d565c-f2c2-465d-af35-06524191c6a7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  32 64 35 36 35 63 2d 66  |d\":\"3b2d565c-f|
              00000090  32 63 32 2d 34 36 35 64  2d 61 66 33 35 2d 30 36  |2c2-465d-af35-06|
              000000a0  35 32 34 31 39 31 63 36  61 37 5c 22 7d 22 3a 7b  |524191c6a7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 36  35 2e 35 32 5c 22 7d 22  |2.168.165.52\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rhnck",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rhnck",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-42-99",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.42.99",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.42.99"
        }
      },
      PodIP: (string) (len=14) "192.168.165.52",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.165.52"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853449841,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9a2af45a77e1c070bda4b520e4dcc0fc737b85e1ddd7d88bf89cdb4992bacb2e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:24:06.721: INFO: Pod "webserver-deployment-557759b7c7-8n4mk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-8n4mk",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "02c55eaa-ce5d-471f-8b6f-90d2b2340b38",
      ResourceVersion: (string) (len=5) "25836",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "3b2d565c-f2c2-465d-af35-06524191c6a7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  32 64 35 36 35 63 2d 66  |d\":\"3b2d565c-f|
              00000090  32 63 32 2d 34 36 35 64  2d 61 66 33 35 2d 30 36  |2c2-465d-af35-06|
              000000a0  35 32 34 31 39 31 63 36  61 37 5c 22 7d 22 3a 7b  |524191c6a7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 32  2e 31 35 33 5c 22 7d 22  |2.168.82.153\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s94lr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s94lr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-74-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.74.243",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.74.243"
        }
      },
      PodIP: (string) (len=14) "192.168.82.153",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.82.153"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853449841,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3f2ac9dcc6cea4b675984b2a31e3b11437740f229c63649f4828b162e61d0c2a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:24:06.725: INFO: Pod "webserver-deployment-557759b7c7-9fr7z" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-9fr7z",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b58e35b8-6b70-4793-befa-1ca525c5b2d1",
      ResourceVersion: (string) (len=5) "26235",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "3b2d565c-f2c2-465d-af35-06524191c6a7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  32 64 35 36 35 63 2d 66  |d\":\"3b2d565c-f|
              00000090  32 63 32 2d 34 36 35 64  2d 61 66 33 35 2d 30 36  |2c2-465d-af35-06|
              000000a0  35 32 34 31 39 31 63 36  61 37 5c 22 7d 22 3a 7b  |524191c6a7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 32  2e 31 35 32 5c 22 7d 22  |2.168.82.152\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r4dld",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r4dld",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-74-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.74.243",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.74.243"
        }
      },
      PodIP: (string) (len=14) "192.168.82.152",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.82.152"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853449845,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b2d87cfe80825c158805fba98e0b5dee18d72730bd0115f4875ae25bdb57028b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:24:06.726: INFO: Pod "webserver-deployment-557759b7c7-cz594" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-cz594",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "197aba9c-9d02-4fda-a32c-a36d27caf7cd",
      ResourceVersion: (string) (len=5) "25853",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "3b2d565c-f2c2-465d-af35-06524191c6a7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  32 64 35 36 35 63 2d 66  |d\":\"3b2d565c-f|
              00000090  32 63 32 2d 34 36 35 64  2d 61 66 33 35 2d 30 36  |2c2-465d-af35-06|
              000000a0  35 32 34 31 39 31 63 36  61 37 5c 22 7d 22 3a 7b  |524191c6a7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 36  35 2e 35 31 5c 22 7d 22  |2.168.165.51\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n9mx2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n9mx2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-42-99",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.42.99",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.42.99"
        }
      },
      PodIP: (string) (len=14) "192.168.165.51",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.165.51"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853449841,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e201f07d7a4aa9ee92df4483297722d61e1c0fcae3760bfc5588e80026f2f171",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:24:06.728: INFO: Pod "webserver-deployment-557759b7c7-dw7kr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-dw7kr",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1e18a7ed-f4cc-45d2-9107-0a01021fd313",
      ResourceVersion: (string) (len=5) "26073",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "3b2d565c-f2c2-465d-af35-06524191c6a7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  32 64 35 36 35 63 2d 66  |d\":\"3b2d565c-f|
              00000090  32 63 32 2d 34 36 35 64  2d 61 66 33 35 2d 30 36  |2c2-465d-af35-06|
              000000a0  35 32 34 31 39 31 63 36  61 37 5c 22 7d 22 3a 7b  |524191c6a7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2dttt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2dttt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-31-116",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.116",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.116"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:24:06.733: INFO: Pod "webserver-deployment-557759b7c7-hv62x" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-hv62x",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "691d8741-ae8e-4e1b-88c4-c02deb5f3c06",
      ResourceVersion: (string) (len=5) "26196",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "3b2d565c-f2c2-465d-af35-06524191c6a7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  32 64 35 36 35 63 2d 66  |d\":\"3b2d565c-f|
              00000090  32 63 32 2d 34 36 35 64  2d 61 66 33 35 2d 30 36  |2c2-465d-af35-06|
              000000a0  35 32 34 31 39 31 63 36  61 37 5c 22 7d 22 3a 7b  |524191c6a7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 36  35 2e 35 36 5c 22 7d 22  |2.168.165.56\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xzftx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xzftx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-42-99",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.42.99",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.42.99"
        }
      },
      PodIP: (string) (len=14) "192.168.165.56",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.165.56"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853449845,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://cc761b6ff8bfe11674594e59aa4b5ff571a6e2052a7917ee2b10bd49f0f60910",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:24:06.736: INFO: Pod "webserver-deployment-557759b7c7-jz8ww" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-jz8ww",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6986ee89-6896-4ae8-ba9e-18e712eac217",
      ResourceVersion: (string) (len=5) "26238",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "3b2d565c-f2c2-465d-af35-06524191c6a7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  32 64 35 36 35 63 2d 66  |d\":\"3b2d565c-f|
              00000090  32 63 32 2d 34 36 35 64  2d 61 66 33 35 2d 30 36  |2c2-465d-af35-06|
              000000a0  35 32 34 31 39 31 63 36  61 37 5c 22 7d 22 3a 7b  |524191c6a7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 32  2e 31 36 30 5c 22 7d 22  |2.168.82.160\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6wrgf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6wrgf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-74-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.74.243",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.74.243"
        }
      },
      PodIP: (string) (len=14) "192.168.82.160",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.82.160"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853449845,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://16ce363de08adc40c49d1295fccf7dfede0b1c7e69064dac1eb9123aff08582e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:24:06.737: INFO: Pod "webserver-deployment-557759b7c7-kdxfq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-kdxfq",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d13394d3-2bb0-489e-ab53-f25c79d749c5",
      ResourceVersion: (string) (len=5) "26228",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "3b2d565c-f2c2-465d-af35-06524191c6a7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  32 64 35 36 35 63 2d 66  |d\":\"3b2d565c-f|
              00000090  32 63 32 2d 34 36 35 64  2d 61 66 33 35 2d 30 36  |2c2-465d-af35-06|
              000000a0  35 32 34 31 39 31 63 36  61 37 5c 22 7d 22 3a 7b  |524191c6a7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 32  2e 31 36 31 5c 22 7d 22  |2.168.82.161\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8b288",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8b288",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-74-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.74.243",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.74.243"
        }
      },
      PodIP: (string) (len=14) "192.168.82.161",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.82.161"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853449845,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://06623e6de200a749c499e829852d128f3bcb06eae9487b6ba634ce8ff2b84591",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:24:06.746: INFO: Pod "webserver-deployment-557759b7c7-lnxn5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-lnxn5",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "514b0f57-3339-481b-828d-0842f5ed736a",
      ResourceVersion: (string) (len=5) "25850",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "3b2d565c-f2c2-465d-af35-06524191c6a7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  32 64 35 36 35 63 2d 66  |d\":\"3b2d565c-f|
              00000090  32 63 32 2d 34 36 35 64  2d 61 66 33 35 2d 30 36  |2c2-465d-af35-06|
              000000a0  35 32 34 31 39 31 63 36  61 37 5c 22 7d 22 3a 7b  |524191c6a7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 31  2e 31 39 30 5c 22 7d 22  |2.168.81.190\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hmm5q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hmm5q",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-31-116",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.116",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.116"
        }
      },
      PodIP: (string) (len=14) "192.168.81.190",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.81.190"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853449841,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://810877e2cceda0b0eae25287bd5c99fd997bec4f0b3d56c331fb653d88cf2c40",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:24:06.749: INFO: Pod "webserver-deployment-557759b7c7-lzhns" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-lzhns",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ec6539bc-b329-4491-92ed-78fd094a691d",
      ResourceVersion: (string) (len=5) "26186",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "3b2d565c-f2c2-465d-af35-06524191c6a7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  32 64 35 36 35 63 2d 66  |d\":\"3b2d565c-f|
              00000090  32 63 32 2d 34 36 35 64  2d 61 66 33 35 2d 30 36  |2c2-465d-af35-06|
              000000a0  35 32 34 31 39 31 63 36  61 37 5c 22 7d 22 3a 7b  |524191c6a7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 36  35 2e 35 37 5c 22 7d 22  |2.168.165.57\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g22nx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g22nx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-42-99",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.42.99",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.42.99"
        }
      },
      PodIP: (string) (len=14) "192.168.165.57",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.165.57"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853449845,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3ce5b7bc899123068bdafb80312b870f7e016de2b1af72dda1f611494c474b1a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:24:06.750: INFO: Pod "webserver-deployment-557759b7c7-mnxt4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-mnxt4",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d3b9eff3-0a8b-4a00-a16d-4508355ed365",
      ResourceVersion: (string) (len=5) "25830",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "3b2d565c-f2c2-465d-af35-06524191c6a7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  32 64 35 36 35 63 2d 66  |d\":\"3b2d565c-f|
              00000090  32 63 32 2d 34 36 35 64  2d 61 66 33 35 2d 30 36  |2c2-465d-af35-06|
              000000a0  35 32 34 31 39 31 63 36  61 37 5c 22 7d 22 3a 7b  |524191c6a7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 32  2e 31 34 34 5c 22 7d 22  |2.168.82.144\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8z8rz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8z8rz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-74-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.74.243",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.74.243"
        }
      },
      PodIP: (string) (len=14) "192.168.82.144",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.82.144"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853449841,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://333e7b42fb2828652f9ea593df2574dd5b6f25ae87d04e632b7bf745df752f05",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:24:06.752: INFO: Pod "webserver-deployment-557759b7c7-ngnm7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-ngnm7",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8fcac7d8-eeae-44fc-a438-8e3c11dce712",
      ResourceVersion: (string) (len=5) "25844",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "3b2d565c-f2c2-465d-af35-06524191c6a7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  32 64 35 36 35 63 2d 66  |d\":\"3b2d565c-f|
              00000090  32 63 32 2d 34 36 35 64  2d 61 66 33 35 2d 30 36  |2c2-465d-af35-06|
              000000a0  35 32 34 31 39 31 63 36  61 37 5c 22 7d 22 3a 7b  |524191c6a7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 31  2e 31 36 38 5c 22 7d 22  |2.168.81.168\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kbt7s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kbt7s",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-31-116",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.116",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.116"
        }
      },
      PodIP: (string) (len=14) "192.168.81.168",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.81.168"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853449841,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1c438468b7643bbfbea05984cdc7cc2ffa4512ce407acb90dc07456597ffe239",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:24:06.753: INFO: Pod "webserver-deployment-557759b7c7-nkdsk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-nkdsk",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "520db5b9-1810-4d94-bdf8-5c2c1ed63c9b",
      ResourceVersion: (string) (len=5) "26191",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "3b2d565c-f2c2-465d-af35-06524191c6a7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  32 64 35 36 35 63 2d 66  |d\":\"3b2d565c-f|
              00000090  32 63 32 2d 34 36 35 64  2d 61 66 33 35 2d 30 36  |2c2-465d-af35-06|
              000000a0  35 32 34 31 39 31 63 36  61 37 5c 22 7d 22 3a 7b  |524191c6a7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 36  35 2e 35 35 5c 22 7d 22  |2.168.165.55\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qfsql",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qfsql",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-42-99",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.42.99",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.42.99"
        }
      },
      PodIP: (string) (len=14) "192.168.165.55",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.165.55"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853449845,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://56fa3552c708d8435de0a8ca3caf7d8c906b72ead43048aa67e3c6353d57a6f0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:24:06.754: INFO: Pod "webserver-deployment-557759b7c7-rrl4j" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-rrl4j",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aa5cce81-6287-4d82-a7a9-93c6d0596a96",
      ResourceVersion: (string) (len=5) "25828",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "3b2d565c-f2c2-465d-af35-06524191c6a7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  32 64 35 36 35 63 2d 66  |d\":\"3b2d565c-f|
              00000090  32 63 32 2d 34 36 35 64  2d 61 66 33 35 2d 30 36  |2c2-465d-af35-06|
              000000a0  35 32 34 31 39 31 63 36  61 37 5c 22 7d 22 3a 7b  |524191c6a7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 32  2e 31 35 38 5c 22 7d 22  |2.168.82.158\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r9682",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r9682",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-74-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449840,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.74.243",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.74.243"
        }
      },
      PodIP: (string) (len=14) "192.168.82.158",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.82.158"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449840,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853449841,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://33f1264e5af9d49abaed0812793ed323f3d9d2b21c8d974c2e942ec2741bd7d5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:24:06.755: INFO: Pod "webserver-deployment-557759b7c7-tzs6c" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-tzs6c",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "965d5f4a-d8e7-47c7-81c2-cfb570250f5c",
      ResourceVersion: (string) (len=5) "26013",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "3b2d565c-f2c2-465d-af35-06524191c6a7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  32 64 35 36 35 63 2d 66  |d\":\"3b2d565c-f|
              00000090  32 63 32 2d 34 36 35 64  2d 61 66 33 35 2d 30 36  |2c2-465d-af35-06|
              000000a0  35 32 34 31 39 31 63 36  61 37 5c 22 7d 22 3a 7b  |524191c6a7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gxlv4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gxlv4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-31-116",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.116",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.116"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:24:06.762: INFO: Pod "webserver-deployment-557759b7c7-xfrw4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-xfrw4",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e976427c-3073-4955-9642-e6c51d404d44",
      ResourceVersion: (string) (len=5) "26241",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "3b2d565c-f2c2-465d-af35-06524191c6a7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  32 64 35 36 35 63 2d 66  |d\":\"3b2d565c-f|
              00000090  32 63 32 2d 34 36 35 64  2d 61 66 33 35 2d 30 36  |2c2-465d-af35-06|
              000000a0  35 32 34 31 39 31 63 36  61 37 5c 22 7d 22 3a 7b  |524191c6a7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 32  2e 31 34 35 5c 22 7d 22  |2.168.82.145\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l77hb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l77hb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-74-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.74.243",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.74.243"
        }
      },
      PodIP: (string) (len=14) "192.168.82.145",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.82.145"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853449845,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6efe8194008808103fb2a7ec6895c6bac40e8e3e63af6a99e48195eb35928d90",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:24:06.765: INFO: Pod "webserver-deployment-9b4f5bf69-4zpjb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-4zpjb",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "16d34529-8ff2-4f28-b628-4783b017bd22",
      ResourceVersion: (string) (len=5) "26066",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1b19560d-29a9-4db5-8036-76f861bfef7e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  31 39 35 36 30 64 2d 32  |d\":\"1b19560d-2|
              00000090  39 61 39 2d 34 64 62 35  2d 38 30 33 36 2d 37 36  |9a9-4db5-8036-76|
              000000a0  66 38 36 31 62 66 65 66  37 65 5c 22 7d 22 3a 7b  |f861bfef7e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lvndw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lvndw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-31-116",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.116",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.116"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:24:06.766: INFO: Pod "webserver-deployment-9b4f5bf69-5zg7m" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-5zg7m",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "03677822-9c84-4ea6-9983-e39b4afc8f5e",
      ResourceVersion: (string) (len=5) "25956",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1b19560d-29a9-4db5-8036-76f861bfef7e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  31 39 35 36 30 64 2d 32  |d\":\"1b19560d-2|
              00000090  39 61 39 2d 34 64 62 35  2d 38 30 33 36 2d 37 36  |9a9-4db5-8036-76|
              000000a0  66 38 36 31 62 66 65 66  37 65 5c 22 7d 22 3a 7b  |f861bfef7e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 38 32 2e 31 35  36 5c 22 7d 22 3a 7b 22  |68.82.156\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gw9j6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gw9j6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-74-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.74.243",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.74.243"
        }
      },
      PodIP: (string) (len=14) "192.168.82.156",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.82.156"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:24:06.776: INFO: Pod "webserver-deployment-9b4f5bf69-9g5b4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-9g5b4",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ea209526-32e9-4b3d-88d0-6c09b4dbe6eb",
      ResourceVersion: (string) (len=5) "26245",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1b19560d-29a9-4db5-8036-76f861bfef7e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  31 39 35 36 30 64 2d 32  |d\":\"1b19560d-2|
              00000090  39 61 39 2d 34 64 62 35  2d 38 30 33 36 2d 37 36  |9a9-4db5-8036-76|
              000000a0  66 38 36 31 62 66 65 66  37 65 5c 22 7d 22 3a 7b  |f861bfef7e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 38 32 2e 31 35  31 5c 22 7d 22 3a 7b 22  |68.82.151\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j577x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j577x",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-74-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.74.243",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.74.243"
        }
      },
      PodIP: (string) (len=14) "192.168.82.151",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.82.151"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:24:06.777: INFO: Pod "webserver-deployment-9b4f5bf69-9lxx5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-9lxx5",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "472f552c-ff44-4d1c-9840-21c68733f849",
      ResourceVersion: (string) (len=5) "26064",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1b19560d-29a9-4db5-8036-76f861bfef7e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  31 39 35 36 30 64 2d 32  |d\":\"1b19560d-2|
              00000090  39 61 39 2d 34 64 62 35  2d 38 30 33 36 2d 37 36  |9a9-4db5-8036-76|
              000000a0  66 38 36 31 62 66 65 66  37 65 5c 22 7d 22 3a 7b  |f861bfef7e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b4rsz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b4rsz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-42-99",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.42.99",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.42.99"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:24:06.781: INFO: Pod "webserver-deployment-9b4f5bf69-bksbl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-bksbl",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ad9d9cfe-03ef-46b0-8e1b-339f69bfa408",
      ResourceVersion: (string) (len=5) "25967",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1b19560d-29a9-4db5-8036-76f861bfef7e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  31 39 35 36 30 64 2d 32  |d\":\"1b19560d-2|
              00000090  39 61 39 2d 34 64 62 35  2d 38 30 33 36 2d 37 36  |9a9-4db5-8036-76|
              000000a0  66 38 36 31 62 66 65 66  37 65 5c 22 7d 22 3a 7b  |f861bfef7e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 36 35 2e 35  33 5c 22 7d 22 3a 7b 22  |68.165.53\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hd564",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hd564",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-42-99",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.42.99",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.42.99"
        }
      },
      PodIP: (string) (len=14) "192.168.165.53",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.165.53"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:24:06.783: INFO: Pod "webserver-deployment-9b4f5bf69-cgctg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-cgctg",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f5e57820-ade8-42b1-a188-f4d269212bde",
      ResourceVersion: (string) (len=5) "26055",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1b19560d-29a9-4db5-8036-76f861bfef7e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  31 39 35 36 30 64 2d 32  |d\":\"1b19560d-2|
              00000090  39 61 39 2d 34 64 62 35  2d 38 30 33 36 2d 37 36  |9a9-4db5-8036-76|
              000000a0  66 38 36 31 62 66 65 66  37 65 5c 22 7d 22 3a 7b  |f861bfef7e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8sbk2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8sbk2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-31-116",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.116",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.116"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:24:06.784: INFO: Pod "webserver-deployment-9b4f5bf69-gcb9j" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-gcb9j",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d495863a-d609-41a9-8c63-550376eb3782",
      ResourceVersion: (string) (len=5) "25953",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1b19560d-29a9-4db5-8036-76f861bfef7e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  31 39 35 36 30 64 2d 32  |d\":\"1b19560d-2|
              00000090  39 61 39 2d 34 64 62 35  2d 38 30 33 36 2d 37 36  |9a9-4db5-8036-76|
              000000a0  66 38 36 31 62 66 65 66  37 65 5c 22 7d 22 3a 7b  |f861bfef7e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 38 32 2e 31 36  37 5c 22 7d 22 3a 7b 22  |68.82.167\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jj4cf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jj4cf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-74-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.74.243",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.74.243"
        }
      },
      PodIP: (string) (len=14) "192.168.82.167",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.82.167"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:24:06.786: INFO: Pod "webserver-deployment-9b4f5bf69-lsbxv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-lsbxv",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "af870e83-1aed-40a3-b5da-3d56fb6b4b4a",
      ResourceVersion: (string) (len=5) "26068",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1b19560d-29a9-4db5-8036-76f861bfef7e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  31 39 35 36 30 64 2d 32  |d\":\"1b19560d-2|
              00000090  39 61 39 2d 34 64 62 35  2d 38 30 33 36 2d 37 36  |9a9-4db5-8036-76|
              000000a0  66 38 36 31 62 66 65 66  37 65 5c 22 7d 22 3a 7b  |f861bfef7e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j7ld6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j7ld6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-31-116",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.116",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.116"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:24:06.788: INFO: Pod "webserver-deployment-9b4f5bf69-pdsn8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-pdsn8",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a6653fc2-0472-4494-a2c0-95f8fd92ed2c",
      ResourceVersion: (string) (len=5) "26051",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1b19560d-29a9-4db5-8036-76f861bfef7e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  31 39 35 36 30 64 2d 32  |d\":\"1b19560d-2|
              00000090  39 61 39 2d 34 64 62 35  2d 38 30 33 36 2d 37 36  |9a9-4db5-8036-76|
              000000a0  66 38 36 31 62 66 65 66  37 65 5c 22 7d 22 3a 7b  |f861bfef7e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bv558",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bv558",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-42-99",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.42.99",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.42.99"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:24:06.789: INFO: Pod "webserver-deployment-9b4f5bf69-r5pgp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-r5pgp",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "865d7f4c-10e1-4a38-996b-cf73e385681b",
      ResourceVersion: (string) (len=5) "26195",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1b19560d-29a9-4db5-8036-76f861bfef7e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  31 39 35 36 30 64 2d 32  |d\":\"1b19560d-2|
              00000090  39 61 39 2d 34 64 62 35  2d 38 30 33 36 2d 37 36  |9a9-4db5-8036-76|
              000000a0  66 38 36 31 62 66 65 66  37 65 5c 22 7d 22 3a 7b  |f861bfef7e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 36 35 2e 35  34 5c 22 7d 22 3a 7b 22  |68.165.54\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qdmk8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qdmk8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-42-99",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.42.99",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.42.99"
        }
      },
      PodIP: (string) (len=14) "192.168.165.54",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.165.54"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:24:06.790: INFO: Pod "webserver-deployment-9b4f5bf69-t98sw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-t98sw",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f2f6897b-acd3-4be3-8b13-c580f4767b11",
      ResourceVersion: (string) (len=5) "26244",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1b19560d-29a9-4db5-8036-76f861bfef7e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  31 39 35 36 30 64 2d 32  |d\":\"1b19560d-2|
              00000090  39 61 39 2d 34 64 62 35  2d 38 30 33 36 2d 37 36  |9a9-4db5-8036-76|
              000000a0  66 38 36 31 62 66 65 66  37 65 5c 22 7d 22 3a 7b  |f861bfef7e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 38 32 2e 31 37  31 5c 22 7d 22 3a 7b 22  |68.82.171\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4mmll",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4mmll",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-74-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449846,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449844,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.74.243",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.74.243"
        }
      },
      PodIP: (string) (len=14) "192.168.82.171",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.82.171"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:24:06.792: INFO: Pod "webserver-deployment-9b4f5bf69-tbnjj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-tbnjj",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a0816e50-bf58-4322-a986-e6fc3b4ca9c1",
      ResourceVersion: (string) (len=5) "25963",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1b19560d-29a9-4db5-8036-76f861bfef7e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  31 39 35 36 30 64 2d 32  |d\":\"1b19560d-2|
              00000090  39 61 39 2d 34 64 62 35  2d 38 30 33 36 2d 37 36  |9a9-4db5-8036-76|
              000000a0  66 38 36 31 62 66 65 66  37 65 5c 22 7d 22 3a 7b  |f861bfef7e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 38 31 2e 31 33  35 5c 22 7d 22 3a 7b 22  |68.81.135\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l9j74",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l9j74",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-31-116",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.116",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.116"
        }
      },
      PodIP: (string) (len=14) "192.168.81.135",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.81.135"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:24:06.793: INFO: Pod "webserver-deployment-9b4f5bf69-vnb2g" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-vnb2g",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9de662f1-8e21-431f-a191-3136c52062c1",
      ResourceVersion: (string) (len=5) "25959",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1b19560d-29a9-4db5-8036-76f861bfef7e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  31 39 35 36 30 64 2d 32  |d\":\"1b19560d-2|
              00000090  39 61 39 2d 34 64 62 35  2d 38 30 33 36 2d 37 36  |9a9-4db5-8036-76|
              000000a0  66 38 36 31 62 66 65 66  37 65 5c 22 7d 22 3a 7b  |f861bfef7e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 38 31 2e 31 37  33 5c 22 7d 22 3a 7b 22  |68.81.173\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l8lck",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l8lck",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-31-116",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853449842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.116",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.116"
        }
      },
      PodIP: (string) (len=14) "192.168.81.173",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.81.173"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853449842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:24:06.794: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3119" for this suite. @ 06/08/24 13:24:06.802
• [6.199 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 06/08/24 13:24:06.81
  Jun  8 13:24:06.810: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename pods @ 06/08/24 13:24:06.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:24:06.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:24:06.83
  STEP: creating the pod @ 06/08/24 13:24:06.833
  STEP: submitting the pod to kubernetes @ 06/08/24 13:24:06.833
  W0608 13:24:06.844070      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0608 13:24:07.261564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:24:08.261932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 06/08/24 13:24:08.857
  STEP: updating the pod @ 06/08/24 13:24:08.859
  E0608 13:24:09.262073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:24:09.371: INFO: Successfully updated pod "pod-update-activedeadlineseconds-125c9dc5-358d-4a57-b359-c7f04b4d0122"
  E0608 13:24:10.262769      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:24:11.262871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:24:12.263022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:24:13.264051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:24:14.264747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:24:15.264848      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:24:15.386: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2042" for this suite. @ 06/08/24 13:24:15.389
• [8.585 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 06/08/24 13:24:15.396
  Jun  8 13:24:15.396: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename secrets @ 06/08/24 13:24:15.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:24:15.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:24:15.415
  Jun  8 13:24:15.446: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6121" for this suite. @ 06/08/24 13:24:15.453
• [0.064 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 06/08/24 13:24:15.46
  Jun  8 13:24:15.460: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/08/24 13:24:15.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:24:15.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:24:15.478
  Jun  8 13:24:15.481: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  E0608 13:24:16.264905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 06/08/24 13:24:16.666
  Jun  8 13:24:16.666: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=crd-publish-openapi-4962 --namespace=crd-publish-openapi-4962 create -f -'
  E0608 13:24:17.265143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:24:18.265272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:24:18.740: INFO: stderr: ""
  Jun  8 13:24:18.740: INFO: stdout: "e2e-test-crd-publish-openapi-6324-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Jun  8 13:24:18.740: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=crd-publish-openapi-4962 --namespace=crd-publish-openapi-4962 delete e2e-test-crd-publish-openapi-6324-crds test-foo'
  Jun  8 13:24:18.793: INFO: stderr: ""
  Jun  8 13:24:18.793: INFO: stdout: "e2e-test-crd-publish-openapi-6324-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Jun  8 13:24:18.793: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=crd-publish-openapi-4962 --namespace=crd-publish-openapi-4962 apply -f -'
  Jun  8 13:24:18.843: INFO: stderr: ""
  Jun  8 13:24:18.843: INFO: stdout: "e2e-test-crd-publish-openapi-6324-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Jun  8 13:24:18.843: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=crd-publish-openapi-4962 --namespace=crd-publish-openapi-4962 delete e2e-test-crd-publish-openapi-6324-crds test-foo'
  Jun  8 13:24:18.886: INFO: stderr: ""
  Jun  8 13:24:18.886: INFO: stdout: "e2e-test-crd-publish-openapi-6324-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 06/08/24 13:24:18.886
  Jun  8 13:24:18.886: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=crd-publish-openapi-4962 --namespace=crd-publish-openapi-4962 create -f -'
  Jun  8 13:24:18.925: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 06/08/24 13:24:18.925
  Jun  8 13:24:18.925: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=crd-publish-openapi-4962 --namespace=crd-publish-openapi-4962 create -f -'
  Jun  8 13:24:18.965: INFO: rc: 1
  Jun  8 13:24:18.965: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=crd-publish-openapi-4962 --namespace=crd-publish-openapi-4962 apply -f -'
  Jun  8 13:24:19.010: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 06/08/24 13:24:19.01
  Jun  8 13:24:19.010: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=crd-publish-openapi-4962 --namespace=crd-publish-openapi-4962 create -f -'
  Jun  8 13:24:19.047: INFO: rc: 1
  Jun  8 13:24:19.047: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=crd-publish-openapi-4962 --namespace=crd-publish-openapi-4962 apply -f -'
  Jun  8 13:24:19.092: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 06/08/24 13:24:19.093
  Jun  8 13:24:19.093: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=crd-publish-openapi-4962 explain e2e-test-crd-publish-openapi-6324-crds'
  Jun  8 13:24:19.129: INFO: stderr: ""
  Jun  8 13:24:19.129: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6324-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 06/08/24 13:24:19.13
  Jun  8 13:24:19.130: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=crd-publish-openapi-4962 explain e2e-test-crd-publish-openapi-6324-crds.metadata'
  Jun  8 13:24:19.168: INFO: stderr: ""
  Jun  8 13:24:19.168: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6324-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Jun  8 13:24:19.168: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=crd-publish-openapi-4962 explain e2e-test-crd-publish-openapi-6324-crds.spec'
  Jun  8 13:24:19.205: INFO: stderr: ""
  Jun  8 13:24:19.205: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6324-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Jun  8 13:24:19.205: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=crd-publish-openapi-4962 explain e2e-test-crd-publish-openapi-6324-crds.spec.bars'
  Jun  8 13:24:19.243: INFO: stderr: ""
  Jun  8 13:24:19.243: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6324-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 06/08/24 13:24:19.243
  Jun  8 13:24:19.244: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=crd-publish-openapi-4962 explain e2e-test-crd-publish-openapi-6324-crds.spec.bars2'
  E0608 13:24:19.265421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:24:19.281: INFO: rc: 1
  E0608 13:24:20.266268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:24:20.480: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4962" for this suite. @ 06/08/24 13:24:20.493
• [5.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 06/08/24 13:24:20.504
  Jun  8 13:24:20.504: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename container-probe @ 06/08/24 13:24:20.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:24:20.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:24:20.522
  STEP: Creating pod busybox-ecb3a2cd-64a5-43da-82b3-cb1abaa0c3da in namespace container-probe-5176 @ 06/08/24 13:24:20.523
  E0608 13:24:21.266693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:24:22.266775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/08/24 13:24:22.54
  Jun  8 13:24:22.542: INFO: Initial restart count of pod busybox-ecb3a2cd-64a5-43da-82b3-cb1abaa0c3da is 0
  Jun  8 13:24:22.544: INFO: Get pod busybox-ecb3a2cd-64a5-43da-82b3-cb1abaa0c3da in namespace container-probe-5176
  E0608 13:24:23.267834      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:24:24.268706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:24:24.548: INFO: Get pod busybox-ecb3a2cd-64a5-43da-82b3-cb1abaa0c3da in namespace container-probe-5176
  E0608 13:24:25.269710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:24:26.270608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:24:26.553: INFO: Get pod busybox-ecb3a2cd-64a5-43da-82b3-cb1abaa0c3da in namespace container-probe-5176
  E0608 13:24:27.271274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:24:28.272180      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:24:28.556: INFO: Get pod busybox-ecb3a2cd-64a5-43da-82b3-cb1abaa0c3da in namespace container-probe-5176
  E0608 13:24:29.272331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:24:30.273099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:24:30.560: INFO: Get pod busybox-ecb3a2cd-64a5-43da-82b3-cb1abaa0c3da in namespace container-probe-5176
  E0608 13:24:31.273430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:24:32.273633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:24:32.565: INFO: Get pod busybox-ecb3a2cd-64a5-43da-82b3-cb1abaa0c3da in namespace container-probe-5176
  E0608 13:24:33.273884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:24:34.274061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:24:34.568: INFO: Get pod busybox-ecb3a2cd-64a5-43da-82b3-cb1abaa0c3da in namespace container-probe-5176
  E0608 13:24:35.274669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:24:36.274753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:24:36.572: INFO: Get pod busybox-ecb3a2cd-64a5-43da-82b3-cb1abaa0c3da in namespace container-probe-5176
  E0608 13:24:37.275172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:24:38.275279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:24:38.576: INFO: Get pod busybox-ecb3a2cd-64a5-43da-82b3-cb1abaa0c3da in namespace container-probe-5176
  E0608 13:24:39.275618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:24:40.275717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:24:40.580: INFO: Get pod busybox-ecb3a2cd-64a5-43da-82b3-cb1abaa0c3da in namespace container-probe-5176
  E0608 13:24:41.276457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:24:42.276547      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:24:42.586: INFO: Get pod busybox-ecb3a2cd-64a5-43da-82b3-cb1abaa0c3da in namespace container-probe-5176
  E0608 13:24:43.276647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:24:44.276972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:24:44.591: INFO: Get pod busybox-ecb3a2cd-64a5-43da-82b3-cb1abaa0c3da in namespace container-probe-5176
  E0608 13:24:45.277273      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:24:46.278242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:24:46.595: INFO: Get pod busybox-ecb3a2cd-64a5-43da-82b3-cb1abaa0c3da in namespace container-probe-5176
  E0608 13:24:47.278939      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:24:48.279051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:24:48.599: INFO: Get pod busybox-ecb3a2cd-64a5-43da-82b3-cb1abaa0c3da in namespace container-probe-5176
  E0608 13:24:49.280124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:24:50.280217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:24:50.603: INFO: Get pod busybox-ecb3a2cd-64a5-43da-82b3-cb1abaa0c3da in namespace container-probe-5176
  E0608 13:24:51.281302      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:24:52.281496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:24:52.607: INFO: Get pod busybox-ecb3a2cd-64a5-43da-82b3-cb1abaa0c3da in namespace container-probe-5176
  E0608 13:24:53.281777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:24:54.281946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:24:54.611: INFO: Get pod busybox-ecb3a2cd-64a5-43da-82b3-cb1abaa0c3da in namespace container-probe-5176
  E0608 13:24:55.282342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:24:56.283282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:24:56.614: INFO: Get pod busybox-ecb3a2cd-64a5-43da-82b3-cb1abaa0c3da in namespace container-probe-5176
  E0608 13:24:57.283577      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:24:58.283747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:24:58.619: INFO: Get pod busybox-ecb3a2cd-64a5-43da-82b3-cb1abaa0c3da in namespace container-probe-5176
  E0608 13:24:59.284823      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:00.284916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:25:00.622: INFO: Get pod busybox-ecb3a2cd-64a5-43da-82b3-cb1abaa0c3da in namespace container-probe-5176
  E0608 13:25:01.285391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:02.285487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:25:02.626: INFO: Get pod busybox-ecb3a2cd-64a5-43da-82b3-cb1abaa0c3da in namespace container-probe-5176
  E0608 13:25:03.285678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:04.285848      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:25:04.631: INFO: Get pod busybox-ecb3a2cd-64a5-43da-82b3-cb1abaa0c3da in namespace container-probe-5176
  E0608 13:25:05.285964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:06.286058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:25:06.635: INFO: Get pod busybox-ecb3a2cd-64a5-43da-82b3-cb1abaa0c3da in namespace container-probe-5176
  E0608 13:25:07.286981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:08.287091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:25:08.639: INFO: Get pod busybox-ecb3a2cd-64a5-43da-82b3-cb1abaa0c3da in namespace container-probe-5176
  E0608 13:25:09.288072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:10.288231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:25:10.643: INFO: Get pod busybox-ecb3a2cd-64a5-43da-82b3-cb1abaa0c3da in namespace container-probe-5176
  E0608 13:25:11.288917      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:12.289015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:25:12.648: INFO: Get pod busybox-ecb3a2cd-64a5-43da-82b3-cb1abaa0c3da in namespace container-probe-5176
  Jun  8 13:25:12.648: INFO: Restart count of pod container-probe-5176/busybox-ecb3a2cd-64a5-43da-82b3-cb1abaa0c3da is now 1 (50.106310194s elapsed)
  STEP: deleting the pod @ 06/08/24 13:25:12.648
  Jun  8 13:25:12.660: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5176" for this suite. @ 06/08/24 13:25:12.663
• [52.165 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:349
  STEP: Creating a kubernetes client @ 06/08/24 13:25:12.669
  Jun  8 13:25:12.669: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename security-context-test @ 06/08/24 13:25:12.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:25:12.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:25:12.691
  E0608 13:25:13.289130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:14.289206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:15.290035      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:16.290939      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:25:16.709: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5341" for this suite. @ 06/08/24 13:25:16.712
• [4.047 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:887
  STEP: Creating a kubernetes client @ 06/08/24 13:25:16.716
  Jun  8 13:25:16.716: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename kubectl @ 06/08/24 13:25:16.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:25:16.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:25:16.736
  STEP: validating api versions @ 06/08/24 13:25:16.737
  Jun  8 13:25:16.737: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-8501 api-versions'
  Jun  8 13:25:16.775: INFO: stderr: ""
  Jun  8 13:25:16.775: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Jun  8 13:25:16.775: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8501" for this suite. @ 06/08/24 13:25:16.779
• [0.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 06/08/24 13:25:16.785
  Jun  8 13:25:16.785: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename secrets @ 06/08/24 13:25:16.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:25:16.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:25:16.801
  STEP: Creating secret with name secret-test-fe614000-547a-4699-a5a3-fabec1c83d67 @ 06/08/24 13:25:16.803
  STEP: Creating a pod to test consume secrets @ 06/08/24 13:25:16.806
  E0608 13:25:17.291068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:18.291318      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:19.291911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:20.292080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:25:20.824
  Jun  8 13:25:20.826: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-secrets-5789c585-c3cf-418e-b16b-50995ead7b8e container secret-volume-test: <nil>
  STEP: delete the pod @ 06/08/24 13:25:20.835
  Jun  8 13:25:20.847: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6114" for this suite. @ 06/08/24 13:25:20.85
• [4.070 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 06/08/24 13:25:20.855
  Jun  8 13:25:20.855: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename projected @ 06/08/24 13:25:20.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:25:20.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:25:20.874
  STEP: Creating secret with name s-test-opt-del-2e8ec0cd-4684-489f-a87b-7e847a9d9a21 @ 06/08/24 13:25:20.881
  STEP: Creating secret with name s-test-opt-upd-e8f2c384-944e-45f6-8a82-50fc7480ffee @ 06/08/24 13:25:20.886
  STEP: Creating the pod @ 06/08/24 13:25:20.889
  E0608 13:25:21.292690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:22.292769      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-2e8ec0cd-4684-489f-a87b-7e847a9d9a21 @ 06/08/24 13:25:22.923
  STEP: Updating secret s-test-opt-upd-e8f2c384-944e-45f6-8a82-50fc7480ffee @ 06/08/24 13:25:22.928
  STEP: Creating secret with name s-test-opt-create-f13f7f7b-6b1d-418a-bc84-e07dc7aee554 @ 06/08/24 13:25:22.932
  STEP: waiting to observe update in volume @ 06/08/24 13:25:22.935
  E0608 13:25:23.293049      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:24.293133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:25.293246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:26.293334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:27.294366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:28.294475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:29.295481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:30.295703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:31.296687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:32.297769      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:33.297858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:34.297949      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:35.298022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:36.298286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:37.299150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:38.299328      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:39.300175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:40.300728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:41.301677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:42.301795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:43.302391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:44.302518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:45.303109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:46.303251      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:47.303707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:48.303861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:49.304307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:50.304404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:51.304721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:52.304889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:53.304993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:54.305212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:55.305754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:56.305923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:57.305987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:58.306103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:25:59.306725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:00.306901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:01.307515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:02.307637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:03.307669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:04.307732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:05.307808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:06.308711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:07.308817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:08.308953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:09.309247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:10.309470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:11.310294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:12.310503      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:13.310606      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:14.310702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:15.310790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:16.311801      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:17.312269      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:18.312354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:19.313146      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:20.313267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:21.313371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:22.313423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:23.313464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:24.313701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:26:25.173: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-556" for this suite. @ 06/08/24 13:26:25.176
• [64.326 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 06/08/24 13:26:25.182
  Jun  8 13:26:25.182: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename resourcequota @ 06/08/24 13:26:25.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:26:25.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:26:25.203
  STEP: Creating a ResourceQuota with terminating scope @ 06/08/24 13:26:25.205
  STEP: Ensuring ResourceQuota status is calculated @ 06/08/24 13:26:25.21
  E0608 13:26:25.314542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:26.315399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 06/08/24 13:26:27.213
  STEP: Ensuring ResourceQuota status is calculated @ 06/08/24 13:26:27.217
  E0608 13:26:27.316277      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:28.316716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 06/08/24 13:26:29.221
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 06/08/24 13:26:29.234
  E0608 13:26:29.317072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:30.317215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 06/08/24 13:26:31.238
  E0608 13:26:31.317291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:32.317678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 06/08/24 13:26:33.242
  STEP: Ensuring resource quota status released the pod usage @ 06/08/24 13:26:33.256
  E0608 13:26:33.317727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:34.317835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 06/08/24 13:26:35.259
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 06/08/24 13:26:35.269
  E0608 13:26:35.318768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:36.319818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 06/08/24 13:26:37.273
  E0608 13:26:37.319855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:38.319967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 06/08/24 13:26:39.277
  STEP: Ensuring resource quota status released the pod usage @ 06/08/24 13:26:39.287
  E0608 13:26:39.320548      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:40.320767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:26:41.290: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4663" for this suite. @ 06/08/24 13:26:41.293
• [16.117 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3129
  STEP: Creating a kubernetes client @ 06/08/24 13:26:41.3
  Jun  8 13:26:41.300: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename services @ 06/08/24 13:26:41.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:26:41.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:26:41.319
  E0608 13:26:41.320739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: fetching services @ 06/08/24 13:26:41.32
  Jun  8 13:26:41.323: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2096" for this suite. @ 06/08/24 13:26:41.326
• [0.031 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 06/08/24 13:26:41.331
  Jun  8 13:26:41.331: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename limitrange @ 06/08/24 13:26:41.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:26:41.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:26:41.355
  STEP: Creating a LimitRange @ 06/08/24 13:26:41.357
  STEP: Setting up watch @ 06/08/24 13:26:41.357
  STEP: Submitting a LimitRange @ 06/08/24 13:26:41.46
  STEP: Verifying LimitRange creation was observed @ 06/08/24 13:26:41.465
  STEP: Fetching the LimitRange to ensure it has proper values @ 06/08/24 13:26:41.465
  Jun  8 13:26:41.467: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Jun  8 13:26:41.467: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 06/08/24 13:26:41.467
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 06/08/24 13:26:41.473
  Jun  8 13:26:41.475: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Jun  8 13:26:41.475: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 06/08/24 13:26:41.475
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 06/08/24 13:26:41.484
  Jun  8 13:26:41.486: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Jun  8 13:26:41.486: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 06/08/24 13:26:41.486
  STEP: Failing to create a Pod with more than max resources @ 06/08/24 13:26:41.487
  STEP: Updating a LimitRange @ 06/08/24 13:26:41.488
  STEP: Verifying LimitRange updating is effective @ 06/08/24 13:26:41.494
  E0608 13:26:42.321258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:43.322226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 06/08/24 13:26:43.498
  STEP: Failing to create a Pod with more than max resources @ 06/08/24 13:26:43.504
  STEP: Deleting a LimitRange @ 06/08/24 13:26:43.506
  STEP: Verifying the LimitRange was deleted @ 06/08/24 13:26:43.513
  E0608 13:26:44.322306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:45.322392      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:46.323276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:47.324123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:48.324226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:26:48.516: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 06/08/24 13:26:48.516
  Jun  8 13:26:48.525: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-6015" for this suite. @ 06/08/24 13:26:48.528
• [7.204 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 06/08/24 13:26:48.535
  Jun  8 13:26:48.535: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename emptydir-wrapper @ 06/08/24 13:26:48.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:26:48.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:26:48.555
  STEP: Creating 50 configmaps @ 06/08/24 13:26:48.556
  STEP: Creating RC which spawns configmap-volume pods @ 06/08/24 13:26:48.79
  Jun  8 13:26:48.895: INFO: Pod name wrapped-volume-race-13c94b00-7c41-4e9b-80c7-aeccdef335d2: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 06/08/24 13:26:48.895
  E0608 13:26:49.324387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:50.324446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 06/08/24 13:26:50.956
  Jun  8 13:26:50.966: INFO: Pod name wrapped-volume-race-2c623ff6-8191-4a52-9c9a-a565a8fbec2b: Found 0 pods out of 5
  E0608 13:26:51.324504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:52.324645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:53.324841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:54.324935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:55.325203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:26:55.973: INFO: Pod name wrapped-volume-race-2c623ff6-8191-4a52-9c9a-a565a8fbec2b: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 06/08/24 13:26:55.973
  STEP: Creating RC which spawns configmap-volume pods @ 06/08/24 13:26:55.989
  Jun  8 13:26:56.000: INFO: Pod name wrapped-volume-race-f3cc001f-4188-4392-98e8-e76eed340b72: Found 0 pods out of 5
  E0608 13:26:56.325884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:57.326137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:58.326255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:26:59.326381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:00.326587      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:27:01.006: INFO: Pod name wrapped-volume-race-f3cc001f-4188-4392-98e8-e76eed340b72: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 06/08/24 13:27:01.006
  STEP: deleting ReplicationController wrapped-volume-race-f3cc001f-4188-4392-98e8-e76eed340b72 in namespace emptydir-wrapper-5246, will wait for the garbage collector to delete the pods @ 06/08/24 13:27:01.019
  Jun  8 13:27:01.079: INFO: Deleting ReplicationController wrapped-volume-race-f3cc001f-4188-4392-98e8-e76eed340b72 took: 7.580496ms
  Jun  8 13:27:01.180: INFO: Terminating ReplicationController wrapped-volume-race-f3cc001f-4188-4392-98e8-e76eed340b72 pods took: 100.871817ms
  E0608 13:27:01.327065      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-2c623ff6-8191-4a52-9c9a-a565a8fbec2b in namespace emptydir-wrapper-5246, will wait for the garbage collector to delete the pods @ 06/08/24 13:27:02.281
  E0608 13:27:02.328120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:27:02.343: INFO: Deleting ReplicationController wrapped-volume-race-2c623ff6-8191-4a52-9c9a-a565a8fbec2b took: 8.632937ms
  Jun  8 13:27:02.445: INFO: Terminating ReplicationController wrapped-volume-race-2c623ff6-8191-4a52-9c9a-a565a8fbec2b pods took: 101.144922ms
  E0608 13:27:03.328526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-13c94b00-7c41-4e9b-80c7-aeccdef335d2 in namespace emptydir-wrapper-5246, will wait for the garbage collector to delete the pods @ 06/08/24 13:27:03.546
  Jun  8 13:27:03.605: INFO: Deleting ReplicationController wrapped-volume-race-13c94b00-7c41-4e9b-80c7-aeccdef335d2 took: 5.577982ms
  Jun  8 13:27:03.705: INFO: Terminating ReplicationController wrapped-volume-race-13c94b00-7c41-4e9b-80c7-aeccdef335d2 pods took: 100.503678ms
  E0608 13:27:04.329314      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:05.330364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 06/08/24 13:27:05.406
  Jun  8 13:27:05.659: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-5246" for this suite. @ 06/08/24 13:27:05.662
• [17.136 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 06/08/24 13:27:05.671
  Jun  8 13:27:05.671: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/08/24 13:27:05.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:27:05.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:27:05.69
  Jun  8 13:27:05.695: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  E0608 13:27:06.331132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 06/08/24 13:27:06.943
  Jun  8 13:27:06.944: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=crd-publish-openapi-7686 --namespace=crd-publish-openapi-7686 create -f -'
  E0608 13:27:07.332007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:08.332067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:27:09.006: INFO: stderr: ""
  Jun  8 13:27:09.006: INFO: stdout: "e2e-test-crd-publish-openapi-5601-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Jun  8 13:27:09.006: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=crd-publish-openapi-7686 --namespace=crd-publish-openapi-7686 delete e2e-test-crd-publish-openapi-5601-crds test-cr'
  Jun  8 13:27:09.060: INFO: stderr: ""
  Jun  8 13:27:09.060: INFO: stdout: "e2e-test-crd-publish-openapi-5601-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Jun  8 13:27:09.060: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=crd-publish-openapi-7686 --namespace=crd-publish-openapi-7686 apply -f -'
  Jun  8 13:27:09.110: INFO: stderr: ""
  Jun  8 13:27:09.110: INFO: stdout: "e2e-test-crd-publish-openapi-5601-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Jun  8 13:27:09.110: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=crd-publish-openapi-7686 --namespace=crd-publish-openapi-7686 delete e2e-test-crd-publish-openapi-5601-crds test-cr'
  Jun  8 13:27:09.154: INFO: stderr: ""
  Jun  8 13:27:09.154: INFO: stdout: "e2e-test-crd-publish-openapi-5601-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 06/08/24 13:27:09.154
  Jun  8 13:27:09.154: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=crd-publish-openapi-7686 explain e2e-test-crd-publish-openapi-5601-crds'
  Jun  8 13:27:09.191: INFO: stderr: ""
  Jun  8 13:27:09.191: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-5601-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0608 13:27:09.332534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:10.333538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:27:10.388: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7686" for this suite. @ 06/08/24 13:27:10.393
• [4.727 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:321
  STEP: Creating a kubernetes client @ 06/08/24 13:27:10.399
  Jun  8 13:27:10.399: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename statefulset @ 06/08/24 13:27:10.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:27:10.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:27:10.416
  STEP: Creating service test in namespace statefulset-5602 @ 06/08/24 13:27:10.418
  STEP: Creating a new StatefulSet @ 06/08/24 13:27:10.423
  Jun  8 13:27:10.435: INFO: Found 0 stateful pods, waiting for 3
  E0608 13:27:11.333675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:12.333927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:13.333987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:14.334207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:15.334281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:16.335279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:17.335409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:18.335632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:19.336712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:20.337277      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:27:20.436: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun  8 13:27:20.436: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun  8 13:27:20.436: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Jun  8 13:27:20.445: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=statefulset-5602 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun  8 13:27:20.543: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun  8 13:27:20.543: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun  8 13:27:20.543: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0608 13:27:21.337416      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:22.337691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:23.337871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:24.337982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:25.338081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:26.338181      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:27.338566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:28.338773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:29.339161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:30.339340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 06/08/24 13:27:30.551
  Jun  8 13:27:30.570: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 06/08/24 13:27:30.57
  E0608 13:27:31.340344      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:32.340449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:33.340559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:34.340650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:35.340748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:36.340799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:37.341483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:38.341610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:39.341702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:40.341961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 06/08/24 13:27:40.577
  Jun  8 13:27:40.580: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=statefulset-5602 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun  8 13:27:40.670: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun  8 13:27:40.670: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun  8 13:27:40.670: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0608 13:27:41.342329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:42.343291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:43.344098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:44.344715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:45.345691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:46.345774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:47.345856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:48.345975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:49.346141      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:50.347220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:27:50.683: INFO: Waiting for StatefulSet statefulset-5602/ss2 to complete update
  E0608 13:27:51.348163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:52.348264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:53.348339      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:54.348718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:55.348912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:56.348996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:57.349092      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:58.349265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:27:59.349505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:00.349598      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 06/08/24 13:28:00.687
  Jun  8 13:28:00.687: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=statefulset-5602 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun  8 13:28:00.775: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun  8 13:28:00.775: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun  8 13:28:00.775: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0608 13:28:01.349748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:02.349847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:03.350007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:04.350232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:05.350333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:06.351331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:07.351437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:08.351644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:09.351724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:10.352759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:28:10.802: INFO: Updating stateful set ss2
  E0608 13:28:11.353690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:12.353746      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:13.353918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:14.354085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:15.354176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:16.354829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:17.355119      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:18.355716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:19.355829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:20.356742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 06/08/24 13:28:20.811
  Jun  8 13:28:20.814: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=statefulset-5602 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun  8 13:28:20.896: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun  8 13:28:20.896: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun  8 13:28:20.896: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0608 13:28:21.356843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:22.356953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:23.357158      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:24.357259      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:25.358081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:26.358207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:27.358527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:28.358632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:29.359148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:30.360101      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:28:30.909: INFO: Deleting all statefulset in ns statefulset-5602
  Jun  8 13:28:30.912: INFO: Scaling statefulset ss2 to 0
  E0608 13:28:31.360712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:32.360799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:33.361015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:34.361181      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:35.361289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:36.362335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:37.362431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:38.362828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:39.363077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:40.363336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:28:40.924: INFO: Waiting for statefulset status.replicas updated to 0
  Jun  8 13:28:40.926: INFO: Deleting statefulset ss2
  Jun  8 13:28:40.939: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5602" for this suite. @ 06/08/24 13:28:40.943
• [90.552 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3338
  STEP: Creating a kubernetes client @ 06/08/24 13:28:40.951
  Jun  8 13:28:40.951: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename services @ 06/08/24 13:28:40.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:28:40.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:28:40.97
  STEP: creating a Service @ 06/08/24 13:28:40.975
  STEP: watching for the Service to be added @ 06/08/24 13:28:40.988
  Jun  8 13:28:40.990: INFO: Found Service test-service-7vc45 in namespace services-9334 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 32146}]
  Jun  8 13:28:40.990: INFO: Service test-service-7vc45 created
  STEP: Getting /status @ 06/08/24 13:28:40.99
  Jun  8 13:28:40.994: INFO: Service test-service-7vc45 has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 06/08/24 13:28:40.994
  STEP: watching for the Service to be patched @ 06/08/24 13:28:40.999
  Jun  8 13:28:41.000: INFO: observed Service test-service-7vc45 in namespace services-9334 with annotations: map[] & LoadBalancer: {[]}
  Jun  8 13:28:41.000: INFO: Found Service test-service-7vc45 in namespace services-9334 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  <nil> []}]}
  Jun  8 13:28:41.000: INFO: Service test-service-7vc45 has service status patched
  STEP: updating the ServiceStatus @ 06/08/24 13:28:41
  Jun  8 13:28:41.008: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 06/08/24 13:28:41.008
  Jun  8 13:28:41.010: INFO: Observed Service test-service-7vc45 in namespace services-9334 with annotations: map[] & Conditions: {[]}
  Jun  8 13:28:41.010: INFO: Observed event: &Service{ObjectMeta:{test-service-7vc45  services-9334  31919a5f-28a2-4996-8116-3e6f2fbbeeff 28491 0 2024-06-08 13:28:40 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-06-08 13:28:40 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-06-08 13:28:40 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:32146,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.152.183.37,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.152.183.37],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:nil,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Jun  8 13:28:41.010: INFO: Found Service test-service-7vc45 in namespace services-9334 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jun  8 13:28:41.010: INFO: Service test-service-7vc45 has service status updated
  STEP: patching the service @ 06/08/24 13:28:41.01
  STEP: watching for the Service to be patched @ 06/08/24 13:28:41.029
  Jun  8 13:28:41.030: INFO: observed Service test-service-7vc45 in namespace services-9334 with labels: map[test-service-static:true]
  Jun  8 13:28:41.031: INFO: observed Service test-service-7vc45 in namespace services-9334 with labels: map[test-service-static:true]
  Jun  8 13:28:41.031: INFO: observed Service test-service-7vc45 in namespace services-9334 with labels: map[test-service-static:true]
  Jun  8 13:28:41.031: INFO: Found Service test-service-7vc45 in namespace services-9334 with labels: map[test-service:patched test-service-static:true]
  Jun  8 13:28:41.032: INFO: Service test-service-7vc45 patched
  STEP: deleting the service @ 06/08/24 13:28:41.032
  STEP: watching for the Service to be deleted @ 06/08/24 13:28:41.047
  Jun  8 13:28:41.048: INFO: Observed event: ADDED
  Jun  8 13:28:41.048: INFO: Observed event: MODIFIED
  Jun  8 13:28:41.048: INFO: Observed event: MODIFIED
  Jun  8 13:28:41.048: INFO: Observed event: MODIFIED
  Jun  8 13:28:41.048: INFO: Found Service test-service-7vc45 in namespace services-9334 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Jun  8 13:28:41.048: INFO: Service test-service-7vc45 deleted
  Jun  8 13:28:41.048: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9334" for this suite. @ 06/08/24 13:28:41.052
• [0.115 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 06/08/24 13:28:41.066
  Jun  8 13:28:41.066: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename field-validation @ 06/08/24 13:28:41.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:28:41.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:28:41.088
  Jun  8 13:28:41.093: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  E0608 13:28:41.363996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:42.364085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:43.364193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0608 13:28:43.637652      19 warnings.go:70] unknown field "alpha"
  W0608 13:28:43.637672      19 warnings.go:70] unknown field "beta"
  W0608 13:28:43.637676      19 warnings.go:70] unknown field "delta"
  W0608 13:28:43.637680      19 warnings.go:70] unknown field "epsilon"
  W0608 13:28:43.637683      19 warnings.go:70] unknown field "gamma"
  Jun  8 13:28:44.179: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6319" for this suite. @ 06/08/24 13:28:44.182
• [3.132 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 06/08/24 13:28:44.198
  Jun  8 13:28:44.198: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename daemonsets @ 06/08/24 13:28:44.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:28:44.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:28:44.216
  STEP: Creating simple DaemonSet "daemon-set" @ 06/08/24 13:28:44.243
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/08/24 13:28:44.248
  Jun  8 13:28:44.252: INFO: DaemonSet pods can't tolerate node ip-172-31-68-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:28:44.252: INFO: DaemonSet pods can't tolerate node ip-172-31-83-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:28:44.257: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  8 13:28:44.257: INFO: Node ip-172-31-31-116 is running 0 daemon pod, expected 1
  E0608 13:28:44.364464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:28:45.252: INFO: DaemonSet pods can't tolerate node ip-172-31-68-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:28:45.253: INFO: DaemonSet pods can't tolerate node ip-172-31-83-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:28:45.256: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun  8 13:28:45.256: INFO: Node ip-172-31-31-116 is running 0 daemon pod, expected 1
  E0608 13:28:45.365187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:28:46.252: INFO: DaemonSet pods can't tolerate node ip-172-31-68-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:28:46.252: INFO: DaemonSet pods can't tolerate node ip-172-31-83-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:28:46.255: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun  8 13:28:46.255: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 06/08/24 13:28:46.26
  Jun  8 13:28:46.275: INFO: DaemonSet pods can't tolerate node ip-172-31-68-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:28:46.275: INFO: DaemonSet pods can't tolerate node ip-172-31-83-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:28:46.277: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun  8 13:28:46.277: INFO: Node ip-172-31-31-116 is running 0 daemon pod, expected 1
  E0608 13:28:46.365285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:28:47.275: INFO: DaemonSet pods can't tolerate node ip-172-31-68-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:28:47.276: INFO: DaemonSet pods can't tolerate node ip-172-31-83-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:28:47.278: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun  8 13:28:47.278: INFO: Node ip-172-31-31-116 is running 0 daemon pod, expected 1
  E0608 13:28:47.365894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:28:48.274: INFO: DaemonSet pods can't tolerate node ip-172-31-68-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:28:48.274: INFO: DaemonSet pods can't tolerate node ip-172-31-83-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:28:48.277: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun  8 13:28:48.277: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 06/08/24 13:28:48.28
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8469, will wait for the garbage collector to delete the pods @ 06/08/24 13:28:48.28
  Jun  8 13:28:48.341: INFO: Deleting DaemonSet.extensions daemon-set took: 7.788561ms
  E0608 13:28:48.367038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:28:48.442: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.941136ms
  E0608 13:28:49.367726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:28:49.646: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  8 13:28:49.646: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun  8 13:28:49.649: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"28705"},"items":null}

  Jun  8 13:28:49.651: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"28705"},"items":null}

  Jun  8 13:28:49.662: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8469" for this suite. @ 06/08/24 13:28:49.665
• [5.474 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 06/08/24 13:28:49.672
  Jun  8 13:28:49.672: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/08/24 13:28:49.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:28:49.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:28:49.692
  Jun  8 13:28:49.694: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  Jun  8 13:28:50.233: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1793" for this suite. @ 06/08/24 13:28:50.239
• [0.575 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 06/08/24 13:28:50.247
  Jun  8 13:28:50.247: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename endpointslicemirroring @ 06/08/24 13:28:50.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:28:50.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:28:50.267
  STEP: mirroring a new custom Endpoint @ 06/08/24 13:28:50.278
  Jun  8 13:28:50.286: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  E0608 13:28:50.368619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:51.368736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 06/08/24 13:28:52.289
  Jun  8 13:28:52.301: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  E0608 13:28:52.368744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:53.368854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring deletion of a custom Endpoint @ 06/08/24 13:28:54.306
  Jun  8 13:28:54.315: INFO: Waiting for 0 EndpointSlices to exist, got 1
  E0608 13:28:54.369417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:55.369527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:28:56.319: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-4904" for this suite. @ 06/08/24 13:28:56.323
• [6.083 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 06/08/24 13:28:56.33
  Jun  8 13:28:56.330: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename replicaset @ 06/08/24 13:28:56.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:28:56.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:28:56.348
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 06/08/24 13:28:56.35
  Jun  8 13:28:56.358: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0608 13:28:56.370162      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:57.370439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:58.370538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:28:59.370623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:00.370958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:29:01.361: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/08/24 13:29:01.361
  STEP: getting scale subresource @ 06/08/24 13:29:01.361
  STEP: updating a scale subresource @ 06/08/24 13:29:01.364
  STEP: verifying the replicaset Spec.Replicas was modified @ 06/08/24 13:29:01.369
  E0608 13:29:01.371472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patch a scale subresource @ 06/08/24 13:29:01.372
  Jun  8 13:29:01.385: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1485" for this suite. @ 06/08/24 13:29:01.39
• [5.068 seconds]
------------------------------
SS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 06/08/24 13:29:01.399
  Jun  8 13:29:01.399: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename proxy @ 06/08/24 13:29:01.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:29:01.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:29:01.417
  Jun  8 13:29:01.422: INFO: Creating pod...
  E0608 13:29:02.371643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:03.371748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:29:03.443: INFO: Creating service...
  Jun  8 13:29:03.452: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2527/pods/agnhost/proxy/some/path/with/DELETE
  Jun  8 13:29:03.457: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jun  8 13:29:03.457: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2527/pods/agnhost/proxy/some/path/with/GET
  Jun  8 13:29:03.461: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Jun  8 13:29:03.461: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2527/pods/agnhost/proxy/some/path/with/HEAD
  Jun  8 13:29:03.464: INFO: http.Client request:HEAD | StatusCode:200
  Jun  8 13:29:03.464: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2527/pods/agnhost/proxy/some/path/with/OPTIONS
  Jun  8 13:29:03.468: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jun  8 13:29:03.468: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2527/pods/agnhost/proxy/some/path/with/PATCH
  Jun  8 13:29:03.470: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jun  8 13:29:03.470: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2527/pods/agnhost/proxy/some/path/with/POST
  Jun  8 13:29:03.473: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jun  8 13:29:03.473: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2527/pods/agnhost/proxy/some/path/with/PUT
  Jun  8 13:29:03.477: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jun  8 13:29:03.477: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2527/services/test-service/proxy/some/path/with/DELETE
  Jun  8 13:29:03.481: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jun  8 13:29:03.481: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2527/services/test-service/proxy/some/path/with/GET
  Jun  8 13:29:03.486: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Jun  8 13:29:03.486: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2527/services/test-service/proxy/some/path/with/HEAD
  Jun  8 13:29:03.490: INFO: http.Client request:HEAD | StatusCode:200
  Jun  8 13:29:03.490: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2527/services/test-service/proxy/some/path/with/OPTIONS
  Jun  8 13:29:03.494: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jun  8 13:29:03.494: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2527/services/test-service/proxy/some/path/with/PATCH
  Jun  8 13:29:03.499: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jun  8 13:29:03.499: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2527/services/test-service/proxy/some/path/with/POST
  Jun  8 13:29:03.503: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jun  8 13:29:03.503: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2527/services/test-service/proxy/some/path/with/PUT
  Jun  8 13:29:03.508: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jun  8 13:29:03.508: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2527" for this suite. @ 06/08/24 13:29:03.512
• [2.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 06/08/24 13:29:03.517
  Jun  8 13:29:03.517: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename projected @ 06/08/24 13:29:03.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:29:03.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:29:03.54
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-cc621be8-6677-436e-a2c0-ea483f664f54 @ 06/08/24 13:29:03.553
  STEP: Creating the pod @ 06/08/24 13:29:03.558
  E0608 13:29:04.372066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:05.372172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-cc621be8-6677-436e-a2c0-ea483f664f54 @ 06/08/24 13:29:05.595
  STEP: waiting to observe update in volume @ 06/08/24 13:29:05.599
  E0608 13:29:06.372721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:07.372976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:08.373061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:09.374083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:10.374316      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:11.374326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:12.374365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:13.374448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:14.375425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:15.375630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:16.376351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:17.376652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:18.377408      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:19.377503      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:20.378548      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:21.378823      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:22.378907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:23.378997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:24.379063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:25.379164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:26.379397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:27.379619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:28.379689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:29.380753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:30.380957      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:31.381040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:32.381221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:33.381410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:34.381916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:35.382008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:36.382102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:37.382189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:38.382594      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:39.382689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:40.383328      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:41.383418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:42.383619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:43.384690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:44.385259      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:45.385454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:46.386241      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:47.386846      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:48.387432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:49.387626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:50.388259      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:51.388696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:52.389053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:53.389242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:54.390201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:55.390393      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:56.391359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:57.391620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:58.392696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:29:59.392789      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:00.393046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:01.393160      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:02.393284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:03.393480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:04.394323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:05.394601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:06.394988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:07.395077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:08.395293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:09.395510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:10.395653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:11.395858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:12.396596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:13.396896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:14.396952      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:15.397020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:16.398013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:17.398403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:18.398951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:19.399144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:20.399818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:21.400687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:22.401673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:23.401911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:24.402044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:25.402994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:26.403219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:27.403613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:28.403690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:29.404690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:30.404757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:31.404858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:30:31.936: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4142" for this suite. @ 06/08/24 13:30:31.939
• [88.428 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 06/08/24 13:30:31.945
  Jun  8 13:30:31.945: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename ingressclass @ 06/08/24 13:30:31.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:30:31.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:30:31.964
  STEP: getting /apis @ 06/08/24 13:30:31.967
  STEP: getting /apis/networking.k8s.io @ 06/08/24 13:30:31.969
  STEP: getting /apis/networking.k8s.iov1 @ 06/08/24 13:30:31.97
  STEP: creating @ 06/08/24 13:30:31.971
  STEP: getting @ 06/08/24 13:30:31.982
  STEP: listing @ 06/08/24 13:30:31.984
  STEP: watching @ 06/08/24 13:30:31.987
  Jun  8 13:30:31.987: INFO: starting watch
  STEP: patching @ 06/08/24 13:30:31.988
  STEP: updating @ 06/08/24 13:30:31.993
  Jun  8 13:30:31.997: INFO: waiting for watch events with expected annotations
  Jun  8 13:30:31.997: INFO: saw patched and updated annotations
  STEP: deleting @ 06/08/24 13:30:31.997
  STEP: deleting a collection @ 06/08/24 13:30:32.007
  Jun  8 13:30:32.019: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-9054" for this suite. @ 06/08/24 13:30:32.022
• [0.082 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 06/08/24 13:30:32.027
  Jun  8 13:30:32.027: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename daemonsets @ 06/08/24 13:30:32.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:30:32.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:30:32.041
  Jun  8 13:30:32.064: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/08/24 13:30:32.068
  Jun  8 13:30:32.071: INFO: DaemonSet pods can't tolerate node ip-172-31-68-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:30:32.071: INFO: DaemonSet pods can't tolerate node ip-172-31-83-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:30:32.074: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  8 13:30:32.074: INFO: Node ip-172-31-31-116 is running 0 daemon pod, expected 1
  E0608 13:30:32.405120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:30:33.073: INFO: DaemonSet pods can't tolerate node ip-172-31-68-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:30:33.073: INFO: DaemonSet pods can't tolerate node ip-172-31-83-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:30:33.076: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun  8 13:30:33.076: INFO: Node ip-172-31-31-116 is running 0 daemon pod, expected 1
  E0608 13:30:33.405232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:30:34.073: INFO: DaemonSet pods can't tolerate node ip-172-31-68-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:30:34.073: INFO: DaemonSet pods can't tolerate node ip-172-31-83-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:30:34.076: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun  8 13:30:34.076: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 06/08/24 13:30:34.087
  STEP: Check that daemon pods images are updated. @ 06/08/24 13:30:34.097
  Jun  8 13:30:34.100: INFO: Wrong image for pod: daemon-set-ckck6. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun  8 13:30:34.100: INFO: Wrong image for pod: daemon-set-clxl6. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun  8 13:30:34.100: INFO: Wrong image for pod: daemon-set-hghl9. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun  8 13:30:34.103: INFO: DaemonSet pods can't tolerate node ip-172-31-68-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:30:34.103: INFO: DaemonSet pods can't tolerate node ip-172-31-83-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0608 13:30:34.405758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:30:35.101: INFO: Wrong image for pod: daemon-set-ckck6. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun  8 13:30:35.101: INFO: Pod daemon-set-gn2vk is not available
  Jun  8 13:30:35.101: INFO: Wrong image for pod: daemon-set-hghl9. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun  8 13:30:35.105: INFO: DaemonSet pods can't tolerate node ip-172-31-68-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:30:35.105: INFO: DaemonSet pods can't tolerate node ip-172-31-83-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0608 13:30:35.406433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:30:36.100: INFO: Wrong image for pod: daemon-set-ckck6. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun  8 13:30:36.100: INFO: Pod daemon-set-lbd88 is not available
  Jun  8 13:30:36.104: INFO: DaemonSet pods can't tolerate node ip-172-31-68-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:30:36.104: INFO: DaemonSet pods can't tolerate node ip-172-31-83-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0608 13:30:36.406579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:30:37.100: INFO: Pod daemon-set-7xpls is not available
  Jun  8 13:30:37.104: INFO: DaemonSet pods can't tolerate node ip-172-31-68-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:30:37.104: INFO: DaemonSet pods can't tolerate node ip-172-31-83-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 06/08/24 13:30:37.104
  Jun  8 13:30:37.114: INFO: DaemonSet pods can't tolerate node ip-172-31-68-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:30:37.114: INFO: DaemonSet pods can't tolerate node ip-172-31-83-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:30:37.117: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun  8 13:30:37.117: INFO: Node ip-172-31-74-243 is running 0 daemon pod, expected 1
  E0608 13:30:37.407692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:30:38.108: INFO: DaemonSet pods can't tolerate node ip-172-31-68-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:30:38.108: INFO: DaemonSet pods can't tolerate node ip-172-31-83-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:30:38.112: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun  8 13:30:38.112: INFO: Node ip-172-31-74-243 is running 0 daemon pod, expected 1
  E0608 13:30:38.408710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:30:39.109: INFO: DaemonSet pods can't tolerate node ip-172-31-68-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:30:39.109: INFO: DaemonSet pods can't tolerate node ip-172-31-83-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:30:39.112: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun  8 13:30:39.112: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 06/08/24 13:30:39.128
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4761, will wait for the garbage collector to delete the pods @ 06/08/24 13:30:39.128
  Jun  8 13:30:39.187: INFO: Deleting DaemonSet.extensions daemon-set took: 5.560413ms
  Jun  8 13:30:39.288: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.941824ms
  E0608 13:30:39.409132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:30:40.292: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  8 13:30:40.292: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun  8 13:30:40.295: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"29298"},"items":null}

  Jun  8 13:30:40.298: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"29298"},"items":null}

  Jun  8 13:30:40.310: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4761" for this suite. @ 06/08/24 13:30:40.313
• [8.290 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 06/08/24 13:30:40.318
  Jun  8 13:30:40.318: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename downward-api @ 06/08/24 13:30:40.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:30:40.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:30:40.335
  STEP: Creating a pod to test downward API volume plugin @ 06/08/24 13:30:40.338
  E0608 13:30:40.409583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:41.409693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:42.410139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:43.410272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:30:44.365
  Jun  8 13:30:44.368: INFO: Trying to get logs from node ip-172-31-31-116 pod downwardapi-volume-f91442b4-90be-42cc-a49f-5a3ad5f10274 container client-container: <nil>
  STEP: delete the pod @ 06/08/24 13:30:44.375
  Jun  8 13:30:44.390: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2499" for this suite. @ 06/08/24 13:30:44.393
• [4.082 seconds]
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 06/08/24 13:30:44.4
  Jun  8 13:30:44.400: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename gc @ 06/08/24 13:30:44.401
  E0608 13:30:44.410520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:30:44.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:30:44.42
  STEP: create the rc @ 06/08/24 13:30:44.422
  W0608 13:30:44.426784      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0608 13:30:45.410841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:46.411094      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:47.411254      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:48.411466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:49.411647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 06/08/24 13:30:49.43
  STEP: wait for all pods to be garbage collected @ 06/08/24 13:30:49.437
  E0608 13:30:50.411985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:51.412102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:52.412166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:53.412282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:54.412371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 06/08/24 13:30:54.444
  W0608 13:30:54.448722      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jun  8 13:30:54.448: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun  8 13:30:54.448: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2528" for this suite. @ 06/08/24 13:30:54.452
• [10.057 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 06/08/24 13:30:54.457
  Jun  8 13:30:54.457: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename projected @ 06/08/24 13:30:54.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:30:54.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:30:54.475
  STEP: Creating a pod to test downward API volume plugin @ 06/08/24 13:30:54.478
  E0608 13:30:55.412753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:56.412854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:57.412953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:30:58.413058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:30:58.506
  Jun  8 13:30:58.510: INFO: Trying to get logs from node ip-172-31-31-116 pod downwardapi-volume-79190c75-6f80-43e3-b159-e8247721eab7 container client-container: <nil>
  STEP: delete the pod @ 06/08/24 13:30:58.516
  Jun  8 13:30:58.530: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7825" for this suite. @ 06/08/24 13:30:58.534
• [4.083 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 06/08/24 13:30:58.54
  Jun  8 13:30:58.540: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename webhook @ 06/08/24 13:30:58.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:30:58.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:30:58.557
  STEP: Setting up server cert @ 06/08/24 13:30:58.576
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/08/24 13:30:58.685
  STEP: Deploying the webhook pod @ 06/08/24 13:30:58.693
  STEP: Wait for the deployment to be ready @ 06/08/24 13:30:58.704
  Jun  8 13:30:58.711: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0608 13:30:59.413298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:00.413543      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/08/24 13:31:00.721
  STEP: Verifying the service has paired with the endpoint @ 06/08/24 13:31:00.734
  E0608 13:31:01.413767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:31:01.734: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 06/08/24 13:31:01.74
  STEP: create a namespace for the webhook @ 06/08/24 13:31:01.752
  STEP: create a configmap should be unconditionally rejected by the webhook @ 06/08/24 13:31:01.769
  Jun  8 13:31:01.826: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2379" for this suite. @ 06/08/24 13:31:01.83
  STEP: Destroying namespace "webhook-markers-736" for this suite. @ 06/08/24 13:31:01.836
  STEP: Destroying namespace "fail-closed-namespace-8495" for this suite. @ 06/08/24 13:31:01.841
• [3.307 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 06/08/24 13:31:01.847
  Jun  8 13:31:01.847: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename daemonsets @ 06/08/24 13:31:01.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:31:01.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:31:01.865
  Jun  8 13:31:01.885: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 06/08/24 13:31:01.891
  Jun  8 13:31:01.894: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  8 13:31:01.894: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 06/08/24 13:31:01.894
  Jun  8 13:31:01.920: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  8 13:31:01.920: INFO: Node ip-172-31-31-116 is running 0 daemon pod, expected 1
  E0608 13:31:02.414162      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:31:02.916: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun  8 13:31:02.916: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 06/08/24 13:31:02.918
  Jun  8 13:31:02.933: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun  8 13:31:02.933: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E0608 13:31:03.414275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:31:03.934: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  8 13:31:03.934: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 06/08/24 13:31:03.934
  Jun  8 13:31:03.949: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  8 13:31:03.949: INFO: Node ip-172-31-31-116 is running 0 daemon pod, expected 1
  E0608 13:31:04.415189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:31:04.947: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  8 13:31:04.947: INFO: Node ip-172-31-31-116 is running 0 daemon pod, expected 1
  E0608 13:31:05.415654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:31:05.945: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun  8 13:31:05.945: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 06/08/24 13:31:05.951
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7820, will wait for the garbage collector to delete the pods @ 06/08/24 13:31:05.952
  Jun  8 13:31:06.011: INFO: Deleting DaemonSet.extensions daemon-set took: 5.897592ms
  Jun  8 13:31:06.111: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.522438ms
  E0608 13:31:06.416697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:07.417118      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:31:07.715: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  8 13:31:07.715: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun  8 13:31:07.719: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"29684"},"items":null}

  Jun  8 13:31:07.721: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"29684"},"items":null}

  Jun  8 13:31:07.742: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7820" for this suite. @ 06/08/24 13:31:07.745
• [5.904 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 06/08/24 13:31:07.755
  Jun  8 13:31:07.755: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename pv @ 06/08/24 13:31:07.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:31:07.77
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:31:07.772
  STEP: Creating initial PV and PVC @ 06/08/24 13:31:07.775
  Jun  8 13:31:07.775: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-4907" @ 06/08/24 13:31:07.787
  STEP: Listing PVCs in namespace "pv-4907" @ 06/08/24 13:31:07.789
  STEP: Reading "pvc-fxvzb" Status @ 06/08/24 13:31:07.792
  STEP: Reading "pv-4907-65wmq" Status @ 06/08/24 13:31:07.796
  STEP: Patching "pvc-fxvzb" Status @ 06/08/24 13:31:07.803
  STEP: Patching "pv-4907-65wmq" Status @ 06/08/24 13:31:07.812
  STEP: Updating "pvc-fxvzb" Status @ 06/08/24 13:31:07.819
  STEP: Updating "pv-4907-65wmq" Status @ 06/08/24 13:31:07.826
  Jun  8 13:31:07.834: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Jun  8 13:31:07.834: INFO: Deleting PersistentVolumeClaim "pvc-fxvzb"
  Jun  8 13:31:07.840: INFO: Deleting PersistentVolume "pv-4907-65wmq"
  Jun  8 13:31:07.847: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-4907" for this suite. @ 06/08/24 13:31:07.852
• [0.103 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:96
  STEP: Creating a kubernetes client @ 06/08/24 13:31:07.858
  Jun  8 13:31:07.858: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename secrets @ 06/08/24 13:31:07.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:31:07.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:31:07.875
  STEP: creating secret secrets-4345/secret-test-ec8008d7-b198-4d1e-bea0-b7437073937b @ 06/08/24 13:31:07.878
  STEP: Creating a pod to test consume secrets @ 06/08/24 13:31:07.882
  E0608 13:31:08.418117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:09.418211      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:31:09.901
  Jun  8 13:31:09.903: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-configmaps-5e0898bb-9eba-4271-b48a-3012e034ede4 container env-test: <nil>
  STEP: delete the pod @ 06/08/24 13:31:09.909
  Jun  8 13:31:09.926: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4345" for this suite. @ 06/08/24 13:31:09.929
• [2.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 06/08/24 13:31:09.936
  Jun  8 13:31:09.936: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename pod-network-test @ 06/08/24 13:31:09.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:31:09.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:31:09.949
  STEP: Performing setup for networking test in namespace pod-network-test-6784 @ 06/08/24 13:31:09.952
  STEP: creating a selector @ 06/08/24 13:31:09.952
  STEP: Creating the service pods in kubernetes @ 06/08/24 13:31:09.952
  Jun  8 13:31:09.952: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0608 13:31:10.418370      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:11.418511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:12.418730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:13.418941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:14.419895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:15.419985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:16.420147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:17.420439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:18.420523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:19.421301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:20.422244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:21.422339      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 06/08/24 13:31:22.03
  E0608 13:31:22.422452      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:23.422534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:31:24.049: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jun  8 13:31:24.049: INFO: Breadth first check of 192.168.81.191 on host 172.31.31.116...
  Jun  8 13:31:24.052: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.81.164:9080/dial?request=hostname&protocol=udp&host=192.168.81.191&port=8081&tries=1'] Namespace:pod-network-test-6784 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  8 13:31:24.052: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  Jun  8 13:31:24.052: INFO: ExecWithOptions: Clientset creation
  Jun  8 13:31:24.052: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6784/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.81.164%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.81.191%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun  8 13:31:24.109: INFO: Waiting for responses: map[]
  Jun  8 13:31:24.109: INFO: reached 192.168.81.191 after 0/1 tries
  Jun  8 13:31:24.109: INFO: Breadth first check of 192.168.165.36 on host 172.31.42.99...
  Jun  8 13:31:24.112: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.81.164:9080/dial?request=hostname&protocol=udp&host=192.168.165.36&port=8081&tries=1'] Namespace:pod-network-test-6784 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  8 13:31:24.112: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  Jun  8 13:31:24.112: INFO: ExecWithOptions: Clientset creation
  Jun  8 13:31:24.112: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6784/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.81.164%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.165.36%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun  8 13:31:24.154: INFO: Waiting for responses: map[]
  Jun  8 13:31:24.154: INFO: reached 192.168.165.36 after 0/1 tries
  Jun  8 13:31:24.154: INFO: Breadth first check of 192.168.82.155 on host 172.31.74.243...
  Jun  8 13:31:24.157: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.81.164:9080/dial?request=hostname&protocol=udp&host=192.168.82.155&port=8081&tries=1'] Namespace:pod-network-test-6784 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  8 13:31:24.157: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  Jun  8 13:31:24.158: INFO: ExecWithOptions: Clientset creation
  Jun  8 13:31:24.158: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6784/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.81.164%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.82.155%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun  8 13:31:24.205: INFO: Waiting for responses: map[]
  Jun  8 13:31:24.205: INFO: reached 192.168.82.155 after 0/1 tries
  Jun  8 13:31:24.205: INFO: Going to retry 0 out of 3 pods....
  Jun  8 13:31:24.205: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6784" for this suite. @ 06/08/24 13:31:24.21
• [14.280 seconds]
------------------------------
SSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 06/08/24 13:31:24.216
  Jun  8 13:31:24.216: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename prestop @ 06/08/24 13:31:24.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:31:24.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:31:24.232
  STEP: Creating server pod server in namespace prestop-2827 @ 06/08/24 13:31:24.236
  STEP: Waiting for pods to come up. @ 06/08/24 13:31:24.251
  E0608 13:31:24.423391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:25.423641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-2827 @ 06/08/24 13:31:26.261
  E0608 13:31:26.424315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:27.424403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 06/08/24 13:31:28.276
  E0608 13:31:28.424995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:29.425184      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:30.425303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:31.425381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:32.426000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:31:33.288: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 06/08/24 13:31:33.288
  Jun  8 13:31:33.301: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-2827" for this suite. @ 06/08/24 13:31:33.304
• [9.095 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 06/08/24 13:31:33.311
  Jun  8 13:31:33.311: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename field-validation @ 06/08/24 13:31:33.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:31:33.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:31:33.328
  STEP: apply creating a deployment @ 06/08/24 13:31:33.33
  Jun  8 13:31:33.344: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1861" for this suite. @ 06/08/24 13:31:33.349
• [0.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 06/08/24 13:31:33.358
  Jun  8 13:31:33.358: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename svcaccounts @ 06/08/24 13:31:33.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:31:33.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:31:33.382
  STEP: Creating ServiceAccount "e2e-sa-9d4vp"  @ 06/08/24 13:31:33.385
  Jun  8 13:31:33.391: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-9d4vp"  @ 06/08/24 13:31:33.391
  Jun  8 13:31:33.401: INFO: AutomountServiceAccountToken: true
  Jun  8 13:31:33.401: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2454" for this suite. @ 06/08/24 13:31:33.407
• [0.058 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 06/08/24 13:31:33.416
  Jun  8 13:31:33.416: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename container-runtime @ 06/08/24 13:31:33.416
  E0608 13:31:33.426030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:31:33.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:31:33.434
  STEP: create the container @ 06/08/24 13:31:33.437
  W0608 13:31:33.444496      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 06/08/24 13:31:33.444
  E0608 13:31:34.426212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:35.426684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:36.426775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 06/08/24 13:31:36.462
  STEP: the container should be terminated @ 06/08/24 13:31:36.466
  STEP: the termination message should be set @ 06/08/24 13:31:36.466
  Jun  8 13:31:36.466: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 06/08/24 13:31:36.466
  Jun  8 13:31:36.480: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1007" for this suite. @ 06/08/24 13:31:36.483
• [3.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 06/08/24 13:31:36.489
  Jun  8 13:31:36.489: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename replicaset @ 06/08/24 13:31:36.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:31:36.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:31:36.508
  STEP: Create a ReplicaSet @ 06/08/24 13:31:36.511
  STEP: Verify that the required pods have come up @ 06/08/24 13:31:36.516
  Jun  8 13:31:36.519: INFO: Pod name sample-pod: Found 0 pods out of 3
  E0608 13:31:37.427514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:38.427819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:39.427797      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:40.427884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:41.427959      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:31:41.523: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 06/08/24 13:31:41.523
  Jun  8 13:31:41.526: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 06/08/24 13:31:41.526
  STEP: DeleteCollection of the ReplicaSets @ 06/08/24 13:31:41.529
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 06/08/24 13:31:41.538
  Jun  8 13:31:41.541: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9200" for this suite. @ 06/08/24 13:31:41.546
• [5.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 06/08/24 13:31:41.569
  Jun  8 13:31:41.569: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename pods @ 06/08/24 13:31:41.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:31:41.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:31:41.582
  Jun  8 13:31:41.585: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: creating the pod @ 06/08/24 13:31:41.586
  STEP: submitting the pod to kubernetes @ 06/08/24 13:31:41.586
  E0608 13:31:42.428306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:43.428396      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:31:43.614: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5003" for this suite. @ 06/08/24 13:31:43.617
• [2.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 06/08/24 13:31:43.624
  Jun  8 13:31:43.624: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename pod-network-test @ 06/08/24 13:31:43.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:31:43.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:31:43.642
  STEP: Performing setup for networking test in namespace pod-network-test-9239 @ 06/08/24 13:31:43.644
  STEP: creating a selector @ 06/08/24 13:31:43.644
  STEP: Creating the service pods in kubernetes @ 06/08/24 13:31:43.644
  Jun  8 13:31:43.644: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0608 13:31:44.428505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:45.428594      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:46.428748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:47.428844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:48.428902      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:49.429227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:50.430071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:51.430510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:52.430625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:53.430897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:54.431590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:55.431744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:56.431843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:57.432702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:58.433412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:31:59.433442      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:32:00.433539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:32:01.434417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:32:02.434578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:32:03.434678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:32:04.434869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:32:05.435063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 06/08/24 13:32:05.744
  E0608 13:32:06.436087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:32:07.436163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:32:07.771: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jun  8 13:32:07.771: INFO: Going to poll 192.168.81.170 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Jun  8 13:32:07.774: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.81.170:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9239 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  8 13:32:07.774: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  Jun  8 13:32:07.774: INFO: ExecWithOptions: Clientset creation
  Jun  8 13:32:07.774: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9239/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.81.170%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun  8 13:32:07.829: INFO: Found all 1 expected endpoints: [netserver-0]
  Jun  8 13:32:07.829: INFO: Going to poll 192.168.165.18 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Jun  8 13:32:07.834: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.165.18:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9239 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  8 13:32:07.834: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  Jun  8 13:32:07.834: INFO: ExecWithOptions: Clientset creation
  Jun  8 13:32:07.834: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9239/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.165.18%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun  8 13:32:07.883: INFO: Found all 1 expected endpoints: [netserver-1]
  Jun  8 13:32:07.883: INFO: Going to poll 192.168.82.142 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Jun  8 13:32:07.891: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.82.142:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9239 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  8 13:32:07.891: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  Jun  8 13:32:07.892: INFO: ExecWithOptions: Clientset creation
  Jun  8 13:32:07.892: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9239/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.82.142%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun  8 13:32:07.942: INFO: Found all 1 expected endpoints: [netserver-2]
  Jun  8 13:32:07.942: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9239" for this suite. @ 06/08/24 13:32:07.946
• [24.329 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 06/08/24 13:32:07.953
  Jun  8 13:32:07.953: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename containers @ 06/08/24 13:32:07.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:32:07.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:32:07.97
  STEP: Creating a pod to test override all @ 06/08/24 13:32:07.974
  E0608 13:32:08.436712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:32:09.436803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:32:10.436901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:32:11.437172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:32:11.991
  Jun  8 13:32:11.994: INFO: Trying to get logs from node ip-172-31-74-243 pod client-containers-636dd378-22aa-4fbe-9915-2170c4e53cb8 container agnhost-container: <nil>
  STEP: delete the pod @ 06/08/24 13:32:12.007
  Jun  8 13:32:12.024: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2837" for this suite. @ 06/08/24 13:32:12.027
• [4.079 seconds]
------------------------------
SSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 06/08/24 13:32:12.032
  Jun  8 13:32:12.032: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename endpointslice @ 06/08/24 13:32:12.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:32:12.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:32:12.049
  E0608 13:32:12.437429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:32:13.437743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:32:14.095: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7942" for this suite. @ 06/08/24 13:32:14.098
• [2.074 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 06/08/24 13:32:14.106
  Jun  8 13:32:14.106: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename daemonsets @ 06/08/24 13:32:14.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:32:14.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:32:14.123
  Jun  8 13:32:14.143: INFO: Create a RollingUpdate DaemonSet
  Jun  8 13:32:14.149: INFO: Check that daemon pods launch on every node of the cluster
  Jun  8 13:32:14.154: INFO: DaemonSet pods can't tolerate node ip-172-31-68-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:32:14.154: INFO: DaemonSet pods can't tolerate node ip-172-31-83-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:32:14.157: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  8 13:32:14.157: INFO: Node ip-172-31-31-116 is running 0 daemon pod, expected 1
  E0608 13:32:14.438653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:32:15.153: INFO: DaemonSet pods can't tolerate node ip-172-31-68-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:32:15.153: INFO: DaemonSet pods can't tolerate node ip-172-31-83-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:32:15.156: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun  8 13:32:15.156: INFO: Node ip-172-31-31-116 is running 0 daemon pod, expected 1
  E0608 13:32:15.438980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:32:16.153: INFO: DaemonSet pods can't tolerate node ip-172-31-68-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:32:16.154: INFO: DaemonSet pods can't tolerate node ip-172-31-83-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:32:16.157: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun  8 13:32:16.157: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  Jun  8 13:32:16.157: INFO: Update the DaemonSet to trigger a rollout
  Jun  8 13:32:16.166: INFO: Updating DaemonSet daemon-set
  E0608 13:32:16.440049      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:32:17.175: INFO: Roll back the DaemonSet before rollout is complete
  Jun  8 13:32:17.185: INFO: Updating DaemonSet daemon-set
  Jun  8 13:32:17.185: INFO: Make sure DaemonSet rollback is complete
  Jun  8 13:32:17.189: INFO: Wrong image for pod: daemon-set-m2fl8. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Jun  8 13:32:17.189: INFO: Pod daemon-set-m2fl8 is not available
  Jun  8 13:32:17.193: INFO: DaemonSet pods can't tolerate node ip-172-31-68-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:32:17.193: INFO: DaemonSet pods can't tolerate node ip-172-31-83-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0608 13:32:17.440097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:32:18.192: INFO: DaemonSet pods can't tolerate node ip-172-31-68-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:32:18.192: INFO: DaemonSet pods can't tolerate node ip-172-31-83-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0608 13:32:18.440186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:32:19.189: INFO: Pod daemon-set-ktrnn is not available
  Jun  8 13:32:19.192: INFO: DaemonSet pods can't tolerate node ip-172-31-68-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:32:19.192: INFO: DaemonSet pods can't tolerate node ip-172-31-83-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 06/08/24 13:32:19.199
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1517, will wait for the garbage collector to delete the pods @ 06/08/24 13:32:19.199
  Jun  8 13:32:19.257: INFO: Deleting DaemonSet.extensions daemon-set took: 4.974007ms
  Jun  8 13:32:19.358: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.643802ms
  E0608 13:32:19.440780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:32:20.441549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:32:20.962: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  8 13:32:20.962: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun  8 13:32:20.965: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"30561"},"items":null}

  Jun  8 13:32:20.969: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"30561"},"items":null}

  Jun  8 13:32:20.981: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1517" for this suite. @ 06/08/24 13:32:20.985
• [6.885 seconds]
------------------------------
SSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 06/08/24 13:32:20.992
  Jun  8 13:32:20.992: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename events @ 06/08/24 13:32:20.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:32:21.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:32:21.017
  STEP: Create set of events @ 06/08/24 13:32:21.02
  Jun  8 13:32:21.026: INFO: created test-event-1
  Jun  8 13:32:21.031: INFO: created test-event-2
  Jun  8 13:32:21.037: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 06/08/24 13:32:21.037
  STEP: delete collection of events @ 06/08/24 13:32:21.039
  Jun  8 13:32:21.039: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 06/08/24 13:32:21.059
  Jun  8 13:32:21.059: INFO: requesting list of events to confirm quantity
  Jun  8 13:32:21.062: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5046" for this suite. @ 06/08/24 13:32:21.066
• [0.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 06/08/24 13:32:21.073
  Jun  8 13:32:21.073: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename svcaccounts @ 06/08/24 13:32:21.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:32:21.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:32:21.097
  E0608 13:32:21.441664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:32:22.441747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 06/08/24 13:32:23.128
  Jun  8 13:32:23.128: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1128 pod-service-account-78c7302f-adb3-4037-92ab-e4ad8f65368c -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 06/08/24 13:32:23.216
  Jun  8 13:32:23.216: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1128 pod-service-account-78c7302f-adb3-4037-92ab-e4ad8f65368c -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 06/08/24 13:32:23.299
  Jun  8 13:32:23.299: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1128 pod-service-account-78c7302f-adb3-4037-92ab-e4ad8f65368c -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Jun  8 13:32:23.388: INFO: Got root ca configmap in namespace "svcaccounts-1128"
  Jun  8 13:32:23.389: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1128" for this suite. @ 06/08/24 13:32:23.393
• [2.327 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1798
  STEP: Creating a kubernetes client @ 06/08/24 13:32:23.4
  Jun  8 13:32:23.400: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename kubectl @ 06/08/24 13:32:23.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:32:23.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:32:23.418
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/08/24 13:32:23.421
  Jun  8 13:32:23.421: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-746 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  E0608 13:32:23.442646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:32:23.467: INFO: stderr: ""
  Jun  8 13:32:23.467: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 06/08/24 13:32:23.467
  E0608 13:32:24.442747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:32:25.442841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:32:26.442874      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:32:27.443895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:32:28.443991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 06/08/24 13:32:28.518
  Jun  8 13:32:28.518: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-746 get pod e2e-test-httpd-pod -o json'
  Jun  8 13:32:28.560: INFO: stderr: ""
  Jun  8 13:32:28.560: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-06-08T13:32:23Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-746\",\n        \"resourceVersion\": \"30616\",\n        \"uid\": \"45859884-c458-49b3-90b1-0bd8c6c8dabc\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-4r88v\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-31-116\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-4r88v\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-08T13:32:24Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-08T13:32:23Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-08T13:32:24Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-08T13:32:24Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-08T13:32:23Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://9a67cef10632b4f5336712bf9883e6ce11799d37642ce62c8a59e3623756068c\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-06-08T13:32:24Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.31.116\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.31.116\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.81.183\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.81.183\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-06-08T13:32:23Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 06/08/24 13:32:28.561
  Jun  8 13:32:28.561: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-746 replace -f -'
  Jun  8 13:32:28.643: INFO: stderr: ""
  Jun  8 13:32:28.643: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 06/08/24 13:32:28.643
  Jun  8 13:32:28.646: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-746 delete pods e2e-test-httpd-pod'
  E0608 13:32:29.444061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:32:30.444171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:32:30.831: INFO: stderr: ""
  Jun  8 13:32:30.831: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jun  8 13:32:30.831: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-746" for this suite. @ 06/08/24 13:32:30.835
• [7.441 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 06/08/24 13:32:30.842
  Jun  8 13:32:30.842: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename configmap @ 06/08/24 13:32:30.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:32:30.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:32:30.859
  STEP: Creating configMap with name configmap-test-volume-map-2c3ab153-cb3f-4de7-9edd-b1218773a2b5 @ 06/08/24 13:32:30.862
  STEP: Creating a pod to test consume configMaps @ 06/08/24 13:32:30.865
  E0608 13:32:31.444701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:32:32.445302      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:32:33.445661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:32:34.445801      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:32:34.884
  Jun  8 13:32:34.888: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-configmaps-c72da13c-f492-4280-9a84-abd77bcd9596 container agnhost-container: <nil>
  STEP: delete the pod @ 06/08/24 13:32:34.894
  Jun  8 13:32:34.909: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7736" for this suite. @ 06/08/24 13:32:34.912
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 06/08/24 13:32:34.919
  Jun  8 13:32:34.919: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename var-expansion @ 06/08/24 13:32:34.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:32:34.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:32:34.941
  STEP: Creating a pod to test substitution in container's command @ 06/08/24 13:32:34.945
  E0608 13:32:35.445908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:32:36.445959      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:32:37.446040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:32:38.446758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:32:38.964
  Jun  8 13:32:38.968: INFO: Trying to get logs from node ip-172-31-31-116 pod var-expansion-5a96a5f9-1a95-4af2-aa8d-5926766d4490 container dapi-container: <nil>
  STEP: delete the pod @ 06/08/24 13:32:38.979
  Jun  8 13:32:38.992: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2639" for this suite. @ 06/08/24 13:32:38.996
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 06/08/24 13:32:39.003
  Jun  8 13:32:39.003: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename replicaset @ 06/08/24 13:32:39.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:32:39.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:32:39.029
  Jun  8 13:32:39.044: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0608 13:32:39.446891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:32:40.447104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:32:41.447288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:32:42.447647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:32:43.447746      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:32:44.049: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/08/24 13:32:44.049
  STEP: Scaling up "test-rs" replicaset @ 06/08/24 13:32:44.049
  Jun  8 13:32:44.056: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 06/08/24 13:32:44.056
  Jun  8 13:32:44.068: INFO: observed ReplicaSet test-rs in namespace replicaset-1927 with ReadyReplicas 1, AvailableReplicas 1
  Jun  8 13:32:44.082: INFO: observed ReplicaSet test-rs in namespace replicaset-1927 with ReadyReplicas 1, AvailableReplicas 1
  Jun  8 13:32:44.098: INFO: observed ReplicaSet test-rs in namespace replicaset-1927 with ReadyReplicas 1, AvailableReplicas 1
  Jun  8 13:32:44.113: INFO: observed ReplicaSet test-rs in namespace replicaset-1927 with ReadyReplicas 1, AvailableReplicas 1
  E0608 13:32:44.448696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:32:44.919: INFO: observed ReplicaSet test-rs in namespace replicaset-1927 with ReadyReplicas 2, AvailableReplicas 2
  E0608 13:32:45.449276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:32:45.455: INFO: observed Replicaset test-rs in namespace replicaset-1927 with ReadyReplicas 3 found true
  Jun  8 13:32:45.455: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1927" for this suite. @ 06/08/24 13:32:45.459
• [6.460 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 06/08/24 13:32:45.464
  Jun  8 13:32:45.464: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename webhook @ 06/08/24 13:32:45.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:32:45.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:32:45.481
  STEP: Setting up server cert @ 06/08/24 13:32:45.505
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/08/24 13:32:45.665
  STEP: Deploying the webhook pod @ 06/08/24 13:32:45.673
  STEP: Wait for the deployment to be ready @ 06/08/24 13:32:45.686
  Jun  8 13:32:45.695: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0608 13:32:46.449678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:32:47.450021      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/08/24 13:32:47.706
  STEP: Verifying the service has paired with the endpoint @ 06/08/24 13:32:47.715
  E0608 13:32:48.450144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:32:48.715: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 06/08/24 13:32:48.723
  STEP: create a configmap that should be updated by the webhook @ 06/08/24 13:32:48.734
  Jun  8 13:32:48.788: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2094" for this suite. @ 06/08/24 13:32:48.791
  STEP: Destroying namespace "webhook-markers-9730" for this suite. @ 06/08/24 13:32:48.798
• [3.340 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 06/08/24 13:32:48.804
  Jun  8 13:32:48.804: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename container-probe @ 06/08/24 13:32:48.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:32:48.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:32:48.821
  E0608 13:32:49.450252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:32:50.450354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:32:51.450450      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:32:52.450543      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:32:53.450973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:32:54.451074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:32:55.451991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:32:56.452226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:32:57.452311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:32:58.452463      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:32:59.452553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:00.452636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:01.453200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:02.453288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:03.453384      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:04.453473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:05.454474      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:06.454798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:07.454861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:08.455062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:09.455158      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:10.455253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:33:10.888: INFO: Container started at 2024-06-08 13:32:49 +0000 UTC, pod became ready at 2024-06-08 13:33:09 +0000 UTC
  Jun  8 13:33:10.889: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9469" for this suite. @ 06/08/24 13:33:10.894
• [22.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 06/08/24 13:33:10.902
  Jun  8 13:33:10.902: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename downward-api @ 06/08/24 13:33:10.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:33:10.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:33:10.92
  STEP: Creating a pod to test downward API volume plugin @ 06/08/24 13:33:10.923
  E0608 13:33:11.455584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:12.455649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:13.455751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:14.456756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:33:14.942
  Jun  8 13:33:14.946: INFO: Trying to get logs from node ip-172-31-31-116 pod downwardapi-volume-b02cd4d3-bed4-4e39-bfe8-e384815563bb container client-container: <nil>
  STEP: delete the pod @ 06/08/24 13:33:14.951
  Jun  8 13:33:14.967: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2110" for this suite. @ 06/08/24 13:33:14.97
• [4.073 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 06/08/24 13:33:14.975
  Jun  8 13:33:14.975: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename deployment @ 06/08/24 13:33:14.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:33:14.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:33:14.994
  Jun  8 13:33:14.996: INFO: Creating deployment "test-recreate-deployment"
  Jun  8 13:33:15.001: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Jun  8 13:33:15.007: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  E0608 13:33:15.457524      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:16.457867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:33:17.014: INFO: Waiting deployment "test-recreate-deployment" to complete
  Jun  8 13:33:17.016: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Jun  8 13:33:17.025: INFO: Updating deployment test-recreate-deployment
  Jun  8 13:33:17.025: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Jun  8 13:33:17.102: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bfac31bb-8169-4062-aef6-0b57dcb41532",
      ResourceVersion: (string) (len=5) "31158",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853450394,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853450397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853450397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853450397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853450397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853450397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853450395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun  8 13:33:17.108: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4c8a384b-4c71-40b3-9d11-33629887df2a",
      ResourceVersion: (string) (len=5) "31156",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853450397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "bfac31bb-8169-4062-aef6-0b57dcb41532",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853450397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 66 61 63 33 31  62 62 2d 38 31 36 39 2d  |\"bfac31bb-8169-|
              00000120  34 30 36 32 2d 61 65 66  36 2d 30 62 35 37 64 63  |4062-aef6-0b57dc|
              00000130  62 34 31 35 33 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b41532\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853450397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun  8 13:33:17.109: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Jun  8 13:33:17.109: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-5cf87b5b86",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8bebe2b6-1353-449e-9cc0-55e03940c607",
      ResourceVersion: (string) (len=5) "31147",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853450395,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "bfac31bb-8169-4062-aef6-0b57dcb41532",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853450397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 66 61 63 33 31  62 62 2d 38 31 36 39 2d  |\"bfac31bb-8169-|
              00000120  34 30 36 32 2d 61 65 66  36 2d 30 62 35 37 64 63  |4062-aef6-0b57dc|
              00000130  62 34 31 35 33 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b41532\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853450397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun  8 13:33:17.113: INFO: Pod "test-recreate-deployment-76fb77d45-d55sb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-d55sb",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-3597",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fc74b1ac-d350-4ab2-b92a-7b9d5fc4285b",
      ResourceVersion: (string) (len=5) "31159",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853450397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "4c8a384b-4c71-40b3-9d11-33629887df2a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853450397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 63  38 61 33 38 34 62 2d 34  |d\":\"4c8a384b-4|
              00000090  63 37 31 2d 34 30 62 33  2d 39 64 31 31 2d 33 33  |c71-40b3-9d11-33|
              000000a0  36 32 39 38 38 37 64 66  32 61 5c 22 7d 22 3a 7b  |629887df2a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853450397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-299cv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-299cv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-31-116",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853450397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853450397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853450397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853450397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853450397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.116",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.116"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853450397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:33:17.115: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3597" for this suite. @ 06/08/24 13:33:17.118
• [2.151 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:408
  STEP: Creating a kubernetes client @ 06/08/24 13:33:17.126
  Jun  8 13:33:17.126: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename job @ 06/08/24 13:33:17.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:33:17.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:33:17.144
  STEP: Creating Indexed job @ 06/08/24 13:33:17.146
  STEP: Ensuring job reaches completions @ 06/08/24 13:33:17.152
  E0608 13:33:17.458541      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:18.458629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:19.459081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:20.459278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:21.460222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:22.460796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:23.460822      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:24.460902      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 06/08/24 13:33:25.156
  Jun  8 13:33:25.160: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3694" for this suite. @ 06/08/24 13:33:25.164
• [8.044 seconds]
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 06/08/24 13:33:25.171
  Jun  8 13:33:25.171: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename sched-preemption @ 06/08/24 13:33:25.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:33:25.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:33:25.191
  Jun  8 13:33:25.204: INFO: Waiting up to 1m0s for all nodes to be ready
  E0608 13:33:25.461420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:26.461860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:27.462577      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:28.463087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:29.463782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:30.463877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:31.464878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:32.465012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:33.465542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:34.465696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:35.466097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:36.466493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:37.466609      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:38.466751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:39.467720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:40.467790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:41.468402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:42.468702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:43.468805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:44.468882      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:45.469809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:46.470849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:47.471622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:48.471718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:49.472133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:50.472237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:51.473213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:52.473485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:53.473988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:54.474046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:55.474446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:56.474867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:57.475637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:58.475691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:33:59.475839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:00.476060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:01.476108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:02.476782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:03.477704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:04.477823      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:05.478402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:06.478593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:07.478990      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:08.479237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:09.479686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:10.480685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:11.480835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:12.481035      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:13.481898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:14.482049      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:15.482305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:16.482675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:17.483165      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:18.483267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:19.484016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:20.484113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:21.484659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:22.484888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:23.485509      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:24.485743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:34:25.209: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 06/08/24 13:34:25.212
  Jun  8 13:34:25.229: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Jun  8 13:34:25.237: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Jun  8 13:34:25.259: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Jun  8 13:34:25.266: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Jun  8 13:34:25.290: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Jun  8 13:34:25.297: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 06/08/24 13:34:25.297
  E0608 13:34:25.486566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:26.486901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 06/08/24 13:34:27.322
  E0608 13:34:27.487592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:28.487646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:34:29.388: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9570" for this suite. @ 06/08/24 13:34:29.39
• [64.227 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 06/08/24 13:34:29.398
  Jun  8 13:34:29.398: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename container-probe @ 06/08/24 13:34:29.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:34:29.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:34:29.416
  E0608 13:34:29.488637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:30.489161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:31.490174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:32.491027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:33.491293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:34.491338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:35.492298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:36.492341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:37.492355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:38.492655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:39.493206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:40.493502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:41.493938      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:42.494098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:43.494184      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:44.494872      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:45.495645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:46.496603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:47.496703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:48.497482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:49.497861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:50.497976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:51.498906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:52.499694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:53.499781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:54.499874      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:55.499976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:56.500896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:57.501558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:58.501644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:34:59.501895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:00.501965      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:01.502945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:02.503644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:03.503733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:04.503818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:05.503923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:06.504814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:07.504913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:08.505125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:09.505297      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:10.505400      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:11.505856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:12.506071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:13.506927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:14.507027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:15.507535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:16.508003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:17.508089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:18.508178      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:19.508303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:20.508454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:21.508839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:22.508935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:23.509058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:24.510054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:25.510150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:26.510840      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:27.511406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:28.512255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:35:29.433: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2995" for this suite. @ 06/08/24 13:35:29.437
• [60.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 06/08/24 13:35:29.444
  Jun  8 13:35:29.444: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename deployment @ 06/08/24 13:35:29.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:35:29.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:35:29.461
  Jun  8 13:35:29.472: INFO: Pod name rollover-pod: Found 0 pods out of 1
  E0608 13:35:29.512656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:30.513287      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:31.514140      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:32.514232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:33.514483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:35:34.476: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/08/24 13:35:34.476
  Jun  8 13:35:34.476: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0608 13:35:34.515193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:35.515309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:35:36.479: INFO: Creating deployment "test-rollover-deployment"
  Jun  8 13:35:36.488: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  E0608 13:35:36.515420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:37.515640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:35:38.494: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Jun  8 13:35:38.500: INFO: Ensure that both replica sets have 1 created replica
  Jun  8 13:35:38.506: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Jun  8 13:35:38.513: INFO: Updating deployment test-rollover-deployment
  Jun  8 13:35:38.513: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0608 13:35:38.516049      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:39.516210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:40.516983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:35:40.523: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Jun  8 13:35:40.529: INFO: Make sure deployment "test-rollover-deployment" is complete
  Jun  8 13:35:40.534: INFO: all replica sets need to contain the pod-template-hash label
  Jun  8 13:35:40.534: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 8, 13, 35, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 8, 13, 35, 36, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 8, 13, 35, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 8, 13, 35, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0608 13:35:41.517869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:42.517988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:35:42.542: INFO: all replica sets need to contain the pod-template-hash label
  Jun  8 13:35:42.542: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 8, 13, 35, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 8, 13, 35, 36, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 8, 13, 35, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 8, 13, 35, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0608 13:35:43.518192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:44.518310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:35:44.542: INFO: all replica sets need to contain the pod-template-hash label
  Jun  8 13:35:44.542: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 8, 13, 35, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 8, 13, 35, 36, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 8, 13, 35, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 8, 13, 35, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0608 13:35:45.518943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:46.519130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:35:46.541: INFO: all replica sets need to contain the pod-template-hash label
  Jun  8 13:35:46.541: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 8, 13, 35, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 8, 13, 35, 36, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 8, 13, 35, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 8, 13, 35, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0608 13:35:47.519413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:48.519535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:35:48.543: INFO: all replica sets need to contain the pod-template-hash label
  Jun  8 13:35:48.543: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 8, 13, 35, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 8, 13, 35, 36, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 8, 13, 35, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 8, 13, 35, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0608 13:35:49.519652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:50.520718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:35:50.542: INFO: 
  Jun  8 13:35:50.542: INFO: Ensure that both old replica sets have no replicas
  Jun  8 13:35:50.551: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6998",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "db74a563-83c6-4a3b-9258-942fcaa90fb9",
      ResourceVersion: (string) (len=5) "31940",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853450536,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853450538,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853450549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853450536,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853450536,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853450549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853450536,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-68774655d5\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun  8 13:35:50.554: INFO: New ReplicaSet "test-rollover-deployment-68774655d5" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-68774655d5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6998",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "891a4954-36e6-49ee-ae89-f465cbc5aa55",
      ResourceVersion: (string) (len=5) "31930",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853450538,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "db74a563-83c6-4a3b-9258-942fcaa90fb9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853450538,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 62 37 34 61 35  36 33 2d 38 33 63 36 2d  |\"db74a563-83c6-|
              00000120  34 61 33 62 2d 39 32 35  38 2d 39 34 32 66 63 61  |4a3b-9258-942fca|
              00000130  61 39 30 66 62 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a90fb9\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853450549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun  8 13:35:50.555: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Jun  8 13:35:50.555: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6998",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d12a1a4c-363f-4ff7-8bb9-57628338232c",
      ResourceVersion: (string) (len=5) "31939",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853450529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "db74a563-83c6-4a3b-9258-942fcaa90fb9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853450529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853450549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  64 62 37 34 61 35 36 33  2d 38 33 63 36 2d 34 61  |db74a563-83c6-4a|
              000000c0  33 62 2d 39 32 35 38 2d  39 34 32 66 63 61 61 39  |3b-9258-942fcaa9|
              000000d0  30 66 62 39 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |0fb9\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853450549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun  8 13:35:50.556: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6998",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "819faf3b-b6c0-4d1e-9c40-bbaf2068c365",
      ResourceVersion: (string) (len=5) "31886",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853450536,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "db74a563-83c6-4a3b-9258-942fcaa90fb9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853450538,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 62 37 34 61 35  36 33 2d 38 33 63 36 2d  |\"db74a563-83c6-|
              00000120  34 61 33 62 2d 39 32 35  38 2d 39 34 32 66 63 61  |4a3b-9258-942fca|
              00000130  61 39 30 66 62 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a90fb9\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853450538,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun  8 13:35:50.560: INFO: Pod "test-rollover-deployment-68774655d5-pfvvv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-68774655d5-pfvvv",
      GenerateName: (string) (len=36) "test-rollover-deployment-68774655d5-",
      Namespace: (string) (len=15) "deployment-6998",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e78e8a72-3629-45b2-b2c3-7f9e25b972d9",
      ResourceVersion: (string) (len=5) "31902",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853450538,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-68774655d5",
          UID: (types.UID) (len=36) "891a4954-36e6-49ee-ae89-f465cbc5aa55",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853450538,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 39  31 61 34 39 35 34 2d 33  |d\":\"891a4954-3|
              00000090  36 65 36 2d 34 39 65 65  2d 61 65 38 39 2d 66 34  |6e6-49ee-ae89-f4|
              000000a0  36 35 63 62 63 35 61 61  35 35 5c 22 7d 22 3a 7b  |65cbc5aa55\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853450539,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 31  2e 31 37 37 5c 22 7d 22  |2.168.81.177\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d4cp7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d4cp7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-31-116",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853450539,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853450538,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853450539,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853450539,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853450538,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.116",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.116"
        }
      },
      PodIP: (string) (len=14) "192.168.81.177",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.81.177"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853450538,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853450539,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://9661f610e075a56efe352b48035e47a62948584d97a9bed3c28a28ecab4ba799",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:35:50.562: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6998" for this suite. @ 06/08/24 13:35:50.566
• [21.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 06/08/24 13:35:50.574
  Jun  8 13:35:50.574: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename podtemplate @ 06/08/24 13:35:50.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:35:50.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:35:50.592
  STEP: Create a pod template @ 06/08/24 13:35:50.594
  STEP: Replace a pod template @ 06/08/24 13:35:50.598
  Jun  8 13:35:50.608: INFO: Found updated podtemplate annotation: "true"

  Jun  8 13:35:50.608: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6755" for this suite. @ 06/08/24 13:35:50.611
• [0.042 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 06/08/24 13:35:50.616
  Jun  8 13:35:50.616: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename apf @ 06/08/24 13:35:50.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:35:50.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:35:50.631
  STEP: getting /apis @ 06/08/24 13:35:50.633
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 06/08/24 13:35:50.636
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 06/08/24 13:35:50.637
  STEP: creating @ 06/08/24 13:35:50.638
  STEP: getting @ 06/08/24 13:35:50.654
  STEP: listing @ 06/08/24 13:35:50.656
  STEP: watching @ 06/08/24 13:35:50.663
  Jun  8 13:35:50.663: INFO: starting watch
  STEP: patching @ 06/08/24 13:35:50.664
  STEP: updating @ 06/08/24 13:35:50.668
  Jun  8 13:35:50.676: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 06/08/24 13:35:50.677
  STEP: patching /status @ 06/08/24 13:35:50.679
  STEP: updating /status @ 06/08/24 13:35:50.686
  STEP: deleting @ 06/08/24 13:35:50.697
  STEP: deleting a collection @ 06/08/24 13:35:50.708
  Jun  8 13:35:50.724: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-5051" for this suite. @ 06/08/24 13:35:50.726
• [0.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 06/08/24 13:35:50.735
  Jun  8 13:35:50.735: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename namespaces @ 06/08/24 13:35:50.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:35:50.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:35:50.75
  STEP: Updating Namespace "namespaces-9583" @ 06/08/24 13:35:50.753
  Jun  8 13:35:50.761: INFO: Namespace "namespaces-9583" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"5b5ed583-e0c7-46a3-b85d-e644064d7e3e", "kubernetes.io/metadata.name":"namespaces-9583", "namespaces-9583":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Jun  8 13:35:50.761: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9583" for this suite. @ 06/08/24 13:35:50.766
• [0.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 06/08/24 13:35:50.775
  Jun  8 13:35:50.775: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename downward-api @ 06/08/24 13:35:50.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:35:50.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:35:50.796
  STEP: Creating the pod @ 06/08/24 13:35:50.798
  E0608 13:35:51.520900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:52.521133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:35:53.349: INFO: Successfully updated pod "annotationupdate0c6dc3c7-1370-4294-8fa2-6f0b4c59e069"
  E0608 13:35:53.521750      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:54.522257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:35:55.362: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4043" for this suite. @ 06/08/24 13:35:55.366
• [4.597 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 06/08/24 13:35:55.373
  Jun  8 13:35:55.373: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename projected @ 06/08/24 13:35:55.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:35:55.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:35:55.39
  STEP: Creating configMap with name projected-configmap-test-volume-d88d3624-2174-4c98-95c6-6f376f5520c4 @ 06/08/24 13:35:55.392
  STEP: Creating a pod to test consume configMaps @ 06/08/24 13:35:55.398
  E0608 13:35:55.522646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:56.522869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:57.523477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:35:58.523655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:35:59.418
  Jun  8 13:35:59.424: INFO: Trying to get logs from node ip-172-31-74-243 pod pod-projected-configmaps-28b5e11f-7f70-4e47-866f-7a0405dd5288 container agnhost-container: <nil>
  STEP: delete the pod @ 06/08/24 13:35:59.437
  Jun  8 13:35:59.451: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2007" for this suite. @ 06/08/24 13:35:59.453
• [4.087 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 06/08/24 13:35:59.46
  Jun  8 13:35:59.460: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename projected @ 06/08/24 13:35:59.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:35:59.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:35:59.478
  STEP: Creating a pod to test downward API volume plugin @ 06/08/24 13:35:59.48
  E0608 13:35:59.524505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:00.524641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:36:01.495
  Jun  8 13:36:01.499: INFO: Trying to get logs from node ip-172-31-31-116 pod downwardapi-volume-392b7872-abb3-4c28-b5de-84cf5a148a92 container client-container: <nil>
  STEP: delete the pod @ 06/08/24 13:36:01.504
  Jun  8 13:36:01.519: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5761" for this suite. @ 06/08/24 13:36:01.523
  E0608 13:36:01.524800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
• [2.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 06/08/24 13:36:01.529
  Jun  8 13:36:01.529: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename resourcequota @ 06/08/24 13:36:01.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:36:01.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:36:01.545
  STEP: Counting existing ResourceQuota @ 06/08/24 13:36:01.547
  E0608 13:36:02.525288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:03.525419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:04.525575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:05.525682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:06.526484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/08/24 13:36:06.555
  STEP: Ensuring resource quota status is calculated @ 06/08/24 13:36:06.561
  E0608 13:36:07.526685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:08.526786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 06/08/24 13:36:08.566
  STEP: Ensuring resource quota status captures replicaset creation @ 06/08/24 13:36:08.576
  E0608 13:36:09.527785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:10.528715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 06/08/24 13:36:10.581
  STEP: Ensuring resource quota status released usage @ 06/08/24 13:36:10.588
  E0608 13:36:11.529128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:12.529213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:36:12.593: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6115" for this suite. @ 06/08/24 13:36:12.597
• [11.075 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1373
  STEP: Creating a kubernetes client @ 06/08/24 13:36:12.605
  Jun  8 13:36:12.605: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename kubectl @ 06/08/24 13:36:12.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:36:12.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:36:12.62
  STEP: validating cluster-info @ 06/08/24 13:36:12.623
  Jun  8 13:36:12.623: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-5411 cluster-info'
  Jun  8 13:36:12.665: INFO: stderr: ""
  Jun  8 13:36:12.665: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Jun  8 13:36:12.665: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5411" for this suite. @ 06/08/24 13:36:12.669
• [0.071 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 06/08/24 13:36:12.676
  Jun  8 13:36:12.676: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename var-expansion @ 06/08/24 13:36:12.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:36:12.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:36:12.693
  STEP: Creating a pod to test env composition @ 06/08/24 13:36:12.696
  E0608 13:36:13.529682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:14.529798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:15.529908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:16.529996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:36:16.72
  Jun  8 13:36:16.723: INFO: Trying to get logs from node ip-172-31-31-116 pod var-expansion-bf3b749a-bd1e-48f5-9b9b-62ee09235249 container dapi-container: <nil>
  STEP: delete the pod @ 06/08/24 13:36:16.728
  Jun  8 13:36:16.743: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3388" for this suite. @ 06/08/24 13:36:16.746
• [4.075 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 06/08/24 13:36:16.751
  Jun  8 13:36:16.751: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename configmap @ 06/08/24 13:36:16.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:36:16.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:36:16.771
  STEP: Creating configMap with name configmap-test-upd-8bff3b01-b9e8-4937-ae92-cc49a21258c7 @ 06/08/24 13:36:16.776
  STEP: Creating the pod @ 06/08/24 13:36:16.782
  E0608 13:36:17.530533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:18.530625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-8bff3b01-b9e8-4937-ae92-cc49a21258c7 @ 06/08/24 13:36:18.81
  STEP: waiting to observe update in volume @ 06/08/24 13:36:18.815
  E0608 13:36:19.531039      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:20.531167      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:21.531844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:22.531946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:23.532761      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:24.532942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:25.533468      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:26.533992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:27.534817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:28.534924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:29.534964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:30.535179      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:31.535802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:32.535887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:33.535913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:34.536035      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:35.536712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:36.536914      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:37.537826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:38.537919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:39.538249      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:40.538405      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:41.538785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:42.539581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:43.539680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:44.539731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:45.540514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:46.540657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:47.541496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:48.541610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:49.542487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:50.542611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:51.542801      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:52.542951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:53.543680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:54.543777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:55.544616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:56.544931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:57.545796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:58.545927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:36:59.546007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:00.546108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:01.546640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:02.546824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:03.546886      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:04.546970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:05.547858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:06.548716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:07.548829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:08.548933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:09.549019      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:10.549119      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:11.549927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:12.550169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:13.550263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:14.550460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:15.551135      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:16.551521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:17.552309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:18.552921      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:19.553896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:20.554144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:21.554439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:22.554545      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:23.555370      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:24.555551      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:25.556533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:26.556923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:27.557987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:28.558084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:29.559005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:30.559211      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:31.559930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:32.560016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:33.560706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:34.560810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:35.560927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:36.561232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:37.562230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:38.562307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:39.562573      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:40.562664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:41.562965      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:42.563856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:43.564427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:44.564693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:37:45.142: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9369" for this suite. @ 06/08/24 13:37:45.146
• [88.404 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 06/08/24 13:37:45.155
  Jun  8 13:37:45.155: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename container-probe @ 06/08/24 13:37:45.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:37:45.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:37:45.175
  STEP: Creating pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385 @ 06/08/24 13:37:45.178
  E0608 13:37:45.564790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:46.565132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/08/24 13:37:47.198
  Jun  8 13:37:47.201: INFO: Initial restart count of pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 is 0
  Jun  8 13:37:47.204: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:37:47.565846      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:48.566012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:37:49.209: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:37:49.566645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:50.566800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:37:51.213: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:37:51.566863      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:52.566974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:37:53.217: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:37:53.567942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:54.568848      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:37:55.221: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:37:55.569820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:56.570040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:37:57.226: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:37:57.570318      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:37:58.570442      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:37:59.232: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:37:59.570654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:38:00.571011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:38:01.237: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:38:01.571970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:38:02.572012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:38:03.244: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:38:03.572357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:38:04.573325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:38:05.249: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:38:05.573432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:38:06.573909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:38:07.253: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:38:07.574819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:38:08.574919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:38:09.257: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:38:09.575029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:38:10.575209      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:38:11.261: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:38:11.575305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:38:12.575512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:38:13.267: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:38:13.575622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:38:14.575656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:38:15.271: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:38:15.576480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:38:16.576885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:38:17.276: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:38:17.577441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:38:18.578557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:38:19.280: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:38:19.578867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:38:20.579027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:38:21.284: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:38:21.579085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:38:22.579174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:38:23.288: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:38:23.580096      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:38:24.580846      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:38:25.292: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:38:25.581408      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:38:26.581929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:38:27.296: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:38:27.582059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:38:28.582677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:38:29.301: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:38:29.582770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:38:30.582860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:38:31.305: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:38:31.583277      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:38:32.583372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:38:33.310: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:38:33.584525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:38:34.585032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:38:35.314: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:38:35.585794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:38:36.585902      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:38:37.319: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:38:37.585948      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:38:38.586111      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:38:39.323: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:38:39.586183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:38:40.587152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:38:41.328: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:38:41.587612      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:38:42.587630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:38:43.331: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:38:43.588118      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:38:44.588256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:38:45.335: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:38:45.588808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:38:46.588901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:38:47.341: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:38:47.589477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:38:48.590066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:38:49.345: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:38:49.590938      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:38:50.591206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:38:51.350: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:38:51.591948      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:38:52.592170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:38:53.354: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:38:53.592700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:38:54.593363      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:38:55.358: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:38:55.593919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:38:56.594104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:38:57.362: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:38:57.595167      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:38:58.595295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:38:59.366: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:38:59.595766      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:39:00.595883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:39:01.370: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:39:01.596917      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:39:02.597013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:39:03.373: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:39:03.597247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:39:04.597361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:39:05.377: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:39:05.597506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:39:06.597914      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:39:07.381: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:39:07.598032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:39:08.598215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:39:09.386: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:39:09.598792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:39:10.598994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:39:11.391: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:39:11.599995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:39:12.600087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:39:13.395: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:39:13.600915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:39:14.600977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:39:15.400: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:39:15.601321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:39:16.601657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:39:17.404: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:39:17.602521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:39:18.603033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:39:19.408: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:39:19.603826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:39:20.603938      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:39:21.412: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:39:21.604369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:39:22.604764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:39:23.417: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:39:23.605098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:39:24.605183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:39:25.421: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:39:25.605247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:39:26.605750      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:39:27.427: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:39:27.606445      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:39:28.606606      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:39:29.432: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:39:29.606691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:39:30.606798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:39:31.436: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:39:31.607817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:39:32.607910      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:39:33.441: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:39:33.608682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:39:34.611069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:39:35.445: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:39:35.611102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:39:36.611686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:39:37.451: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:39:37.612508      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:39:38.612624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:39:39.455: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:39:39.613689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:39:40.613788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:39:41.460: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:39:41.614319      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:39:42.614478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:39:43.464: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:39:43.614777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:39:44.615294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:39:45.469: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:39:45.615444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:39:46.615974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:39:47.472: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:39:47.616363      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:39:48.616712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:39:49.478: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:39:49.617478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:39:50.617582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:39:51.482: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:39:51.618480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:39:52.619569      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:39:53.487: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:39:53.620296      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:39:54.624868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:39:55.491: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:39:55.625330      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:39:56.625695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:39:57.496: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:39:57.626267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:39:58.626365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:39:59.500: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:39:59.626749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:40:00.626697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:40:01.505: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:40:01.627308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:40:02.627400      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:40:03.508: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:40:03.627845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:40:04.630104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:40:05.512: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:40:05.631022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:40:06.631108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:40:07.516: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:40:07.632142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:40:08.633191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:40:09.522: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:40:09.633281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:40:10.633472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:40:11.525: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:40:11.633869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:40:12.634081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:40:13.530: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:40:13.634831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:40:14.634978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:40:15.534: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:40:15.635483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:40:16.635946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:40:17.538: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:40:17.636634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:40:18.636941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:40:19.542: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:40:19.637441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:40:20.637600      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:40:21.546: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:40:21.637753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:40:22.637878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:40:23.550: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:40:23.638779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:40:24.639459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:40:25.555: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:40:25.640255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:40:26.641230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:40:27.559: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:40:27.641270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:40:28.641478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:40:29.563: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:40:29.642265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:40:30.643227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:40:31.568: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:40:31.643272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:40:32.643836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:40:33.571: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:40:33.643847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:40:34.644786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:40:35.575: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:40:35.645108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:40:36.646099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:40:37.580: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:40:37.647027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:40:38.647210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:40:39.585: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:40:39.647253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:40:40.647415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:40:41.589: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:40:41.647754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:40:42.647868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:40:43.595: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:40:43.648489      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:40:44.650419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:40:45.599: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:40:45.651286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:40:46.651747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:40:47.603: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:40:47.651926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:40:48.652075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:40:49.608: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:40:49.652404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:40:50.652497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:40:51.613: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:40:51.652675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:40:52.653604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:40:53.617: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:40:53.654255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:40:54.654950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:40:55.621: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:40:55.655012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:40:56.656004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:40:57.625: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:40:57.656013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:40:58.656132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:40:59.629: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:40:59.656584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:41:00.656828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:41:01.633: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:41:01.657355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:41:02.657487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:41:03.637: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:41:03.658247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:41:04.659002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:41:05.641: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:41:05.659613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:41:06.660543      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:41:07.646: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:41:07.661302      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:41:08.661504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:41:09.650: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:41:09.661844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:41:10.661981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:41:11.655: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:41:11.662894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:41:12.663047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:41:13.660: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:41:13.663292      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:41:14.663720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:41:15.664351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:41:15.665: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:41:16.664788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:41:17.665131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:41:17.670: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:41:18.665213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:41:19.665304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:41:19.675: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:41:20.665775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:41:21.665846      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:41:21.679: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:41:22.666698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:41:23.666808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:41:23.684: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:41:24.666891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:41:25.667000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:41:25.688: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:41:26.667316      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:41:27.667420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:41:27.692: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:41:28.667634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:41:29.667729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:41:29.697: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:41:30.667816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:41:31.668198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:41:31.701: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:41:32.668394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:41:33.668832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:41:33.705: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:41:34.669306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:41:35.669708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:41:35.710: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:41:36.670431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:41:37.670642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:41:37.714: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:41:38.670981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:41:39.671616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:41:39.719: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:41:40.671644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:41:41.672054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:41:41.724: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:41:42.672186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:41:43.672267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:41:43.728: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:41:44.672374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:41:45.673111      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:41:45.733: INFO: Get pod test-grpc-0441cbea-98ad-49b1-8760-371b5d076be2 in namespace container-probe-3385
  E0608 13:41:46.674052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:41:47.674158      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 06/08/24 13:41:47.733
  Jun  8 13:41:47.748: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3385" for this suite. @ 06/08/24 13:41:47.751
• [242.602 seconds]
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 06/08/24 13:41:47.757
  Jun  8 13:41:47.757: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename endpointslice @ 06/08/24 13:41:47.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:41:47.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:41:47.774
  E0608 13:41:48.675157      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:41:49.675250      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:41:50.675330      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:41:51.676049      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:41:52.676708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 06/08/24 13:41:52.844
  E0608 13:41:53.677721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:41:54.677784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:41:55.677957      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:41:56.678056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:41:57.678243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing matching pods with named port @ 06/08/24 13:41:57.852
  E0608 13:41:58.678317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:41:59.678723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:00.678707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:01.679059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:02.679146      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 06/08/24 13:42:02.859
  E0608 13:42:03.679361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:04.679626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:05.680694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:06.681043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:07.681292      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: recreating EndpointSlices after they've been deleted @ 06/08/24 13:42:07.868
  Jun  8 13:42:07.886: INFO: EndpointSlice for Service endpointslice-3457/example-named-port not found
  E0608 13:42:08.681548      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:09.681640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:10.681755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:11.682118      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:12.682202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:13.682320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:14.682383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:15.682486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:16.683471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:17.683637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:42:17.893: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3457" for this suite. @ 06/08/24 13:42:17.897
• [30.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 06/08/24 13:42:17.907
  Jun  8 13:42:17.908: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename emptydir-wrapper @ 06/08/24 13:42:17.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:42:17.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:42:17.924
  E0608 13:42:18.684711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:19.684802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 06/08/24 13:42:19.954
  STEP: Cleaning up the configmap @ 06/08/24 13:42:19.959
  STEP: Cleaning up the pod @ 06/08/24 13:42:19.965
  Jun  8 13:42:19.978: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-4399" for this suite. @ 06/08/24 13:42:19.981
• [2.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1084
  STEP: Creating a kubernetes client @ 06/08/24 13:42:19.989
  Jun  8 13:42:19.989: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename kubectl @ 06/08/24 13:42:19.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:42:20.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:42:20.004
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/08/24 13:42:20.006
  Jun  8 13:42:20.006: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-6804 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Jun  8 13:42:20.053: INFO: stderr: ""
  Jun  8 13:42:20.053: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 06/08/24 13:42:20.053
  Jun  8 13:42:20.053: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-6804 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  Jun  8 13:42:20.098: INFO: stderr: ""
  Jun  8 13:42:20.098: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/08/24 13:42:20.098
  Jun  8 13:42:20.101: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-6804 delete pods e2e-test-httpd-pod'
  E0608 13:42:20.685775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:42:21.365: INFO: stderr: ""
  Jun  8 13:42:21.365: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jun  8 13:42:21.365: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6804" for this suite. @ 06/08/24 13:42:21.369
• [1.385 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2199
  STEP: Creating a kubernetes client @ 06/08/24 13:42:21.374
  Jun  8 13:42:21.374: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename services @ 06/08/24 13:42:21.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:42:21.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:42:21.39
  STEP: creating service in namespace services-6001 @ 06/08/24 13:42:21.393
  STEP: creating service affinity-clusterip-transition in namespace services-6001 @ 06/08/24 13:42:21.393
  STEP: creating replication controller affinity-clusterip-transition in namespace services-6001 @ 06/08/24 13:42:21.405
  I0608 13:42:21.414343      19 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-6001, replica count: 3
  E0608 13:42:21.686549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:22.686722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:23.687710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0608 13:42:24.465102      19 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun  8 13:42:24.471: INFO: Creating new exec pod
  E0608 13:42:24.687801      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:25.688734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:26.689048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:42:27.487: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-6001 exec execpod-affinitykgzrc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Jun  8 13:42:27.584: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip-transition 80\n+ echo hostName\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Jun  8 13:42:27.584: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  8 13:42:27.584: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-6001 exec execpod-affinitykgzrc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.161 80'
  Jun  8 13:42:27.672: INFO: stderr: "+ nc -v -t -w 2 10.152.183.161 80\n+ echo hostName\nConnection to 10.152.183.161 80 port [tcp/http] succeeded!\n"
  Jun  8 13:42:27.672: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  8 13:42:27.682: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-6001 exec execpod-affinitykgzrc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.161:80/ ; done'
  E0608 13:42:27.689053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:42:27.824: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.161:80/\n"
  Jun  8 13:42:27.824: INFO: stdout: "\naffinity-clusterip-transition-5f4sw\naffinity-clusterip-transition-78j69\naffinity-clusterip-transition-78j69\naffinity-clusterip-transition-78j69\naffinity-clusterip-transition-5f4sw\naffinity-clusterip-transition-7x8b4\naffinity-clusterip-transition-78j69\naffinity-clusterip-transition-78j69\naffinity-clusterip-transition-5f4sw\naffinity-clusterip-transition-78j69\naffinity-clusterip-transition-78j69\naffinity-clusterip-transition-78j69\naffinity-clusterip-transition-7x8b4\naffinity-clusterip-transition-5f4sw\naffinity-clusterip-transition-7x8b4\naffinity-clusterip-transition-5f4sw"
  Jun  8 13:42:27.824: INFO: Received response from host: affinity-clusterip-transition-5f4sw
  Jun  8 13:42:27.824: INFO: Received response from host: affinity-clusterip-transition-78j69
  Jun  8 13:42:27.824: INFO: Received response from host: affinity-clusterip-transition-78j69
  Jun  8 13:42:27.824: INFO: Received response from host: affinity-clusterip-transition-78j69
  Jun  8 13:42:27.824: INFO: Received response from host: affinity-clusterip-transition-5f4sw
  Jun  8 13:42:27.824: INFO: Received response from host: affinity-clusterip-transition-7x8b4
  Jun  8 13:42:27.824: INFO: Received response from host: affinity-clusterip-transition-78j69
  Jun  8 13:42:27.824: INFO: Received response from host: affinity-clusterip-transition-78j69
  Jun  8 13:42:27.824: INFO: Received response from host: affinity-clusterip-transition-5f4sw
  Jun  8 13:42:27.824: INFO: Received response from host: affinity-clusterip-transition-78j69
  Jun  8 13:42:27.824: INFO: Received response from host: affinity-clusterip-transition-78j69
  Jun  8 13:42:27.824: INFO: Received response from host: affinity-clusterip-transition-78j69
  Jun  8 13:42:27.824: INFO: Received response from host: affinity-clusterip-transition-7x8b4
  Jun  8 13:42:27.824: INFO: Received response from host: affinity-clusterip-transition-5f4sw
  Jun  8 13:42:27.824: INFO: Received response from host: affinity-clusterip-transition-7x8b4
  Jun  8 13:42:27.824: INFO: Received response from host: affinity-clusterip-transition-5f4sw
  Jun  8 13:42:27.835: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-6001 exec execpod-affinitykgzrc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.161:80/ ; done'
  Jun  8 13:42:27.983: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.161:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.161:80/\n"
  Jun  8 13:42:27.983: INFO: stdout: "\naffinity-clusterip-transition-7x8b4\naffinity-clusterip-transition-7x8b4\naffinity-clusterip-transition-7x8b4\naffinity-clusterip-transition-7x8b4\naffinity-clusterip-transition-7x8b4\naffinity-clusterip-transition-7x8b4\naffinity-clusterip-transition-7x8b4\naffinity-clusterip-transition-7x8b4\naffinity-clusterip-transition-7x8b4\naffinity-clusterip-transition-7x8b4\naffinity-clusterip-transition-7x8b4\naffinity-clusterip-transition-7x8b4\naffinity-clusterip-transition-7x8b4\naffinity-clusterip-transition-7x8b4\naffinity-clusterip-transition-7x8b4\naffinity-clusterip-transition-7x8b4"
  Jun  8 13:42:27.983: INFO: Received response from host: affinity-clusterip-transition-7x8b4
  Jun  8 13:42:27.983: INFO: Received response from host: affinity-clusterip-transition-7x8b4
  Jun  8 13:42:27.983: INFO: Received response from host: affinity-clusterip-transition-7x8b4
  Jun  8 13:42:27.983: INFO: Received response from host: affinity-clusterip-transition-7x8b4
  Jun  8 13:42:27.983: INFO: Received response from host: affinity-clusterip-transition-7x8b4
  Jun  8 13:42:27.983: INFO: Received response from host: affinity-clusterip-transition-7x8b4
  Jun  8 13:42:27.983: INFO: Received response from host: affinity-clusterip-transition-7x8b4
  Jun  8 13:42:27.983: INFO: Received response from host: affinity-clusterip-transition-7x8b4
  Jun  8 13:42:27.983: INFO: Received response from host: affinity-clusterip-transition-7x8b4
  Jun  8 13:42:27.983: INFO: Received response from host: affinity-clusterip-transition-7x8b4
  Jun  8 13:42:27.983: INFO: Received response from host: affinity-clusterip-transition-7x8b4
  Jun  8 13:42:27.983: INFO: Received response from host: affinity-clusterip-transition-7x8b4
  Jun  8 13:42:27.983: INFO: Received response from host: affinity-clusterip-transition-7x8b4
  Jun  8 13:42:27.983: INFO: Received response from host: affinity-clusterip-transition-7x8b4
  Jun  8 13:42:27.983: INFO: Received response from host: affinity-clusterip-transition-7x8b4
  Jun  8 13:42:27.983: INFO: Received response from host: affinity-clusterip-transition-7x8b4
  Jun  8 13:42:27.983: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-6001, will wait for the garbage collector to delete the pods @ 06/08/24 13:42:27.994
  Jun  8 13:42:28.056: INFO: Deleting ReplicationController affinity-clusterip-transition took: 7.154357ms
  Jun  8 13:42:28.157: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.939162ms
  E0608 13:42:28.689156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:29.689399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:30.689879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:42:30.877: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6001" for this suite. @ 06/08/24 13:42:30.879
• [9.512 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 06/08/24 13:42:30.886
  Jun  8 13:42:30.886: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename projected @ 06/08/24 13:42:30.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:42:30.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:42:30.903
  STEP: Creating configMap with name projected-configmap-test-volume-map-36bf63de-4e7f-40ed-91b6-f7f93d0ffe1d @ 06/08/24 13:42:30.907
  STEP: Creating a pod to test consume configMaps @ 06/08/24 13:42:30.911
  E0608 13:42:31.689985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:32.690075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:33.690174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:34.690259      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:42:34.934
  Jun  8 13:42:34.937: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-projected-configmaps-59053974-a41c-4c24-a90f-198d4c96922d container agnhost-container: <nil>
  STEP: delete the pod @ 06/08/24 13:42:34.949
  Jun  8 13:42:34.966: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9836" for this suite. @ 06/08/24 13:42:34.97
• [4.093 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 06/08/24 13:42:34.979
  Jun  8 13:42:34.979: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/08/24 13:42:34.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:42:34.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:42:34.997
  Jun  8 13:42:35.001: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  E0608 13:42:35.690590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:36.691154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:37.691418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:38.692270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:39.692645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:40.693247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:42:41.194: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-837" for this suite. @ 06/08/24 13:42:41.197
• [6.226 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 06/08/24 13:42:41.206
  Jun  8 13:42:41.206: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename svcaccounts @ 06/08/24 13:42:41.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:42:41.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:42:41.222
  STEP: Creating a pod to test service account token:  @ 06/08/24 13:42:41.224
  E0608 13:42:41.693512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:42.693609      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:43.693704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:44.693795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:42:45.248
  Jun  8 13:42:45.251: INFO: Trying to get logs from node ip-172-31-31-116 pod test-pod-5aa63f91-fee1-40e6-bb56-56e7507c5e46 container agnhost-container: <nil>
  STEP: delete the pod @ 06/08/24 13:42:45.256
  Jun  8 13:42:45.271: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1456" for this suite. @ 06/08/24 13:42:45.275
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 06/08/24 13:42:45.28
  Jun  8 13:42:45.280: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename downward-api @ 06/08/24 13:42:45.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:42:45.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:42:45.301
  STEP: Creating a pod to test downward API volume plugin @ 06/08/24 13:42:45.303
  E0608 13:42:45.693900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:46.694022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:47.694119      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:48.694285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:42:49.326
  Jun  8 13:42:49.329: INFO: Trying to get logs from node ip-172-31-31-116 pod downwardapi-volume-b1775fab-2492-4939-b7a8-986c72fd55c2 container client-container: <nil>
  STEP: delete the pod @ 06/08/24 13:42:49.335
  Jun  8 13:42:49.348: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1114" for this suite. @ 06/08/24 13:42:49.351
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:139
  STEP: Creating a kubernetes client @ 06/08/24 13:42:49.358
  Jun  8 13:42:49.358: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename configmap @ 06/08/24 13:42:49.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:42:49.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:42:49.376
  STEP: Creating configMap that has name configmap-test-emptyKey-c2b5825f-6d53-4b36-9f87-0f86d54724af @ 06/08/24 13:42:49.378
  Jun  8 13:42:49.380: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1134" for this suite. @ 06/08/24 13:42:49.383
• [0.032 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 06/08/24 13:42:49.39
  Jun  8 13:42:49.390: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename namespaces @ 06/08/24 13:42:49.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:42:49.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:42:49.409
  STEP: Creating a test namespace @ 06/08/24 13:42:49.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:42:49.426
  STEP: Creating a pod in the namespace @ 06/08/24 13:42:49.428
  STEP: Waiting for the pod to have running status @ 06/08/24 13:42:49.436
  E0608 13:42:49.695231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:50.695430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 06/08/24 13:42:51.446
  STEP: Waiting for the namespace to be removed. @ 06/08/24 13:42:51.453
  E0608 13:42:51.695912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:52.696446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:53.696714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:54.696796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:55.697492      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:56.697888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:57.697955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:58.698566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:42:59.699648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:43:00.699740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:43:01.699870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 06/08/24 13:43:02.456
  STEP: Verifying there are no pods in the namespace @ 06/08/24 13:43:02.471
  Jun  8 13:43:02.476: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-678" for this suite. @ 06/08/24 13:43:02.479
  STEP: Destroying namespace "nsdeletetest-7629" for this suite. @ 06/08/24 13:43:02.485
  Jun  8 13:43:02.488: INFO: Namespace nsdeletetest-7629 was already deleted
  STEP: Destroying namespace "nsdeletetest-7591" for this suite. @ 06/08/24 13:43:02.488
• [13.102 seconds]
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 06/08/24 13:43:02.493
  Jun  8 13:43:02.493: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename pod-network-test @ 06/08/24 13:43:02.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:43:02.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:43:02.51
  STEP: Performing setup for networking test in namespace pod-network-test-4464 @ 06/08/24 13:43:02.512
  STEP: creating a selector @ 06/08/24 13:43:02.513
  STEP: Creating the service pods in kubernetes @ 06/08/24 13:43:02.513
  Jun  8 13:43:02.513: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0608 13:43:02.700683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:43:03.700799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:43:04.701034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:43:05.701134      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:43:06.701603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:43:07.701685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:43:08.701782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:43:09.701848      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:43:10.702848      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:43:11.702930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:43:12.703792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:43:13.704697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:43:14.704786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:43:15.704902      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:43:16.705884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:43:17.706050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:43:18.706681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:43:19.706802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:43:20.707580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:43:21.707932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:43:22.708912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:43:23.709547      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 06/08/24 13:43:24.624
  E0608 13:43:24.709906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:43:25.710080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:43:26.656: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jun  8 13:43:26.656: INFO: Going to poll 192.168.81.137 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Jun  8 13:43:26.659: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.81.137 8081 | grep -v '^\s*$'] Namespace:pod-network-test-4464 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  8 13:43:26.659: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  Jun  8 13:43:26.659: INFO: ExecWithOptions: Clientset creation
  Jun  8 13:43:26.659: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4464/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.81.137+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0608 13:43:26.710145      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:43:27.700: INFO: Found all 1 expected endpoints: [netserver-0]
  Jun  8 13:43:27.700: INFO: Going to poll 192.168.165.37 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Jun  8 13:43:27.705: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.165.37 8081 | grep -v '^\s*$'] Namespace:pod-network-test-4464 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  8 13:43:27.705: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  Jun  8 13:43:27.705: INFO: ExecWithOptions: Clientset creation
  Jun  8 13:43:27.706: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4464/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.165.37+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0608 13:43:27.710877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:43:28.711620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:43:28.764: INFO: Found all 1 expected endpoints: [netserver-1]
  Jun  8 13:43:28.764: INFO: Going to poll 192.168.82.180 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Jun  8 13:43:28.769: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.82.180 8081 | grep -v '^\s*$'] Namespace:pod-network-test-4464 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  8 13:43:28.769: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  Jun  8 13:43:28.769: INFO: ExecWithOptions: Clientset creation
  Jun  8 13:43:28.769: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4464/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.82.180+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0608 13:43:29.712700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:43:29.816: INFO: Found all 1 expected endpoints: [netserver-2]
  Jun  8 13:43:29.816: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4464" for this suite. @ 06/08/24 13:43:29.821
• [27.335 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3565
  STEP: Creating a kubernetes client @ 06/08/24 13:43:29.829
  Jun  8 13:43:29.829: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename services @ 06/08/24 13:43:29.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:43:29.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:43:29.845
  STEP: creating a collection of services @ 06/08/24 13:43:29.848
  Jun  8 13:43:29.848: INFO: Creating e2e-svc-a-brflb
  Jun  8 13:43:29.856: INFO: Creating e2e-svc-b-gqkxl
  Jun  8 13:43:29.867: INFO: Creating e2e-svc-c-frrm7
  STEP: deleting service collection @ 06/08/24 13:43:29.878
  Jun  8 13:43:29.902: INFO: Collection of services has been deleted
  Jun  8 13:43:29.902: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5274" for this suite. @ 06/08/24 13:43:29.906
• [0.083 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 06/08/24 13:43:29.912
  Jun  8 13:43:29.912: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/08/24 13:43:29.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:43:29.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:43:29.926
  Jun  8 13:43:29.928: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  E0608 13:43:30.713392      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:43:30.951: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4562" for this suite. @ 06/08/24 13:43:30.955
• [1.051 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 06/08/24 13:43:30.963
  Jun  8 13:43:30.963: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename controllerrevisions @ 06/08/24 13:43:30.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:43:30.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:43:30.978
  STEP: Creating DaemonSet "e2e-zjj9l-daemon-set" @ 06/08/24 13:43:30.997
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/08/24 13:43:31.003
  Jun  8 13:43:31.006: INFO: DaemonSet pods can't tolerate node ip-172-31-68-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:43:31.007: INFO: DaemonSet pods can't tolerate node ip-172-31-83-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:43:31.009: INFO: Number of nodes with available pods controlled by daemonset e2e-zjj9l-daemon-set: 0
  Jun  8 13:43:31.009: INFO: Node ip-172-31-31-116 is running 0 daemon pod, expected 1
  E0608 13:43:31.714215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:43:32.008: INFO: DaemonSet pods can't tolerate node ip-172-31-68-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:43:32.008: INFO: DaemonSet pods can't tolerate node ip-172-31-83-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:43:32.011: INFO: Number of nodes with available pods controlled by daemonset e2e-zjj9l-daemon-set: 2
  Jun  8 13:43:32.011: INFO: Node ip-172-31-74-243 is running 0 daemon pod, expected 1
  E0608 13:43:32.714323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:43:33.009: INFO: DaemonSet pods can't tolerate node ip-172-31-68-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:43:33.009: INFO: DaemonSet pods can't tolerate node ip-172-31-83-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:43:33.012: INFO: Number of nodes with available pods controlled by daemonset e2e-zjj9l-daemon-set: 3
  Jun  8 13:43:33.012: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-zjj9l-daemon-set
  STEP: Confirm DaemonSet "e2e-zjj9l-daemon-set" successfully created with "daemonset-name=e2e-zjj9l-daemon-set" label @ 06/08/24 13:43:33.015
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-zjj9l-daemon-set" @ 06/08/24 13:43:33.02
  Jun  8 13:43:33.023: INFO: Located ControllerRevision: "e2e-zjj9l-daemon-set-599cd8dbd"
  STEP: Patching ControllerRevision "e2e-zjj9l-daemon-set-599cd8dbd" @ 06/08/24 13:43:33.026
  Jun  8 13:43:33.032: INFO: e2e-zjj9l-daemon-set-599cd8dbd has been patched
  STEP: Create a new ControllerRevision @ 06/08/24 13:43:33.032
  Jun  8 13:43:33.038: INFO: Created ControllerRevision: e2e-zjj9l-daemon-set-55865c9db
  STEP: Confirm that there are two ControllerRevisions @ 06/08/24 13:43:33.038
  Jun  8 13:43:33.038: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jun  8 13:43:33.041: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-zjj9l-daemon-set-599cd8dbd" @ 06/08/24 13:43:33.041
  STEP: Confirm that there is only one ControllerRevision @ 06/08/24 13:43:33.046
  Jun  8 13:43:33.046: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jun  8 13:43:33.049: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-zjj9l-daemon-set-55865c9db" @ 06/08/24 13:43:33.051
  Jun  8 13:43:33.059: INFO: e2e-zjj9l-daemon-set-55865c9db has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 06/08/24 13:43:33.059
  W0608 13:43:33.066653      19 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 06/08/24 13:43:33.066
  Jun  8 13:43:33.066: INFO: Requesting list of ControllerRevisions to confirm quantity
  E0608 13:43:33.714420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:43:34.066: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jun  8 13:43:34.071: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-zjj9l-daemon-set-55865c9db=updated" @ 06/08/24 13:43:34.071
  STEP: Confirm that there is only one ControllerRevision @ 06/08/24 13:43:34.079
  Jun  8 13:43:34.079: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jun  8 13:43:34.081: INFO: Found 1 ControllerRevisions
  Jun  8 13:43:34.084: INFO: ControllerRevision "e2e-zjj9l-daemon-set-b6b758c4c" has revision 3
  STEP: Deleting DaemonSet "e2e-zjj9l-daemon-set" @ 06/08/24 13:43:34.087
  STEP: deleting DaemonSet.extensions e2e-zjj9l-daemon-set in namespace controllerrevisions-3875, will wait for the garbage collector to delete the pods @ 06/08/24 13:43:34.087
  Jun  8 13:43:34.146: INFO: Deleting DaemonSet.extensions e2e-zjj9l-daemon-set took: 6.327591ms
  Jun  8 13:43:34.246: INFO: Terminating DaemonSet.extensions e2e-zjj9l-daemon-set pods took: 100.361035ms
  E0608 13:43:34.715203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:43:35.715730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:43:36.716408      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:43:37.050: INFO: Number of nodes with available pods controlled by daemonset e2e-zjj9l-daemon-set: 0
  Jun  8 13:43:37.051: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-zjj9l-daemon-set
  Jun  8 13:43:37.053: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"33970"},"items":null}

  Jun  8 13:43:37.056: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"33970"},"items":null}

  Jun  8 13:43:37.067: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-3875" for this suite. @ 06/08/24 13:43:37.07
• [6.113 seconds]
------------------------------
SS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 06/08/24 13:43:37.076
  Jun  8 13:43:37.076: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename downward-api @ 06/08/24 13:43:37.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:43:37.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:43:37.143
  STEP: Creating a pod to test downward api env vars @ 06/08/24 13:43:37.145
  E0608 13:43:37.716776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:43:38.716851      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:43:39.161
  Jun  8 13:43:39.164: INFO: Trying to get logs from node ip-172-31-31-116 pod downward-api-bdb1a39e-47c2-4a27-9012-9eec840c3d88 container dapi-container: <nil>
  STEP: delete the pod @ 06/08/24 13:43:39.169
  Jun  8 13:43:39.188: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3857" for this suite. @ 06/08/24 13:43:39.191
• [2.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 06/08/24 13:43:39.198
  Jun  8 13:43:39.198: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename emptydir @ 06/08/24 13:43:39.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:43:39.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:43:39.212
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 06/08/24 13:43:39.215
  E0608 13:43:39.717765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:43:40.717879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:43:41.229
  Jun  8 13:43:41.233: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-9608b39a-5c16-47bd-bfc8-b16bdd9e3fff container test-container: <nil>
  STEP: delete the pod @ 06/08/24 13:43:41.239
  Jun  8 13:43:41.253: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3953" for this suite. @ 06/08/24 13:43:41.256
• [2.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 06/08/24 13:43:41.262
  Jun  8 13:43:41.262: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename resourcequota @ 06/08/24 13:43:41.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:43:41.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:43:41.278
  STEP: Creating a ResourceQuota @ 06/08/24 13:43:41.281
  STEP: Getting a ResourceQuota @ 06/08/24 13:43:41.286
  STEP: Listing all ResourceQuotas with LabelSelector @ 06/08/24 13:43:41.291
  STEP: Patching the ResourceQuota @ 06/08/24 13:43:41.294
  STEP: Deleting a Collection of ResourceQuotas @ 06/08/24 13:43:41.3
  STEP: Verifying the deleted ResourceQuota @ 06/08/24 13:43:41.308
  Jun  8 13:43:41.311: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4603" for this suite. @ 06/08/24 13:43:41.314
• [0.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 06/08/24 13:43:41.321
  Jun  8 13:43:41.321: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename configmap @ 06/08/24 13:43:41.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:43:41.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:43:41.338
  STEP: Creating configMap with name configmap-test-volume-map-0e3745cd-f4b7-4441-94ab-dedf135eebd5 @ 06/08/24 13:43:41.344
  STEP: Creating a pod to test consume configMaps @ 06/08/24 13:43:41.347
  E0608 13:43:41.718485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:43:42.718578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:43:43.367
  Jun  8 13:43:43.370: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-configmaps-f7248944-7ca6-46b2-ba83-39ba0d0d3b8b container agnhost-container: <nil>
  STEP: delete the pod @ 06/08/24 13:43:43.375
  Jun  8 13:43:43.392: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8849" for this suite. @ 06/08/24 13:43:43.397
• [2.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:399
  STEP: Creating a kubernetes client @ 06/08/24 13:43:43.404
  Jun  8 13:43:43.404: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename kubectl @ 06/08/24 13:43:43.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:43:43.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:43:43.423
  STEP: creating all guestbook components @ 06/08/24 13:43:43.426
  Jun  8 13:43:43.426: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Jun  8 13:43:43.426: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-1504 create -f -'
  Jun  8 13:43:43.509: INFO: stderr: ""
  Jun  8 13:43:43.509: INFO: stdout: "service/agnhost-replica created\n"
  Jun  8 13:43:43.509: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Jun  8 13:43:43.509: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-1504 create -f -'
  Jun  8 13:43:43.593: INFO: stderr: ""
  Jun  8 13:43:43.593: INFO: stdout: "service/agnhost-primary created\n"
  Jun  8 13:43:43.593: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Jun  8 13:43:43.593: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-1504 create -f -'
  Jun  8 13:43:43.675: INFO: stderr: ""
  Jun  8 13:43:43.675: INFO: stdout: "service/frontend created\n"
  Jun  8 13:43:43.675: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Jun  8 13:43:43.675: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-1504 create -f -'
  E0608 13:43:43.718616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:43:43.734: INFO: stderr: ""
  Jun  8 13:43:43.734: INFO: stdout: "deployment.apps/frontend created\n"
  Jun  8 13:43:43.734: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Jun  8 13:43:43.734: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-1504 create -f -'
  Jun  8 13:43:43.798: INFO: stderr: ""
  Jun  8 13:43:43.798: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Jun  8 13:43:43.798: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Jun  8 13:43:43.798: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-1504 create -f -'
  Jun  8 13:43:43.855: INFO: stderr: ""
  Jun  8 13:43:43.855: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 06/08/24 13:43:43.855
  Jun  8 13:43:43.855: INFO: Waiting for all frontend pods to be Running.
  E0608 13:43:44.719267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:43:45.719651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:43:46.719753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:43:47.719867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:43:48.720743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:43:48.907: INFO: Waiting for frontend to serve content.
  Jun  8 13:43:48.918: INFO: Trying to add a new entry to the guestbook.
  Jun  8 13:43:48.930: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 06/08/24 13:43:48.938
  Jun  8 13:43:48.938: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-1504 delete --grace-period=0 --force -f -'
  Jun  8 13:43:48.992: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun  8 13:43:48.992: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 06/08/24 13:43:48.992
  Jun  8 13:43:48.992: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-1504 delete --grace-period=0 --force -f -'
  Jun  8 13:43:49.053: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun  8 13:43:49.053: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 06/08/24 13:43:49.053
  Jun  8 13:43:49.053: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-1504 delete --grace-period=0 --force -f -'
  Jun  8 13:43:49.111: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun  8 13:43:49.111: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 06/08/24 13:43:49.111
  Jun  8 13:43:49.111: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-1504 delete --grace-period=0 --force -f -'
  Jun  8 13:43:49.156: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun  8 13:43:49.156: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 06/08/24 13:43:49.156
  Jun  8 13:43:49.156: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-1504 delete --grace-period=0 --force -f -'
  Jun  8 13:43:49.217: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun  8 13:43:49.217: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 06/08/24 13:43:49.217
  Jun  8 13:43:49.217: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-1504 delete --grace-period=0 --force -f -'
  Jun  8 13:43:49.287: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun  8 13:43:49.287: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Jun  8 13:43:49.287: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1504" for this suite. @ 06/08/24 13:43:49.292
• [5.895 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 06/08/24 13:43:49.299
  Jun  8 13:43:49.299: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename resourcequota @ 06/08/24 13:43:49.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:43:49.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:43:49.346
  STEP: Creating a ResourceQuota @ 06/08/24 13:43:49.352
  STEP: Getting a ResourceQuota @ 06/08/24 13:43:49.358
  STEP: Updating a ResourceQuota @ 06/08/24 13:43:49.361
  STEP: Verifying a ResourceQuota was modified @ 06/08/24 13:43:49.366
  STEP: Deleting a ResourceQuota @ 06/08/24 13:43:49.369
  STEP: Verifying the deleted ResourceQuota @ 06/08/24 13:43:49.378
  Jun  8 13:43:49.382: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1399" for this suite. @ 06/08/24 13:43:49.39
• [0.099 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 06/08/24 13:43:49.398
  Jun  8 13:43:49.398: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename disruption @ 06/08/24 13:43:49.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:43:49.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:43:49.474
  STEP: Creating a pdb that targets all three pods in a test replica set @ 06/08/24 13:43:49.481
  STEP: Waiting for the pdb to be processed @ 06/08/24 13:43:49.512
  E0608 13:43:49.721105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:43:50.721208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 06/08/24 13:43:51.523
  STEP: Waiting for all pods to be running @ 06/08/24 13:43:51.523
  Jun  8 13:43:51.526: INFO: pods: 0 < 3
  E0608 13:43:51.721916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:43:52.721997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 06/08/24 13:43:53.527
  STEP: Updating the pdb to allow a pod to be evicted @ 06/08/24 13:43:53.536
  STEP: Waiting for the pdb to be processed @ 06/08/24 13:43:53.543
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 06/08/24 13:43:53.547
  STEP: Waiting for all pods to be running @ 06/08/24 13:43:53.547
  STEP: Waiting for the pdb to observed all healthy pods @ 06/08/24 13:43:53.549
  STEP: Patching the pdb to disallow a pod to be evicted @ 06/08/24 13:43:53.58
  STEP: Waiting for the pdb to be processed @ 06/08/24 13:43:53.595
  E0608 13:43:53.722520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:43:54.722593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 06/08/24 13:43:55.6
  STEP: locating a running pod @ 06/08/24 13:43:55.603
  STEP: Deleting the pdb to allow a pod to be evicted @ 06/08/24 13:43:55.611
  STEP: Waiting for the pdb to be deleted @ 06/08/24 13:43:55.618
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 06/08/24 13:43:55.62
  STEP: Waiting for all pods to be running @ 06/08/24 13:43:55.62
  Jun  8 13:43:55.637: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7655" for this suite. @ 06/08/24 13:43:55.642
• [6.255 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 06/08/24 13:43:55.654
  Jun  8 13:43:55.654: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename pods @ 06/08/24 13:43:55.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:43:55.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:43:55.673
  STEP: Create set of pods @ 06/08/24 13:43:55.676
  Jun  8 13:43:55.686: INFO: created test-pod-1
  Jun  8 13:43:55.693: INFO: created test-pod-2
  Jun  8 13:43:55.702: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 06/08/24 13:43:55.702
  E0608 13:43:55.723202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:43:56.724339      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:43:57.724700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 06/08/24 13:43:57.746
  Jun  8 13:43:57.749: INFO: Pod quantity 3 is different from expected quantity 0
  E0608 13:43:58.724879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:43:58.750: INFO: Pod quantity 2 is different from expected quantity 0
  E0608 13:43:59.725178      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:43:59.750: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6697" for this suite. @ 06/08/24 13:43:59.754
• [4.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 06/08/24 13:43:59.76
  Jun  8 13:43:59.760: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename emptydir @ 06/08/24 13:43:59.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:43:59.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:43:59.778
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 06/08/24 13:43:59.78
  E0608 13:44:00.725190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:44:01.725252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:44:02.725371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:44:03.725562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:44:03.8
  Jun  8 13:44:03.802: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-ac8577fc-acc1-455a-bad1-c649fac9b35b container test-container: <nil>
  STEP: delete the pod @ 06/08/24 13:44:03.809
  Jun  8 13:44:03.825: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3503" for this suite. @ 06/08/24 13:44:03.828
• [4.072 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1698
  STEP: Creating a kubernetes client @ 06/08/24 13:44:03.833
  Jun  8 13:44:03.833: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename kubectl @ 06/08/24 13:44:03.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:44:03.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:44:03.85
  STEP: creating Agnhost RC @ 06/08/24 13:44:03.852
  Jun  8 13:44:03.852: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-5623 create -f -'
  Jun  8 13:44:03.932: INFO: stderr: ""
  Jun  8 13:44:03.932: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 06/08/24 13:44:03.932
  E0608 13:44:04.726223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:44:04.935: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun  8 13:44:04.935: INFO: Found 0 / 1
  E0608 13:44:05.727204      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:44:05.936: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun  8 13:44:05.936: INFO: Found 1 / 1
  Jun  8 13:44:05.936: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 06/08/24 13:44:05.936
  Jun  8 13:44:05.939: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun  8 13:44:05.939: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jun  8 13:44:05.939: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-5623 patch pod agnhost-primary-q6gzf -p {"metadata":{"annotations":{"x":"y"}}}'
  Jun  8 13:44:05.986: INFO: stderr: ""
  Jun  8 13:44:05.986: INFO: stdout: "pod/agnhost-primary-q6gzf patched\n"
  STEP: checking annotations @ 06/08/24 13:44:05.986
  Jun  8 13:44:05.989: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun  8 13:44:05.989: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jun  8 13:44:05.990: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5623" for this suite. @ 06/08/24 13:44:05.992
• [2.167 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 06/08/24 13:44:05.999
  Jun  8 13:44:05.999: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename security-context @ 06/08/24 13:44:06
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:44:06.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:44:06.018
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 06/08/24 13:44:06.021
  E0608 13:44:06.728085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:44:07.728183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:44:08.728311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:44:09.728808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:44:10.047
  Jun  8 13:44:10.050: INFO: Trying to get logs from node ip-172-31-74-243 pod security-context-428b88bc-4cf2-4671-840a-e8200f3bfb35 container test-container: <nil>
  STEP: delete the pod @ 06/08/24 13:44:10.065
  Jun  8 13:44:10.082: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-2350" for this suite. @ 06/08/24 13:44:10.084
• [4.091 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 06/08/24 13:44:10.091
  Jun  8 13:44:10.091: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename downward-api @ 06/08/24 13:44:10.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:44:10.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:44:10.11
  STEP: Creating a pod to test downward API volume plugin @ 06/08/24 13:44:10.113
  E0608 13:44:10.729728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:44:11.730003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:44:12.730123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:44:13.730219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:44:14.138
  Jun  8 13:44:14.141: INFO: Trying to get logs from node ip-172-31-31-116 pod downwardapi-volume-db7e11f3-4712-462e-a9f8-fbb6cfff026a container client-container: <nil>
  STEP: delete the pod @ 06/08/24 13:44:14.147
  Jun  8 13:44:14.164: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4341" for this suite. @ 06/08/24 13:44:14.169
• [4.085 seconds]
------------------------------
S
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:214
  STEP: Creating a kubernetes client @ 06/08/24 13:44:14.177
  Jun  8 13:44:14.177: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/08/24 13:44:14.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:44:14.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:44:14.197
  STEP: create the container to handle the HTTPGet hook request. @ 06/08/24 13:44:14.209
  E0608 13:44:14.730804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:44:15.730946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 06/08/24 13:44:16.227
  E0608 13:44:16.731771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:44:17.731848      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 06/08/24 13:44:18.248
  E0608 13:44:18.731946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:44:19.732038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 06/08/24 13:44:20.262
  Jun  8 13:44:20.269: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5543" for this suite. @ 06/08/24 13:44:20.272
• [6.102 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 06/08/24 13:44:20.279
  Jun  8 13:44:20.279: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename field-validation @ 06/08/24 13:44:20.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:44:20.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:44:20.296
  Jun  8 13:44:20.299: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  E0608 13:44:20.732138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:44:21.732594      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:44:22.732659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0608 13:44:22.834930      19 warnings.go:70] unknown field "alpha"
  W0608 13:44:22.834943      19 warnings.go:70] unknown field "beta"
  W0608 13:44:22.834946      19 warnings.go:70] unknown field "delta"
  W0608 13:44:22.834949      19 warnings.go:70] unknown field "epsilon"
  W0608 13:44:22.834951      19 warnings.go:70] unknown field "gamma"
  Jun  8 13:44:23.374: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8215" for this suite. @ 06/08/24 13:44:23.377
• [3.104 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 06/08/24 13:44:23.383
  Jun  8 13:44:23.383: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename pods @ 06/08/24 13:44:23.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:44:23.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:44:23.398
  STEP: Create a pod @ 06/08/24 13:44:23.402
  E0608 13:44:23.732775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:44:24.732919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 06/08/24 13:44:25.415
  Jun  8 13:44:25.429: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Jun  8 13:44:25.429: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5332" for this suite. @ 06/08/24 13:44:25.433
• [2.055 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 06/08/24 13:44:25.438
  Jun  8 13:44:25.438: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename sysctl @ 06/08/24 13:44:25.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:44:25.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:44:25.457
  STEP: Creating a pod with one valid and two invalid sysctls @ 06/08/24 13:44:25.46
  Jun  8 13:44:25.468: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-6949" for this suite. @ 06/08/24 13:44:25.471
• [0.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1399
  STEP: Creating a kubernetes client @ 06/08/24 13:44:25.479
  Jun  8 13:44:25.479: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename kubectl @ 06/08/24 13:44:25.479
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:44:25.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:44:25.546
  Jun  8 13:44:25.549: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-8402 create -f -'
  Jun  8 13:44:25.711: INFO: stderr: ""
  Jun  8 13:44:25.711: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Jun  8 13:44:25.711: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-8402 create -f -'
  E0608 13:44:25.733513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:44:25.811: INFO: stderr: ""
  Jun  8 13:44:25.811: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 06/08/24 13:44:25.811
  E0608 13:44:26.733603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:44:26.815: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun  8 13:44:26.815: INFO: Found 1 / 1
  Jun  8 13:44:26.815: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Jun  8 13:44:26.818: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun  8 13:44:26.818: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jun  8 13:44:26.818: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-8402 describe pod agnhost-primary-g9nd8'
  Jun  8 13:44:26.866: INFO: stderr: ""
  Jun  8 13:44:26.866: INFO: stdout: "Name:             agnhost-primary-g9nd8\nNamespace:        kubectl-8402\nPriority:         0\nService Account:  default\nNode:             ip-172-31-74-243/172.31.74.243\nStart Time:       Sat, 08 Jun 2024 13:44:25 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.82.188\nIPs:\n  IP:           192.168.82.188\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://c9c8ee1bdd0294111cd3ba42de53a6637c3f4509a34c18fc59088f460f6d11ed\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 08 Jun 2024 13:44:26 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-6tg4g (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-6tg4g:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-8402/agnhost-primary-g9nd8 to ip-172-31-74-243\n  Normal  Pulled     0s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    0s    kubelet            Created container agnhost-primary\n  Normal  Started    0s    kubelet            Started container agnhost-primary\n"
  Jun  8 13:44:26.866: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-8402 describe rc agnhost-primary'
  Jun  8 13:44:26.920: INFO: stderr: ""
  Jun  8 13:44:26.920: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-8402\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-g9nd8\n"
  Jun  8 13:44:26.920: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-8402 describe service agnhost-primary'
  Jun  8 13:44:26.966: INFO: stderr: ""
  Jun  8 13:44:26.966: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-8402\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.152.183.155\nIPs:               10.152.183.155\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         192.168.82.188:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Jun  8 13:44:26.970: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-8402 describe node ip-172-31-31-116'
  Jun  8 13:44:27.027: INFO: stderr: ""
  Jun  8 13:44:27.027: INFO: stdout: "Name:               ip-172-31-31-116\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-worker\n                    juju-charm=kubernetes-worker\n                    juju.io/cloud=ec2\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-31-116\n                    kubernetes.io/os=linux\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 08 Jun 2024 12:14:56 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-31-116\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 08 Jun 2024 13:44:21 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 08 Jun 2024 12:15:27 +0000   Sat, 08 Jun 2024 12:15:27 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 08 Jun 2024 13:43:22 +0000   Sat, 08 Jun 2024 12:14:56 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 08 Jun 2024 13:43:22 +0000   Sat, 08 Jun 2024 12:14:56 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 08 Jun 2024 13:43:22 +0000   Sat, 08 Jun 2024 12:14:56 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 08 Jun 2024 13:43:22 +0000   Sat, 08 Jun 2024 12:15:15 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  172.31.31.116\n  Hostname:    ip-172-31-31-116\nCapacity:\n  cpu:                    2\n  ephemeral-storage:      16069568Ki\n  example.com/fakecpu:    1k\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 7958148Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nAllocatable:\n  cpu:                    2\n  ephemeral-storage:      14809713845\n  example.com/fakecpu:    1k\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 7855748Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nSystem Info:\n  Machine ID:                      ec253cb51b364da7883d7768b080281e\n  System UUID:                     ec253cb5-1b36-4da7-883d-7768b080281e\n  Boot ID:                         24b395ee-9768-4170-b537-0e7c0e70ac83\n  Kernel Version:                  6.5.0-1020-aws\n  OS Image:                        Ubuntu 22.04.4 LTS\n  Operating System:                linux\n  Architecture:                    amd64\n  Container Runtime Version:       containerd://1.6.8\n  Kubelet Version:                 v1.29.5\n  Kube-Proxy Version:              v1.29.5\nNon-terminated Pods:               (5 in total)\n  Namespace                        Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                        ----                                                       ------------  ----------  ---------------  -------------  ---\n  ingress-nginx-kubernetes-worker  nginx-ingress-controller-kubernetes-worker-6k9dl           0 (0%)        0 (0%)      0 (0%)           0 (0%)         42m\n  kube-system                      calico-node-w2nxw                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         89m\n  pods-5332                        pod-vmqxk                                                  0 (0%)        0 (0%)      0 (0%)           0 (0%)         4s\n  sonobuoy                         sonobuoy                                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         86m\n  sonobuoy                         sonobuoy-systemd-logs-daemon-set-2372ce3de819483f-qmcng    0 (0%)        0 (0%)      0 (0%)           0 (0%)         86m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource               Requests    Limits\n  --------               --------    ------\n  cpu                    250m (12%)  0 (0%)\n  memory                 0 (0%)      0 (0%)\n  ephemeral-storage      0 (0%)      0 (0%)\n  hugepages-1Gi          0 (0%)      0 (0%)\n  hugepages-2Mi          0 (0%)      0 (0%)\n  example.com/fakecpu    0           0\n  scheduling.k8s.io/foo  0           0\nEvents:                  <none>\n"
  Jun  8 13:44:27.027: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-8402 describe namespace kubectl-8402'
  Jun  8 13:44:27.073: INFO: stderr: ""
  Jun  8 13:44:27.073: INFO: stdout: "Name:         kubectl-8402\nLabels:       e2e-framework=kubectl\n              e2e-run=5b5ed583-e0c7-46a3-b85d-e644064d7e3e\n              kubernetes.io/metadata.name=kubectl-8402\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Jun  8 13:44:27.073: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8402" for this suite. @ 06/08/24 13:44:27.077
• [1.606 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 06/08/24 13:44:27.085
  Jun  8 13:44:27.085: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename replication-controller @ 06/08/24 13:44:27.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:44:27.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:44:27.098
  Jun  8 13:44:27.102: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 06/08/24 13:44:27.118
  STEP: Checking rc "condition-test" has the desired failure condition set @ 06/08/24 13:44:27.128
  E0608 13:44:27.734592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 06/08/24 13:44:28.135
  Jun  8 13:44:28.145: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 06/08/24 13:44:28.145
  E0608 13:44:28.734682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:44:29.152: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9768" for this suite. @ 06/08/24 13:44:29.156
• [2.077 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 06/08/24 13:44:29.163
  Jun  8 13:44:29.163: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename projected @ 06/08/24 13:44:29.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:44:29.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:44:29.177
  STEP: Creating a pod to test downward API volume plugin @ 06/08/24 13:44:29.18
  E0608 13:44:29.734799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:44:30.734882      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:44:31.734982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:44:32.735069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:44:33.202
  Jun  8 13:44:33.205: INFO: Trying to get logs from node ip-172-31-31-116 pod downwardapi-volume-9217a02b-79ed-45c0-a347-fba25ec71aee container client-container: <nil>
  STEP: delete the pod @ 06/08/24 13:44:33.211
  Jun  8 13:44:33.226: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5089" for this suite. @ 06/08/24 13:44:33.229
• [4.071 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 06/08/24 13:44:33.235
  Jun  8 13:44:33.235: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/08/24 13:44:33.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:44:33.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:44:33.251
  STEP: set up a multi version CRD @ 06/08/24 13:44:33.253
  Jun  8 13:44:33.253: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  E0608 13:44:33.736102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:44:34.736456      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:44:35.736843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 06/08/24 13:44:36.307
  STEP: check the unserved version gets removed @ 06/08/24 13:44:36.32
  E0608 13:44:36.736951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 06/08/24 13:44:37.05
  E0608 13:44:37.737651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:44:38.737968      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:44:39.509: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5419" for this suite. @ 06/08/24 13:44:39.513
• [6.285 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 06/08/24 13:44:39.524
  Jun  8 13:44:39.524: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename secrets @ 06/08/24 13:44:39.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:44:39.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:44:39.544
  STEP: Creating secret with name secret-test-ca97d235-c36c-4f5d-a0a6-ec7cedc3c7ce @ 06/08/24 13:44:39.564
  STEP: Creating a pod to test consume secrets @ 06/08/24 13:44:39.568
  E0608 13:44:39.738454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:44:40.738551      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:44:41.738880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:44:42.739051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:44:43.584
  Jun  8 13:44:43.587: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-secrets-199f6ad0-6d35-469e-91fe-d5d68dfbb5b7 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/08/24 13:44:43.598
  Jun  8 13:44:43.611: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3855" for this suite. @ 06/08/24 13:44:43.613
  STEP: Destroying namespace "secret-namespace-2227" for this suite. @ 06/08/24 13:44:43.617
• [4.100 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 06/08/24 13:44:43.624
  Jun  8 13:44:43.624: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename deployment @ 06/08/24 13:44:43.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:44:43.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:44:43.642
  STEP: creating a Deployment @ 06/08/24 13:44:43.646
  STEP: waiting for Deployment to be created @ 06/08/24 13:44:43.651
  STEP: waiting for all Replicas to be Ready @ 06/08/24 13:44:43.652
  Jun  8 13:44:43.653: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun  8 13:44:43.653: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun  8 13:44:43.664: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun  8 13:44:43.664: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun  8 13:44:43.675: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun  8 13:44:43.675: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun  8 13:44:43.703: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun  8 13:44:43.703: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0608 13:44:43.739469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:44:44.610: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Jun  8 13:44:44.610: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  E0608 13:44:44.740572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:44:45.131: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 06/08/24 13:44:45.132
  Jun  8 13:44:45.140: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 06/08/24 13:44:45.14
  Jun  8 13:44:45.141: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 0
  Jun  8 13:44:45.141: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 0
  Jun  8 13:44:45.141: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 0
  Jun  8 13:44:45.141: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 0
  Jun  8 13:44:45.141: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 0
  Jun  8 13:44:45.141: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 0
  Jun  8 13:44:45.141: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 0
  Jun  8 13:44:45.141: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 0
  Jun  8 13:44:45.141: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 1
  Jun  8 13:44:45.141: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 1
  Jun  8 13:44:45.141: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 2
  Jun  8 13:44:45.141: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 2
  Jun  8 13:44:45.141: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 2
  Jun  8 13:44:45.141: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 2
  Jun  8 13:44:45.156: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 2
  Jun  8 13:44:45.156: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 2
  Jun  8 13:44:45.171: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 2
  Jun  8 13:44:45.171: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 2
  Jun  8 13:44:45.189: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 1
  Jun  8 13:44:45.189: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 1
  Jun  8 13:44:45.204: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 1
  Jun  8 13:44:45.204: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 1
  E0608 13:44:45.740685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:44:46.143: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 2
  Jun  8 13:44:46.143: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 2
  Jun  8 13:44:46.169: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 1
  STEP: listing Deployments @ 06/08/24 13:44:46.169
  Jun  8 13:44:46.172: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 06/08/24 13:44:46.172
  Jun  8 13:44:46.184: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 06/08/24 13:44:46.184
  Jun  8 13:44:46.190: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jun  8 13:44:46.194: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jun  8 13:44:46.218: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jun  8 13:44:46.231: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jun  8 13:44:46.250: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0608 13:44:46.740961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:44:47.156: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jun  8 13:44:47.178: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jun  8 13:44:47.187: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jun  8 13:44:47.197: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jun  8 13:44:47.205: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0608 13:44:47.741495      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:44:48.666: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 06/08/24 13:44:48.692
  STEP: fetching the DeploymentStatus @ 06/08/24 13:44:48.699
  Jun  8 13:44:48.705: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 1
  Jun  8 13:44:48.705: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 1
  Jun  8 13:44:48.705: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 1
  Jun  8 13:44:48.705: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 1
  Jun  8 13:44:48.705: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 1
  Jun  8 13:44:48.705: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 2
  Jun  8 13:44:48.705: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 2
  Jun  8 13:44:48.705: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 2
  Jun  8 13:44:48.705: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 2
  Jun  8 13:44:48.705: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 2
  Jun  8 13:44:48.705: INFO: observed Deployment test-deployment in namespace deployment-3781 with ReadyReplicas 3
  STEP: deleting the Deployment @ 06/08/24 13:44:48.705
  Jun  8 13:44:48.713: INFO: observed event type MODIFIED
  Jun  8 13:44:48.713: INFO: observed event type MODIFIED
  Jun  8 13:44:48.713: INFO: observed event type MODIFIED
  Jun  8 13:44:48.713: INFO: observed event type MODIFIED
  Jun  8 13:44:48.713: INFO: observed event type MODIFIED
  Jun  8 13:44:48.713: INFO: observed event type MODIFIED
  Jun  8 13:44:48.713: INFO: observed event type MODIFIED
  Jun  8 13:44:48.713: INFO: observed event type MODIFIED
  Jun  8 13:44:48.713: INFO: observed event type MODIFIED
  Jun  8 13:44:48.713: INFO: observed event type MODIFIED
  Jun  8 13:44:48.713: INFO: observed event type MODIFIED
  Jun  8 13:44:48.713: INFO: observed event type MODIFIED
  Jun  8 13:44:48.713: INFO: observed event type MODIFIED
  Jun  8 13:44:48.713: INFO: observed event type MODIFIED
  Jun  8 13:44:48.715: INFO: Log out all the ReplicaSets if there is no deployment created
  Jun  8 13:44:48.718: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3781",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "837c1114-1d33-4635-a2cd-9f48439414be",
      ResourceVersion: (string) (len=5) "35468",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853451085,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "55ba13ab-520d-4041-b3ea-a7a562b25b28",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451088,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 35 35 62 61  31 33 61 62 2d 35 32 30  |":\"55ba13ab-520|
              00000130  64 2d 34 30 34 31 2d 62  33 65 61 2d 61 37 61 35  |d-4041-b3ea-a7a5|
              00000140  36 32 62 32 35 62 32 38  5c 22 7d 22 3a 7b 7d 7d  |62b25b28\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451088,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Jun  8 13:44:48.722: INFO: pod: "test-deployment-64fd565c98-sj7cc":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-sj7cc",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-3781",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1d1eec6e-afe7-4167-b7ee-2f2fa7fad52a",
      ResourceVersion: (string) (len=5) "35463",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853451085,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853451090,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "837c1114-1d33-4635-a2cd-9f48439414be",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  38 33 37 63 31 31 31 34  |uid\":\"837c1114|
              000000a0  2d 31 64 33 33 2d 34 36  33 35 2d 61 32 63 64 2d  |-1d33-4635-a2cd-|
              000000b0  39 66 34 38 34 33 39 34  31 34 62 65 5c 22 7d 22  |9f48439414be\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 31  2e 31 35 39 5c 22 7d 22  |2.168.81.159\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wrp2k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wrp2k",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-31-116",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.116",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.116"
        }
      },
      PodIP: (string) (len=14) "192.168.81.159",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.81.159"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853451085,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853451085,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://cdcff55035a3649e48b3199ac9298eea6f7204113a3e53fb2b8b71b3b1ea55fa",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jun  8 13:44:48.724: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3781",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "89a89dcb-0787-402d-95ab-c169199b7e7e",
      ResourceVersion: (string) (len=5) "35458",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853451086,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "55ba13ab-520d-4041-b3ea-a7a562b25b28",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 35 35 62 61  31 33 61 62 2d 35 32 30  |":\"55ba13ab-520|
              00000130  64 2d 34 30 34 31 2d 62  33 65 61 2d 61 37 61 35  |d-4041-b3ea-a7a5|
              00000140  36 32 62 32 35 62 32 38  5c 22 7d 22 3a 7b 7d 7d  |62b25b28\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451088,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=22) "test-deployment-static": (string) (len=4) "true",
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Jun  8 13:44:48.727: INFO: pod: "test-deployment-79ff746c4-n7d7j":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-n7d7j",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-3781",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "99233d03-198a-4b02-86f8-4d496a7904e1",
      ResourceVersion: (string) (len=5) "35457",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853451087,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "89a89dcb-0787-402d-95ab-c169199b7e7e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  38 39 61 38 39 64 63 62  |uid\":\"89a89dcb|
              000000a0  2d 30 37 38 37 2d 34 30  32 64 2d 39 35 61 62 2d  |-0787-402d-95ab-|
              000000b0  63 31 36 39 31 39 39 62  37 65 37 65 5c 22 7d 22  |c169199b7e7e\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451088,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 32  2e 31 33 31 5c 22 7d 22  |2.168.82.131\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bg896",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bg896",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-74-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451088,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451088,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451088,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.74.243",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.74.243"
        }
      },
      PodIP: (string) (len=14) "192.168.82.131",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.82.131"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853451087,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853451087,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6bcb72c414ef9d7d5acd2bcc713992ec80af8ebdb77035d4895490fd90463c69",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jun  8 13:44:48.729: INFO: pod: "test-deployment-79ff746c4-wcfz9":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-wcfz9",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-3781",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "78cecd0d-e1e3-4ed3-9814-5738e00de93c",
      ResourceVersion: (string) (len=5) "35414",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853451086,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "89a89dcb-0787-402d-95ab-c169199b7e7e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  38 39 61 38 39 64 63 62  |uid\":\"89a89dcb|
              000000a0  2d 30 37 38 37 2d 34 30  32 64 2d 39 35 61 62 2d  |-0787-402d-95ab-|
              000000b0  63 31 36 39 31 39 39 62  37 65 37 65 5c 22 7d 22  |c169199b7e7e\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 31  2e 31 36 30 5c 22 7d 22  |2.168.81.160\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dlrj6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dlrj6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-31-116",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451087,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.116",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.116"
        }
      },
      PodIP: (string) (len=14) "192.168.81.160",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.81.160"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853451086,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853451086,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://93955cf845a84d4d6c3343fdc8041bea6122cb1d659d3eecbd7ec00490e5e60b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jun  8 13:44:48.731: INFO: ReplicaSet "test-deployment-7fcc79b8c7":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-7fcc79b8c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3781",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a4b532b7-5095-4c15-881d-d2cf4a773e3d",
      ResourceVersion: (string) (len=5) "35363",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853451083,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "55ba13ab-520d-4041-b3ea-a7a562b25b28",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 35 35 62 61  31 33 61 62 2d 35 32 30  |":\"55ba13ab-520|
              00000130  64 2d 34 30 34 31 2d 62  33 65 61 2d 61 37 61 35  |d-4041-b3ea-a7a5|
              00000140  36 32 62 32 35 62 32 38  5c 22 7d 22 3a 7b 7d 7d  |62b25b28\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Jun  8 13:44:48.737: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3781" for this suite. @ 06/08/24 13:44:48.74
  E0608 13:44:48.742331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
• [5.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 06/08/24 13:44:48.749
  Jun  8 13:44:48.749: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename runtimeclass @ 06/08/24 13:44:48.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:44:48.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:44:48.77
  E0608 13:44:49.742663      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:44:50.742707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:44:50.797: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8755" for this suite. @ 06/08/24 13:44:50.8
• [2.056 seconds]
------------------------------
S
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 06/08/24 13:44:50.806
  Jun  8 13:44:50.806: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename init-container @ 06/08/24 13:44:50.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:44:50.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:44:50.823
  STEP: creating the pod @ 06/08/24 13:44:50.824
  Jun  8 13:44:50.824: INFO: PodSpec: initContainers in spec.initContainers
  E0608 13:44:51.743019      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:44:52.743131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:44:53.743211      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:44:54.146: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2641" for this suite. @ 06/08/24 13:44:54.149
• [3.348 seconds]
------------------------------
S
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 06/08/24 13:44:54.154
  Jun  8 13:44:54.154: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename events @ 06/08/24 13:44:54.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:44:54.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:44:54.177
  STEP: creating a test event @ 06/08/24 13:44:54.178
  STEP: listing events in all namespaces @ 06/08/24 13:44:54.185
  STEP: listing events in test namespace @ 06/08/24 13:44:54.188
  STEP: listing events with field selection filtering on source @ 06/08/24 13:44:54.19
  STEP: listing events with field selection filtering on reportingController @ 06/08/24 13:44:54.192
  STEP: getting the test event @ 06/08/24 13:44:54.194
  STEP: patching the test event @ 06/08/24 13:44:54.196
  STEP: getting the test event @ 06/08/24 13:44:54.202
  STEP: updating the test event @ 06/08/24 13:44:54.205
  STEP: getting the test event @ 06/08/24 13:44:54.21
  STEP: deleting the test event @ 06/08/24 13:44:54.212
  STEP: listing events in all namespaces @ 06/08/24 13:44:54.219
  STEP: listing events in test namespace @ 06/08/24 13:44:54.221
  Jun  8 13:44:54.223: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7724" for this suite. @ 06/08/24 13:44:54.225
• [0.075 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 06/08/24 13:44:54.229
  Jun  8 13:44:54.229: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename deployment @ 06/08/24 13:44:54.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:44:54.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:44:54.247
  Jun  8 13:44:54.249: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Jun  8 13:44:54.256: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0608 13:44:54.743568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:44:55.743679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:44:56.744108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:44:57.744970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:44:58.745075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:44:59.260: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/08/24 13:44:59.26
  Jun  8 13:44:59.260: INFO: Creating deployment "test-rolling-update-deployment"
  Jun  8 13:44:59.265: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Jun  8 13:44:59.269: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0608 13:44:59.745151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:00.745257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:45:01.276: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Jun  8 13:45:01.278: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Jun  8 13:45:01.285: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-176",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0a957830-3b27-4e7b-b1f6-1496548c37a6",
      ResourceVersion: (string) (len=5) "35730",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853451099,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-7ddb77f68b\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun  8 13:45:01.289: INFO: New ReplicaSet "test-rolling-update-deployment-7ddb77f68b" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-176",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "219ec1ba-4738-4ca7-985e-288b234c20e3",
      ResourceVersion: (string) (len=5) "35720",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853451099,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "0a957830-3b27-4e7b-b1f6-1496548c37a6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 61 39 35 37 38  33 30 2d 33 62 32 37 2d  |\"0a957830-3b27-|
              00000120  34 65 37 62 2d 62 31 66  36 2d 31 34 39 36 35 34  |4e7b-b1f6-149654|
              00000130  38 63 33 37 61 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8c37a6\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun  8 13:45:01.291: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Jun  8 13:45:01.291: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-176",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "52aa8638-f762-4d28-a66b-2995ef4292e0",
      ResourceVersion: (string) (len=5) "35729",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853451094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "0a957830-3b27-4e7b-b1f6-1496548c37a6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 30 61 39 35 37 38 33  |"uid\":\"0a95783|
              000000b0  30 2d 33 62 32 37 2d 34  65 37 62 2d 62 31 66 36  |0-3b27-4e7b-b1f6|
              000000c0  2d 31 34 39 36 35 34 38  63 33 37 61 36 5c 22 7d  |-1496548c37a6\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun  8 13:45:01.294: INFO: Pod "test-rolling-update-deployment-7ddb77f68b-vjqbm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-7ddb77f68b-vjqbm",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-7ddb77f68b-",
      Namespace: (string) (len=14) "deployment-176",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a927b1fe-935b-4c6a-b935-66d7a111eebf",
      ResourceVersion: (string) (len=5) "35719",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853451099,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
          UID: (types.UID) (len=36) "219ec1ba-4738-4ca7-985e-288b234c20e3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 31  39 65 63 31 62 61 2d 34  |d\":\"219ec1ba-4|
              00000090  37 33 38 2d 34 63 61 37  2d 39 38 35 65 2d 32 38  |738-4ca7-985e-28|
              000000a0  38 62 32 33 34 63 32 30  65 33 5c 22 7d 22 3a 7b  |8b234c20e3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 32  2e 31 33 30 5c 22 7d 22  |2.168.82.130\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mbpd9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mbpd9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-74-243",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.74.243",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.74.243"
        }
      },
      PodIP: (string) (len=14) "192.168.82.130",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.82.130"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853451099,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853451099,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://a4d1e93c0c0a8dbdf267c4f759d6f33cd167b47431088ed0cd2e315eb92ddd51",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:45:01.295: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-176" for this suite. @ 06/08/24 13:45:01.299
• [7.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 06/08/24 13:45:01.305
  Jun  8 13:45:01.305: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename cronjob @ 06/08/24 13:45:01.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:45:01.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:45:01.322
  STEP: Creating a ReplaceConcurrent cronjob @ 06/08/24 13:45:01.323
  STEP: Ensuring a job is scheduled @ 06/08/24 13:45:01.326
  E0608 13:45:01.745751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:02.745991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:03.747130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:04.747321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:05.748206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:06.748998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:07.749512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:08.749783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:09.750740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:10.751225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:11.751319      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:12.751519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:13.751715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:14.751825      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:15.752772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:16.753033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:17.753589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:18.753682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:19.754371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:20.754562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:21.754776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:22.754975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:23.756032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:24.756719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:25.757036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:26.757096      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:27.758121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:28.758322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:29.759352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:30.759483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:31.759618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:32.759712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:33.760697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:34.760887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:35.761771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:36.761863      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:37.761946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:38.762027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:39.762977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:40.763901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:41.763993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:42.764688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:43.764782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:44.764953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:45.765522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:46.766077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:47.766898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:48.766994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:49.767809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:50.767899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:51.768525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:52.768730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:53.769593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:54.769780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:55.770092      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:56.770413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:57.770502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:58.770678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:45:59.771331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:00.772014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 06/08/24 13:46:01.33
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 06/08/24 13:46:01.333
  STEP: Ensuring the job is replaced with a new one @ 06/08/24 13:46:01.335
  E0608 13:46:01.772014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:02.772929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:03.773267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:04.773437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:05.774291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:06.774845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:07.775214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:08.775332      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:09.775521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:10.775647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:11.776397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:12.776501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:13.776765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:14.776943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:15.777142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:16.777166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:17.778228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:18.778315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:19.778674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:20.778893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:21.779365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:22.779569      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:23.780232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:24.780690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:25.780938      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:26.781100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:27.782114      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:28.782179      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:29.782523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:30.783122      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:31.783159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:32.783352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:33.783647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:34.784698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:35.785362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:36.785841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:37.786110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:38.786285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:39.786519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:40.786550      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:41.787382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:42.787583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:43.788660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:44.788742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:45.789045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:46.789132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:47.789191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:48.789309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:49.789366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:50.789468      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:51.789764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:52.789941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:53.790040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:54.790504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:55.790954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:56.791487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:57.791617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:58.792690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:46:59.793721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:47:00.793810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 06/08/24 13:47:01.338
  Jun  8 13:47:01.344: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7573" for this suite. @ 06/08/24 13:47:01.349
• [120.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 06/08/24 13:47:01.355
  Jun  8 13:47:01.355: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename webhook @ 06/08/24 13:47:01.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:47:01.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:47:01.384
  STEP: Setting up server cert @ 06/08/24 13:47:01.404
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/08/24 13:47:01.672
  STEP: Deploying the webhook pod @ 06/08/24 13:47:01.679
  STEP: Wait for the deployment to be ready @ 06/08/24 13:47:01.689
  Jun  8 13:47:01.695: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0608 13:47:01.794059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:47:02.794173      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/08/24 13:47:03.706
  STEP: Verifying the service has paired with the endpoint @ 06/08/24 13:47:03.714
  E0608 13:47:03.794719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:47:04.715: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 06/08/24 13:47:04.722
  STEP: create a pod @ 06/08/24 13:47:04.732
  E0608 13:47:04.795053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:47:05.795210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 06/08/24 13:47:06.749
  Jun  8 13:47:06.749: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=webhook-6093 attach --namespace=webhook-6093 to-be-attached-pod -i -c=container1'
  E0608 13:47:06.795779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:47:06.798: INFO: rc: 1
  Jun  8 13:47:06.833: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6093" for this suite. @ 06/08/24 13:47:06.837
  STEP: Destroying namespace "webhook-markers-4865" for this suite. @ 06/08/24 13:47:06.843
• [5.494 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1863
  STEP: Creating a kubernetes client @ 06/08/24 13:47:06.849
  Jun  8 13:47:06.849: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename kubectl @ 06/08/24 13:47:06.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:47:06.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:47:06.864
  STEP: Starting the proxy @ 06/08/24 13:47:06.866
  Jun  8 13:47:06.866: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-9786 proxy --unix-socket=/tmp/kubectl-proxy-unix2617690429/test'
  STEP: retrieving proxy /api/ output @ 06/08/24 13:47:06.908
  Jun  8 13:47:06.908: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9786" for this suite. @ 06/08/24 13:47:06.911
• [0.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 06/08/24 13:47:06.917
  Jun  8 13:47:06.917: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename gc @ 06/08/24 13:47:06.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:47:06.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:47:06.937
  STEP: create the rc @ 06/08/24 13:47:06.941
  W0608 13:47:06.946329      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0608 13:47:07.796365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:47:08.798757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:47:09.799797      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:47:10.804316      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:47:11.811263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:47:12.811336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 06/08/24 13:47:12.949
  STEP: wait for the rc to be deleted @ 06/08/24 13:47:12.956
  E0608 13:47:13.811748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:47:13.968: INFO: 80 pods remaining
  Jun  8 13:47:13.968: INFO: 80 pods has nil DeletionTimestamp
  Jun  8 13:47:13.968: INFO: 
  E0608 13:47:14.823769      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:47:14.972: INFO: 71 pods remaining
  Jun  8 13:47:14.972: INFO: 70 pods has nil DeletionTimestamp
  Jun  8 13:47:14.972: INFO: 
  E0608 13:47:15.824654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:47:15.966: INFO: 60 pods remaining
  Jun  8 13:47:15.966: INFO: 60 pods has nil DeletionTimestamp
  Jun  8 13:47:15.966: INFO: 
  E0608 13:47:16.827643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:47:16.967: INFO: 40 pods remaining
  Jun  8 13:47:16.968: INFO: 40 pods has nil DeletionTimestamp
  Jun  8 13:47:16.968: INFO: 
  E0608 13:47:17.828707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:47:17.965: INFO: 31 pods remaining
  Jun  8 13:47:17.965: INFO: 30 pods has nil DeletionTimestamp
  Jun  8 13:47:17.965: INFO: 
  E0608 13:47:18.829780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:47:18.962: INFO: 20 pods remaining
  Jun  8 13:47:18.962: INFO: 20 pods has nil DeletionTimestamp
  Jun  8 13:47:18.962: INFO: 
  E0608 13:47:19.829879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 06/08/24 13:47:19.967
  W0608 13:47:19.977466      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jun  8 13:47:19.977: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun  8 13:47:19.978: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6362" for this suite. @ 06/08/24 13:47:19.984
• [13.072 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 06/08/24 13:47:19.99
  Jun  8 13:47:19.990: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename webhook @ 06/08/24 13:47:19.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:47:20.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:47:20.009
  STEP: Setting up server cert @ 06/08/24 13:47:20.028
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/08/24 13:47:20.19
  STEP: Deploying the webhook pod @ 06/08/24 13:47:20.195
  STEP: Wait for the deployment to be ready @ 06/08/24 13:47:20.204
  Jun  8 13:47:20.211: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0608 13:47:20.829974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:47:21.830076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/08/24 13:47:22.221
  STEP: Verifying the service has paired with the endpoint @ 06/08/24 13:47:22.232
  E0608 13:47:22.830170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:47:23.233: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun  8 13:47:23.241: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-1995-crds.webhook.example.com via the AdmissionRegistration API @ 06/08/24 13:47:23.751
  STEP: Creating a custom resource while v1 is storage version @ 06/08/24 13:47:23.763
  E0608 13:47:23.830285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:47:24.831189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 06/08/24 13:47:25.803
  STEP: Patching the custom resource while v2 is storage version @ 06/08/24 13:47:25.816
  E0608 13:47:25.831429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:47:26.388: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3264" for this suite. @ 06/08/24 13:47:26.391
  STEP: Destroying namespace "webhook-markers-6852" for this suite. @ 06/08/24 13:47:26.398
• [6.413 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 06/08/24 13:47:26.403
  Jun  8 13:47:26.403: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename replication-controller @ 06/08/24 13:47:26.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:47:26.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:47:26.422
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 06/08/24 13:47:26.424
  E0608 13:47:26.832186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:47:27.832271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 06/08/24 13:47:28.442
  STEP: Then the orphan pod is adopted @ 06/08/24 13:47:28.446
  E0608 13:47:28.833072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:47:29.452: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9786" for this suite. @ 06/08/24 13:47:29.455
• [3.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 06/08/24 13:47:29.462
  Jun  8 13:47:29.462: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename configmap @ 06/08/24 13:47:29.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:47:29.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:47:29.48
  STEP: Creating configMap with name configmap-test-upd-fc06e1d5-60a3-4db4-8208-067a44bf0b71 @ 06/08/24 13:47:29.484
  STEP: Creating the pod @ 06/08/24 13:47:29.487
  E0608 13:47:29.834129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:47:30.834339      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 06/08/24 13:47:31.501
  STEP: Waiting for pod with binary data @ 06/08/24 13:47:31.511
  Jun  8 13:47:31.516: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8539" for this suite. @ 06/08/24 13:47:31.519
• [2.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:572
  STEP: Creating a kubernetes client @ 06/08/24 13:47:31.528
  Jun  8 13:47:31.528: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename job @ 06/08/24 13:47:31.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:47:31.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:47:31.547
  STEP: Creating a job @ 06/08/24 13:47:31.55
  STEP: Ensuring job reaches completions @ 06/08/24 13:47:31.558
  E0608 13:47:31.834432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:47:32.834865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:47:33.835320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:47:34.838282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:47:35.839286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:47:36.840167      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:47:37.841218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:47:38.841305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:47:39.842061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:47:40.842210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:47:41.561: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6831" for this suite. @ 06/08/24 13:47:41.564
• [10.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:855
  STEP: Creating a kubernetes client @ 06/08/24 13:47:41.571
  Jun  8 13:47:41.571: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename job @ 06/08/24 13:47:41.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:47:41.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:47:41.589
  STEP: Creating a suspended job @ 06/08/24 13:47:41.594
  STEP: Patching the Job @ 06/08/24 13:47:41.6
  STEP: Watching for Job to be patched @ 06/08/24 13:47:41.612
  Jun  8 13:47:41.613: INFO: Event ADDED observed for Job e2e-txjsz in namespace job-6579 with labels: map[e2e-job-label:e2e-txjsz] and annotations: map[]
  Jun  8 13:47:41.613: INFO: Event MODIFIED observed for Job e2e-txjsz in namespace job-6579 with labels: map[e2e-job-label:e2e-txjsz] and annotations: map[]
  Jun  8 13:47:41.613: INFO: Event MODIFIED found for Job e2e-txjsz in namespace job-6579 with labels: map[e2e-job-label:e2e-txjsz e2e-txjsz:patched] and annotations: map[]
  STEP: Updating the job @ 06/08/24 13:47:41.613
  STEP: Watching for Job to be updated @ 06/08/24 13:47:41.62
  Jun  8 13:47:41.621: INFO: Event MODIFIED found for Job e2e-txjsz in namespace job-6579 with labels: map[e2e-job-label:e2e-txjsz e2e-txjsz:patched] and annotations: map[updated:true]
  Jun  8 13:47:41.621: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 06/08/24 13:47:41.621
  Jun  8 13:47:41.624: INFO: Job: e2e-txjsz as labels: map[e2e-job-label:e2e-txjsz e2e-txjsz:patched]
  STEP: Waiting for job to complete @ 06/08/24 13:47:41.624
  E0608 13:47:41.842750      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:47:42.842858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:47:43.843707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:47:44.843795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:47:45.844351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:47:46.844449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:47:47.845288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:47:48.845398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 06/08/24 13:47:49.627
  STEP: Watching for Job to be deleted @ 06/08/24 13:47:49.637
  Jun  8 13:47:49.638: INFO: Event MODIFIED observed for Job e2e-txjsz in namespace job-6579 with labels: map[e2e-job-label:e2e-txjsz e2e-txjsz:patched] and annotations: map[updated:true]
  Jun  8 13:47:49.638: INFO: Event MODIFIED observed for Job e2e-txjsz in namespace job-6579 with labels: map[e2e-job-label:e2e-txjsz e2e-txjsz:patched] and annotations: map[updated:true]
  Jun  8 13:47:49.638: INFO: Event MODIFIED observed for Job e2e-txjsz in namespace job-6579 with labels: map[e2e-job-label:e2e-txjsz e2e-txjsz:patched] and annotations: map[updated:true]
  Jun  8 13:47:49.638: INFO: Event MODIFIED observed for Job e2e-txjsz in namespace job-6579 with labels: map[e2e-job-label:e2e-txjsz e2e-txjsz:patched] and annotations: map[updated:true]
  Jun  8 13:47:49.638: INFO: Event MODIFIED observed for Job e2e-txjsz in namespace job-6579 with labels: map[e2e-job-label:e2e-txjsz e2e-txjsz:patched] and annotations: map[updated:true]
  Jun  8 13:47:49.638: INFO: Event MODIFIED observed for Job e2e-txjsz in namespace job-6579 with labels: map[e2e-job-label:e2e-txjsz e2e-txjsz:patched] and annotations: map[updated:true]
  Jun  8 13:47:49.638: INFO: Event MODIFIED observed for Job e2e-txjsz in namespace job-6579 with labels: map[e2e-job-label:e2e-txjsz e2e-txjsz:patched] and annotations: map[updated:true]
  Jun  8 13:47:49.638: INFO: Event MODIFIED observed for Job e2e-txjsz in namespace job-6579 with labels: map[e2e-job-label:e2e-txjsz e2e-txjsz:patched] and annotations: map[updated:true]
  Jun  8 13:47:49.638: INFO: Event MODIFIED observed for Job e2e-txjsz in namespace job-6579 with labels: map[e2e-job-label:e2e-txjsz e2e-txjsz:patched] and annotations: map[updated:true]
  Jun  8 13:47:49.638: INFO: Event DELETED found for Job e2e-txjsz in namespace job-6579 with labels: map[e2e-job-label:e2e-txjsz e2e-txjsz:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 06/08/24 13:47:49.638
  Jun  8 13:47:49.641: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6579" for this suite. @ 06/08/24 13:47:49.645
• [8.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 06/08/24 13:47:49.66
  Jun  8 13:47:49.660: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename dns @ 06/08/24 13:47:49.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:47:49.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:47:49.68
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 06/08/24 13:47:49.681
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 06/08/24 13:47:49.681
  STEP: creating a pod to probe DNS @ 06/08/24 13:47:49.681
  STEP: submitting the pod to kubernetes @ 06/08/24 13:47:49.682
  E0608 13:47:49.845830      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:47:50.845927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/08/24 13:47:51.696
  STEP: looking for the results for each expected name from probers @ 06/08/24 13:47:51.699
  Jun  8 13:47:51.712: INFO: DNS probes using dns-9152/dns-test-f3f65a35-2a4b-4eec-a39e-f2c69701f5bf succeeded

  STEP: deleting the pod @ 06/08/24 13:47:51.713
  Jun  8 13:47:51.724: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9152" for this suite. @ 06/08/24 13:47:51.727
• [2.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 06/08/24 13:47:51.733
  Jun  8 13:47:51.733: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename projected @ 06/08/24 13:47:51.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:47:51.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:47:51.751
  STEP: Creating a pod to test downward API volume plugin @ 06/08/24 13:47:51.752
  E0608 13:47:51.846874      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:47:52.847042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:47:53.847099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:47:54.847201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:47:55.768
  Jun  8 13:47:55.771: INFO: Trying to get logs from node ip-172-31-31-116 pod downwardapi-volume-fce1c8d7-f5a8-46cf-8f68-2196ba67d1ad container client-container: <nil>
  STEP: delete the pod @ 06/08/24 13:47:55.785
  Jun  8 13:47:55.799: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8586" for this suite. @ 06/08/24 13:47:55.801
• [4.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:332
  STEP: Creating a kubernetes client @ 06/08/24 13:47:55.807
  Jun  8 13:47:55.807: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename statefulset @ 06/08/24 13:47:55.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:47:55.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:47:55.823
  STEP: Creating service test in namespace statefulset-1613 @ 06/08/24 13:47:55.824
  STEP: Creating a new StatefulSet @ 06/08/24 13:47:55.828
  Jun  8 13:47:55.837: INFO: Found 0 stateful pods, waiting for 3
  E0608 13:47:55.847341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:47:56.847916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:47:57.848051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:47:58.848113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:47:59.848212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:00.848288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:01.849261      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:02.850057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:03.850256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:04.851268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:48:05.838: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun  8 13:48:05.838: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun  8 13:48:05.838: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 06/08/24 13:48:05.847
  E0608 13:48:05.851247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:48:05.865: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 06/08/24 13:48:05.865
  E0608 13:48:06.851473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:07.851643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:08.851735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:09.851951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:10.852716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:11.852819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:12.852917      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:13.852985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:14.853214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:15.853516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 06/08/24 13:48:15.873
  STEP: Performing a canary update @ 06/08/24 13:48:15.873
  Jun  8 13:48:15.892: INFO: Updating stateful set ss2
  Jun  8 13:48:15.896: INFO: Waiting for Pod statefulset-1613/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0608 13:48:16.854394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:17.854484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:18.854987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:19.855088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:20.855372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:21.855648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:22.855815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:23.855933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:24.856018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:25.856861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 06/08/24 13:48:25.9
  Jun  8 13:48:25.935: INFO: Found 1 stateful pods, waiting for 3
  E0608 13:48:26.857426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:27.857529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:28.857701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:29.857817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:30.857910      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:31.858002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:32.858125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:33.858237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:34.858322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:35.858444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:48:35.935: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun  8 13:48:35.935: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun  8 13:48:35.935: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 06/08/24 13:48:35.941
  Jun  8 13:48:35.958: INFO: Updating stateful set ss2
  Jun  8 13:48:35.963: INFO: Waiting for Pod statefulset-1613/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0608 13:48:36.859230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:37.859348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:38.859583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:39.859927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:40.859784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:41.860414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:42.860492      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:43.860706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:44.860799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:45.861116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:48:45.984: INFO: Updating stateful set ss2
  Jun  8 13:48:45.988: INFO: Waiting for StatefulSet statefulset-1613/ss2 to complete update
  Jun  8 13:48:45.989: INFO: Waiting for Pod statefulset-1613/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0608 13:48:46.861772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:47.861979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:48.862085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:49.862471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:50.863650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:51.864459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:52.864648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:53.864726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:54.864906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:55.865347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:48:55.993: INFO: Deleting all statefulset in ns statefulset-1613
  Jun  8 13:48:55.995: INFO: Scaling statefulset ss2 to 0
  E0608 13:48:56.866026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:57.866212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:58.866384      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:48:59.866895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:00.867081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:01.867200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:02.867293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:03.867379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:04.867730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:05.868124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:49:06.007: INFO: Waiting for statefulset status.replicas updated to 0
  Jun  8 13:49:06.009: INFO: Deleting statefulset ss2
  Jun  8 13:49:06.019: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1613" for this suite. @ 06/08/24 13:49:06.021
• [70.225 seconds]
------------------------------
SS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 06/08/24 13:49:06.032
  Jun  8 13:49:06.032: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename downward-api @ 06/08/24 13:49:06.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:49:06.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:49:06.052
  STEP: Creating a pod to test downward api env vars @ 06/08/24 13:49:06.054
  E0608 13:49:06.868210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:07.868822      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:08.869068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:09.869180      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:49:10.069
  Jun  8 13:49:10.072: INFO: Trying to get logs from node ip-172-31-31-116 pod downward-api-89d5520c-33ac-44d6-bd17-055139352c23 container dapi-container: <nil>
  STEP: delete the pod @ 06/08/24 13:49:10.077
  Jun  8 13:49:10.091: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9128" for this suite. @ 06/08/24 13:49:10.094
• [4.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 06/08/24 13:49:10.1
  Jun  8 13:49:10.100: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename resourcequota @ 06/08/24 13:49:10.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:49:10.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:49:10.116
  STEP: Creating a ResourceQuota with best effort scope @ 06/08/24 13:49:10.118
  STEP: Ensuring ResourceQuota status is calculated @ 06/08/24 13:49:10.122
  E0608 13:49:10.870227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:11.870312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 06/08/24 13:49:12.126
  STEP: Ensuring ResourceQuota status is calculated @ 06/08/24 13:49:12.131
  E0608 13:49:12.870782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:13.870892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 06/08/24 13:49:14.135
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 06/08/24 13:49:14.148
  E0608 13:49:14.871636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:15.872376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 06/08/24 13:49:16.151
  E0608 13:49:16.872446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:17.872566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 06/08/24 13:49:18.154
  STEP: Ensuring resource quota status released the pod usage @ 06/08/24 13:49:18.168
  E0608 13:49:18.872646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:19.872749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 06/08/24 13:49:20.172
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 06/08/24 13:49:20.182
  E0608 13:49:20.873360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:21.873461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 06/08/24 13:49:22.186
  E0608 13:49:22.873530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:23.873918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 06/08/24 13:49:24.19
  STEP: Ensuring resource quota status released the pod usage @ 06/08/24 13:49:24.204
  E0608 13:49:24.873976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:25.874798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:49:26.209: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6199" for this suite. @ 06/08/24 13:49:26.211
• [16.118 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 06/08/24 13:49:26.219
  Jun  8 13:49:26.219: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename security-context @ 06/08/24 13:49:26.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:49:26.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:49:26.237
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 06/08/24 13:49:26.238
  E0608 13:49:26.875645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:27.875744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:28.876509      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:29.876726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:49:30.254
  Jun  8 13:49:30.256: INFO: Trying to get logs from node ip-172-31-31-116 pod security-context-99c39390-7aa7-47d6-9781-a319f94b27af container test-container: <nil>
  STEP: delete the pod @ 06/08/24 13:49:30.262
  Jun  8 13:49:30.276: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-1574" for this suite. @ 06/08/24 13:49:30.279
• [4.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 06/08/24 13:49:30.285
  Jun  8 13:49:30.285: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename projected @ 06/08/24 13:49:30.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:49:30.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:49:30.302
  STEP: Creating configMap with name projected-configmap-test-volume-map-d4f6c982-0ee2-4925-b1ee-dd50b576da16 @ 06/08/24 13:49:30.303
  STEP: Creating a pod to test consume configMaps @ 06/08/24 13:49:30.307
  E0608 13:49:30.877236      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:31.878013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:32.878617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:33.878856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:49:34.323
  Jun  8 13:49:34.327: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-projected-configmaps-6af8398e-8a6f-4b4b-8078-705244f89cdd container agnhost-container: <nil>
  STEP: delete the pod @ 06/08/24 13:49:34.333
  Jun  8 13:49:34.344: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7174" for this suite. @ 06/08/24 13:49:34.347
• [4.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 06/08/24 13:49:34.353
  Jun  8 13:49:34.353: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename init-container @ 06/08/24 13:49:34.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:49:34.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:49:34.369
  STEP: creating the pod @ 06/08/24 13:49:34.371
  Jun  8 13:49:34.371: INFO: PodSpec: initContainers in spec.initContainers
  E0608 13:49:34.879057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:35.879925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:36.880704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:49:37.617: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-161" for this suite. @ 06/08/24 13:49:37.621
• [3.275 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 06/08/24 13:49:37.628
  Jun  8 13:49:37.628: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename projected @ 06/08/24 13:49:37.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:49:37.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:49:37.65
  STEP: Creating configMap with name projected-configmap-test-volume-fa93aede-bcdd-47b2-82c2-37eb28b38a6c @ 06/08/24 13:49:37.651
  STEP: Creating a pod to test consume configMaps @ 06/08/24 13:49:37.654
  E0608 13:49:37.880747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:38.880977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:49:39.666
  Jun  8 13:49:39.668: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-projected-configmaps-b02f94bb-f711-43b5-aec3-495719360761 container agnhost-container: <nil>
  STEP: delete the pod @ 06/08/24 13:49:39.674
  Jun  8 13:49:39.688: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2284" for this suite. @ 06/08/24 13:49:39.69
• [2.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 06/08/24 13:49:39.696
  Jun  8 13:49:39.696: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename daemonsets @ 06/08/24 13:49:39.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:49:39.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:49:39.713
  STEP: Creating simple DaemonSet "daemon-set" @ 06/08/24 13:49:39.73
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/08/24 13:49:39.733
  Jun  8 13:49:39.736: INFO: DaemonSet pods can't tolerate node ip-172-31-68-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:49:39.736: INFO: DaemonSet pods can't tolerate node ip-172-31-83-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:49:39.738: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  8 13:49:39.738: INFO: Node ip-172-31-31-116 is running 0 daemon pod, expected 1
  E0608 13:49:39.881098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:49:40.737: INFO: DaemonSet pods can't tolerate node ip-172-31-68-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:49:40.737: INFO: DaemonSet pods can't tolerate node ip-172-31-83-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:49:40.740: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun  8 13:49:40.740: INFO: Node ip-172-31-74-243 is running 0 daemon pod, expected 1
  E0608 13:49:40.881603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:49:41.739: INFO: DaemonSet pods can't tolerate node ip-172-31-68-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:49:41.739: INFO: DaemonSet pods can't tolerate node ip-172-31-83-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 13:49:41.742: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun  8 13:49:41.742: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 06/08/24 13:49:41.744
  STEP: DeleteCollection of the DaemonSets @ 06/08/24 13:49:41.747
  STEP: Verify that ReplicaSets have been deleted @ 06/08/24 13:49:41.754
  Jun  8 13:49:41.761: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"39982"},"items":null}

  Jun  8 13:49:41.764: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"39982"},"items":[{"metadata":{"name":"daemon-set-kml47","generateName":"daemon-set-","namespace":"daemonsets-2110","uid":"d6e57d41-c27d-4060-85e5-bcebab183e08","resourceVersion":"39974","creationTimestamp":"2024-06-08T13:49:39Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"6ba11136-8443-4ff1-ae11-9ed293d285c7","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-06-08T13:49:39Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6ba11136-8443-4ff1-ae11-9ed293d285c7\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-06-08T13:49:40Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.81.156\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-slkgf","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-slkgf","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-31-116","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-31-116"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-08T13:49:40Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-08T13:49:39Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-08T13:49:40Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-08T13:49:40Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-08T13:49:39Z"}],"hostIP":"172.31.31.116","hostIPs":[{"ip":"172.31.31.116"}],"podIP":"192.168.81.156","podIPs":[{"ip":"192.168.81.156"}],"startTime":"2024-06-08T13:49:39Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-06-08T13:49:40Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://d8b874be47985abcdf71223d78b6f7bf1368f78e2496568fc94892540f2266e9","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-nrvwg","generateName":"daemon-set-","namespace":"daemonsets-2110","uid":"77d047d2-6072-4d47-9cd1-2fd0c08ad355","resourceVersion":"39976","creationTimestamp":"2024-06-08T13:49:39Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"6ba11136-8443-4ff1-ae11-9ed293d285c7","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-06-08T13:49:39Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6ba11136-8443-4ff1-ae11-9ed293d285c7\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-06-08T13:49:40Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.165.26\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-gpt82","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-gpt82","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-42-99","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-42-99"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-08T13:49:40Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-08T13:49:39Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-08T13:49:40Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-08T13:49:40Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-08T13:49:39Z"}],"hostIP":"172.31.42.99","hostIPs":[{"ip":"172.31.42.99"}],"podIP":"192.168.165.26","podIPs":[{"ip":"192.168.165.26"}],"startTime":"2024-06-08T13:49:39Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-06-08T13:49:40Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://eb42f7abc0ff7669c55a5c11df65f0fc8326883270eedcc4efae0c043fddde45","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-plbnt","generateName":"daemon-set-","namespace":"daemonsets-2110","uid":"95f781ba-e96f-4d6e-9e93-9a5d30eac328","resourceVersion":"39978","creationTimestamp":"2024-06-08T13:49:39Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"6ba11136-8443-4ff1-ae11-9ed293d285c7","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-06-08T13:49:39Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6ba11136-8443-4ff1-ae11-9ed293d285c7\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-06-08T13:49:40Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.82.172\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-9gwsx","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-9gwsx","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-74-243","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-74-243"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-08T13:49:40Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-08T13:49:39Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-08T13:49:40Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-08T13:49:40Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-08T13:49:39Z"}],"hostIP":"172.31.74.243","hostIPs":[{"ip":"172.31.74.243"}],"podIP":"192.168.82.172","podIPs":[{"ip":"192.168.82.172"}],"startTime":"2024-06-08T13:49:39Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-06-08T13:49:40Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://90d1a199d53a3efb359409d93fef495a5dece652f324df1d3e36b6c8c834b758","started":true}],"qosClass":"BestEffort"}}]}

  Jun  8 13:49:41.786: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2110" for this suite. @ 06/08/24 13:49:41.788
• [2.097 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 06/08/24 13:49:41.793
  Jun  8 13:49:41.793: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename projected @ 06/08/24 13:49:41.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:49:41.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:49:41.81
  STEP: Creating projection with secret that has name projected-secret-test-map-7b1dbbb1-b872-4f08-a56f-cbd36c4105c4 @ 06/08/24 13:49:41.811
  STEP: Creating a pod to test consume secrets @ 06/08/24 13:49:41.816
  E0608 13:49:41.881845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:42.881996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:49:43.83
  Jun  8 13:49:43.832: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-projected-secrets-5e5bb075-d5d3-4af5-830f-ae67f7d170ca container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/08/24 13:49:43.838
  Jun  8 13:49:43.848: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6601" for this suite. @ 06/08/24 13:49:43.851
• [2.063 seconds]
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 06/08/24 13:49:43.856
  Jun  8 13:49:43.856: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename deployment @ 06/08/24 13:49:43.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:49:43.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:49:43.874
  E0608 13:49:43.882736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:49:43.884: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  E0608 13:49:44.882867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:45.883103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:46.883216      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:47.883356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:48.883520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:49:48.889: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/08/24 13:49:48.889
  Jun  8 13:49:48.889: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 06/08/24 13:49:48.898
  Jun  8 13:49:48.905: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6463",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "814bed74-089c-442d-bf6f-f1f9fb6d51d4",
      ResourceVersion: (string) (len=5) "40126",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853451388,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451388,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun  8 13:49:48.911: INFO: New ReplicaSet "test-cleanup-deployment-7bc75bbdf6" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-7bc75bbdf6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6463",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2744e2c8-db00-46e1-a054-c9119d052b01",
      ResourceVersion: (string) (len=5) "40129",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853451388,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "814bed74-089c-442d-bf6f-f1f9fb6d51d4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451388,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 31 34 62 65 64  37 34 2d 30 38 39 63 2d  |\"814bed74-089c-|
              00000120  34 34 32 64 2d 62 66 36  66 2d 66 31 66 39 66 62  |442d-bf6f-f1f9fb|
              00000130  36 64 35 31 64 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |6d51d4\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun  8 13:49:48.911: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Jun  8 13:49:48.912: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6463",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ffcf9073-73a1-47be-b12c-00b6714e8cdc",
      ResourceVersion: (string) (len=5) "40128",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853451383,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "814bed74-089c-442d-bf6f-f1f9fb6d51d4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451388,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 38 31 34 62 65 64 37  |"uid\":\"814bed7|
              00000040  34 2d 30 38 39 63 2d 34  34 32 64 2d 62 66 36 66  |4-089c-442d-bf6f|
              00000050  2d 66 31 66 39 66 62 36  64 35 31 64 34 5c 22 7d  |-f1f9fb6d51d4\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun  8 13:49:48.916: INFO: Pod "test-cleanup-controller-5s6kq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-5s6kq",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-6463",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b27dff41-71a8-48b3-907a-4cd3d01a0f6a",
      ResourceVersion: (string) (len=5) "40077",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853451383,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "ffcf9073-73a1-47be-b12c-00b6714e8cdc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  66 66 63 66 39 30 37 33  |uid\":\"ffcf9073|
              00000080  2d 37 33 61 31 2d 34 37  62 65 2d 62 31 32 63 2d  |-73a1-47be-b12c-|
              00000090  30 30 62 36 37 31 34 65  38 63 64 63 5c 22 7d 22  |00b6714e8cdc\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 31  2e 31 35 35 5c 22 7d 22  |2.168.81.155\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hjjj2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hjjj2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-31-116",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.116",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.116"
        }
      },
      PodIP: (string) (len=14) "192.168.81.155",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.81.155"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853451383,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853451384,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1fb30fc25c07d7b21e77aecbad665a6d2a304b11d1b6699a90c048cfc4642352",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:49:48.917: INFO: Pod "test-cleanup-deployment-7bc75bbdf6-2p96x" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-7bc75bbdf6-2p96x",
      GenerateName: (string) (len=35) "test-cleanup-deployment-7bc75bbdf6-",
      Namespace: (string) (len=15) "deployment-6463",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "845cf387-8efa-43c5-9cd4-f8cd3e85e565",
      ResourceVersion: (string) (len=5) "40131",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853451388,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-7bc75bbdf6",
          UID: (types.UID) (len=36) "2744e2c8-db00-46e1-a054-c9119d052b01",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451388,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 37  34 34 65 32 63 38 2d 64  |d\":\"2744e2c8-d|
              00000090  62 30 30 2d 34 36 65 31  2d 61 30 35 34 2d 63 39  |b00-46e1-a054-c9|
              000000a0  31 31 39 64 30 35 32 62  30 31 5c 22 7d 22 3a 7b  |119d052b01\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6r9kt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6r9kt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:49:48.918: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6463" for this suite. @ 06/08/24 13:49:48.92
• [5.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 06/08/24 13:49:48.931
  Jun  8 13:49:48.931: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename hostport @ 06/08/24 13:49:48.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:49:48.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:49:48.953
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 06/08/24 13:49:48.959
  E0608 13:49:49.883655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:50.884740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.42.99 on the node which pod1 resides and expect scheduled @ 06/08/24 13:49:50.972
  E0608 13:49:51.884754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:52.884846      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:53.884952      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:54.885030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:55.885340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:56.885387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:57.886439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:58.887068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:49:59.887167      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:50:00.887338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:50:01.888235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:50:02.888334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.42.99 but use UDP protocol on the node which pod2 resides @ 06/08/24 13:50:03.004
  E0608 13:50:03.888426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:50:04.888725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:50:05.888898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:50:06.888966      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 06/08/24 13:50:07.033
  Jun  8 13:50:07.033: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.42.99 http://127.0.0.1:54323/hostname] Namespace:hostport-9950 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  8 13:50:07.033: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  Jun  8 13:50:07.033: INFO: ExecWithOptions: Clientset creation
  Jun  8 13:50:07.033: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-9950/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.42.99+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.42.99, port: 54323 @ 06/08/24 13:50:07.085
  Jun  8 13:50:07.085: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.42.99:54323/hostname] Namespace:hostport-9950 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  8 13:50:07.085: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  Jun  8 13:50:07.086: INFO: ExecWithOptions: Clientset creation
  Jun  8 13:50:07.086: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-9950/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.42.99%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.42.99, port: 54323 UDP @ 06/08/24 13:50:07.129
  Jun  8 13:50:07.129: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.42.99 54323] Namespace:hostport-9950 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  8 13:50:07.129: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  Jun  8 13:50:07.129: INFO: ExecWithOptions: Clientset creation
  Jun  8 13:50:07.129: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-9950/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.42.99+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E0608 13:50:07.889081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:50:08.889173      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:50:09.889259      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:50:10.889396      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:50:11.889560      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:50:12.181: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-9950" for this suite. @ 06/08/24 13:50:12.185
• [23.260 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 06/08/24 13:50:12.192
  Jun  8 13:50:12.192: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename emptydir @ 06/08/24 13:50:12.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:50:12.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:50:12.211
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 06/08/24 13:50:12.212
  E0608 13:50:12.889715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:50:13.889961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:50:14.890049      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:50:15.890372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:50:16.23
  Jun  8 13:50:16.232: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-d0480d5e-cc31-4600-9f2e-121fa87f071d container test-container: <nil>
  STEP: delete the pod @ 06/08/24 13:50:16.237
  Jun  8 13:50:16.250: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1733" for this suite. @ 06/08/24 13:50:16.253
• [4.068 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 06/08/24 13:50:16.26
  Jun  8 13:50:16.260: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename container-probe @ 06/08/24 13:50:16.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:50:16.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:50:16.278
  STEP: Creating pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272 @ 06/08/24 13:50:16.28
  E0608 13:50:16.891303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:50:17.891912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/08/24 13:50:18.293
  Jun  8 13:50:18.296: INFO: Initial restart count of pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c is 0
  Jun  8 13:50:18.298: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:50:18.892737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:50:19.892835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:50:20.301: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:50:20.893356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:50:21.894249      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:50:22.306: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:50:22.895170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:50:23.895351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:50:24.310: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:50:24.896241      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:50:25.896310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:50:26.314: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:50:26.897329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:50:27.897438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:50:28.318: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:50:28.898209      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:50:29.898296      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:50:30.321: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:50:30.898394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:50:31.899279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:50:32.326: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:50:32.900088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:50:33.900726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:50:34.330: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:50:34.901720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:50:35.902337      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:50:36.334: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:50:36.902711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:50:37.903691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:50:38.338: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:50:38.903787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:50:39.904010      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:50:40.341: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:50:40.904114      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:50:41.904154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:50:42.346: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:50:42.904695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:50:43.905807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:50:44.350: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:50:44.906009      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:50:45.906842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:50:46.354: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:50:46.907469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:50:47.907654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:50:48.359: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:50:48.907737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:50:49.908747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:50:50.363: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:50:50.909266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:50:51.909539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:50:52.367: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:50:52.910416      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:50:53.910526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:50:54.372: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:50:54.910631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:50:55.911314      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:50:56.376: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:50:56.911981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:50:57.912175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:50:58.379: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:50:58.912265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:50:59.913150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:51:00.384: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:51:00.913244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:51:01.913864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:51:02.389: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:51:02.914621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:51:03.914723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:51:04.393: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:51:04.914987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:51:05.915902      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:51:06.397: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:51:06.916016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:51:07.916677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:51:08.402: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:51:08.917031      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:51:09.917123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:51:10.405: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:51:10.917642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:51:11.917673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:51:12.410: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:51:12.917990      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:51:13.918093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:51:14.414: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:51:14.919121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:51:15.919527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:51:16.419: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:51:16.919627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:51:17.920725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:51:18.422: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:51:18.921195      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:51:19.922174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:51:20.426: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:51:20.922901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:51:21.922989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:51:22.430: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:51:22.923428      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:51:23.923614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:51:24.434: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:51:24.923710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:51:25.924396      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:51:26.438: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:51:26.925012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:51:27.925434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:51:28.442: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:51:28.926348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:51:29.926524      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:51:30.446: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:51:30.927583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:51:31.928192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:51:32.452: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:51:32.928611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:51:33.928847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:51:34.455: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:51:34.929730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:51:35.930437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:51:36.459: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:51:36.930787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:51:37.930883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:51:38.462: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:51:38.931481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:51:39.931619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:51:40.466: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:51:40.932155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:51:41.932234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:51:42.470: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:51:42.933159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:51:43.933266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:51:44.474: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:51:44.934020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:51:45.934147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:51:46.479: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:51:46.934242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:51:47.934333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:51:48.482: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:51:48.935276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:51:49.935374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:51:50.486: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:51:50.935621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:51:51.935767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:51:52.490: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:51:52.936708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:51:53.936797      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:51:54.493: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:51:54.937316      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:51:55.937935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:51:56.498: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:51:56.938283      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:51:57.938488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:51:58.502: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:51:58.938738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:51:59.938927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:52:00.505: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:52:00.939131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:52:01.939250      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:52:02.510: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:52:02.940273      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:52:03.940365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:52:04.514: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:52:04.940996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:52:05.941970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:52:06.517: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:52:06.942312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:52:07.943241      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:52:08.521: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:52:08.943627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:52:09.943713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:52:10.525: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:52:10.944704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:52:11.944823      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:52:12.530: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:52:12.944938      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:52:13.945043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:52:14.534: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:52:14.945165      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:52:15.945945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:52:16.538: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:52:16.946046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:52:17.946982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:52:18.543: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:52:18.948025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:52:19.948124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:52:20.547: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:52:20.948616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:52:21.948729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:52:22.551: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:52:22.949119      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:52:23.949207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:52:24.555: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:52:24.950262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:52:25.950935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:52:26.559: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:52:26.951452      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:52:27.951621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:52:28.563: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:52:28.952698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:52:29.953853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:52:30.567: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:52:30.954098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:52:31.954252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:52:32.571: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:52:32.955309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:52:33.955529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:52:34.576: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:52:34.956597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:52:35.956943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:52:36.580: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:52:36.957408      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:52:37.957515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:52:38.584: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:52:38.958194      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:52:39.958488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:52:40.588: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:52:40.958469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:52:41.958533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:52:42.592: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:52:42.959394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:52:43.959671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:52:44.596: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:52:44.960247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:52:45.960934      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:52:46.601: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:52:46.961718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:52:47.961816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:52:48.604: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:52:48.962199      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:52:49.962293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:52:50.608: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:52:50.962349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:52:51.962695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:52:52.611: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:52:52.963071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:52:53.963897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:52:54.620: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:52:54.964690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:52:55.965096      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:52:56.628: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:52:56.965770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:52:57.965853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:52:58.631: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:52:58.966089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:52:59.966445      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:53:00.636: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:53:00.967539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:53:01.967624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:53:02.639: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:53:02.968213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:53:03.968308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:53:04.645: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:53:04.968436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:53:05.969455      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:53:06.648: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:53:06.970041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:53:07.970257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:53:08.652: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:53:08.970959      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:53:09.971057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:53:10.657: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:53:10.971761      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:53:11.972091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:53:12.661: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:53:12.973005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:53:13.973105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:53:14.665: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:53:14.973844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:53:15.974434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:53:16.670: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:53:16.974732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:53:17.974818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:53:18.674: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:53:18.975467      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:53:19.975637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:53:20.677: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:53:20.975910      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:53:21.976005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:53:22.682: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:53:22.976621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:53:23.976737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:53:24.685: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:53:24.977316      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:53:25.977400      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:53:26.690: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:53:26.977445      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:53:27.977540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:53:28.693: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:53:28.977857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:53:29.978546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:53:30.697: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:53:30.979127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:53:31.979292      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:53:32.703: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:53:32.979396      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:53:33.979632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:53:34.706: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:53:34.980264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:53:35.980942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:53:36.710: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:53:36.981079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:53:37.981174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:53:38.715: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:53:38.981276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:53:39.981355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:53:40.718: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:53:40.981625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:53:41.981956      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:53:42.721: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:53:42.982077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:53:43.982269      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:53:44.726: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:53:44.982451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:53:45.982873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:53:46.730: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:53:46.983227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:53:47.983412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:53:48.734: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:53:48.983509      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:53:49.983629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:53:50.737: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:53:50.983872      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:53:51.984190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:53:52.741: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:53:52.984685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:53:53.984863      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:53:54.745: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:53:54.985411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:53:55.986248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:53:56.749: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:53:56.987014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:53:57.987238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:53:58.753: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:53:58.987480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:53:59.987633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:54:00.757: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:54:00.988070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:01.988169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:54:02.761: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:54:02.988939      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:03.989167      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:54:04.764: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:54:04.989190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:05.990002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:54:06.768: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:54:06.990293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:07.990468      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:54:08.772: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:54:08.991371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:09.991484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:54:10.776: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:54:10.992012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:11.992287      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:54:12.780: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:54:12.992701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:13.993630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:54:14.785: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:54:14.993725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:15.994464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:54:16.789: INFO: Get pod liveness-0b5eacb3-b45f-49b5-9bd3-8b8b8c75a71c in namespace container-probe-6272
  E0608 13:54:16.994684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:17.995690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 06/08/24 13:54:18.789
  Jun  8 13:54:18.802: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6272" for this suite. @ 06/08/24 13:54:18.806
• [242.554 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 06/08/24 13:54:18.814
  Jun  8 13:54:18.814: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename emptydir @ 06/08/24 13:54:18.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:54:18.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:54:18.831
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 06/08/24 13:54:18.833
  E0608 13:54:18.996712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:19.996809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:20.996914      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:21.997005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:54:22.85
  Jun  8 13:54:22.852: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-47311cf2-11af-44d4-a24a-42f71581d4bc container test-container: <nil>
  STEP: delete the pod @ 06/08/24 13:54:22.867
  Jun  8 13:54:22.882: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9488" for this suite. @ 06/08/24 13:54:22.884
• [4.075 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 06/08/24 13:54:22.89
  Jun  8 13:54:22.890: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename replication-controller @ 06/08/24 13:54:22.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:54:22.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:54:22.907
  STEP: Creating replication controller my-hostname-basic-11f22db4-3cca-42b6-abfb-de09e785e566 @ 06/08/24 13:54:22.909
  Jun  8 13:54:22.915: INFO: Pod name my-hostname-basic-11f22db4-3cca-42b6-abfb-de09e785e566: Found 0 pods out of 1
  E0608 13:54:22.997192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:23.997323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:24.997430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:25.997481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:26.997576      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:54:27.919: INFO: Pod name my-hostname-basic-11f22db4-3cca-42b6-abfb-de09e785e566: Found 1 pods out of 1
  Jun  8 13:54:27.919: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-11f22db4-3cca-42b6-abfb-de09e785e566" are running
  Jun  8 13:54:27.922: INFO: Pod "my-hostname-basic-11f22db4-3cca-42b6-abfb-de09e785e566-j6xqs" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-08 13:54:23 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-08 13:54:22 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-08 13:54:23 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-08 13:54:23 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-08 13:54:22 +0000 UTC Reason: Message:}])
  Jun  8 13:54:27.922: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 06/08/24 13:54:27.922
  Jun  8 13:54:27.931: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2908" for this suite. @ 06/08/24 13:54:27.934
• [5.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 06/08/24 13:54:27.939
  Jun  8 13:54:27.939: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename gc @ 06/08/24 13:54:27.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:54:27.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:54:27.959
  STEP: create the rc @ 06/08/24 13:54:27.963
  W0608 13:54:27.969079      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0608 13:54:27.998286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:28.999742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:30.004736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:31.005965      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:32.006122      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:33.006308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 06/08/24 13:54:33.972
  STEP: wait for the rc to be deleted @ 06/08/24 13:54:33.977
  E0608 13:54:34.006963      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:35.007119      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:36.007993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:37.008268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:38.008482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 06/08/24 13:54:38.98
  E0608 13:54:39.009099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:40.009589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:41.009331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:42.009705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:43.009975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:44.010162      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:45.010574      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:46.011083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:47.011335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:48.011447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:49.011757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:50.011866      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:51.012196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:52.013171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:53.013258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:54.013423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:55.013572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:56.014490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:57.014590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:58.014770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:54:59.014954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:55:00.015051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:55:01.015244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:55:02.015519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:55:03.015783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:55:04.016694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:55:05.016790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:55:06.017192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:55:07.017290      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:55:08.017643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 06/08/24 13:55:08.989
  W0608 13:55:08.993305      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jun  8 13:55:08.993: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun  8 13:55:08.993: INFO: Deleting pod "simpletest.rc-25dl5" in namespace "gc-107"
  Jun  8 13:55:09.008: INFO: Deleting pod "simpletest.rc-25hvq" in namespace "gc-107"
  E0608 13:55:09.017782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:55:09.019: INFO: Deleting pod "simpletest.rc-2p7ks" in namespace "gc-107"
  Jun  8 13:55:09.028: INFO: Deleting pod "simpletest.rc-2wzvg" in namespace "gc-107"
  Jun  8 13:55:09.040: INFO: Deleting pod "simpletest.rc-4bs72" in namespace "gc-107"
  Jun  8 13:55:09.050: INFO: Deleting pod "simpletest.rc-4cbvj" in namespace "gc-107"
  Jun  8 13:55:09.060: INFO: Deleting pod "simpletest.rc-4kk2h" in namespace "gc-107"
  Jun  8 13:55:09.073: INFO: Deleting pod "simpletest.rc-4mkwx" in namespace "gc-107"
  Jun  8 13:55:09.082: INFO: Deleting pod "simpletest.rc-4nv5g" in namespace "gc-107"
  Jun  8 13:55:09.091: INFO: Deleting pod "simpletest.rc-4px9p" in namespace "gc-107"
  Jun  8 13:55:09.102: INFO: Deleting pod "simpletest.rc-4z9zm" in namespace "gc-107"
  Jun  8 13:55:09.113: INFO: Deleting pod "simpletest.rc-4zvkt" in namespace "gc-107"
  Jun  8 13:55:09.125: INFO: Deleting pod "simpletest.rc-562v5" in namespace "gc-107"
  Jun  8 13:55:09.135: INFO: Deleting pod "simpletest.rc-58xcl" in namespace "gc-107"
  Jun  8 13:55:09.146: INFO: Deleting pod "simpletest.rc-5hm5v" in namespace "gc-107"
  Jun  8 13:55:09.159: INFO: Deleting pod "simpletest.rc-5prr7" in namespace "gc-107"
  Jun  8 13:55:09.170: INFO: Deleting pod "simpletest.rc-5tfwj" in namespace "gc-107"
  Jun  8 13:55:09.181: INFO: Deleting pod "simpletest.rc-5wxw7" in namespace "gc-107"
  Jun  8 13:55:09.193: INFO: Deleting pod "simpletest.rc-5xctt" in namespace "gc-107"
  Jun  8 13:55:09.202: INFO: Deleting pod "simpletest.rc-6g822" in namespace "gc-107"
  Jun  8 13:55:09.216: INFO: Deleting pod "simpletest.rc-6hsfn" in namespace "gc-107"
  Jun  8 13:55:09.229: INFO: Deleting pod "simpletest.rc-6wjm4" in namespace "gc-107"
  Jun  8 13:55:09.237: INFO: Deleting pod "simpletest.rc-758gf" in namespace "gc-107"
  Jun  8 13:55:09.250: INFO: Deleting pod "simpletest.rc-7f4vt" in namespace "gc-107"
  Jun  8 13:55:09.260: INFO: Deleting pod "simpletest.rc-887j6" in namespace "gc-107"
  Jun  8 13:55:09.277: INFO: Deleting pod "simpletest.rc-8blbp" in namespace "gc-107"
  Jun  8 13:55:09.290: INFO: Deleting pod "simpletest.rc-8g8mv" in namespace "gc-107"
  Jun  8 13:55:09.302: INFO: Deleting pod "simpletest.rc-8h5jb" in namespace "gc-107"
  Jun  8 13:55:09.311: INFO: Deleting pod "simpletest.rc-8h79x" in namespace "gc-107"
  Jun  8 13:55:09.322: INFO: Deleting pod "simpletest.rc-8kcm9" in namespace "gc-107"
  Jun  8 13:55:09.333: INFO: Deleting pod "simpletest.rc-8txkr" in namespace "gc-107"
  Jun  8 13:55:09.344: INFO: Deleting pod "simpletest.rc-8zzql" in namespace "gc-107"
  Jun  8 13:55:09.355: INFO: Deleting pod "simpletest.rc-9brjx" in namespace "gc-107"
  Jun  8 13:55:09.369: INFO: Deleting pod "simpletest.rc-9s5bf" in namespace "gc-107"
  Jun  8 13:55:09.387: INFO: Deleting pod "simpletest.rc-b55tl" in namespace "gc-107"
  Jun  8 13:55:09.400: INFO: Deleting pod "simpletest.rc-b8j67" in namespace "gc-107"
  Jun  8 13:55:09.423: INFO: Deleting pod "simpletest.rc-bwtcf" in namespace "gc-107"
  Jun  8 13:55:09.433: INFO: Deleting pod "simpletest.rc-c7kq6" in namespace "gc-107"
  Jun  8 13:55:09.445: INFO: Deleting pod "simpletest.rc-cf8z8" in namespace "gc-107"
  Jun  8 13:55:09.461: INFO: Deleting pod "simpletest.rc-cgtrd" in namespace "gc-107"
  Jun  8 13:55:09.470: INFO: Deleting pod "simpletest.rc-ch5n9" in namespace "gc-107"
  Jun  8 13:55:09.496: INFO: Deleting pod "simpletest.rc-clzfv" in namespace "gc-107"
  Jun  8 13:55:09.506: INFO: Deleting pod "simpletest.rc-d7rql" in namespace "gc-107"
  Jun  8 13:55:09.527: INFO: Deleting pod "simpletest.rc-dgxqg" in namespace "gc-107"
  Jun  8 13:55:09.540: INFO: Deleting pod "simpletest.rc-dhs4g" in namespace "gc-107"
  Jun  8 13:55:09.550: INFO: Deleting pod "simpletest.rc-dzcgr" in namespace "gc-107"
  Jun  8 13:55:09.562: INFO: Deleting pod "simpletest.rc-f6rk4" in namespace "gc-107"
  Jun  8 13:55:09.573: INFO: Deleting pod "simpletest.rc-f8vfb" in namespace "gc-107"
  Jun  8 13:55:09.583: INFO: Deleting pod "simpletest.rc-fr7sr" in namespace "gc-107"
  Jun  8 13:55:09.598: INFO: Deleting pod "simpletest.rc-gn7bz" in namespace "gc-107"
  Jun  8 13:55:09.612: INFO: Deleting pod "simpletest.rc-h2qjt" in namespace "gc-107"
  Jun  8 13:55:09.625: INFO: Deleting pod "simpletest.rc-h7r2n" in namespace "gc-107"
  Jun  8 13:55:09.662: INFO: Deleting pod "simpletest.rc-hktmq" in namespace "gc-107"
  Jun  8 13:55:09.673: INFO: Deleting pod "simpletest.rc-htrv8" in namespace "gc-107"
  Jun  8 13:55:09.683: INFO: Deleting pod "simpletest.rc-j8wm8" in namespace "gc-107"
  Jun  8 13:55:09.694: INFO: Deleting pod "simpletest.rc-j92np" in namespace "gc-107"
  Jun  8 13:55:09.707: INFO: Deleting pod "simpletest.rc-jclvp" in namespace "gc-107"
  Jun  8 13:55:09.720: INFO: Deleting pod "simpletest.rc-jjkr9" in namespace "gc-107"
  Jun  8 13:55:09.730: INFO: Deleting pod "simpletest.rc-jktqn" in namespace "gc-107"
  Jun  8 13:55:09.740: INFO: Deleting pod "simpletest.rc-k2xx8" in namespace "gc-107"
  Jun  8 13:55:09.760: INFO: Deleting pod "simpletest.rc-kbcrb" in namespace "gc-107"
  Jun  8 13:55:09.770: INFO: Deleting pod "simpletest.rc-kbklj" in namespace "gc-107"
  Jun  8 13:55:09.784: INFO: Deleting pod "simpletest.rc-ktd8d" in namespace "gc-107"
  Jun  8 13:55:09.795: INFO: Deleting pod "simpletest.rc-kz5ft" in namespace "gc-107"
  Jun  8 13:55:09.812: INFO: Deleting pod "simpletest.rc-kzx22" in namespace "gc-107"
  Jun  8 13:55:09.842: INFO: Deleting pod "simpletest.rc-ldcvp" in namespace "gc-107"
  Jun  8 13:55:09.892: INFO: Deleting pod "simpletest.rc-lffm9" in namespace "gc-107"
  Jun  8 13:55:09.943: INFO: Deleting pod "simpletest.rc-m788m" in namespace "gc-107"
  Jun  8 13:55:09.997: INFO: Deleting pod "simpletest.rc-mb865" in namespace "gc-107"
  E0608 13:55:10.017978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:55:10.041: INFO: Deleting pod "simpletest.rc-mzdfc" in namespace "gc-107"
  Jun  8 13:55:10.096: INFO: Deleting pod "simpletest.rc-mzhvx" in namespace "gc-107"
  Jun  8 13:55:10.142: INFO: Deleting pod "simpletest.rc-n7wmm" in namespace "gc-107"
  Jun  8 13:55:10.193: INFO: Deleting pod "simpletest.rc-nknzc" in namespace "gc-107"
  Jun  8 13:55:10.240: INFO: Deleting pod "simpletest.rc-nmlw5" in namespace "gc-107"
  Jun  8 13:55:10.300: INFO: Deleting pod "simpletest.rc-nzdfl" in namespace "gc-107"
  Jun  8 13:55:10.345: INFO: Deleting pod "simpletest.rc-pmr9m" in namespace "gc-107"
  Jun  8 13:55:10.399: INFO: Deleting pod "simpletest.rc-pnwqp" in namespace "gc-107"
  Jun  8 13:55:10.442: INFO: Deleting pod "simpletest.rc-psbrb" in namespace "gc-107"
  Jun  8 13:55:10.520: INFO: Deleting pod "simpletest.rc-r766g" in namespace "gc-107"
  Jun  8 13:55:10.541: INFO: Deleting pod "simpletest.rc-r8ttk" in namespace "gc-107"
  Jun  8 13:55:10.594: INFO: Deleting pod "simpletest.rc-rc2gp" in namespace "gc-107"
  Jun  8 13:55:10.646: INFO: Deleting pod "simpletest.rc-rcrdk" in namespace "gc-107"
  Jun  8 13:55:10.704: INFO: Deleting pod "simpletest.rc-rzl6b" in namespace "gc-107"
  Jun  8 13:55:10.745: INFO: Deleting pod "simpletest.rc-s6z9g" in namespace "gc-107"
  Jun  8 13:55:10.796: INFO: Deleting pod "simpletest.rc-sftcl" in namespace "gc-107"
  Jun  8 13:55:10.848: INFO: Deleting pod "simpletest.rc-skqq4" in namespace "gc-107"
  Jun  8 13:55:10.895: INFO: Deleting pod "simpletest.rc-sp2zk" in namespace "gc-107"
  Jun  8 13:55:10.940: INFO: Deleting pod "simpletest.rc-v69mc" in namespace "gc-107"
  Jun  8 13:55:10.993: INFO: Deleting pod "simpletest.rc-vt2nz" in namespace "gc-107"
  E0608 13:55:11.018890      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:55:11.052: INFO: Deleting pod "simpletest.rc-vthrz" in namespace "gc-107"
  Jun  8 13:55:11.098: INFO: Deleting pod "simpletest.rc-wbg6s" in namespace "gc-107"
  Jun  8 13:55:11.147: INFO: Deleting pod "simpletest.rc-wcctz" in namespace "gc-107"
  Jun  8 13:55:11.194: INFO: Deleting pod "simpletest.rc-x56x9" in namespace "gc-107"
  Jun  8 13:55:11.266: INFO: Deleting pod "simpletest.rc-xbdhc" in namespace "gc-107"
  Jun  8 13:55:11.292: INFO: Deleting pod "simpletest.rc-xthjn" in namespace "gc-107"
  Jun  8 13:55:11.355: INFO: Deleting pod "simpletest.rc-xzbh2" in namespace "gc-107"
  Jun  8 13:55:11.391: INFO: Deleting pod "simpletest.rc-z694w" in namespace "gc-107"
  Jun  8 13:55:11.468: INFO: Deleting pod "simpletest.rc-z96mc" in namespace "gc-107"
  Jun  8 13:55:11.491: INFO: Deleting pod "simpletest.rc-zl948" in namespace "gc-107"
  Jun  8 13:55:11.545: INFO: Deleting pod "simpletest.rc-zscj4" in namespace "gc-107"
  Jun  8 13:55:11.599: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-107" for this suite. @ 06/08/24 13:55:11.637
• [43.753 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 06/08/24 13:55:11.693
  Jun  8 13:55:11.693: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename deployment @ 06/08/24 13:55:11.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:55:11.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:55:11.722
  STEP: creating a Deployment @ 06/08/24 13:55:11.726
  Jun  8 13:55:11.726: INFO: Creating simple deployment test-deployment-z67mj
  Jun  8 13:55:11.739: INFO: new replicaset for deployment "test-deployment-z67mj" is yet to be created
  E0608 13:55:12.019376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:55:13.019747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:55:13.748: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 8, 13, 55, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 8, 13, 55, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 8, 13, 55, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 8, 13, 55, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-deployment-z67mj-5d576bd769\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0608 13:55:14.019951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:55:15.020058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Getting /status @ 06/08/24 13:55:15.754
  Jun  8 13:55:15.757: INFO: Deployment test-deployment-z67mj has Conditions: [{Available True 2024-06-08 13:55:15 +0000 UTC 2024-06-08 13:55:15 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-06-08 13:55:15 +0000 UTC 2024-06-08 13:55:11 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-z67mj-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 06/08/24 13:55:15.757
  Jun  8 13:55:15.764: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 8, 13, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 8, 13, 55, 15, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 8, 13, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 8, 13, 55, 11, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-z67mj-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 06/08/24 13:55:15.765
  Jun  8 13:55:15.766: INFO: Observed &Deployment event: ADDED
  Jun  8 13:55:15.766: INFO: Observed Deployment test-deployment-z67mj in namespace deployment-8703 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-08 13:55:11 +0000 UTC 2024-06-08 13:55:11 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-z67mj-5d576bd769"}
  Jun  8 13:55:15.766: INFO: Observed &Deployment event: MODIFIED
  Jun  8 13:55:15.766: INFO: Observed Deployment test-deployment-z67mj in namespace deployment-8703 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-08 13:55:11 +0000 UTC 2024-06-08 13:55:11 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-z67mj-5d576bd769"}
  Jun  8 13:55:15.766: INFO: Observed Deployment test-deployment-z67mj in namespace deployment-8703 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-08 13:55:11 +0000 UTC 2024-06-08 13:55:11 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jun  8 13:55:15.766: INFO: Observed &Deployment event: MODIFIED
  Jun  8 13:55:15.766: INFO: Observed Deployment test-deployment-z67mj in namespace deployment-8703 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-08 13:55:11 +0000 UTC 2024-06-08 13:55:11 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jun  8 13:55:15.766: INFO: Observed Deployment test-deployment-z67mj in namespace deployment-8703 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-08 13:55:11 +0000 UTC 2024-06-08 13:55:11 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-z67mj-5d576bd769" is progressing.}
  Jun  8 13:55:15.766: INFO: Observed &Deployment event: MODIFIED
  Jun  8 13:55:15.766: INFO: Observed Deployment test-deployment-z67mj in namespace deployment-8703 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-08 13:55:15 +0000 UTC 2024-06-08 13:55:15 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jun  8 13:55:15.766: INFO: Observed Deployment test-deployment-z67mj in namespace deployment-8703 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-08 13:55:15 +0000 UTC 2024-06-08 13:55:11 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-z67mj-5d576bd769" has successfully progressed.}
  Jun  8 13:55:15.766: INFO: Observed &Deployment event: MODIFIED
  Jun  8 13:55:15.766: INFO: Observed Deployment test-deployment-z67mj in namespace deployment-8703 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-08 13:55:15 +0000 UTC 2024-06-08 13:55:15 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jun  8 13:55:15.766: INFO: Observed Deployment test-deployment-z67mj in namespace deployment-8703 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-08 13:55:15 +0000 UTC 2024-06-08 13:55:11 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-z67mj-5d576bd769" has successfully progressed.}
  Jun  8 13:55:15.766: INFO: Found Deployment test-deployment-z67mj in namespace deployment-8703 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun  8 13:55:15.766: INFO: Deployment test-deployment-z67mj has an updated status
  STEP: patching the Statefulset Status @ 06/08/24 13:55:15.766
  Jun  8 13:55:15.766: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jun  8 13:55:15.772: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 06/08/24 13:55:15.772
  Jun  8 13:55:15.773: INFO: Observed &Deployment event: ADDED
  Jun  8 13:55:15.773: INFO: Observed deployment test-deployment-z67mj in namespace deployment-8703 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-08 13:55:11 +0000 UTC 2024-06-08 13:55:11 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-z67mj-5d576bd769"}
  Jun  8 13:55:15.773: INFO: Observed &Deployment event: MODIFIED
  Jun  8 13:55:15.774: INFO: Observed deployment test-deployment-z67mj in namespace deployment-8703 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-08 13:55:11 +0000 UTC 2024-06-08 13:55:11 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-z67mj-5d576bd769"}
  Jun  8 13:55:15.774: INFO: Observed deployment test-deployment-z67mj in namespace deployment-8703 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-08 13:55:11 +0000 UTC 2024-06-08 13:55:11 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jun  8 13:55:15.774: INFO: Observed &Deployment event: MODIFIED
  Jun  8 13:55:15.774: INFO: Observed deployment test-deployment-z67mj in namespace deployment-8703 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-08 13:55:11 +0000 UTC 2024-06-08 13:55:11 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jun  8 13:55:15.774: INFO: Observed deployment test-deployment-z67mj in namespace deployment-8703 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-08 13:55:11 +0000 UTC 2024-06-08 13:55:11 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-z67mj-5d576bd769" is progressing.}
  Jun  8 13:55:15.774: INFO: Observed &Deployment event: MODIFIED
  Jun  8 13:55:15.774: INFO: Observed deployment test-deployment-z67mj in namespace deployment-8703 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-08 13:55:15 +0000 UTC 2024-06-08 13:55:15 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jun  8 13:55:15.774: INFO: Observed deployment test-deployment-z67mj in namespace deployment-8703 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-08 13:55:15 +0000 UTC 2024-06-08 13:55:11 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-z67mj-5d576bd769" has successfully progressed.}
  Jun  8 13:55:15.774: INFO: Observed &Deployment event: MODIFIED
  Jun  8 13:55:15.774: INFO: Observed deployment test-deployment-z67mj in namespace deployment-8703 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-08 13:55:15 +0000 UTC 2024-06-08 13:55:15 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jun  8 13:55:15.774: INFO: Observed deployment test-deployment-z67mj in namespace deployment-8703 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-08 13:55:15 +0000 UTC 2024-06-08 13:55:11 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-z67mj-5d576bd769" has successfully progressed.}
  Jun  8 13:55:15.774: INFO: Observed deployment test-deployment-z67mj in namespace deployment-8703 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun  8 13:55:15.774: INFO: Observed &Deployment event: MODIFIED
  Jun  8 13:55:15.774: INFO: Found deployment test-deployment-z67mj in namespace deployment-8703 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Jun  8 13:55:15.774: INFO: Deployment test-deployment-z67mj has a patched status
  Jun  8 13:55:15.777: INFO: Deployment "test-deployment-z67mj":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-z67mj",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8703",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f747e16f-813e-49c2-b759-13743b850afc",
      ResourceVersion: (string) (len=5) "42920",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853451711,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=224) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |ions":{},"f:obse|
              00000090  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              000000a0  7b 7d 2c 22 66 3a 72 65  61 64 79 52 65 70 6c 69  |{},"f:readyRepli|
              000000b0  63 61 73 22 3a 7b 7d 2c  22 66 3a 72 65 70 6c 69  |cas":{},"f:repli|
              000000c0  63 61 73 22 3a 7b 7d 2c  22 66 3a 75 70 64 61 74  |cas":{},"f:updat|
              000000d0  65 64 52 65 70 6c 69 63  61 73 22 3a 7b 7d 7d 7d  |edReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=1) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun  8 13:55:15.781: INFO: New ReplicaSet "test-deployment-z67mj-5d576bd769" of Deployment "test-deployment-z67mj":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-z67mj-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8703",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "72d2cd8f-7bf0-4be5-93e9-0b8b8acb7a13",
      ResourceVersion: (string) (len=5) "42916",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853451711,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-z67mj",
          UID: (types.UID) (len=36) "f747e16f-813e-49c2-b759-13743b850afc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 66 37 34  |k:{\"uid\":\"f74|
              00000120  37 65 31 36 66 2d 38 31  33 65 2d 34 39 63 32 2d  |7e16f-813e-49c2-|
              00000130  62 37 35 39 2d 31 33 37  34 33 62 38 35 30 61 66  |b759-13743b850af|
              00000140  63 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |c\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun  8 13:55:15.787: INFO: Pod "test-deployment-z67mj-5d576bd769-d4fvm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-z67mj-5d576bd769-d4fvm",
      GenerateName: (string) (len=33) "test-deployment-z67mj-5d576bd769-",
      Namespace: (string) (len=15) "deployment-8703",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4154633e-50f8-4d92-a512-3a92f4cf0ceb",
      ResourceVersion: (string) (len=5) "42915",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853451711,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-z67mj-5d576bd769",
          UID: (types.UID) (len=36) "72d2cd8f-7bf0-4be5-93e9-0b8b8acb7a13",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 37 32 64 32 63 64 38  66 2d 37 62 66 30 2d 34  |"72d2cd8f-7bf0-4|
              000000a0  62 65 35 2d 39 33 65 39  2d 30 62 38 62 38 61 63  |be5-93e9-0b8b8ac|
              000000b0  62 37 61 31 33 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |b7a13\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 38 31  2e 31 33 33 5c 22 7d 22  |2.168.81.133\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kwr9w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kwr9w",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-31-116",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853451711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.31.116",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.31.116"
        }
      },
      PodIP: (string) (len=14) "192.168.81.133",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.81.133"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853451711,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853451713,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7daf1a6fb10f04ff47fc8e327873d845813a2f026fd93198b50d4a72e99e4b7b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  8 13:55:15.789: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8703" for this suite. @ 06/08/24 13:55:15.791
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 06/08/24 13:55:15.796
  Jun  8 13:55:15.796: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename replication-controller @ 06/08/24 13:55:15.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:55:15.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:55:15.814
  STEP: Creating ReplicationController "e2e-rc-jjmzs" @ 06/08/24 13:55:15.815
  Jun  8 13:55:15.821: INFO: Get Replication Controller "e2e-rc-jjmzs" to confirm replicas
  E0608 13:55:16.020169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:55:16.821: INFO: Get Replication Controller "e2e-rc-jjmzs" to confirm replicas
  Jun  8 13:55:16.828: INFO: Found 1 replicas for "e2e-rc-jjmzs" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-jjmzs" @ 06/08/24 13:55:16.828
  STEP: Updating a scale subresource @ 06/08/24 13:55:16.831
  STEP: Verifying replicas where modified for replication controller "e2e-rc-jjmzs" @ 06/08/24 13:55:16.837
  Jun  8 13:55:16.837: INFO: Get Replication Controller "e2e-rc-jjmzs" to confirm replicas
  E0608 13:55:17.020634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:55:17.838: INFO: Get Replication Controller "e2e-rc-jjmzs" to confirm replicas
  Jun  8 13:55:17.841: INFO: Found 2 replicas for "e2e-rc-jjmzs" replication controller
  Jun  8 13:55:17.842: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4310" for this suite. @ 06/08/24 13:55:17.844
• [2.054 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 06/08/24 13:55:17.851
  Jun  8 13:55:17.851: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename services @ 06/08/24 13:55:17.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:55:17.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:55:17.876
  Jun  8 13:55:17.880: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6890" for this suite. @ 06/08/24 13:55:17.883
• [0.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 06/08/24 13:55:17.888
  Jun  8 13:55:17.888: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/08/24 13:55:17.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:55:17.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:55:17.903
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 06/08/24 13:55:17.904
  Jun  8 13:55:17.904: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  E0608 13:55:18.021677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:55:19.022205      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:55:20.022501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:55:21.022761      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:55:22.023180      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 06/08/24 13:55:22.78
  Jun  8 13:55:22.780: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  E0608 13:55:23.024024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:55:24.024142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:55:24.044: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  E0608 13:55:25.024722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:55:26.025611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:55:27.025979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:55:28.026095      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:55:28.880: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3154" for this suite. @ 06/08/24 13:55:28.885
• [11.003 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:470
  STEP: Creating a kubernetes client @ 06/08/24 13:55:28.891
  Jun  8 13:55:28.891: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename sched-pred @ 06/08/24 13:55:28.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:55:28.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:55:28.908
  Jun  8 13:55:28.910: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jun  8 13:55:28.915: INFO: Waiting for terminating namespaces to be deleted...
  Jun  8 13:55:28.917: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-31-116 before test
  Jun  8 13:55:28.921: INFO: nginx-ingress-controller-kubernetes-worker-6k9dl from ingress-nginx-kubernetes-worker started at 2024-06-08 13:02:26 +0000 UTC (1 container statuses recorded)
  Jun  8 13:55:28.921: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jun  8 13:55:28.921: INFO: calico-node-w2nxw from kube-system started at 2024-06-08 12:15:03 +0000 UTC (1 container statuses recorded)
  Jun  8 13:55:28.921: INFO: 	Container calico-node ready: true, restart count 0
  Jun  8 13:55:28.921: INFO: sonobuoy from sonobuoy started at 2024-06-08 12:18:05 +0000 UTC (1 container statuses recorded)
  Jun  8 13:55:28.921: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jun  8 13:55:28.921: INFO: sonobuoy-systemd-logs-daemon-set-2372ce3de819483f-qmcng from sonobuoy started at 2024-06-08 12:18:07 +0000 UTC (2 container statuses recorded)
  Jun  8 13:55:28.921: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  8 13:55:28.921: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun  8 13:55:28.921: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-42-99 before test
  Jun  8 13:55:28.926: INFO: nginx-ingress-controller-kubernetes-worker-9c5bq from ingress-nginx-kubernetes-worker started at 2024-06-08 12:12:03 +0000 UTC (1 container statuses recorded)
  Jun  8 13:55:28.926: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jun  8 13:55:28.926: INFO: calico-node-5rtlx from kube-system started at 2024-06-08 12:14:57 +0000 UTC (1 container statuses recorded)
  Jun  8 13:55:28.926: INFO: 	Container calico-node ready: true, restart count 0
  Jun  8 13:55:28.926: INFO: coredns-bddfd76d7-t89xt from kube-system started at 2024-06-08 12:12:03 +0000 UTC (1 container statuses recorded)
  Jun  8 13:55:28.926: INFO: 	Container coredns ready: true, restart count 0
  Jun  8 13:55:28.926: INFO: kube-state-metrics-6f48cdd76-9f275 from kube-system started at 2024-06-08 12:12:03 +0000 UTC (1 container statuses recorded)
  Jun  8 13:55:28.926: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Jun  8 13:55:28.926: INFO: metrics-server-v0.6.3-69d7fbfdf8-4grs5 from kube-system started at 2024-06-08 12:12:03 +0000 UTC (2 container statuses recorded)
  Jun  8 13:55:28.926: INFO: 	Container metrics-server ready: true, restart count 0
  Jun  8 13:55:28.926: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Jun  8 13:55:28.926: INFO: dashboard-metrics-scraper-5dd7cb5fc-z4qb8 from kubernetes-dashboard started at 2024-06-08 12:12:03 +0000 UTC (1 container statuses recorded)
  Jun  8 13:55:28.926: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Jun  8 13:55:28.926: INFO: kubernetes-dashboard-7b899cb9d9-ghnj4 from kubernetes-dashboard started at 2024-06-08 12:12:03 +0000 UTC (1 container statuses recorded)
  Jun  8 13:55:28.926: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Jun  8 13:55:28.926: INFO: sonobuoy-systemd-logs-daemon-set-2372ce3de819483f-trjkm from sonobuoy started at 2024-06-08 12:18:07 +0000 UTC (2 container statuses recorded)
  Jun  8 13:55:28.926: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  8 13:55:28.926: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun  8 13:55:28.926: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-74-243 before test
  Jun  8 13:55:28.929: INFO: nginx-ingress-controller-kubernetes-worker-rbvbn from ingress-nginx-kubernetes-worker started at 2024-06-08 12:13:50 +0000 UTC (1 container statuses recorded)
  Jun  8 13:55:28.929: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Jun  8 13:55:28.929: INFO: calico-node-5r27r from kube-system started at 2024-06-08 12:15:44 +0000 UTC (1 container statuses recorded)
  Jun  8 13:55:28.929: INFO: 	Container calico-node ready: true, restart count 0
  Jun  8 13:55:28.929: INFO: sonobuoy-e2e-job-06d012d91c064577 from sonobuoy started at 2024-06-08 12:18:07 +0000 UTC (2 container statuses recorded)
  Jun  8 13:55:28.929: INFO: 	Container e2e ready: true, restart count 0
  Jun  8 13:55:28.929: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  8 13:55:28.929: INFO: sonobuoy-systemd-logs-daemon-set-2372ce3de819483f-ftvnv from sonobuoy started at 2024-06-08 12:18:07 +0000 UTC (2 container statuses recorded)
  Jun  8 13:55:28.929: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  8 13:55:28.929: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 06/08/24 13:55:28.929
  E0608 13:55:29.026801      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:55:30.027051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 06/08/24 13:55:30.947
  STEP: Trying to apply a random label on the found node. @ 06/08/24 13:55:30.959
  STEP: verifying the node has the label kubernetes.io/e2e-48f95753-d528-4e76-b31e-d740af691a86 42 @ 06/08/24 13:55:30.967
  STEP: Trying to relaunch the pod, now with labels. @ 06/08/24 13:55:30.969
  E0608 13:55:31.027446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:55:32.027631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-48f95753-d528-4e76-b31e-d740af691a86 off the node ip-172-31-31-116 @ 06/08/24 13:55:32.984
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-48f95753-d528-4e76-b31e-d740af691a86 @ 06/08/24 13:55:32.994
  Jun  8 13:55:32.999: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-243" for this suite. @ 06/08/24 13:55:33.002
• [4.121 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 06/08/24 13:55:33.012
  Jun  8 13:55:33.012: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename csiinlinevolumes @ 06/08/24 13:55:33.013
  E0608 13:55:33.027723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:55:33.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:55:33.031
  STEP: creating @ 06/08/24 13:55:33.033
  STEP: getting @ 06/08/24 13:55:33.048
  STEP: listing in namespace @ 06/08/24 13:55:33.05
  STEP: patching @ 06/08/24 13:55:33.052
  STEP: deleting @ 06/08/24 13:55:33.062
  Jun  8 13:55:33.071: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-5304" for this suite. @ 06/08/24 13:55:33.073
• [0.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 06/08/24 13:55:33.079
  Jun  8 13:55:33.079: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename replicaset @ 06/08/24 13:55:33.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:55:33.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:55:33.095
  STEP: Create a Replicaset @ 06/08/24 13:55:33.099
  STEP: Verify that the required pods have come up. @ 06/08/24 13:55:33.105
  Jun  8 13:55:33.107: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0608 13:55:34.028742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:55:35.028906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:55:36.029230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:55:37.029334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:55:38.029603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:55:38.110: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/08/24 13:55:38.11
  STEP: Getting /status @ 06/08/24 13:55:38.11
  Jun  8 13:55:38.114: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 06/08/24 13:55:38.114
  Jun  8 13:55:38.121: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 06/08/24 13:55:38.122
  Jun  8 13:55:38.123: INFO: Observed &ReplicaSet event: ADDED
  Jun  8 13:55:38.123: INFO: Observed &ReplicaSet event: MODIFIED
  Jun  8 13:55:38.123: INFO: Observed &ReplicaSet event: MODIFIED
  Jun  8 13:55:38.123: INFO: Observed &ReplicaSet event: MODIFIED
  Jun  8 13:55:38.123: INFO: Found replicaset test-rs in namespace replicaset-3803 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jun  8 13:55:38.123: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 06/08/24 13:55:38.123
  Jun  8 13:55:38.123: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jun  8 13:55:38.127: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 06/08/24 13:55:38.127
  Jun  8 13:55:38.128: INFO: Observed &ReplicaSet event: ADDED
  Jun  8 13:55:38.128: INFO: Observed &ReplicaSet event: MODIFIED
  Jun  8 13:55:38.129: INFO: Observed &ReplicaSet event: MODIFIED
  Jun  8 13:55:38.129: INFO: Observed &ReplicaSet event: MODIFIED
  Jun  8 13:55:38.129: INFO: Observed replicaset test-rs in namespace replicaset-3803 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun  8 13:55:38.129: INFO: Observed &ReplicaSet event: MODIFIED
  Jun  8 13:55:38.129: INFO: Found replicaset test-rs in namespace replicaset-3803 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Jun  8 13:55:38.129: INFO: Replicaset test-rs has a patched status
  Jun  8 13:55:38.129: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3803" for this suite. @ 06/08/24 13:55:38.132
• [5.061 seconds]
------------------------------
SSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 06/08/24 13:55:38.14
  Jun  8 13:55:38.140: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename svc-latency @ 06/08/24 13:55:38.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:55:38.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:55:38.159
  Jun  8 13:55:38.161: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-4028 @ 06/08/24 13:55:38.162
  I0608 13:55:38.167476      19 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-4028, replica count: 1
  E0608 13:55:39.029768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0608 13:55:39.218337      19 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun  8 13:55:39.330: INFO: Created: latency-svc-dbbtj
  Jun  8 13:55:39.335: INFO: Got endpoints: latency-svc-dbbtj [16.312506ms]
  Jun  8 13:55:39.344: INFO: Created: latency-svc-2gf6w
  Jun  8 13:55:39.350: INFO: Got endpoints: latency-svc-2gf6w [14.129536ms]
  Jun  8 13:55:39.352: INFO: Created: latency-svc-nn24g
  Jun  8 13:55:39.354: INFO: Created: latency-svc-fhw6t
  Jun  8 13:55:39.363: INFO: Got endpoints: latency-svc-nn24g [28.076871ms]
  Jun  8 13:55:39.364: INFO: Created: latency-svc-jcf72
  Jun  8 13:55:39.366: INFO: Got endpoints: latency-svc-fhw6t [29.956175ms]
  Jun  8 13:55:39.369: INFO: Got endpoints: latency-svc-jcf72 [32.547861ms]
  Jun  8 13:55:39.375: INFO: Created: latency-svc-66rhs
  Jun  8 13:55:39.380: INFO: Got endpoints: latency-svc-66rhs [44.032861ms]
  Jun  8 13:55:39.382: INFO: Created: latency-svc-r4skn
  Jun  8 13:55:39.387: INFO: Got endpoints: latency-svc-r4skn [50.70597ms]
  Jun  8 13:55:39.390: INFO: Created: latency-svc-bv8dr
  Jun  8 13:55:39.396: INFO: Got endpoints: latency-svc-bv8dr [59.881693ms]
  Jun  8 13:55:39.397: INFO: Created: latency-svc-ld67m
  Jun  8 13:55:39.400: INFO: Created: latency-svc-k8zs2
  Jun  8 13:55:39.401: INFO: Got endpoints: latency-svc-ld67m [64.74213ms]
  Jun  8 13:55:39.406: INFO: Got endpoints: latency-svc-k8zs2 [69.929388ms]
  Jun  8 13:55:39.407: INFO: Created: latency-svc-f68wj
  Jun  8 13:55:39.412: INFO: Got endpoints: latency-svc-f68wj [75.917449ms]
  Jun  8 13:55:39.416: INFO: Created: latency-svc-2sqm2
  Jun  8 13:55:39.420: INFO: Got endpoints: latency-svc-2sqm2 [83.585571ms]
  Jun  8 13:55:39.422: INFO: Created: latency-svc-bd6jw
  Jun  8 13:55:39.426: INFO: Got endpoints: latency-svc-bd6jw [89.990161ms]
  Jun  8 13:55:39.430: INFO: Created: latency-svc-cw5xl
  Jun  8 13:55:39.433: INFO: Got endpoints: latency-svc-cw5xl [97.055268ms]
  Jun  8 13:55:39.438: INFO: Created: latency-svc-nkfhg
  Jun  8 13:55:39.441: INFO: Created: latency-svc-qj5wl
  Jun  8 13:55:39.441: INFO: Got endpoints: latency-svc-nkfhg [104.854385ms]
  Jun  8 13:55:39.445: INFO: Got endpoints: latency-svc-qj5wl [109.234579ms]
  Jun  8 13:55:39.449: INFO: Created: latency-svc-z48n2
  Jun  8 13:55:39.454: INFO: Got endpoints: latency-svc-z48n2 [103.393617ms]
  Jun  8 13:55:39.463: INFO: Created: latency-svc-jg84f
  Jun  8 13:55:39.468: INFO: Got endpoints: latency-svc-jg84f [103.98866ms]
  Jun  8 13:55:39.469: INFO: Created: latency-svc-k92r5
  Jun  8 13:55:39.474: INFO: Created: latency-svc-r9jcw
  Jun  8 13:55:39.475: INFO: Got endpoints: latency-svc-k92r5 [108.874444ms]
  Jun  8 13:55:39.480: INFO: Got endpoints: latency-svc-r9jcw [111.175642ms]
  Jun  8 13:55:39.487: INFO: Created: latency-svc-gqrpz
  Jun  8 13:55:39.489: INFO: Got endpoints: latency-svc-gqrpz [109.175289ms]
  Jun  8 13:55:39.491: INFO: Created: latency-svc-nhbjz
  Jun  8 13:55:39.494: INFO: Created: latency-svc-627lk
  Jun  8 13:55:39.498: INFO: Got endpoints: latency-svc-nhbjz [111.395829ms]
  Jun  8 13:55:39.501: INFO: Got endpoints: latency-svc-627lk [105.168144ms]
  Jun  8 13:55:39.505: INFO: Created: latency-svc-5dwtd
  Jun  8 13:55:39.509: INFO: Created: latency-svc-nbqjt
  Jun  8 13:55:39.509: INFO: Got endpoints: latency-svc-5dwtd [108.17638ms]
  Jun  8 13:55:39.516: INFO: Created: latency-svc-dz6rr
  Jun  8 13:55:39.517: INFO: Got endpoints: latency-svc-nbqjt [110.615092ms]
  Jun  8 13:55:39.521: INFO: Created: latency-svc-gq24t
  Jun  8 13:55:39.527: INFO: Created: latency-svc-cjsj7
  Jun  8 13:55:39.530: INFO: Got endpoints: latency-svc-dz6rr [117.55031ms]
  Jun  8 13:55:39.530: INFO: Got endpoints: latency-svc-gq24t [110.075418ms]
  Jun  8 13:55:39.532: INFO: Got endpoints: latency-svc-cjsj7 [105.691677ms]
  Jun  8 13:55:39.535: INFO: Created: latency-svc-vhjp6
  Jun  8 13:55:39.540: INFO: Got endpoints: latency-svc-vhjp6 [106.356515ms]
  Jun  8 13:55:39.543: INFO: Created: latency-svc-l22s6
  Jun  8 13:55:39.546: INFO: Got endpoints: latency-svc-l22s6 [104.905666ms]
  Jun  8 13:55:39.548: INFO: Created: latency-svc-sbxsm
  Jun  8 13:55:39.552: INFO: Got endpoints: latency-svc-sbxsm [106.219801ms]
  Jun  8 13:55:39.556: INFO: Created: latency-svc-24kcz
  Jun  8 13:55:39.562: INFO: Got endpoints: latency-svc-24kcz [108.145838ms]
  Jun  8 13:55:39.565: INFO: Created: latency-svc-cxnfr
  Jun  8 13:55:39.567: INFO: Created: latency-svc-2x54f
  Jun  8 13:55:39.568: INFO: Got endpoints: latency-svc-cxnfr [100.632315ms]
  Jun  8 13:55:39.573: INFO: Got endpoints: latency-svc-2x54f [98.00251ms]
  Jun  8 13:55:39.577: INFO: Created: latency-svc-g2244
  Jun  8 13:55:39.584: INFO: Got endpoints: latency-svc-g2244 [103.659367ms]
  Jun  8 13:55:39.585: INFO: Created: latency-svc-gbcxq
  Jun  8 13:55:39.591: INFO: Created: latency-svc-fm68d
  Jun  8 13:55:39.596: INFO: Created: latency-svc-f9mwg
  Jun  8 13:55:39.603: INFO: Created: latency-svc-nw9fq
  Jun  8 13:55:39.607: INFO: Created: latency-svc-clrps
  Jun  8 13:55:39.612: INFO: Created: latency-svc-8wq7b
  Jun  8 13:55:39.618: INFO: Created: latency-svc-vtf7n
  Jun  8 13:55:39.623: INFO: Created: latency-svc-c8lqz
  Jun  8 13:55:39.629: INFO: Created: latency-svc-2crwc
  Jun  8 13:55:39.634: INFO: Created: latency-svc-fvlg2
  Jun  8 13:55:39.636: INFO: Got endpoints: latency-svc-gbcxq [146.404722ms]
  Jun  8 13:55:39.641: INFO: Created: latency-svc-hzbst
  Jun  8 13:55:39.661: INFO: Created: latency-svc-zwr6s
  Jun  8 13:55:39.665: INFO: Created: latency-svc-jlcv4
  Jun  8 13:55:39.665: INFO: Created: latency-svc-4hd82
  Jun  8 13:55:39.666: INFO: Created: latency-svc-4tzgq
  Jun  8 13:55:39.666: INFO: Created: latency-svc-dd58q
  Jun  8 13:55:39.684: INFO: Got endpoints: latency-svc-fm68d [185.316516ms]
  Jun  8 13:55:39.691: INFO: Created: latency-svc-c27xk
  Jun  8 13:55:39.735: INFO: Got endpoints: latency-svc-f9mwg [233.165321ms]
  Jun  8 13:55:39.742: INFO: Created: latency-svc-4b84j
  Jun  8 13:55:39.783: INFO: Got endpoints: latency-svc-nw9fq [273.360671ms]
  Jun  8 13:55:39.792: INFO: Created: latency-svc-rvsb5
  Jun  8 13:55:39.833: INFO: Got endpoints: latency-svc-clrps [316.139613ms]
  Jun  8 13:55:39.842: INFO: Created: latency-svc-zks8b
  Jun  8 13:55:39.882: INFO: Got endpoints: latency-svc-8wq7b [352.112412ms]
  Jun  8 13:55:39.890: INFO: Created: latency-svc-n55x7
  Jun  8 13:55:39.934: INFO: Got endpoints: latency-svc-vtf7n [403.951415ms]
  Jun  8 13:55:39.943: INFO: Created: latency-svc-zgjv6
  Jun  8 13:55:39.983: INFO: Got endpoints: latency-svc-c8lqz [450.840569ms]
  Jun  8 13:55:39.990: INFO: Created: latency-svc-8gzm9
  E0608 13:55:40.029884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:55:40.035: INFO: Got endpoints: latency-svc-2crwc [495.029229ms]
  Jun  8 13:55:40.045: INFO: Created: latency-svc-2k9zb
  Jun  8 13:55:40.082: INFO: Got endpoints: latency-svc-fvlg2 [535.539562ms]
  Jun  8 13:55:40.091: INFO: Created: latency-svc-zkxpj
  Jun  8 13:55:40.133: INFO: Got endpoints: latency-svc-hzbst [581.181856ms]
  Jun  8 13:55:40.142: INFO: Created: latency-svc-hwnwg
  Jun  8 13:55:40.182: INFO: Got endpoints: latency-svc-zwr6s [598.630914ms]
  Jun  8 13:55:40.190: INFO: Created: latency-svc-7hlrb
  Jun  8 13:55:40.235: INFO: Got endpoints: latency-svc-4hd82 [598.907195ms]
  Jun  8 13:55:40.243: INFO: Created: latency-svc-m6wth
  Jun  8 13:55:40.284: INFO: Got endpoints: latency-svc-jlcv4 [721.711859ms]
  Jun  8 13:55:40.291: INFO: Created: latency-svc-x9gs6
  Jun  8 13:55:40.334: INFO: Got endpoints: latency-svc-dd58q [761.305097ms]
  Jun  8 13:55:40.343: INFO: Created: latency-svc-xjhq8
  Jun  8 13:55:40.381: INFO: Got endpoints: latency-svc-4tzgq [813.158725ms]
  Jun  8 13:55:40.391: INFO: Created: latency-svc-c9mkn
  Jun  8 13:55:40.433: INFO: Got endpoints: latency-svc-c27xk [749.122726ms]
  Jun  8 13:55:40.442: INFO: Created: latency-svc-j96ns
  Jun  8 13:55:40.484: INFO: Got endpoints: latency-svc-4b84j [749.32833ms]
  Jun  8 13:55:40.491: INFO: Created: latency-svc-vf6nv
  Jun  8 13:55:40.534: INFO: Got endpoints: latency-svc-rvsb5 [751.715516ms]
  Jun  8 13:55:40.543: INFO: Created: latency-svc-tnbx4
  Jun  8 13:55:40.586: INFO: Got endpoints: latency-svc-zks8b [752.780806ms]
  Jun  8 13:55:40.593: INFO: Created: latency-svc-sqzsd
  Jun  8 13:55:40.632: INFO: Got endpoints: latency-svc-n55x7 [750.052175ms]
  Jun  8 13:55:40.642: INFO: Created: latency-svc-fspm5
  Jun  8 13:55:40.683: INFO: Got endpoints: latency-svc-zgjv6 [748.738422ms]
  Jun  8 13:55:40.692: INFO: Created: latency-svc-585mj
  Jun  8 13:55:40.735: INFO: Got endpoints: latency-svc-8gzm9 [752.519799ms]
  Jun  8 13:55:40.743: INFO: Created: latency-svc-hn9xt
  Jun  8 13:55:40.784: INFO: Got endpoints: latency-svc-2k9zb [749.304938ms]
  Jun  8 13:55:40.792: INFO: Created: latency-svc-wq9xt
  Jun  8 13:55:40.832: INFO: Got endpoints: latency-svc-zkxpj [750.148827ms]
  Jun  8 13:55:40.843: INFO: Created: latency-svc-ssg7d
  Jun  8 13:55:40.882: INFO: Got endpoints: latency-svc-hwnwg [748.474587ms]
  Jun  8 13:55:40.890: INFO: Created: latency-svc-2jl7x
  Jun  8 13:55:40.933: INFO: Got endpoints: latency-svc-7hlrb [750.469023ms]
  Jun  8 13:55:40.942: INFO: Created: latency-svc-qqj2m
  Jun  8 13:55:40.982: INFO: Got endpoints: latency-svc-m6wth [746.760391ms]
  Jun  8 13:55:40.991: INFO: Created: latency-svc-sdfkp
  E0608 13:55:41.029954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:55:41.033: INFO: Got endpoints: latency-svc-x9gs6 [749.761422ms]
  Jun  8 13:55:41.041: INFO: Created: latency-svc-qfdvx
  Jun  8 13:55:41.085: INFO: Got endpoints: latency-svc-xjhq8 [750.887499ms]
  Jun  8 13:55:41.093: INFO: Created: latency-svc-m784n
  Jun  8 13:55:41.133: INFO: Got endpoints: latency-svc-c9mkn [751.602632ms]
  Jun  8 13:55:41.144: INFO: Created: latency-svc-r5m28
  Jun  8 13:55:41.184: INFO: Got endpoints: latency-svc-j96ns [750.241453ms]
  Jun  8 13:55:41.193: INFO: Created: latency-svc-dn8m7
  Jun  8 13:55:41.232: INFO: Got endpoints: latency-svc-vf6nv [748.253721ms]
  Jun  8 13:55:41.240: INFO: Created: latency-svc-6fgf4
  Jun  8 13:55:41.285: INFO: Got endpoints: latency-svc-tnbx4 [749.741907ms]
  Jun  8 13:55:41.293: INFO: Created: latency-svc-w62lp
  Jun  8 13:55:41.335: INFO: Got endpoints: latency-svc-sqzsd [748.966328ms]
  Jun  8 13:55:41.344: INFO: Created: latency-svc-s6rqs
  Jun  8 13:55:41.382: INFO: Got endpoints: latency-svc-fspm5 [749.350141ms]
  Jun  8 13:55:41.391: INFO: Created: latency-svc-f7rjr
  Jun  8 13:55:41.433: INFO: Got endpoints: latency-svc-585mj [750.24615ms]
  Jun  8 13:55:41.442: INFO: Created: latency-svc-s98tx
  Jun  8 13:55:41.483: INFO: Got endpoints: latency-svc-hn9xt [747.979274ms]
  Jun  8 13:55:41.490: INFO: Created: latency-svc-zlr2m
  Jun  8 13:55:41.538: INFO: Got endpoints: latency-svc-wq9xt [753.432165ms]
  Jun  8 13:55:41.545: INFO: Created: latency-svc-mbbvf
  Jun  8 13:55:41.585: INFO: Got endpoints: latency-svc-ssg7d [752.624785ms]
  Jun  8 13:55:41.593: INFO: Created: latency-svc-sx9nz
  Jun  8 13:55:41.633: INFO: Got endpoints: latency-svc-2jl7x [751.128541ms]
  Jun  8 13:55:41.641: INFO: Created: latency-svc-jn789
  Jun  8 13:55:41.682: INFO: Got endpoints: latency-svc-qqj2m [749.472098ms]
  Jun  8 13:55:41.692: INFO: Created: latency-svc-czrq8
  Jun  8 13:55:41.735: INFO: Got endpoints: latency-svc-sdfkp [752.676692ms]
  Jun  8 13:55:41.744: INFO: Created: latency-svc-hh5kq
  Jun  8 13:55:41.784: INFO: Got endpoints: latency-svc-qfdvx [750.717084ms]
  Jun  8 13:55:41.791: INFO: Created: latency-svc-jqsvd
  Jun  8 13:55:41.834: INFO: Got endpoints: latency-svc-m784n [748.631749ms]
  Jun  8 13:55:41.842: INFO: Created: latency-svc-fphkf
  Jun  8 13:55:41.882: INFO: Got endpoints: latency-svc-r5m28 [748.426318ms]
  Jun  8 13:55:41.893: INFO: Created: latency-svc-65s96
  Jun  8 13:55:41.933: INFO: Got endpoints: latency-svc-dn8m7 [749.219107ms]
  Jun  8 13:55:41.940: INFO: Created: latency-svc-7gr4v
  Jun  8 13:55:41.984: INFO: Got endpoints: latency-svc-6fgf4 [751.672576ms]
  Jun  8 13:55:41.993: INFO: Created: latency-svc-7dbmz
  E0608 13:55:42.030827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:55:42.035: INFO: Got endpoints: latency-svc-w62lp [750.370778ms]
  Jun  8 13:55:42.043: INFO: Created: latency-svc-mw6x9
  Jun  8 13:55:42.084: INFO: Got endpoints: latency-svc-s6rqs [748.975583ms]
  Jun  8 13:55:42.092: INFO: Created: latency-svc-ngg9x
  Jun  8 13:55:42.132: INFO: Got endpoints: latency-svc-f7rjr [750.181752ms]
  Jun  8 13:55:42.141: INFO: Created: latency-svc-xlqs9
  Jun  8 13:55:42.182: INFO: Got endpoints: latency-svc-s98tx [748.82989ms]
  Jun  8 13:55:42.192: INFO: Created: latency-svc-h8gnp
  Jun  8 13:55:42.232: INFO: Got endpoints: latency-svc-zlr2m [749.193322ms]
  Jun  8 13:55:42.240: INFO: Created: latency-svc-x6b5n
  Jun  8 13:55:42.287: INFO: Got endpoints: latency-svc-mbbvf [749.036089ms]
  Jun  8 13:55:42.294: INFO: Created: latency-svc-5g2vw
  Jun  8 13:55:42.335: INFO: Got endpoints: latency-svc-sx9nz [750.861498ms]
  Jun  8 13:55:42.345: INFO: Created: latency-svc-tpfj8
  Jun  8 13:55:42.383: INFO: Got endpoints: latency-svc-jn789 [749.881103ms]
  Jun  8 13:55:42.392: INFO: Created: latency-svc-qqcbz
  Jun  8 13:55:42.432: INFO: Got endpoints: latency-svc-czrq8 [749.684512ms]
  Jun  8 13:55:42.442: INFO: Created: latency-svc-9lf8n
  Jun  8 13:55:42.483: INFO: Got endpoints: latency-svc-hh5kq [748.166385ms]
  Jun  8 13:55:42.491: INFO: Created: latency-svc-k4mhd
  Jun  8 13:55:42.534: INFO: Got endpoints: latency-svc-jqsvd [750.02809ms]
  Jun  8 13:55:42.542: INFO: Created: latency-svc-622l6
  Jun  8 13:55:42.583: INFO: Got endpoints: latency-svc-fphkf [749.310051ms]
  Jun  8 13:55:42.591: INFO: Created: latency-svc-c4w9b
  Jun  8 13:55:42.634: INFO: Got endpoints: latency-svc-65s96 [751.806658ms]
  Jun  8 13:55:42.643: INFO: Created: latency-svc-lvddn
  Jun  8 13:55:42.683: INFO: Got endpoints: latency-svc-7gr4v [749.757029ms]
  Jun  8 13:55:42.691: INFO: Created: latency-svc-gk67j
  Jun  8 13:55:42.732: INFO: Got endpoints: latency-svc-7dbmz [748.012853ms]
  Jun  8 13:55:42.741: INFO: Created: latency-svc-44ktd
  Jun  8 13:55:42.784: INFO: Got endpoints: latency-svc-mw6x9 [748.544738ms]
  Jun  8 13:55:42.792: INFO: Created: latency-svc-rlxfs
  Jun  8 13:55:42.833: INFO: Got endpoints: latency-svc-ngg9x [748.932468ms]
  Jun  8 13:55:42.841: INFO: Created: latency-svc-wcqxw
  Jun  8 13:55:42.883: INFO: Got endpoints: latency-svc-xlqs9 [751.196766ms]
  Jun  8 13:55:42.892: INFO: Created: latency-svc-whh46
  Jun  8 13:55:42.932: INFO: Got endpoints: latency-svc-h8gnp [750.305236ms]
  Jun  8 13:55:42.941: INFO: Created: latency-svc-pzm86
  Jun  8 13:55:42.983: INFO: Got endpoints: latency-svc-x6b5n [750.142956ms]
  Jun  8 13:55:42.991: INFO: Created: latency-svc-6bsbv
  E0608 13:55:43.031340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:55:43.035: INFO: Got endpoints: latency-svc-5g2vw [748.008709ms]
  Jun  8 13:55:43.042: INFO: Created: latency-svc-nmd6q
  Jun  8 13:55:43.084: INFO: Got endpoints: latency-svc-tpfj8 [748.45088ms]
  Jun  8 13:55:43.094: INFO: Created: latency-svc-dq64d
  Jun  8 13:55:43.133: INFO: Got endpoints: latency-svc-qqcbz [749.872849ms]
  Jun  8 13:55:43.141: INFO: Created: latency-svc-xrm68
  Jun  8 13:55:43.183: INFO: Got endpoints: latency-svc-9lf8n [750.555161ms]
  Jun  8 13:55:43.192: INFO: Created: latency-svc-qshtv
  Jun  8 13:55:43.234: INFO: Got endpoints: latency-svc-k4mhd [750.860555ms]
  Jun  8 13:55:43.242: INFO: Created: latency-svc-v4fmk
  Jun  8 13:55:43.283: INFO: Got endpoints: latency-svc-622l6 [748.947019ms]
  Jun  8 13:55:43.292: INFO: Created: latency-svc-5rhvv
  Jun  8 13:55:43.332: INFO: Got endpoints: latency-svc-c4w9b [748.740088ms]
  Jun  8 13:55:43.342: INFO: Created: latency-svc-cd7f9
  Jun  8 13:55:43.383: INFO: Got endpoints: latency-svc-lvddn [748.818378ms]
  Jun  8 13:55:43.391: INFO: Created: latency-svc-58zk8
  Jun  8 13:55:43.433: INFO: Got endpoints: latency-svc-gk67j [749.997575ms]
  Jun  8 13:55:43.444: INFO: Created: latency-svc-drvh7
  Jun  8 13:55:43.483: INFO: Got endpoints: latency-svc-44ktd [750.329807ms]
  Jun  8 13:55:43.492: INFO: Created: latency-svc-rww98
  Jun  8 13:55:43.532: INFO: Got endpoints: latency-svc-rlxfs [748.19059ms]
  Jun  8 13:55:43.541: INFO: Created: latency-svc-9k47h
  Jun  8 13:55:43.583: INFO: Got endpoints: latency-svc-wcqxw [749.596227ms]
  Jun  8 13:55:43.590: INFO: Created: latency-svc-2c89j
  Jun  8 13:55:43.634: INFO: Got endpoints: latency-svc-whh46 [750.686544ms]
  Jun  8 13:55:43.642: INFO: Created: latency-svc-d9wxz
  Jun  8 13:55:43.682: INFO: Got endpoints: latency-svc-pzm86 [749.643541ms]
  Jun  8 13:55:43.693: INFO: Created: latency-svc-vzm96
  Jun  8 13:55:43.732: INFO: Got endpoints: latency-svc-6bsbv [749.297708ms]
  Jun  8 13:55:43.741: INFO: Created: latency-svc-t7dbn
  Jun  8 13:55:43.784: INFO: Got endpoints: latency-svc-nmd6q [749.759114ms]
  Jun  8 13:55:43.792: INFO: Created: latency-svc-vcbvb
  Jun  8 13:55:43.833: INFO: Got endpoints: latency-svc-dq64d [749.201163ms]
  Jun  8 13:55:43.841: INFO: Created: latency-svc-26kl7
  Jun  8 13:55:43.885: INFO: Got endpoints: latency-svc-xrm68 [751.810271ms]
  Jun  8 13:55:43.892: INFO: Created: latency-svc-d575k
  Jun  8 13:55:43.934: INFO: Got endpoints: latency-svc-qshtv [751.43765ms]
  Jun  8 13:55:43.943: INFO: Created: latency-svc-gn5pl
  Jun  8 13:55:43.982: INFO: Got endpoints: latency-svc-v4fmk [748.693793ms]
  Jun  8 13:55:43.993: INFO: Created: latency-svc-r5smr
  E0608 13:55:44.031337      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:55:44.033: INFO: Got endpoints: latency-svc-5rhvv [749.838408ms]
  Jun  8 13:55:44.041: INFO: Created: latency-svc-6hrbr
  Jun  8 13:55:44.084: INFO: Got endpoints: latency-svc-cd7f9 [751.993579ms]
  Jun  8 13:55:44.092: INFO: Created: latency-svc-cdjsk
  Jun  8 13:55:44.134: INFO: Got endpoints: latency-svc-58zk8 [751.492552ms]
  Jun  8 13:55:44.142: INFO: Created: latency-svc-b8xqc
  Jun  8 13:55:44.183: INFO: Got endpoints: latency-svc-drvh7 [750.080738ms]
  Jun  8 13:55:44.193: INFO: Created: latency-svc-fqd76
  Jun  8 13:55:44.234: INFO: Got endpoints: latency-svc-rww98 [750.832448ms]
  Jun  8 13:55:44.244: INFO: Created: latency-svc-lks8b
  Jun  8 13:55:44.282: INFO: Got endpoints: latency-svc-9k47h [750.038938ms]
  Jun  8 13:55:44.292: INFO: Created: latency-svc-b4xp5
  Jun  8 13:55:44.334: INFO: Got endpoints: latency-svc-2c89j [750.67758ms]
  Jun  8 13:55:44.341: INFO: Created: latency-svc-zgght
  Jun  8 13:55:44.383: INFO: Got endpoints: latency-svc-d9wxz [748.735461ms]
  Jun  8 13:55:44.390: INFO: Created: latency-svc-b2k7t
  Jun  8 13:55:44.435: INFO: Got endpoints: latency-svc-vzm96 [752.759134ms]
  Jun  8 13:55:44.443: INFO: Created: latency-svc-np2rv
  Jun  8 13:55:44.482: INFO: Got endpoints: latency-svc-t7dbn [750.421056ms]
  Jun  8 13:55:44.491: INFO: Created: latency-svc-ftqfc
  Jun  8 13:55:44.532: INFO: Got endpoints: latency-svc-vcbvb [747.741845ms]
  Jun  8 13:55:44.540: INFO: Created: latency-svc-zf6lw
  Jun  8 13:55:44.584: INFO: Got endpoints: latency-svc-26kl7 [750.520467ms]
  Jun  8 13:55:44.592: INFO: Created: latency-svc-lxn4z
  Jun  8 13:55:44.639: INFO: Got endpoints: latency-svc-d575k [754.49286ms]
  Jun  8 13:55:44.649: INFO: Created: latency-svc-zk6rv
  Jun  8 13:55:44.682: INFO: Got endpoints: latency-svc-gn5pl [748.175536ms]
  Jun  8 13:55:44.692: INFO: Created: latency-svc-v7w4x
  Jun  8 13:55:44.733: INFO: Got endpoints: latency-svc-r5smr [750.117211ms]
  Jun  8 13:55:44.742: INFO: Created: latency-svc-8dc52
  Jun  8 13:55:44.783: INFO: Got endpoints: latency-svc-6hrbr [749.376503ms]
  Jun  8 13:55:44.790: INFO: Created: latency-svc-6gtx4
  Jun  8 13:55:44.833: INFO: Got endpoints: latency-svc-cdjsk [749.41198ms]
  Jun  8 13:55:44.841: INFO: Created: latency-svc-sk2kr
  Jun  8 13:55:44.884: INFO: Got endpoints: latency-svc-b8xqc [749.548916ms]
  Jun  8 13:55:44.892: INFO: Created: latency-svc-6b5f5
  Jun  8 13:55:44.932: INFO: Got endpoints: latency-svc-fqd76 [748.75748ms]
  Jun  8 13:55:44.941: INFO: Created: latency-svc-9qsgg
  Jun  8 13:55:44.983: INFO: Got endpoints: latency-svc-lks8b [749.529682ms]
  Jun  8 13:55:44.992: INFO: Created: latency-svc-8w2fx
  E0608 13:55:45.031967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:55:45.033: INFO: Got endpoints: latency-svc-b4xp5 [750.677011ms]
  Jun  8 13:55:45.041: INFO: Created: latency-svc-6bh9h
  Jun  8 13:55:45.086: INFO: Got endpoints: latency-svc-zgght [751.962772ms]
  Jun  8 13:55:45.094: INFO: Created: latency-svc-kwcg9
  Jun  8 13:55:45.134: INFO: Got endpoints: latency-svc-b2k7t [751.028433ms]
  Jun  8 13:55:45.142: INFO: Created: latency-svc-zhsxc
  Jun  8 13:55:45.182: INFO: Got endpoints: latency-svc-np2rv [746.923817ms]
  Jun  8 13:55:45.192: INFO: Created: latency-svc-7x9cg
  Jun  8 13:55:45.233: INFO: Got endpoints: latency-svc-ftqfc [750.107683ms]
  Jun  8 13:55:45.241: INFO: Created: latency-svc-jtbdx
  Jun  8 13:55:45.282: INFO: Got endpoints: latency-svc-zf6lw [749.763481ms]
  Jun  8 13:55:45.291: INFO: Created: latency-svc-kkkjg
  Jun  8 13:55:45.335: INFO: Got endpoints: latency-svc-lxn4z [751.558443ms]
  Jun  8 13:55:45.348: INFO: Created: latency-svc-tp65d
  Jun  8 13:55:45.383: INFO: Got endpoints: latency-svc-zk6rv [743.276084ms]
  Jun  8 13:55:45.390: INFO: Created: latency-svc-jf5m5
  Jun  8 13:55:45.434: INFO: Got endpoints: latency-svc-v7w4x [751.560352ms]
  Jun  8 13:55:45.441: INFO: Created: latency-svc-smzs9
  Jun  8 13:55:45.483: INFO: Got endpoints: latency-svc-8dc52 [750.072884ms]
  Jun  8 13:55:45.495: INFO: Created: latency-svc-hf9ln
  Jun  8 13:55:45.532: INFO: Got endpoints: latency-svc-6gtx4 [749.695381ms]
  Jun  8 13:55:45.540: INFO: Created: latency-svc-slnxh
  Jun  8 13:55:45.583: INFO: Got endpoints: latency-svc-sk2kr [749.767196ms]
  Jun  8 13:55:45.591: INFO: Created: latency-svc-n2f4w
  Jun  8 13:55:45.634: INFO: Got endpoints: latency-svc-6b5f5 [750.232575ms]
  Jun  8 13:55:45.643: INFO: Created: latency-svc-zxxjb
  Jun  8 13:55:45.685: INFO: Got endpoints: latency-svc-9qsgg [752.450167ms]
  Jun  8 13:55:45.692: INFO: Created: latency-svc-ntk9g
  Jun  8 13:55:45.732: INFO: Got endpoints: latency-svc-8w2fx [748.09042ms]
  Jun  8 13:55:45.742: INFO: Created: latency-svc-6754c
  Jun  8 13:55:45.783: INFO: Got endpoints: latency-svc-6bh9h [749.603158ms]
  Jun  8 13:55:45.792: INFO: Created: latency-svc-7mwz9
  Jun  8 13:55:45.833: INFO: Got endpoints: latency-svc-kwcg9 [746.653065ms]
  Jun  8 13:55:45.840: INFO: Created: latency-svc-5rmw2
  Jun  8 13:55:45.883: INFO: Got endpoints: latency-svc-zhsxc [748.977436ms]
  Jun  8 13:55:45.890: INFO: Created: latency-svc-dlx5r
  Jun  8 13:55:45.935: INFO: Got endpoints: latency-svc-7x9cg [753.117013ms]
  Jun  8 13:55:45.944: INFO: Created: latency-svc-2h66q
  Jun  8 13:55:45.982: INFO: Got endpoints: latency-svc-jtbdx [749.665739ms]
  Jun  8 13:55:45.992: INFO: Created: latency-svc-cslgk
  E0608 13:55:46.032445      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:55:46.032: INFO: Got endpoints: latency-svc-kkkjg [750.127275ms]
  Jun  8 13:55:46.042: INFO: Created: latency-svc-h45jx
  Jun  8 13:55:46.082: INFO: Got endpoints: latency-svc-tp65d [746.785435ms]
  Jun  8 13:55:46.090: INFO: Created: latency-svc-pn7tk
  Jun  8 13:55:46.134: INFO: Got endpoints: latency-svc-jf5m5 [751.581818ms]
  Jun  8 13:55:46.142: INFO: Created: latency-svc-df7hr
  Jun  8 13:55:46.184: INFO: Got endpoints: latency-svc-smzs9 [750.070151ms]
  Jun  8 13:55:46.192: INFO: Created: latency-svc-cdnvd
  Jun  8 13:55:46.233: INFO: Got endpoints: latency-svc-hf9ln [750.117229ms]
  Jun  8 13:55:46.243: INFO: Created: latency-svc-n5v9x
  Jun  8 13:55:46.283: INFO: Got endpoints: latency-svc-slnxh [750.576115ms]
  Jun  8 13:55:46.290: INFO: Created: latency-svc-dmx78
  Jun  8 13:55:46.335: INFO: Got endpoints: latency-svc-n2f4w [751.424727ms]
  Jun  8 13:55:46.344: INFO: Created: latency-svc-wjt2b
  Jun  8 13:55:46.384: INFO: Got endpoints: latency-svc-zxxjb [749.371429ms]
  Jun  8 13:55:46.393: INFO: Created: latency-svc-pmfm6
  Jun  8 13:55:46.435: INFO: Got endpoints: latency-svc-ntk9g [750.27971ms]
  Jun  8 13:55:46.443: INFO: Created: latency-svc-4wp25
  Jun  8 13:55:46.482: INFO: Got endpoints: latency-svc-6754c [750.370885ms]
  Jun  8 13:55:46.491: INFO: Created: latency-svc-xqnw5
  Jun  8 13:55:46.533: INFO: Got endpoints: latency-svc-7mwz9 [750.100454ms]
  Jun  8 13:55:46.543: INFO: Created: latency-svc-mclft
  Jun  8 13:55:46.587: INFO: Got endpoints: latency-svc-5rmw2 [754.350392ms]
  Jun  8 13:55:46.595: INFO: Created: latency-svc-jj67n
  Jun  8 13:55:46.634: INFO: Got endpoints: latency-svc-dlx5r [750.829282ms]
  Jun  8 13:55:46.642: INFO: Created: latency-svc-5hg6z
  Jun  8 13:55:46.684: INFO: Got endpoints: latency-svc-2h66q [748.597113ms]
  Jun  8 13:55:46.692: INFO: Created: latency-svc-4kpfj
  Jun  8 13:55:46.733: INFO: Got endpoints: latency-svc-cslgk [750.223862ms]
  Jun  8 13:55:46.743: INFO: Created: latency-svc-5fsdw
  Jun  8 13:55:46.782: INFO: Got endpoints: latency-svc-h45jx [749.759077ms]
  Jun  8 13:55:46.790: INFO: Created: latency-svc-t9vcm
  Jun  8 13:55:46.835: INFO: Got endpoints: latency-svc-pn7tk [752.350006ms]
  Jun  8 13:55:46.845: INFO: Created: latency-svc-75lxx
  Jun  8 13:55:46.884: INFO: Got endpoints: latency-svc-df7hr [749.418798ms]
  Jun  8 13:55:46.891: INFO: Created: latency-svc-6hg4q
  Jun  8 13:55:46.934: INFO: Got endpoints: latency-svc-cdnvd [749.893047ms]
  Jun  8 13:55:46.941: INFO: Created: latency-svc-4rpg4
  Jun  8 13:55:46.984: INFO: Got endpoints: latency-svc-n5v9x [750.26269ms]
  Jun  8 13:55:46.992: INFO: Created: latency-svc-xjj2k
  Jun  8 13:55:47.032: INFO: Got endpoints: latency-svc-dmx78 [748.611777ms]
  E0608 13:55:47.032570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:55:47.041: INFO: Created: latency-svc-jl9f5
  Jun  8 13:55:47.082: INFO: Got endpoints: latency-svc-wjt2b [747.517882ms]
  Jun  8 13:55:47.090: INFO: Created: latency-svc-5s56j
  Jun  8 13:55:47.136: INFO: Got endpoints: latency-svc-pmfm6 [752.229172ms]
  Jun  8 13:55:47.144: INFO: Created: latency-svc-gfg44
  Jun  8 13:55:47.184: INFO: Got endpoints: latency-svc-4wp25 [749.319505ms]
  Jun  8 13:55:47.232: INFO: Got endpoints: latency-svc-xqnw5 [750.192871ms]
  Jun  8 13:55:47.285: INFO: Got endpoints: latency-svc-mclft [752.015861ms]
  Jun  8 13:55:47.333: INFO: Got endpoints: latency-svc-jj67n [745.877437ms]
  Jun  8 13:55:47.384: INFO: Got endpoints: latency-svc-5hg6z [750.64042ms]
  Jun  8 13:55:47.433: INFO: Got endpoints: latency-svc-4kpfj [749.111085ms]
  Jun  8 13:55:47.483: INFO: Got endpoints: latency-svc-5fsdw [750.817789ms]
  Jun  8 13:55:47.532: INFO: Got endpoints: latency-svc-t9vcm [750.10992ms]
  Jun  8 13:55:47.585: INFO: Got endpoints: latency-svc-75lxx [750.087607ms]
  Jun  8 13:55:47.632: INFO: Got endpoints: latency-svc-6hg4q [748.418508ms]
  Jun  8 13:55:47.684: INFO: Got endpoints: latency-svc-4rpg4 [749.850844ms]
  Jun  8 13:55:47.733: INFO: Got endpoints: latency-svc-xjj2k [749.762302ms]
  Jun  8 13:55:47.784: INFO: Got endpoints: latency-svc-jl9f5 [751.783936ms]
  Jun  8 13:55:47.834: INFO: Got endpoints: latency-svc-5s56j [751.09474ms]
  Jun  8 13:55:47.885: INFO: Got endpoints: latency-svc-gfg44 [749.048453ms]
  Jun  8 13:55:47.885: INFO: Latencies: [14.129536ms 28.076871ms 29.956175ms 32.547861ms 44.032861ms 50.70597ms 59.881693ms 64.74213ms 69.929388ms 75.917449ms 83.585571ms 89.990161ms 97.055268ms 98.00251ms 100.632315ms 103.393617ms 103.659367ms 103.98866ms 104.854385ms 104.905666ms 105.168144ms 105.691677ms 106.219801ms 106.356515ms 108.145838ms 108.17638ms 108.874444ms 109.175289ms 109.234579ms 110.075418ms 110.615092ms 111.175642ms 111.395829ms 117.55031ms 146.404722ms 185.316516ms 233.165321ms 273.360671ms 316.139613ms 352.112412ms 403.951415ms 450.840569ms 495.029229ms 535.539562ms 581.181856ms 598.630914ms 598.907195ms 721.711859ms 743.276084ms 745.877437ms 746.653065ms 746.760391ms 746.785435ms 746.923817ms 747.517882ms 747.741845ms 747.979274ms 748.008709ms 748.012853ms 748.09042ms 748.166385ms 748.175536ms 748.19059ms 748.253721ms 748.418508ms 748.426318ms 748.45088ms 748.474587ms 748.544738ms 748.597113ms 748.611777ms 748.631749ms 748.693793ms 748.735461ms 748.738422ms 748.740088ms 748.75748ms 748.818378ms 748.82989ms 748.932468ms 748.947019ms 748.966328ms 748.975583ms 748.977436ms 749.036089ms 749.048453ms 749.111085ms 749.122726ms 749.193322ms 749.201163ms 749.219107ms 749.297708ms 749.304938ms 749.310051ms 749.319505ms 749.32833ms 749.350141ms 749.371429ms 749.376503ms 749.41198ms 749.418798ms 749.472098ms 749.529682ms 749.548916ms 749.596227ms 749.603158ms 749.643541ms 749.665739ms 749.684512ms 749.695381ms 749.741907ms 749.757029ms 749.759077ms 749.759114ms 749.761422ms 749.762302ms 749.763481ms 749.767196ms 749.838408ms 749.850844ms 749.872849ms 749.881103ms 749.893047ms 749.997575ms 750.02809ms 750.038938ms 750.052175ms 750.070151ms 750.072884ms 750.080738ms 750.087607ms 750.100454ms 750.107683ms 750.10992ms 750.117211ms 750.117229ms 750.127275ms 750.142956ms 750.148827ms 750.181752ms 750.192871ms 750.223862ms 750.232575ms 750.241453ms 750.24615ms 750.26269ms 750.27971ms 750.305236ms 750.329807ms 750.370778ms 750.370885ms 750.421056ms 750.469023ms 750.520467ms 750.555161ms 750.576115ms 750.64042ms 750.677011ms 750.67758ms 750.686544ms 750.717084ms 750.817789ms 750.829282ms 750.832448ms 750.860555ms 750.861498ms 750.887499ms 751.028433ms 751.09474ms 751.128541ms 751.196766ms 751.424727ms 751.43765ms 751.492552ms 751.558443ms 751.560352ms 751.581818ms 751.602632ms 751.672576ms 751.715516ms 751.783936ms 751.806658ms 751.810271ms 751.962772ms 751.993579ms 752.015861ms 752.229172ms 752.350006ms 752.450167ms 752.519799ms 752.624785ms 752.676692ms 752.759134ms 752.780806ms 753.117013ms 753.432165ms 754.350392ms 754.49286ms 761.305097ms 813.158725ms]
  Jun  8 13:55:47.885: INFO: 50 %ile: 749.418798ms
  Jun  8 13:55:47.885: INFO: 90 %ile: 751.783936ms
  Jun  8 13:55:47.885: INFO: 99 %ile: 761.305097ms
  Jun  8 13:55:47.885: INFO: Total sample count: 200
  Jun  8 13:55:47.885: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-4028" for this suite. @ 06/08/24 13:55:47.889
• [9.754 seconds]
------------------------------
S
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 06/08/24 13:55:47.894
  Jun  8 13:55:47.894: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename events @ 06/08/24 13:55:47.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:55:47.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:55:47.912
  STEP: Create set of events @ 06/08/24 13:55:47.913
  STEP: get a list of Events with a label in the current namespace @ 06/08/24 13:55:47.929
  STEP: delete a list of events @ 06/08/24 13:55:47.931
  Jun  8 13:55:47.931: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 06/08/24 13:55:47.948
  Jun  8 13:55:47.950: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6106" for this suite. @ 06/08/24 13:55:47.952
• [0.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 06/08/24 13:55:47.958
  Jun  8 13:55:47.958: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename projected @ 06/08/24 13:55:47.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:55:47.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:55:47.974
  STEP: Creating a pod to test downward API volume plugin @ 06/08/24 13:55:47.976
  E0608 13:55:48.033215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:55:49.034096      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:55:50.034555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:55:51.035466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:55:51.994
  Jun  8 13:55:51.996: INFO: Trying to get logs from node ip-172-31-31-116 pod downwardapi-volume-721cea2e-e820-4728-ac9d-45ac05964c37 container client-container: <nil>
  STEP: delete the pod @ 06/08/24 13:55:52.001
  Jun  8 13:55:52.016: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9065" for this suite. @ 06/08/24 13:55:52.018
• [4.067 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 06/08/24 13:55:52.025
  Jun  8 13:55:52.025: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename dns @ 06/08/24 13:55:52.025
  E0608 13:55:52.035933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:55:52.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:55:52.038
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 06/08/24 13:55:52.04
  Jun  8 13:55:52.046: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-6320  d2d0cd33-c04d-4a5d-8e76-f914d65a93f6 44637 0 2024-06-08 13:55:52 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-06-08 13:55:52 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-xlft9,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-xlft9,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0608 13:55:53.036686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:55:54.037709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 06/08/24 13:55:54.053
  Jun  8 13:55:54.053: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-6320 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  8 13:55:54.053: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  Jun  8 13:55:54.053: INFO: ExecWithOptions: Clientset creation
  Jun  8 13:55:54.053: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-6320/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 06/08/24 13:55:54.114
  Jun  8 13:55:54.114: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-6320 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  8 13:55:54.114: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  Jun  8 13:55:54.114: INFO: ExecWithOptions: Clientset creation
  Jun  8 13:55:54.115: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-6320/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun  8 13:55:54.168: INFO: Deleting pod test-dns-nameservers...
  Jun  8 13:55:54.181: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6320" for this suite. @ 06/08/24 13:55:54.186
• [2.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 06/08/24 13:55:54.192
  Jun  8 13:55:54.192: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename projected @ 06/08/24 13:55:54.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:55:54.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:55:54.212
  STEP: Creating a pod to test downward API volume plugin @ 06/08/24 13:55:54.213
  E0608 13:55:55.038273      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:55:56.038336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:55:57.039344      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:55:58.040367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:55:58.234
  Jun  8 13:55:58.237: INFO: Trying to get logs from node ip-172-31-74-243 pod downwardapi-volume-47958a9b-2062-4345-985a-3dba49be7997 container client-container: <nil>
  STEP: delete the pod @ 06/08/24 13:55:58.251
  Jun  8 13:55:58.264: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-872" for this suite. @ 06/08/24 13:55:58.267
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 06/08/24 13:55:58.273
  Jun  8 13:55:58.273: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename containers @ 06/08/24 13:55:58.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:55:58.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:55:58.289
  E0608 13:55:59.040729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:00.041001      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:56:00.308: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2670" for this suite. @ 06/08/24 13:56:00.31
• [2.043 seconds]
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 06/08/24 13:56:00.316
  Jun  8 13:56:00.316: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename gc @ 06/08/24 13:56:00.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:56:00.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:56:00.331
  STEP: create the deployment @ 06/08/24 13:56:00.333
  W0608 13:56:00.339013      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 06/08/24 13:56:00.339
  STEP: delete the deployment @ 06/08/24 13:56:00.842
  STEP: wait for all rs to be garbage collected @ 06/08/24 13:56:00.847
  STEP: expected 0 rs, got 1 rs @ 06/08/24 13:56:00.85
  STEP: expected 0 pods, got 2 pods @ 06/08/24 13:56:00.852
  E0608 13:56:01.041733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 06/08/24 13:56:01.355
  W0608 13:56:01.360010      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jun  8 13:56:01.360: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun  8 13:56:01.360: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9587" for this suite. @ 06/08/24 13:56:01.363
• [1.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 06/08/24 13:56:01.368
  Jun  8 13:56:01.368: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename sched-preemption @ 06/08/24 13:56:01.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:56:01.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:56:01.384
  Jun  8 13:56:01.396: INFO: Waiting up to 1m0s for all nodes to be ready
  E0608 13:56:02.041854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:03.041919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:04.042039      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:05.042460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:06.042934      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:07.043307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:08.043428      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:09.043640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:10.044627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:11.044828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:12.044945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:13.045772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:14.045882      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:15.045965      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:16.046953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:17.047038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:18.047807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:19.048737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:20.048836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:21.048914      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:22.049088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:23.049282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:24.049386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:25.049500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:26.049962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:27.050062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:28.050202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:29.050417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:30.050589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:31.050809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:32.050916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:33.051767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:34.051873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:35.051958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:36.053030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:37.053396      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:38.054479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:39.055394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:40.055623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:41.056695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:42.056739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:43.056827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:44.057686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:45.058693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:46.059711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:47.060071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:48.060688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:49.061220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:50.062185      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:51.062611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:52.062949      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:53.063117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:54.064145      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:55.064716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:56.065474      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:57.066354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:58.067457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:56:59.067627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:00.068079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:01.068174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:57:01.401: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 06/08/24 13:57:01.404
  Jun  8 13:57:01.416: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Jun  8 13:57:01.421: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Jun  8 13:57:01.434: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Jun  8 13:57:01.441: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Jun  8 13:57:01.453: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Jun  8 13:57:01.456: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 06/08/24 13:57:01.456
  E0608 13:57:02.068299      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:03.068361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 06/08/24 13:57:03.482
  E0608 13:57:04.068457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:05.068566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:06.069563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:07.069676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:08.069833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:09.070211      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:57:09.570: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1040" for this suite. @ 06/08/24 13:57:09.573
• [68.209 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2214
  STEP: Creating a kubernetes client @ 06/08/24 13:57:09.578
  Jun  8 13:57:09.578: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename services @ 06/08/24 13:57:09.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:57:09.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:57:09.596
  STEP: creating service in namespace services-6951 @ 06/08/24 13:57:09.597
  STEP: creating service affinity-nodeport in namespace services-6951 @ 06/08/24 13:57:09.597
  STEP: creating replication controller affinity-nodeport in namespace services-6951 @ 06/08/24 13:57:09.613
  I0608 13:57:09.618560      19 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-6951, replica count: 3
  E0608 13:57:10.071259      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:11.072080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:12.072166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0608 13:57:12.669768      19 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun  8 13:57:12.678: INFO: Creating new exec pod
  E0608 13:57:13.072433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:14.072525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:15.072740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:57:15.693: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-6951 exec execpod-affinityjg9zg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Jun  8 13:57:15.790: INFO: stderr: "+ nc -v -t -w 2 affinity-nodeport 80\n+ echo hostName\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Jun  8 13:57:15.790: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  8 13:57:15.790: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-6951 exec execpod-affinityjg9zg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.35 80'
  Jun  8 13:57:15.873: INFO: stderr: "+ nc -v -t -w 2 10.152.183.35 80\n+ echo hostName\nConnection to 10.152.183.35 80 port [tcp/http] succeeded!\n"
  Jun  8 13:57:15.873: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  8 13:57:15.873: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-6951 exec execpod-affinityjg9zg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.31.116 30858'
  Jun  8 13:57:15.968: INFO: stderr: "+ nc -v -t -w 2 172.31.31.116 30858\n+ echo hostName\nConnection to 172.31.31.116 30858 port [tcp/*] succeeded!\n"
  Jun  8 13:57:15.969: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  8 13:57:15.969: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-6951 exec execpod-affinityjg9zg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.74.243 30858'
  Jun  8 13:57:16.059: INFO: stderr: "+ nc -v -t -w 2 172.31.74.243 30858\n+ echo hostName\nConnection to 172.31.74.243 30858 port [tcp/*] succeeded!\n"
  Jun  8 13:57:16.059: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  8 13:57:16.059: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-6951 exec execpod-affinityjg9zg -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.31.116:30858/ ; done'
  E0608 13:57:16.073676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:57:16.182: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30858/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30858/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30858/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30858/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30858/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30858/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30858/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30858/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30858/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30858/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30858/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30858/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30858/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30858/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30858/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.116:30858/\n"
  Jun  8 13:57:16.182: INFO: stdout: "\naffinity-nodeport-h7dmj\naffinity-nodeport-h7dmj\naffinity-nodeport-h7dmj\naffinity-nodeport-h7dmj\naffinity-nodeport-h7dmj\naffinity-nodeport-h7dmj\naffinity-nodeport-h7dmj\naffinity-nodeport-h7dmj\naffinity-nodeport-h7dmj\naffinity-nodeport-h7dmj\naffinity-nodeport-h7dmj\naffinity-nodeport-h7dmj\naffinity-nodeport-h7dmj\naffinity-nodeport-h7dmj\naffinity-nodeport-h7dmj\naffinity-nodeport-h7dmj"
  Jun  8 13:57:16.182: INFO: Received response from host: affinity-nodeport-h7dmj
  Jun  8 13:57:16.182: INFO: Received response from host: affinity-nodeport-h7dmj
  Jun  8 13:57:16.182: INFO: Received response from host: affinity-nodeport-h7dmj
  Jun  8 13:57:16.182: INFO: Received response from host: affinity-nodeport-h7dmj
  Jun  8 13:57:16.182: INFO: Received response from host: affinity-nodeport-h7dmj
  Jun  8 13:57:16.182: INFO: Received response from host: affinity-nodeport-h7dmj
  Jun  8 13:57:16.182: INFO: Received response from host: affinity-nodeport-h7dmj
  Jun  8 13:57:16.182: INFO: Received response from host: affinity-nodeport-h7dmj
  Jun  8 13:57:16.182: INFO: Received response from host: affinity-nodeport-h7dmj
  Jun  8 13:57:16.182: INFO: Received response from host: affinity-nodeport-h7dmj
  Jun  8 13:57:16.182: INFO: Received response from host: affinity-nodeport-h7dmj
  Jun  8 13:57:16.182: INFO: Received response from host: affinity-nodeport-h7dmj
  Jun  8 13:57:16.182: INFO: Received response from host: affinity-nodeport-h7dmj
  Jun  8 13:57:16.182: INFO: Received response from host: affinity-nodeport-h7dmj
  Jun  8 13:57:16.182: INFO: Received response from host: affinity-nodeport-h7dmj
  Jun  8 13:57:16.182: INFO: Received response from host: affinity-nodeport-h7dmj
  Jun  8 13:57:16.182: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-6951, will wait for the garbage collector to delete the pods @ 06/08/24 13:57:16.195
  Jun  8 13:57:16.255: INFO: Deleting ReplicationController affinity-nodeport took: 5.829345ms
  Jun  8 13:57:16.356: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.884573ms
  E0608 13:57:17.074058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:18.074380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:19.074947      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:57:19.275: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6951" for this suite. @ 06/08/24 13:57:19.28
• [9.706 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 06/08/24 13:57:19.284
  Jun  8 13:57:19.284: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename namespaces @ 06/08/24 13:57:19.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:57:19.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:57:19.3
  STEP: Creating a test namespace @ 06/08/24 13:57:19.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:57:19.318
  STEP: Creating a service in the namespace @ 06/08/24 13:57:19.32
  STEP: Deleting the namespace @ 06/08/24 13:57:19.327
  STEP: Waiting for the namespace to be removed. @ 06/08/24 13:57:19.335
  E0608 13:57:20.075645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:21.075908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:22.076026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:23.076965      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:24.077043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:25.077880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 06/08/24 13:57:25.339
  STEP: Verifying there is no service in the namespace @ 06/08/24 13:57:25.355
  Jun  8 13:57:25.358: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5253" for this suite. @ 06/08/24 13:57:25.361
  STEP: Destroying namespace "nsdeletetest-7357" for this suite. @ 06/08/24 13:57:25.366
  Jun  8 13:57:25.368: INFO: Namespace nsdeletetest-7357 was already deleted
  STEP: Destroying namespace "nsdeletetest-7631" for this suite. @ 06/08/24 13:57:25.368
• [6.089 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 06/08/24 13:57:25.374
  Jun  8 13:57:25.374: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename configmap @ 06/08/24 13:57:25.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:57:25.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:57:25.392
  STEP: Creating configMap with name cm-test-opt-del-a65be696-6ed4-45fe-a42d-f67f7a6bca61 @ 06/08/24 13:57:25.396
  STEP: Creating configMap with name cm-test-opt-upd-cd338744-9ba8-4257-85f8-0bd916ac1b0b @ 06/08/24 13:57:25.4
  STEP: Creating the pod @ 06/08/24 13:57:25.403
  E0608 13:57:26.078651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:27.078767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-a65be696-6ed4-45fe-a42d-f67f7a6bca61 @ 06/08/24 13:57:27.438
  STEP: Updating configmap cm-test-opt-upd-cd338744-9ba8-4257-85f8-0bd916ac1b0b @ 06/08/24 13:57:27.443
  STEP: Creating configMap with name cm-test-opt-create-30760764-8e35-4eb1-8b42-c456a9f2e77a @ 06/08/24 13:57:27.446
  STEP: waiting to observe update in volume @ 06/08/24 13:57:27.451
  E0608 13:57:28.079597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:29.080357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:30.080772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:31.080983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:57:31.480: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9753" for this suite. @ 06/08/24 13:57:31.482
• [6.115 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:153
  STEP: Creating a kubernetes client @ 06/08/24 13:57:31.489
  Jun  8 13:57:31.489: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/08/24 13:57:31.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:57:31.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:57:31.506
  STEP: create the container to handle the HTTPGet hook request. @ 06/08/24 13:57:31.511
  E0608 13:57:32.082005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:33.082100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 06/08/24 13:57:33.527
  E0608 13:57:34.082987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:35.083073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 06/08/24 13:57:35.542
  E0608 13:57:36.083390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:37.083602      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 06/08/24 13:57:37.554
  Jun  8 13:57:37.559: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7347" for this suite. @ 06/08/24 13:57:37.562
• [6.077 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 06/08/24 13:57:37.566
  Jun  8 13:57:37.566: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename emptydir @ 06/08/24 13:57:37.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:57:37.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:57:37.585
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 06/08/24 13:57:37.587
  E0608 13:57:38.084035      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:39.084119      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:40.084713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:41.084807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:57:41.606
  Jun  8 13:57:41.609: INFO: Trying to get logs from node ip-172-31-74-243 pod pod-158123ae-b73e-45d2-8dc7-40b915b16bd5 container test-container: <nil>
  STEP: delete the pod @ 06/08/24 13:57:41.618
  Jun  8 13:57:41.629: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1079" for this suite. @ 06/08/24 13:57:41.632
• [4.072 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 06/08/24 13:57:41.639
  Jun  8 13:57:41.639: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename sched-preemption @ 06/08/24 13:57:41.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:57:41.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:57:41.657
  Jun  8 13:57:41.669: INFO: Waiting up to 1m0s for all nodes to be ready
  E0608 13:57:42.084931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:43.085294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:44.085381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:45.085481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:46.086457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:47.087555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:48.087643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:49.087727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:50.088727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:51.088929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:52.089024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:53.089120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:54.090179      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:55.090395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:56.091398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:57.091630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:58.092281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:57:59.092380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:00.093112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:01.093402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:02.093505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:03.093951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:04.094985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:05.095100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:06.095845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:07.095930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:08.096677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:09.096858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:10.097825      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:11.098737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:12.099588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:13.099716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:14.100433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:15.100526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:16.100776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:17.100883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:18.101884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:19.101977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:20.102089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:21.102293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:22.103122      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:23.103215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:24.104093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:25.104190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:26.104225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:27.104323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:28.104454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:29.104744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:30.105294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:31.105459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:32.106162      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:33.106394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:34.107071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:35.107164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:36.107393      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:37.107663      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:38.108639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:39.108735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:40.108824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:41.109115      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:58:41.673: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 06/08/24 13:58:41.677
  Jun  8 13:58:41.677: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename sched-preemption-path @ 06/08/24 13:58:41.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:58:41.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:58:41.696
  Jun  8 13:58:41.709: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Jun  8 13:58:41.712: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Jun  8 13:58:41.764: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-3829" for this suite. @ 06/08/24 13:58:41.766
  Jun  8 13:58:41.774: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9900" for this suite. @ 06/08/24 13:58:41.777
• [60.142 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:344
  STEP: Creating a kubernetes client @ 06/08/24 13:58:41.781
  Jun  8 13:58:41.781: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename kubectl @ 06/08/24 13:58:41.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:58:41.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:58:41.799
  STEP: creating a replication controller @ 06/08/24 13:58:41.806
  Jun  8 13:58:41.806: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-5320 create -f -'
  Jun  8 13:58:41.884: INFO: stderr: ""
  Jun  8 13:58:41.884: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/08/24 13:58:41.884
  Jun  8 13:58:41.884: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-5320 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun  8 13:58:41.932: INFO: stderr: ""
  Jun  8 13:58:41.932: INFO: stdout: "update-demo-nautilus-7dhml update-demo-nautilus-g4tnt "
  Jun  8 13:58:41.932: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-5320 get pods update-demo-nautilus-7dhml -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun  8 13:58:41.971: INFO: stderr: ""
  Jun  8 13:58:41.971: INFO: stdout: ""
  Jun  8 13:58:41.971: INFO: update-demo-nautilus-7dhml is created but not running
  E0608 13:58:42.109148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:43.109322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:44.109539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:45.109648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:46.110547      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:58:46.972: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-5320 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun  8 13:58:47.016: INFO: stderr: ""
  Jun  8 13:58:47.016: INFO: stdout: "update-demo-nautilus-7dhml update-demo-nautilus-g4tnt "
  Jun  8 13:58:47.016: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-5320 get pods update-demo-nautilus-7dhml -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun  8 13:58:47.058: INFO: stderr: ""
  Jun  8 13:58:47.058: INFO: stdout: "true"
  Jun  8 13:58:47.058: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-5320 get pods update-demo-nautilus-7dhml -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun  8 13:58:47.100: INFO: stderr: ""
  Jun  8 13:58:47.100: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun  8 13:58:47.100: INFO: validating pod update-demo-nautilus-7dhml
  Jun  8 13:58:47.104: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun  8 13:58:47.104: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun  8 13:58:47.104: INFO: update-demo-nautilus-7dhml is verified up and running
  Jun  8 13:58:47.105: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-5320 get pods update-demo-nautilus-g4tnt -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0608 13:58:47.111346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:58:47.146: INFO: stderr: ""
  Jun  8 13:58:47.146: INFO: stdout: "true"
  Jun  8 13:58:47.146: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-5320 get pods update-demo-nautilus-g4tnt -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun  8 13:58:47.186: INFO: stderr: ""
  Jun  8 13:58:47.186: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun  8 13:58:47.186: INFO: validating pod update-demo-nautilus-g4tnt
  Jun  8 13:58:47.191: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun  8 13:58:47.191: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun  8 13:58:47.191: INFO: update-demo-nautilus-g4tnt is verified up and running
  STEP: using delete to clean up resources @ 06/08/24 13:58:47.191
  Jun  8 13:58:47.191: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-5320 delete --grace-period=0 --force -f -'
  Jun  8 13:58:47.241: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun  8 13:58:47.241: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Jun  8 13:58:47.241: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-5320 get rc,svc -l name=update-demo --no-headers'
  Jun  8 13:58:47.300: INFO: stderr: "No resources found in kubectl-5320 namespace.\n"
  Jun  8 13:58:47.300: INFO: stdout: ""
  Jun  8 13:58:47.300: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-5320 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jun  8 13:58:47.359: INFO: stderr: ""
  Jun  8 13:58:47.359: INFO: stdout: ""
  Jun  8 13:58:47.359: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5320" for this suite. @ 06/08/24 13:58:47.364
• [5.589 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 06/08/24 13:58:47.371
  Jun  8 13:58:47.371: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename configmap @ 06/08/24 13:58:47.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:58:47.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:58:47.39
  STEP: Creating configMap with name configmap-test-volume-map-79392a38-deb6-4db1-b679-0fae09ddbdc9 @ 06/08/24 13:58:47.392
  STEP: Creating a pod to test consume configMaps @ 06/08/24 13:58:47.398
  E0608 13:58:48.112379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:49.112489      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 13:58:49.413
  Jun  8 13:58:49.415: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-configmaps-67ee1756-e603-4116-9a3f-0e29c7b3e0a8 container agnhost-container: <nil>
  STEP: delete the pod @ 06/08/24 13:58:49.421
  Jun  8 13:58:49.435: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6570" for this suite. @ 06/08/24 13:58:49.438
• [2.072 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 06/08/24 13:58:49.443
  Jun  8 13:58:49.443: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename container-probe @ 06/08/24 13:58:49.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 13:58:49.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 13:58:49.46
  STEP: Creating pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193 @ 06/08/24 13:58:49.462
  E0608 13:58:50.112760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:51.112846      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/08/24 13:58:51.474
  Jun  8 13:58:51.477: INFO: Initial restart count of pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f is 0
  Jun  8 13:58:51.480: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 13:58:52.113593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:53.113694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:58:53.484: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 13:58:54.114058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:55.114255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:58:55.487: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 13:58:56.114352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:57.114456      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:58:57.491: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 13:58:58.114491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:58:59.114682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:58:59.495: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 13:59:00.114830      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:59:01.114939      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:59:01.499: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 13:59:02.115719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:59:03.115820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:59:03.503: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 13:59:04.115980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:59:05.116076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:59:05.507: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 13:59:06.116529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:59:07.116621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:59:07.512: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 13:59:08.117418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:59:09.117635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:59:09.517: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 13:59:10.117722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:59:11.118186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:59:11.521: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  Jun  8 13:59:11.521: INFO: Restart count of pod container-probe-193/liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f is now 1 (20.044507103s elapsed)
  E0608 13:59:12.118362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:59:13.118453      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:59:13.525: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 13:59:14.118969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:59:15.119162      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:59:15.529: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 13:59:16.119707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:59:17.120719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:59:17.533: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 13:59:18.121610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:59:19.121829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:59:19.537: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 13:59:20.121933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:59:21.122119      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:59:21.541: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 13:59:22.122224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:59:23.122329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:59:23.546: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 13:59:24.122705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:59:25.122797      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:59:25.549: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 13:59:26.123071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:59:27.123157      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:59:27.553: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 13:59:28.123627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:59:29.123833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:59:29.557: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 13:59:30.124764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:59:31.125079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:59:31.560: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  Jun  8 13:59:31.561: INFO: Restart count of pod container-probe-193/liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f is now 2 (40.083870846s elapsed)
  E0608 13:59:32.125163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:59:33.125361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:59:33.565: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 13:59:34.125474      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:59:35.125657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:59:35.569: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 13:59:36.126598      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:59:37.126709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:59:37.574: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 13:59:38.127748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:59:39.128782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:59:39.577: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 13:59:40.129462      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:59:41.129555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:59:41.581: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 13:59:42.129879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:59:43.129962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:59:43.585: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 13:59:44.130307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:59:45.130407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:59:45.590: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 13:59:46.130534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:59:47.130616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:59:47.593: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 13:59:48.131449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:59:49.131634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:59:49.597: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 13:59:50.131724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:59:51.132714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:59:51.601: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  Jun  8 13:59:51.601: INFO: Restart count of pod container-probe-193/liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f is now 3 (1m0.124701129s elapsed)
  E0608 13:59:52.133474      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:59:53.133551      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:59:53.605: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 13:59:54.133660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:59:55.134508      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:59:55.610: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 13:59:56.135014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:59:57.135371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:59:57.614: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 13:59:58.136313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 13:59:59.136744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 13:59:59.619: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:00:00.136857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:00:01.137035      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:00:01.623: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:00:02.137351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:00:03.137832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:00:03.626: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:00:04.137936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:00:05.138050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:00:05.629: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:00:06.138192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:00:07.138284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:00:07.633: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:00:08.138433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:00:09.138530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:00:09.638: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:00:10.138931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:00:11.139141      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:00:11.641: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  Jun  8 14:00:11.641: INFO: Restart count of pod container-probe-193/liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f is now 4 (1m20.164804118s elapsed)
  E0608 14:00:12.139249      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:00:13.139364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:00:13.647: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:00:14.139639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:00:15.139704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:00:15.650: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:00:16.140338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:00:17.140438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:00:17.654: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:00:18.141233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:00:19.141313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:00:19.659: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:00:20.142357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:00:21.142436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:00:21.662: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:00:22.143443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:00:23.143650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:00:23.666: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:00:24.143756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:00:25.143827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:00:25.671: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:00:26.144678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:00:27.145424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:00:27.675: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:00:28.145817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:00:29.145789      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:00:29.680: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:00:30.145801      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:00:31.146358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:00:31.684: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:00:32.146452      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:00:33.147016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:00:33.688: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:00:34.147117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:00:35.147351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:00:35.692: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:00:36.148212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:00:37.148569      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:00:37.696: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:00:38.149520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:00:39.149722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:00:39.701: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:00:40.150155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:00:41.151163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:00:41.704: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:00:42.151389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:00:43.151599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:00:43.708: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:00:44.151930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:00:45.152085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:00:45.712: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:00:46.152601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:00:47.152703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:00:47.716: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:00:48.153007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:00:49.153731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:00:49.721: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:00:50.153820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:00:51.153978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:00:51.725: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:00:52.154626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:00:53.154720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:00:53.729: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:00:54.155786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:00:55.156688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:00:55.733: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:00:56.156834      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:00:57.156925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:00:57.737: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:00:58.156966      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:00:59.157286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:00:59.741: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:01:00.158076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:01:01.158263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:01:01.746: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:01:02.159017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:01:03.159342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:01:03.750: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:01:04.160377      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:01:05.160482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:01:05.755: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:01:06.160581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:01:07.160964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:01:07.759: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:01:08.161887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:01:09.162061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:01:09.762: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:01:10.163057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:01:11.163118      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:01:11.766: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:01:12.163791      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:01:13.163901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:01:13.769: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:01:14.164382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:01:15.164492      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:01:15.775: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:01:16.164740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:01:17.165040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:01:17.779: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:01:18.165147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:01:19.165343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:01:19.783: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:01:20.165391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:01:21.165765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:01:21.788: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  E0608 14:01:22.166145      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:01:23.166504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:01:23.792: INFO: Get pod liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f in namespace container-probe-193
  Jun  8 14:01:23.792: INFO: Restart count of pod container-probe-193/liveness-e0a9a72e-b2a5-4762-9c58-13be7eca8a4f is now 5 (2m32.315202443s elapsed)
  STEP: deleting the pod @ 06/08/24 14:01:23.792
  Jun  8 14:01:23.804: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-193" for this suite. @ 06/08/24 14:01:23.807
• [154.369 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 06/08/24 14:01:23.813
  Jun  8 14:01:23.813: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename pods @ 06/08/24 14:01:23.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 14:01:23.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 14:01:23.83
  STEP: creating the pod @ 06/08/24 14:01:23.831
  STEP: submitting the pod to kubernetes @ 06/08/24 14:01:23.831
  STEP: verifying QOS class is set on the pod @ 06/08/24 14:01:23.839
  Jun  8 14:01:23.843: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2460" for this suite. @ 06/08/24 14:01:23.846
• [0.038 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 06/08/24 14:01:23.851
  Jun  8 14:01:23.851: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename chunking @ 06/08/24 14:01:23.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 14:01:23.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 14:01:23.868
  STEP: creating a large number of resources @ 06/08/24 14:01:23.869
  E0608 14:01:24.166767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:01:25.166997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:01:26.167866      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:01:27.167950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:01:28.168176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:01:29.168866      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:01:30.169513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:01:31.169798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:01:32.170835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:01:33.170886      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:01:34.170925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:01:35.171445      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:01:36.171837      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:01:37.172098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:01:38.172442      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:01:39.172689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:01:40.172880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:01:41.173703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 06/08/24 14:01:41.556
  Jun  8 14:01:41.607: INFO: Retrieved 17/17 results with rv 47469 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NjksInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Jun  8 14:01:41.655: INFO: Retrieved 17/17 results with rv 47469 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NjksInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Jun  8 14:01:41.705: INFO: Retrieved 17/17 results with rv 47469 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NjksInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Jun  8 14:01:41.756: INFO: Retrieved 17/17 results with rv 47469 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NjksInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Jun  8 14:01:41.806: INFO: Retrieved 17/17 results with rv 47469 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NjksInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Jun  8 14:01:41.856: INFO: Retrieved 17/17 results with rv 47469 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NjksInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Jun  8 14:01:41.907: INFO: Retrieved 17/17 results with rv 47469 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NjksInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Jun  8 14:01:41.956: INFO: Retrieved 17/17 results with rv 47469 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NjksInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Jun  8 14:01:42.005: INFO: Retrieved 17/17 results with rv 47469 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NjksInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Jun  8 14:01:42.055: INFO: Retrieved 17/17 results with rv 47469 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NjksInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Jun  8 14:01:42.106: INFO: Retrieved 17/17 results with rv 47469 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NjksInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Jun  8 14:01:42.156: INFO: Retrieved 17/17 results with rv 47469 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NjksInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  E0608 14:01:42.174274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:01:42.206: INFO: Retrieved 17/17 results with rv 47469 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NjksInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Jun  8 14:01:42.256: INFO: Retrieved 17/17 results with rv 47469 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NjksInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Jun  8 14:01:42.305: INFO: Retrieved 17/17 results with rv 47469 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NjksInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Jun  8 14:01:42.356: INFO: Retrieved 17/17 results with rv 47469 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NjksInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Jun  8 14:01:42.405: INFO: Retrieved 17/17 results with rv 47469 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NjksInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Jun  8 14:01:42.455: INFO: Retrieved 17/17 results with rv 47469 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NjksInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Jun  8 14:01:42.505: INFO: Retrieved 17/17 results with rv 47469 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NjksInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Jun  8 14:01:42.555: INFO: Retrieved 17/17 results with rv 47469 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NjksInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Jun  8 14:01:42.606: INFO: Retrieved 17/17 results with rv 47469 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NjksInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Jun  8 14:01:42.656: INFO: Retrieved 17/17 results with rv 47469 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NjksInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Jun  8 14:01:42.705: INFO: Retrieved 17/17 results with rv 47469 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NjksInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Jun  8 14:01:42.755: INFO: Retrieved 9/17 results with rv 47469 and continue 
  Jun  8 14:01:42.806: INFO: Retrieved 17/17 results with rv 47472 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzIsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Jun  8 14:01:42.856: INFO: Retrieved 17/17 results with rv 47472 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Jun  8 14:01:42.906: INFO: Retrieved 17/17 results with rv 47472 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzIsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Jun  8 14:01:42.956: INFO: Retrieved 17/17 results with rv 47472 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzIsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Jun  8 14:01:43.006: INFO: Retrieved 17/17 results with rv 47472 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzIsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Jun  8 14:01:43.056: INFO: Retrieved 17/17 results with rv 47472 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzIsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Jun  8 14:01:43.106: INFO: Retrieved 17/17 results with rv 47472 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzIsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Jun  8 14:01:43.155: INFO: Retrieved 17/17 results with rv 47472 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzIsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  E0608 14:01:43.174601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:01:43.205: INFO: Retrieved 17/17 results with rv 47472 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzIsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Jun  8 14:01:43.256: INFO: Retrieved 17/17 results with rv 47472 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzIsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Jun  8 14:01:43.306: INFO: Retrieved 17/17 results with rv 47472 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzIsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Jun  8 14:01:43.355: INFO: Retrieved 17/17 results with rv 47472 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzIsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Jun  8 14:01:43.406: INFO: Retrieved 17/17 results with rv 47472 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzIsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Jun  8 14:01:43.455: INFO: Retrieved 17/17 results with rv 47472 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzIsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Jun  8 14:01:43.506: INFO: Retrieved 17/17 results with rv 47472 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzIsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Jun  8 14:01:43.556: INFO: Retrieved 17/17 results with rv 47472 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzIsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Jun  8 14:01:43.606: INFO: Retrieved 17/17 results with rv 47472 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzIsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Jun  8 14:01:43.655: INFO: Retrieved 17/17 results with rv 47472 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzIsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Jun  8 14:01:43.706: INFO: Retrieved 17/17 results with rv 47472 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzIsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Jun  8 14:01:43.755: INFO: Retrieved 17/17 results with rv 47472 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzIsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Jun  8 14:01:43.805: INFO: Retrieved 17/17 results with rv 47472 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzIsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Jun  8 14:01:43.856: INFO: Retrieved 17/17 results with rv 47472 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzIsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Jun  8 14:01:43.905: INFO: Retrieved 17/17 results with rv 47472 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzIsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Jun  8 14:01:43.955: INFO: Retrieved 9/17 results with rv 47472 and continue 
  Jun  8 14:01:44.006: INFO: Retrieved 17/17 results with rv 47474 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzQsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Jun  8 14:01:44.056: INFO: Retrieved 17/17 results with rv 47474 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzQsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Jun  8 14:01:44.105: INFO: Retrieved 17/17 results with rv 47474 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzQsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Jun  8 14:01:44.156: INFO: Retrieved 17/17 results with rv 47474 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzQsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  E0608 14:01:44.175549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:01:44.205: INFO: Retrieved 17/17 results with rv 47474 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzQsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Jun  8 14:01:44.255: INFO: Retrieved 17/17 results with rv 47474 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzQsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Jun  8 14:01:44.306: INFO: Retrieved 17/17 results with rv 47474 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzQsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Jun  8 14:01:44.355: INFO: Retrieved 17/17 results with rv 47474 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzQsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Jun  8 14:01:44.405: INFO: Retrieved 17/17 results with rv 47474 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzQsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Jun  8 14:01:44.456: INFO: Retrieved 17/17 results with rv 47474 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzQsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Jun  8 14:01:44.505: INFO: Retrieved 17/17 results with rv 47474 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzQsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Jun  8 14:01:44.555: INFO: Retrieved 17/17 results with rv 47474 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzQsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Jun  8 14:01:44.606: INFO: Retrieved 17/17 results with rv 47474 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzQsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Jun  8 14:01:44.657: INFO: Retrieved 17/17 results with rv 47474 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzQsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Jun  8 14:01:44.705: INFO: Retrieved 17/17 results with rv 47474 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzQsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Jun  8 14:01:44.756: INFO: Retrieved 17/17 results with rv 47474 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzQsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Jun  8 14:01:44.806: INFO: Retrieved 17/17 results with rv 47474 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzQsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Jun  8 14:01:44.855: INFO: Retrieved 17/17 results with rv 47474 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzQsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Jun  8 14:01:44.906: INFO: Retrieved 17/17 results with rv 47474 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzQsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Jun  8 14:01:44.955: INFO: Retrieved 17/17 results with rv 47474 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzQsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Jun  8 14:01:45.005: INFO: Retrieved 17/17 results with rv 47474 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzQsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Jun  8 14:01:45.056: INFO: Retrieved 17/17 results with rv 47474 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzQsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Jun  8 14:01:45.105: INFO: Retrieved 17/17 results with rv 47474 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc0NzQsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Jun  8 14:01:45.155: INFO: Retrieved 9/17 results with rv 47474 and continue 
  STEP: retrieving those results all at once @ 06/08/24 14:01:45.155
  E0608 14:01:45.175792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:01:45.212: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-5705" for this suite. @ 06/08/24 14:01:45.256
• [21.457 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 06/08/24 14:01:45.309
  Jun  8 14:01:45.309: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename gc @ 06/08/24 14:01:45.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 14:01:45.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 14:01:45.327
  Jun  8 14:01:45.349: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"47bd1aa7-e9b1-4250-b8b9-34c6dfdbdd2b", Controller:(*bool)(0xc00333b73e), BlockOwnerDeletion:(*bool)(0xc00333b73f)}}
  Jun  8 14:01:45.356: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"512b90bd-30e8-4e0f-96f1-512e02051302", Controller:(*bool)(0xc00333b966), BlockOwnerDeletion:(*bool)(0xc00333b967)}}
  Jun  8 14:01:45.362: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"ada6ab53-d01d-4e1a-af1a-fd603e2abe86", Controller:(*bool)(0xc00349c86e), BlockOwnerDeletion:(*bool)(0xc00349c86f)}}
  E0608 14:01:46.176723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:01:47.176804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:01:48.176882      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:01:49.176994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:01:50.177253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:01:50.382: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6228" for this suite. @ 06/08/24 14:01:50.385
• [5.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 06/08/24 14:01:50.391
  Jun  8 14:01:50.391: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename downward-api @ 06/08/24 14:01:50.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 14:01:50.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 14:01:50.411
  STEP: Creating a pod to test downward API volume plugin @ 06/08/24 14:01:50.413
  E0608 14:01:51.178307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:01:52.178402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:01:53.178507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:01:54.178576      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 14:01:54.431
  Jun  8 14:01:54.433: INFO: Trying to get logs from node ip-172-31-31-116 pod downwardapi-volume-f370565a-3638-4210-9b56-7082f0cd05e2 container client-container: <nil>
  STEP: delete the pod @ 06/08/24 14:01:54.448
  Jun  8 14:01:54.462: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5011" for this suite. @ 06/08/24 14:01:54.465
• [4.080 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 06/08/24 14:01:54.471
  Jun  8 14:01:54.471: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename downward-api @ 06/08/24 14:01:54.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 14:01:54.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 14:01:54.487
  STEP: Creating a pod to test downward api env vars @ 06/08/24 14:01:54.488
  E0608 14:01:55.179064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:01:56.179128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:01:57.179238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:01:58.179357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 14:01:58.51
  Jun  8 14:01:58.513: INFO: Trying to get logs from node ip-172-31-31-116 pod downward-api-dab88f5b-3b28-4773-81f0-90b585580bd8 container dapi-container: <nil>
  STEP: delete the pod @ 06/08/24 14:01:58.519
  Jun  8 14:01:58.530: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9447" for this suite. @ 06/08/24 14:01:58.533
• [4.068 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 06/08/24 14:01:58.539
  Jun  8 14:01:58.539: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename projected @ 06/08/24 14:01:58.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 14:01:58.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 14:01:58.558
  STEP: Creating configMap with name projected-configmap-test-volume-363dc712-db89-4e6b-8a1d-d14bd66a0848 @ 06/08/24 14:01:58.56
  STEP: Creating a pod to test consume configMaps @ 06/08/24 14:01:58.564
  E0608 14:01:59.179653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:00.179726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:01.179826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:02.180731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 14:02:02.581
  Jun  8 14:02:02.584: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-projected-configmaps-e8b6cff8-b51e-45f8-9362-7f1923576bec container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 06/08/24 14:02:02.59
  Jun  8 14:02:02.602: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1586" for this suite. @ 06/08/24 14:02:02.605
• [4.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 06/08/24 14:02:02.611
  Jun  8 14:02:02.611: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/08/24 14:02:02.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 14:02:02.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 14:02:02.629
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 06/08/24 14:02:02.631
  Jun  8 14:02:02.631: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  E0608 14:02:03.181268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:02:03.901: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  E0608 14:02:04.181688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:05.181697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:06.181949      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:07.182564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:08.182836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:02:08.696: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8620" for this suite. @ 06/08/24 14:02:08.702
• [6.097 seconds]
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 06/08/24 14:02:08.708
  Jun  8 14:02:08.708: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename projected @ 06/08/24 14:02:08.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 14:02:08.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 14:02:08.727
  STEP: Creating configMap with name cm-test-opt-del-380013c4-255b-46a9-9eae-52b8d38c9a4b @ 06/08/24 14:02:08.733
  STEP: Creating configMap with name cm-test-opt-upd-19e5beb6-60db-46f2-aa20-19b41370d6a9 @ 06/08/24 14:02:08.738
  STEP: Creating the pod @ 06/08/24 14:02:08.741
  E0608 14:02:09.183527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:10.183696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-380013c4-255b-46a9-9eae-52b8d38c9a4b @ 06/08/24 14:02:10.784
  STEP: Updating configmap cm-test-opt-upd-19e5beb6-60db-46f2-aa20-19b41370d6a9 @ 06/08/24 14:02:10.79
  STEP: Creating configMap with name cm-test-opt-create-679f5103-f88e-4186-a41f-01d065dffa84 @ 06/08/24 14:02:10.799
  STEP: waiting to observe update in volume @ 06/08/24 14:02:10.805
  E0608 14:02:11.184689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:12.184785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:13.185353      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:14.185468      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:15.186503      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:16.186592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:17.186714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:18.186918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:19.187028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:20.187173      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:21.187635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:22.187735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:23.187821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:24.187923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:25.188538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:26.189499      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:27.190243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:28.191038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:29.191128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:30.191326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:31.192159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:32.193181      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:33.194169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:34.194520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:35.195371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:36.195912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:37.196541      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:38.196753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:39.197305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:40.197405      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:41.197833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:42.197931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:43.198478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:44.198657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:45.199430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:46.199554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:47.200239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:48.200347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:49.200976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:50.201327      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:51.201400      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:52.201500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:53.202032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:54.202129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:55.202635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:56.203615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:57.204524      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:58.205239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:02:59.205866      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:00.205960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:01.206696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:02.206903      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:03.207365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:04.207605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:05.207655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:06.208684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:07.209326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:08.209411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:09.209626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:10.209717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:11.210679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:12.210812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:13.211407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:14.211555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:15.211932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:16.212176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:17.212222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:18.213028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:19.214140      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:20.214299      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:03:21.079: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5908" for this suite. @ 06/08/24 14:03:21.082
• [72.380 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 06/08/24 14:03:21.089
  Jun  8 14:03:21.089: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename daemonsets @ 06/08/24 14:03:21.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 14:03:21.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 14:03:21.108
  STEP: Creating simple DaemonSet "daemon-set" @ 06/08/24 14:03:21.128
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/08/24 14:03:21.134
  Jun  8 14:03:21.138: INFO: DaemonSet pods can't tolerate node ip-172-31-68-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 14:03:21.138: INFO: DaemonSet pods can't tolerate node ip-172-31-83-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 14:03:21.140: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  8 14:03:21.140: INFO: Node ip-172-31-31-116 is running 0 daemon pod, expected 1
  E0608 14:03:21.214657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:03:22.138: INFO: DaemonSet pods can't tolerate node ip-172-31-68-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 14:03:22.138: INFO: DaemonSet pods can't tolerate node ip-172-31-83-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 14:03:22.141: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  8 14:03:22.141: INFO: Node ip-172-31-31-116 is running 0 daemon pod, expected 1
  E0608 14:03:22.214794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:03:23.139: INFO: DaemonSet pods can't tolerate node ip-172-31-68-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 14:03:23.139: INFO: DaemonSet pods can't tolerate node ip-172-31-83-136 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun  8 14:03:23.142: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun  8 14:03:23.142: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 06/08/24 14:03:23.144
  Jun  8 14:03:23.148: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 06/08/24 14:03:23.148
  Jun  8 14:03:23.156: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 06/08/24 14:03:23.156
  Jun  8 14:03:23.157: INFO: Observed &DaemonSet event: ADDED
  Jun  8 14:03:23.157: INFO: Observed &DaemonSet event: MODIFIED
  Jun  8 14:03:23.157: INFO: Observed &DaemonSet event: MODIFIED
  Jun  8 14:03:23.158: INFO: Observed &DaemonSet event: MODIFIED
  Jun  8 14:03:23.158: INFO: Observed &DaemonSet event: MODIFIED
  Jun  8 14:03:23.158: INFO: Observed &DaemonSet event: MODIFIED
  Jun  8 14:03:23.158: INFO: Found daemon set daemon-set in namespace daemonsets-9102 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jun  8 14:03:23.158: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 06/08/24 14:03:23.158
  STEP: watching for the daemon set status to be patched @ 06/08/24 14:03:23.165
  Jun  8 14:03:23.166: INFO: Observed &DaemonSet event: ADDED
  Jun  8 14:03:23.166: INFO: Observed &DaemonSet event: MODIFIED
  Jun  8 14:03:23.166: INFO: Observed &DaemonSet event: MODIFIED
  Jun  8 14:03:23.166: INFO: Observed &DaemonSet event: MODIFIED
  Jun  8 14:03:23.167: INFO: Observed &DaemonSet event: MODIFIED
  Jun  8 14:03:23.167: INFO: Observed &DaemonSet event: MODIFIED
  Jun  8 14:03:23.167: INFO: Observed daemon set daemon-set in namespace daemonsets-9102 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jun  8 14:03:23.167: INFO: Observed &DaemonSet event: MODIFIED
  Jun  8 14:03:23.167: INFO: Found daemon set daemon-set in namespace daemonsets-9102 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Jun  8 14:03:23.167: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 06/08/24 14:03:23.171
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9102, will wait for the garbage collector to delete the pods @ 06/08/24 14:03:23.171
  E0608 14:03:23.215558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:03:23.231: INFO: Deleting DaemonSet.extensions daemon-set took: 6.828219ms
  Jun  8 14:03:23.332: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.090734ms
  E0608 14:03:24.215656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:25.216702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:03:25.836: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  8 14:03:25.836: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun  8 14:03:25.839: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"48355"},"items":null}

  Jun  8 14:03:25.842: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"48355"},"items":null}

  Jun  8 14:03:25.852: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9102" for this suite. @ 06/08/24 14:03:25.854
• [4.771 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 06/08/24 14:03:25.86
  Jun  8 14:03:25.860: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename sysctl @ 06/08/24 14:03:25.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 14:03:25.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 14:03:25.876
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 06/08/24 14:03:25.879
  STEP: Watching for error events or started pod @ 06/08/24 14:03:25.888
  E0608 14:03:26.217151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:27.217238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 06/08/24 14:03:27.892
  E0608 14:03:28.217424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:29.217502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 06/08/24 14:03:29.904
  STEP: Getting logs from the pod @ 06/08/24 14:03:29.904
  STEP: Checking that the sysctl is actually updated @ 06/08/24 14:03:29.915
  Jun  8 14:03:29.915: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-801" for this suite. @ 06/08/24 14:03:29.921
• [4.067 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 06/08/24 14:03:29.926
  Jun  8 14:03:29.926: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename resourcequota @ 06/08/24 14:03:29.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 14:03:29.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 14:03:29.942
  STEP: Creating resourceQuota "e2e-rq-status-srmr8" @ 06/08/24 14:03:29.947
  Jun  8 14:03:29.956: INFO: Resource quota "e2e-rq-status-srmr8" reports spec: hard cpu limit of 500m
  Jun  8 14:03:29.956: INFO: Resource quota "e2e-rq-status-srmr8" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-srmr8" /status @ 06/08/24 14:03:29.956
  STEP: Confirm /status for "e2e-rq-status-srmr8" resourceQuota via watch @ 06/08/24 14:03:29.962
  Jun  8 14:03:29.964: INFO: observed resourceQuota "e2e-rq-status-srmr8" in namespace "resourcequota-2199" with hard status: v1.ResourceList(nil)
  Jun  8 14:03:29.964: INFO: Found resourceQuota "e2e-rq-status-srmr8" in namespace "resourcequota-2199" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Jun  8 14:03:29.964: INFO: ResourceQuota "e2e-rq-status-srmr8" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 06/08/24 14:03:29.967
  Jun  8 14:03:29.971: INFO: Resource quota "e2e-rq-status-srmr8" reports spec: hard cpu limit of 1
  Jun  8 14:03:29.971: INFO: Resource quota "e2e-rq-status-srmr8" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-srmr8" /status @ 06/08/24 14:03:29.971
  STEP: Confirm /status for "e2e-rq-status-srmr8" resourceQuota via watch @ 06/08/24 14:03:29.977
  Jun  8 14:03:29.978: INFO: observed resourceQuota "e2e-rq-status-srmr8" in namespace "resourcequota-2199" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Jun  8 14:03:29.978: INFO: Found resourceQuota "e2e-rq-status-srmr8" in namespace "resourcequota-2199" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Jun  8 14:03:29.979: INFO: ResourceQuota "e2e-rq-status-srmr8" /status was patched
  STEP: Get "e2e-rq-status-srmr8" /status @ 06/08/24 14:03:29.979
  Jun  8 14:03:29.981: INFO: Resourcequota "e2e-rq-status-srmr8" reports status: hard cpu of 1
  Jun  8 14:03:29.981: INFO: Resourcequota "e2e-rq-status-srmr8" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-srmr8" /status before checking Spec is unchanged @ 06/08/24 14:03:29.984
  Jun  8 14:03:29.988: INFO: Resourcequota "e2e-rq-status-srmr8" reports status: hard cpu of 2
  Jun  8 14:03:29.988: INFO: Resourcequota "e2e-rq-status-srmr8" reports status: hard memory of 2Gi
  Jun  8 14:03:29.989: INFO: Found resourceQuota "e2e-rq-status-srmr8" in namespace "resourcequota-2199" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  Jun  8 14:03:29.992: INFO: ResourceQuota "e2e-rq-status-srmr8" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-srmr8", GenerateName:"", Namespace:"resourcequota-2199", SelfLink:"", UID:"26566ba7-edf3-4141-b84d-f405d00da9bd", ResourceVersion:"48420", Generation:0, CreationTimestamp:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-srmr8"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f614b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f614e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f61518), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 14:03:30.218091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:31.219137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:32.219471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:33.219659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:34.219783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:03:34.993: INFO: ResourceQuota "e2e-rq-status-srmr8" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-srmr8", GenerateName:"", Namespace:"resourcequota-2199", SelfLink:"", UID:"26566ba7-edf3-4141-b84d-f405d00da9bd", ResourceVersion:"48420", Generation:0, CreationTimestamp:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-srmr8"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ea4a50), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ea4a98), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ea4ac8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 14:03:35.220709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:36.221726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:37.221884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:38.222054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:39.222129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:03:39.994: INFO: ResourceQuota "e2e-rq-status-srmr8" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-srmr8", GenerateName:"", Namespace:"resourcequota-2199", SelfLink:"", UID:"26566ba7-edf3-4141-b84d-f405d00da9bd", ResourceVersion:"48420", Generation:0, CreationTimestamp:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-srmr8"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f61830), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f61878), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f618a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 14:03:40.222179      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:41.222286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:42.222395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:43.222461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:44.222558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:03:44.994: INFO: ResourceQuota "e2e-rq-status-srmr8" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-srmr8", GenerateName:"", Namespace:"resourcequota-2199", SelfLink:"", UID:"26566ba7-edf3-4141-b84d-f405d00da9bd", ResourceVersion:"48420", Generation:0, CreationTimestamp:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-srmr8"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ea4e10), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ea4e58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ea4e88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 14:03:45.223522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:46.223641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:47.223753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:48.224809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:49.224991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:03:49.993: INFO: ResourceQuota "e2e-rq-status-srmr8" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-srmr8", GenerateName:"", Namespace:"resourcequota-2199", SelfLink:"", UID:"26566ba7-edf3-4141-b84d-f405d00da9bd", ResourceVersion:"48420", Generation:0, CreationTimestamp:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-srmr8"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ea5410), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ea5440), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ea5470), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 14:03:50.225093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:51.225206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:52.225325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:53.225410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:54.225508      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:03:54.994: INFO: ResourceQuota "e2e-rq-status-srmr8" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-srmr8", GenerateName:"", Namespace:"resourcequota-2199", SelfLink:"", UID:"26566ba7-edf3-4141-b84d-f405d00da9bd", ResourceVersion:"48420", Generation:0, CreationTimestamp:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-srmr8"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ea5728), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ea5770), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ea57b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 14:03:55.226529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:56.226643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:57.226857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:58.227044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:03:59.227342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:03:59.993: INFO: ResourceQuota "e2e-rq-status-srmr8" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-srmr8", GenerateName:"", Namespace:"resourcequota-2199", SelfLink:"", UID:"26566ba7-edf3-4141-b84d-f405d00da9bd", ResourceVersion:"48420", Generation:0, CreationTimestamp:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-srmr8"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ea59c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ea5a10), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ea5a40), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 14:04:00.228235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:01.228340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:02.228556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:03.228726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:04.228833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:04:04.993: INFO: ResourceQuota "e2e-rq-status-srmr8" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-srmr8", GenerateName:"", Namespace:"resourcequota-2199", SelfLink:"", UID:"26566ba7-edf3-4141-b84d-f405d00da9bd", ResourceVersion:"48420", Generation:0, CreationTimestamp:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-srmr8"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ea5c20), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ea5c50), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ea5c80), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 14:04:05.229062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:06.229326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:07.229419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:08.229517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:09.230003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:04:09.994: INFO: ResourceQuota "e2e-rq-status-srmr8" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-srmr8", GenerateName:"", Namespace:"resourcequota-2199", SelfLink:"", UID:"26566ba7-edf3-4141-b84d-f405d00da9bd", ResourceVersion:"48420", Generation:0, CreationTimestamp:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-srmr8"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f60120), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f60150), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f60180), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 14:04:10.229939      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:11.230126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:12.230231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:13.230765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:14.230859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:04:14.995: INFO: ResourceQuota "e2e-rq-status-srmr8" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-srmr8", GenerateName:"", Namespace:"resourcequota-2199", SelfLink:"", UID:"26566ba7-edf3-4141-b84d-f405d00da9bd", ResourceVersion:"48420", Generation:0, CreationTimestamp:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-srmr8"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ea41c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ea41f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ea4228), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 14:04:15.231821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:16.231956      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:17.232067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:18.232706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:19.232784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:04:19.994: INFO: ResourceQuota "e2e-rq-status-srmr8" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-srmr8", GenerateName:"", Namespace:"resourcequota-2199", SelfLink:"", UID:"26566ba7-edf3-4141-b84d-f405d00da9bd", ResourceVersion:"48420", Generation:0, CreationTimestamp:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-srmr8"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ea44c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ea44f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ea4540), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 14:04:20.233678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:21.233785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:22.234253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:23.234460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:24.234546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:04:24.994: INFO: ResourceQuota "e2e-rq-status-srmr8" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-srmr8", GenerateName:"", Namespace:"resourcequota-2199", SelfLink:"", UID:"26566ba7-edf3-4141-b84d-f405d00da9bd", ResourceVersion:"48420", Generation:0, CreationTimestamp:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-srmr8"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f604e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f60510), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f60558), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 14:04:25.234586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:26.234668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:27.235707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:28.236706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:29.236885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:04:29.994: INFO: ResourceQuota "e2e-rq-status-srmr8" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-srmr8", GenerateName:"", Namespace:"resourcequota-2199", SelfLink:"", UID:"26566ba7-edf3-4141-b84d-f405d00da9bd", ResourceVersion:"48420", Generation:0, CreationTimestamp:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-srmr8"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ea4900), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ea4948), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ea4978), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 14:04:30.237338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:31.237594      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:32.237687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:33.237868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:34.238044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:04:34.994: INFO: ResourceQuota "e2e-rq-status-srmr8" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-srmr8", GenerateName:"", Namespace:"resourcequota-2199", SelfLink:"", UID:"26566ba7-edf3-4141-b84d-f405d00da9bd", ResourceVersion:"48420", Generation:0, CreationTimestamp:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-srmr8"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f60858), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f60888), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f608d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 14:04:35.239167      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:36.239216      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:37.239420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:38.239636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:39.239723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:04:39.994: INFO: ResourceQuota "e2e-rq-status-srmr8" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-srmr8", GenerateName:"", Namespace:"resourcequota-2199", SelfLink:"", UID:"26566ba7-edf3-4141-b84d-f405d00da9bd", ResourceVersion:"48420", Generation:0, CreationTimestamp:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-srmr8"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ea4c90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ea4cd8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ea4d08), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 14:04:40.239828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:41.240813      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:42.241120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:43.241314      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:44.241509      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:04:44.994: INFO: ResourceQuota "e2e-rq-status-srmr8" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-srmr8", GenerateName:"", Namespace:"resourcequota-2199", SelfLink:"", UID:"26566ba7-edf3-4141-b84d-f405d00da9bd", ResourceVersion:"48420", Generation:0, CreationTimestamp:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-srmr8"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f60be8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f60c18), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f60c48), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 14:04:45.242557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:46.243549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:47.243640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:48.244699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:49.244830      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:04:49.994: INFO: ResourceQuota "e2e-rq-status-srmr8" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-srmr8", GenerateName:"", Namespace:"resourcequota-2199", SelfLink:"", UID:"26566ba7-edf3-4141-b84d-f405d00da9bd", ResourceVersion:"48420", Generation:0, CreationTimestamp:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-srmr8"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f60eb8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f60ee8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f60f18), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 14:04:50.245483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:51.245580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:52.245684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:53.245921      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:54.246016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:04:54.994: INFO: ResourceQuota "e2e-rq-status-srmr8" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-srmr8", GenerateName:"", Namespace:"resourcequota-2199", SelfLink:"", UID:"26566ba7-edf3-4141-b84d-f405d00da9bd", ResourceVersion:"48420", Generation:0, CreationTimestamp:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-srmr8"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ea5458), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ea5488), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ea54d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 14:04:55.246253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:56.247259      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:57.247363      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:58.247557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:04:59.247647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:04:59.994: INFO: ResourceQuota "e2e-rq-status-srmr8" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-srmr8", GenerateName:"", Namespace:"resourcequota-2199", SelfLink:"", UID:"26566ba7-edf3-4141-b84d-f405d00da9bd", ResourceVersion:"48420", Generation:0, CreationTimestamp:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-srmr8"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ea56e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ea5728), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ea5770), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 14:05:00.248728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:01.248889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:02.248991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:03.249312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:04.249537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:05:04.995: INFO: ResourceQuota "e2e-rq-status-srmr8" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-srmr8", GenerateName:"", Namespace:"resourcequota-2199", SelfLink:"", UID:"26566ba7-edf3-4141-b84d-f405d00da9bd", ResourceVersion:"48420", Generation:0, CreationTimestamp:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-srmr8"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ea5a28), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ea5a58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ea5a88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 14:05:05.250482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:06.250691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:07.250784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:08.250988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:09.251131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:05:09.994: INFO: ResourceQuota "e2e-rq-status-srmr8" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-srmr8", GenerateName:"", Namespace:"resourcequota-2199", SelfLink:"", UID:"26566ba7-edf3-4141-b84d-f405d00da9bd", ResourceVersion:"48420", Generation:0, CreationTimestamp:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-srmr8"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f61410), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f61440), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f61470), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 14:05:10.252033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:11.253038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:12.253129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:13.253304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:14.253476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:05:14.993: INFO: ResourceQuota "e2e-rq-status-srmr8" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-srmr8", GenerateName:"", Namespace:"resourcequota-2199", SelfLink:"", UID:"26566ba7-edf3-4141-b84d-f405d00da9bd", ResourceVersion:"48420", Generation:0, CreationTimestamp:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-srmr8"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f616e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f61710), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 8, 14, 3, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f61740), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0608 14:05:15.254123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:16.254198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:17.254896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:18.255002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:19.255263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:05:19.994: INFO: ResourceQuota "e2e-rq-status-srmr8" Spec was unchanged and /status reset
  Jun  8 14:05:19.995: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2199" for this suite. @ 06/08/24 14:05:19.998
• [110.078 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 06/08/24 14:05:20.005
  Jun  8 14:05:20.005: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename subpath @ 06/08/24 14:05:20.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 14:05:20.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 14:05:20.023
  STEP: Setting up data @ 06/08/24 14:05:20.025
  STEP: Creating pod pod-subpath-test-configmap-ggkd @ 06/08/24 14:05:20.033
  STEP: Creating a pod to test atomic-volume-subpath @ 06/08/24 14:05:20.033
  E0608 14:05:20.255911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:21.255999      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:22.256542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:23.256749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:24.257802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:25.257886      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:26.258516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:27.258618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:28.259383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:29.259630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:30.260482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:31.260576      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:32.261115      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:33.261204      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:34.261670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:35.262052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:36.263095      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:37.263168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:38.264111      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:39.264203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:40.265172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:41.265282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 14:05:42.091
  Jun  8 14:05:42.094: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-subpath-test-configmap-ggkd container test-container-subpath-configmap-ggkd: <nil>
  STEP: delete the pod @ 06/08/24 14:05:42.103
  STEP: Deleting pod pod-subpath-test-configmap-ggkd @ 06/08/24 14:05:42.118
  Jun  8 14:05:42.118: INFO: Deleting pod "pod-subpath-test-configmap-ggkd" in namespace "subpath-7525"
  Jun  8 14:05:42.120: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7525" for this suite. @ 06/08/24 14:05:42.124
• [22.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 06/08/24 14:05:42.13
  Jun  8 14:05:42.130: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename subpath @ 06/08/24 14:05:42.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 14:05:42.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 14:05:42.148
  STEP: Setting up data @ 06/08/24 14:05:42.15
  STEP: Creating pod pod-subpath-test-projected-5fw4 @ 06/08/24 14:05:42.16
  STEP: Creating a pod to test atomic-volume-subpath @ 06/08/24 14:05:42.16
  E0608 14:05:42.265732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:43.265942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:44.266551      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:45.266649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:46.267370      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:47.267476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:48.268024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:49.268112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:50.268134      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:51.268217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:52.268953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:53.269161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:54.269365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:55.269565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:56.270351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:57.270499      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:58.270585      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:05:59.270700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:06:00.271152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:06:01.271297      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:06:02.271514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:06:03.271689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 14:06:04.221
  Jun  8 14:06:04.225: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-subpath-test-projected-5fw4 container test-container-subpath-projected-5fw4: <nil>
  STEP: delete the pod @ 06/08/24 14:06:04.231
  STEP: Deleting pod pod-subpath-test-projected-5fw4 @ 06/08/24 14:06:04.248
  Jun  8 14:06:04.248: INFO: Deleting pod "pod-subpath-test-projected-5fw4" in namespace "subpath-9315"
  Jun  8 14:06:04.250: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9315" for this suite. @ 06/08/24 14:06:04.255
• [22.130 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1538
  STEP: Creating a kubernetes client @ 06/08/24 14:06:04.26
  Jun  8 14:06:04.260: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename kubectl @ 06/08/24 14:06:04.261
  E0608 14:06:04.272418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 14:06:04.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 14:06:04.278
  STEP: creating Agnhost RC @ 06/08/24 14:06:04.28
  Jun  8 14:06:04.280: INFO: namespace kubectl-8778
  Jun  8 14:06:04.280: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-8778 create -f -'
  Jun  8 14:06:04.361: INFO: stderr: ""
  Jun  8 14:06:04.361: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 06/08/24 14:06:04.361
  E0608 14:06:05.273537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:06:05.365: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun  8 14:06:05.365: INFO: Found 1 / 1
  Jun  8 14:06:05.365: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Jun  8 14:06:05.369: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun  8 14:06:05.369: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jun  8 14:06:05.369: INFO: wait on agnhost-primary startup in kubectl-8778 
  Jun  8 14:06:05.369: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-8778 logs agnhost-primary-nbczg agnhost-primary'
  Jun  8 14:06:05.418: INFO: stderr: ""
  Jun  8 14:06:05.419: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 06/08/24 14:06:05.419
  Jun  8 14:06:05.419: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-8778 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Jun  8 14:06:05.472: INFO: stderr: ""
  Jun  8 14:06:05.472: INFO: stdout: "service/rm2 exposed\n"
  Jun  8 14:06:05.476: INFO: Service rm2 in namespace kubectl-8778 found.
  E0608 14:06:06.274326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:06:07.274466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: exposing service @ 06/08/24 14:06:07.483
  Jun  8 14:06:07.483: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=kubectl-8778 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Jun  8 14:06:07.539: INFO: stderr: ""
  Jun  8 14:06:07.539: INFO: stdout: "service/rm3 exposed\n"
  Jun  8 14:06:07.542: INFO: Service rm3 in namespace kubectl-8778 found.
  E0608 14:06:08.274977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:06:09.275209      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:06:09.554: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8778" for this suite. @ 06/08/24 14:06:09.558
• [5.311 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 06/08/24 14:06:09.572
  Jun  8 14:06:09.572: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename kubelet-test @ 06/08/24 14:06:09.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 14:06:09.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 14:06:09.601
  Jun  8 14:06:09.643: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2936" for this suite. @ 06/08/24 14:06:09.647
• [0.083 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 06/08/24 14:06:09.655
  Jun  8 14:06:09.655: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename services @ 06/08/24 14:06:09.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 14:06:09.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 14:06:09.685
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-6768 @ 06/08/24 14:06:09.688
  STEP: changing the ExternalName service to type=ClusterIP @ 06/08/24 14:06:09.693
  STEP: creating replication controller externalname-service in namespace services-6768 @ 06/08/24 14:06:09.707
  I0608 14:06:09.714643      19 runners.go:197] Created replication controller with name: externalname-service, namespace: services-6768, replica count: 2
  E0608 14:06:10.276028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:06:11.276720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:06:12.276778      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0608 14:06:12.765354      19 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun  8 14:06:12.765: INFO: Creating new exec pod
  E0608 14:06:13.276899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:06:14.276985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:06:15.277965      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:06:15.781: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-6768 exec execpodckrc2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jun  8 14:06:15.889: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jun  8 14:06:15.889: INFO: stdout: ""
  E0608 14:06:16.278338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:06:16.781: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-6768 exec execpodckrc2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jun  8 14:06:16.870: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jun  8 14:06:16.870: INFO: stdout: "externalname-service-qqsfj"
  Jun  8 14:06:16.870: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-6768 exec execpodckrc2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.104 80'
  Jun  8 14:06:16.950: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.104 80\nConnection to 10.152.183.104 80 port [tcp/http] succeeded!\n"
  Jun  8 14:06:16.950: INFO: stdout: "externalname-service-qqsfj"
  Jun  8 14:06:16.950: INFO: Cleaning up the ExternalName to ClusterIP test service
  Jun  8 14:06:16.978: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6768" for this suite. @ 06/08/24 14:06:16.986
• [7.342 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:655
  STEP: Creating a kubernetes client @ 06/08/24 14:06:16.998
  Jun  8 14:06:16.998: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename job @ 06/08/24 14:06:16.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 14:06:17.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 14:06:17.021
  STEP: Creating a job @ 06/08/24 14:06:17.024
  STEP: Ensuring active pods == parallelism @ 06/08/24 14:06:17.031
  E0608 14:06:17.278446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:06:18.278630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 06/08/24 14:06:19.035
  E0608 14:06:19.278721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:06:19.552: INFO: Successfully updated pod "adopt-release-nbwm5"
  STEP: Checking that the Job readopts the Pod @ 06/08/24 14:06:19.552
  E0608 14:06:20.279149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:06:21.279235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 06/08/24 14:06:21.56
  Jun  8 14:06:22.072: INFO: Successfully updated pod "adopt-release-nbwm5"
  STEP: Checking that the Job releases the Pod @ 06/08/24 14:06:22.072
  E0608 14:06:22.279863      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:06:23.280715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:06:24.086: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5226" for this suite. @ 06/08/24 14:06:24.09
• [7.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 06/08/24 14:06:24.097
  Jun  8 14:06:24.097: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename runtimeclass @ 06/08/24 14:06:24.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 14:06:24.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 14:06:24.114
  Jun  8 14:06:24.121: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4748" for this suite. @ 06/08/24 14:06:24.124
• [0.032 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 06/08/24 14:06:24.129
  Jun  8 14:06:24.129: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename services @ 06/08/24 14:06:24.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 14:06:24.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 14:06:24.145
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-7376 @ 06/08/24 14:06:24.147
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 06/08/24 14:06:24.172
  STEP: creating service externalsvc in namespace services-7376 @ 06/08/24 14:06:24.173
  STEP: creating replication controller externalsvc in namespace services-7376 @ 06/08/24 14:06:24.185
  I0608 14:06:24.194942      19 runners.go:197] Created replication controller with name: externalsvc, namespace: services-7376, replica count: 2
  E0608 14:06:24.281144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:06:25.281363      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:06:26.281929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0608 14:06:27.246272      19 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 06/08/24 14:06:27.25
  Jun  8 14:06:27.267: INFO: Creating new exec pod
  E0608 14:06:27.282075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:06:28.283130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:06:29.283133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:06:29.286: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=services-7376 exec execpod79p6n -- /bin/sh -x -c nslookup nodeport-service.services-7376.svc.cluster.local'
  Jun  8 14:06:29.409: INFO: stderr: "+ nslookup nodeport-service.services-7376.svc.cluster.local\n"
  Jun  8 14:06:29.409: INFO: stdout: "Server:\t\t10.152.183.150\nAddress:\t10.152.183.150#53\n\nnodeport-service.services-7376.svc.cluster.local\tcanonical name = externalsvc.services-7376.svc.cluster.local.\nName:\texternalsvc.services-7376.svc.cluster.local\nAddress: 10.152.183.147\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-7376, will wait for the garbage collector to delete the pods @ 06/08/24 14:06:29.409
  Jun  8 14:06:29.470: INFO: Deleting ReplicationController externalsvc took: 7.467353ms
  Jun  8 14:06:29.573: INFO: Terminating ReplicationController externalsvc pods took: 103.386499ms
  E0608 14:06:30.284138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:06:31.284436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:06:32.088: INFO: Cleaning up the NodePort to ExternalName test service
  Jun  8 14:06:32.098: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7376" for this suite. @ 06/08/24 14:06:32.103
• [7.981 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:784
  STEP: Creating a kubernetes client @ 06/08/24 14:06:32.11
  Jun  8 14:06:32.110: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename job @ 06/08/24 14:06:32.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 14:06:32.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 14:06:32.128
  STEP: Creating a job @ 06/08/24 14:06:32.131
  STEP: Ensure pods equal to parallelism count is attached to the job @ 06/08/24 14:06:32.137
  E0608 14:06:32.284644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:06:33.284859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 06/08/24 14:06:34.141
  STEP: updating /status @ 06/08/24 14:06:34.148
  STEP: get /status @ 06/08/24 14:06:34.159
  Jun  8 14:06:34.167: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5631" for this suite. @ 06/08/24 14:06:34.171
• [2.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 06/08/24 14:06:34.177
  Jun  8 14:06:34.177: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename runtimeclass @ 06/08/24 14:06:34.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 14:06:34.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 14:06:34.192
  STEP: Deleting RuntimeClass runtimeclass-9475-delete-me @ 06/08/24 14:06:34.203
  STEP: Waiting for the RuntimeClass to disappear @ 06/08/24 14:06:34.214
  Jun  8 14:06:34.225: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9475" for this suite. @ 06/08/24 14:06:34.229
• [0.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 06/08/24 14:06:34.243
  Jun  8 14:06:34.243: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/08/24 14:06:34.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 14:06:34.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 14:06:34.263
  Jun  8 14:06:34.266: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  E0608 14:06:34.285114      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:06:35.285375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 06/08/24 14:06:35.501
  Jun  8 14:06:35.501: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=crd-publish-openapi-721 --namespace=crd-publish-openapi-721 create -f -'
  E0608 14:06:36.286260      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:06:37.286388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:06:37.566: INFO: stderr: ""
  Jun  8 14:06:37.566: INFO: stdout: "e2e-test-crd-publish-openapi-7821-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Jun  8 14:06:37.566: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=crd-publish-openapi-721 --namespace=crd-publish-openapi-721 delete e2e-test-crd-publish-openapi-7821-crds test-cr'
  Jun  8 14:06:37.612: INFO: stderr: ""
  Jun  8 14:06:37.612: INFO: stdout: "e2e-test-crd-publish-openapi-7821-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Jun  8 14:06:37.612: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=crd-publish-openapi-721 --namespace=crd-publish-openapi-721 apply -f -'
  Jun  8 14:06:37.663: INFO: stderr: ""
  Jun  8 14:06:37.663: INFO: stdout: "e2e-test-crd-publish-openapi-7821-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Jun  8 14:06:37.663: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=crd-publish-openapi-721 --namespace=crd-publish-openapi-721 delete e2e-test-crd-publish-openapi-7821-crds test-cr'
  Jun  8 14:06:37.707: INFO: stderr: ""
  Jun  8 14:06:37.707: INFO: stdout: "e2e-test-crd-publish-openapi-7821-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 06/08/24 14:06:37.707
  Jun  8 14:06:37.707: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3402711649 --namespace=crd-publish-openapi-721 explain e2e-test-crd-publish-openapi-7821-crds'
  Jun  8 14:06:37.749: INFO: stderr: ""
  Jun  8 14:06:37.749: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-7821-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0608 14:06:38.286579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:06:39.063: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-721" for this suite. @ 06/08/24 14:06:39.07
• [4.834 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 06/08/24 14:06:39.077
  Jun  8 14:06:39.077: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename webhook @ 06/08/24 14:06:39.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 14:06:39.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 14:06:39.095
  STEP: Setting up server cert @ 06/08/24 14:06:39.114
  E0608 14:06:39.286834      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/08/24 14:06:39.298
  STEP: Deploying the webhook pod @ 06/08/24 14:06:39.307
  STEP: Wait for the deployment to be ready @ 06/08/24 14:06:39.325
  Jun  8 14:06:39.339: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0608 14:06:40.286963      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:06:41.287070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/08/24 14:06:41.35
  STEP: Verifying the service has paired with the endpoint @ 06/08/24 14:06:41.36
  E0608 14:06:42.287655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:06:42.360: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 06/08/24 14:06:42.368
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 06/08/24 14:06:42.37
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 06/08/24 14:06:42.37
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 06/08/24 14:06:42.37
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 06/08/24 14:06:42.371
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 06/08/24 14:06:42.371
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 06/08/24 14:06:42.372
  Jun  8 14:06:42.415: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4904" for this suite. @ 06/08/24 14:06:42.419
  STEP: Destroying namespace "webhook-markers-2253" for this suite. @ 06/08/24 14:06:42.428
• [3.360 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 06/08/24 14:06:42.438
  Jun  8 14:06:42.438: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename emptydir @ 06/08/24 14:06:42.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 14:06:42.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 14:06:42.459
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 06/08/24 14:06:42.468
  E0608 14:06:43.287745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:06:44.288178      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:06:45.288253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:06:46.289199      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/08/24 14:06:46.495
  Jun  8 14:06:46.498: INFO: Trying to get logs from node ip-172-31-31-116 pod pod-86d521c8-38d3-4cef-8825-3e1e7feab9d9 container test-container: <nil>
  STEP: delete the pod @ 06/08/24 14:06:46.504
  Jun  8 14:06:46.518: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-146" for this suite. @ 06/08/24 14:06:46.521
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 06/08/24 14:06:46.529
  Jun  8 14:06:46.529: INFO: >>> kubeConfig: /tmp/kubeconfig-3402711649
  STEP: Building a namespace api object, basename watch @ 06/08/24 14:06:46.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/08/24 14:06:46.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/08/24 14:06:46.543
  STEP: getting a starting resourceVersion @ 06/08/24 14:06:46.547
  STEP: starting a background goroutine to produce watch events @ 06/08/24 14:06:46.549
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 06/08/24 14:06:46.549
  E0608 14:06:47.289399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:06:48.289970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0608 14:06:49.289995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  8 14:06:49.335: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5908" for this suite. @ 06/08/24 14:06:49.384
• [2.908 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:88
  Jun  8 14:06:49.439: INFO: Running AfterSuite actions on node 1
  Jun  8 14:06:49.439: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:621
[ReportAfterSuite] PASSED [0.029 seconds]
------------------------------

Ran 388 of 7408 Specs in 6512.725 seconds
SUCCESS! -- 388 Passed | 0 Failed | 0 Pending | 7020 Skipped
PASS

Ginkgo ran 1 suite in 1h48m33.658103169s
Test Suite Passed
