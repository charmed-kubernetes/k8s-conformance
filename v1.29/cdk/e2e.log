  I0504 12:12:19.695334      19 e2e.go:117] Starting e2e run "4b941899-c088-4611-9880-f7dd13864479" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1714824738 - will randomize all specs

Will run 388 of 7407 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:77
  May  4 12:12:19.959: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 12:12:19.959: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  May  4 12:12:42.205: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  May  4 12:12:42.208: INFO: 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  May  4 12:12:42.208: INFO: e2e test version: v1.29.4
  May  4 12:12:42.209: INFO: kube-apiserver version: v1.29.4
  May  4 12:12:42.210: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 12:12:42.215: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [22.257 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 05/04/24 12:12:42.362
  May  4 12:12:42.362: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename configmap @ 05/04/24 12:12:42.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:12:42.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:12:42.39
  STEP: Creating configMap with name configmap-test-volume-bee4df58-676f-4d76-b0d5-da06aa4634fa @ 05/04/24 12:12:42.392
  STEP: Creating a pod to test consume configMaps @ 05/04/24 12:12:42.398
  STEP: Saw pod success @ 05/04/24 12:12:48.426
  May  4 12:12:48.429: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-configmaps-27173d0c-2430-45d8-992c-4b86be2014f5 container configmap-volume-test: <nil>
  STEP: delete the pod @ 05/04/24 12:12:48.441
  May  4 12:12:48.462: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3119" for this suite. @ 05/04/24 12:12:48.467
• [6.112 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 05/04/24 12:12:48.475
  May  4 12:12:48.475: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename projected @ 05/04/24 12:12:48.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:12:48.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:12:48.499
  STEP: Creating the pod @ 05/04/24 12:12:48.504
  May  4 12:12:51.057: INFO: Successfully updated pod "annotationupdatebb22bdf1-17c7-4664-9723-5d22fc85c003"
  May  4 12:12:55.082: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5860" for this suite. @ 05/04/24 12:12:55.087
• [6.622 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 05/04/24 12:12:55.098
  May  4 12:12:55.098: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename downward-api @ 05/04/24 12:12:55.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:12:55.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:12:55.123
  STEP: Creating a pod to test downward API volume plugin @ 05/04/24 12:12:55.126
  STEP: Saw pod success @ 05/04/24 12:12:59.147
  May  4 12:12:59.152: INFO: Trying to get logs from node ip-172-31-18-228 pod downwardapi-volume-d6b53f04-e000-44f5-8ced-b6329d928247 container client-container: <nil>
  STEP: delete the pod @ 05/04/24 12:12:59.158
  May  4 12:12:59.178: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3819" for this suite. @ 05/04/24 12:12:59.182
• [4.091 seconds]
------------------------------
S
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:558
  STEP: Creating a kubernetes client @ 05/04/24 12:12:59.188
  May  4 12:12:59.188: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename ingress @ 05/04/24 12:12:59.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:12:59.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:12:59.208
  STEP: getting /apis @ 05/04/24 12:12:59.211
  STEP: getting /apis/networking.k8s.io @ 05/04/24 12:12:59.216
  STEP: getting /apis/networking.k8s.iov1 @ 05/04/24 12:12:59.217
  STEP: creating @ 05/04/24 12:12:59.218
  STEP: getting @ 05/04/24 12:12:59.245
  STEP: listing @ 05/04/24 12:12:59.248
  STEP: watching @ 05/04/24 12:12:59.253
  May  4 12:12:59.253: INFO: starting watch
  STEP: cluster-wide listing @ 05/04/24 12:12:59.254
  STEP: cluster-wide watching @ 05/04/24 12:12:59.257
  May  4 12:12:59.257: INFO: starting watch
  STEP: patching @ 05/04/24 12:12:59.258
  STEP: updating @ 05/04/24 12:12:59.278
  May  4 12:12:59.303: INFO: waiting for watch events with expected annotations
  May  4 12:12:59.306: INFO: saw patched and updated annotations
  STEP: patching /status @ 05/04/24 12:12:59.308
  STEP: updating /status @ 05/04/24 12:12:59.322
  STEP: get /status @ 05/04/24 12:12:59.34
  STEP: deleting @ 05/04/24 12:12:59.343
  STEP: deleting a collection @ 05/04/24 12:12:59.361
  May  4 12:12:59.387: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-4706" for this suite. @ 05/04/24 12:12:59.391
• [0.212 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 05/04/24 12:12:59.403
  May  4 12:12:59.403: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename certificates @ 05/04/24 12:12:59.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:12:59.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:12:59.427
  STEP: getting /apis @ 05/04/24 12:12:59.804
  STEP: getting /apis/certificates.k8s.io @ 05/04/24 12:12:59.808
  STEP: getting /apis/certificates.k8s.io/v1 @ 05/04/24 12:12:59.809
  STEP: creating @ 05/04/24 12:12:59.81
  STEP: getting @ 05/04/24 12:12:59.829
  STEP: listing @ 05/04/24 12:12:59.832
  STEP: watching @ 05/04/24 12:12:59.84
  May  4 12:12:59.840: INFO: starting watch
  STEP: patching @ 05/04/24 12:12:59.842
  STEP: updating @ 05/04/24 12:12:59.846
  May  4 12:12:59.852: INFO: waiting for watch events with expected annotations
  May  4 12:12:59.852: INFO: saw patched and updated annotations
  STEP: getting /approval @ 05/04/24 12:12:59.852
  STEP: patching /approval @ 05/04/24 12:12:59.856
  STEP: updating /approval @ 05/04/24 12:12:59.863
  STEP: getting /status @ 05/04/24 12:12:59.867
  STEP: patching /status @ 05/04/24 12:12:59.871
  STEP: updating /status @ 05/04/24 12:12:59.879
  STEP: deleting @ 05/04/24 12:12:59.885
  STEP: deleting a collection @ 05/04/24 12:12:59.899
  May  4 12:12:59.916: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-8480" for this suite. @ 05/04/24 12:12:59.92
• [0.523 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 05/04/24 12:12:59.926
  May  4 12:12:59.926: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename container-runtime @ 05/04/24 12:12:59.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:12:59.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:12:59.95
  STEP: create the container @ 05/04/24 12:12:59.953
  W0504 12:12:59.960925      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/04/24 12:12:59.961
  STEP: get the container status @ 05/04/24 12:13:02.979
  STEP: the container should be terminated @ 05/04/24 12:13:02.984
  STEP: the termination message should be set @ 05/04/24 12:13:02.984
  May  4 12:13:02.984: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 05/04/24 12:13:02.984
  May  4 12:13:03.002: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3665" for this suite. @ 05/04/24 12:13:03.005
• [3.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 05/04/24 12:13:03.013
  May  4 12:13:03.013: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename downward-api @ 05/04/24 12:13:03.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:13:03.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:13:03.036
  STEP: Creating a pod to test downward API volume plugin @ 05/04/24 12:13:03.038
  STEP: Saw pod success @ 05/04/24 12:13:07.068
  May  4 12:13:07.072: INFO: Trying to get logs from node ip-172-31-18-228 pod downwardapi-volume-0f465114-1cce-4e23-adc7-395518c19801 container client-container: <nil>
  STEP: delete the pod @ 05/04/24 12:13:07.079
  May  4 12:13:07.101: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3255" for this suite. @ 05/04/24 12:13:07.104
• [4.099 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 05/04/24 12:13:07.113
  May  4 12:13:07.113: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename projected @ 05/04/24 12:13:07.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:13:07.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:13:07.137
  STEP: Creating a pod to test downward API volume plugin @ 05/04/24 12:13:07.14
  STEP: Saw pod success @ 05/04/24 12:13:11.162
  May  4 12:13:11.166: INFO: Trying to get logs from node ip-172-31-18-228 pod downwardapi-volume-64b8af16-e262-41a1-a3cd-705f462bf35d container client-container: <nil>
  STEP: delete the pod @ 05/04/24 12:13:11.172
  May  4 12:13:11.186: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6709" for this suite. @ 05/04/24 12:13:11.19
• [4.087 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 05/04/24 12:13:11.199
  May  4 12:13:11.199: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename emptydir @ 05/04/24 12:13:11.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:13:11.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:13:11.223
  STEP: Creating a pod to test emptydir volume type on node default medium @ 05/04/24 12:13:11.226
  STEP: Saw pod success @ 05/04/24 12:13:15.249
  May  4 12:13:15.254: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-0a2de006-853b-490a-a076-7995fc331e5e container test-container: <nil>
  STEP: delete the pod @ 05/04/24 12:13:15.26
  May  4 12:13:15.273: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8773" for this suite. @ 05/04/24 12:13:15.278
• [4.085 seconds]
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 05/04/24 12:13:15.284
  May  4 12:13:15.284: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename subjectreview @ 05/04/24 12:13:15.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:13:15.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:13:15.307
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-2467" @ 05/04/24 12:13:15.309
  May  4 12:13:15.315: INFO: saUsername: "system:serviceaccount:subjectreview-2467:e2e"
  May  4 12:13:15.315: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-2467"}
  May  4 12:13:15.315: INFO: saUID: "b51ffcd1-ce55-4eb5-9f65-2c3d21b28e2b"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-2467:e2e" @ 05/04/24 12:13:15.315
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-2467:e2e" @ 05/04/24 12:13:15.315
  May  4 12:13:15.317: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-2467:e2e" api 'list' configmaps in "subjectreview-2467" namespace @ 05/04/24 12:13:15.317
  May  4 12:13:15.318: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-2467:e2e" @ 05/04/24 12:13:15.318
  May  4 12:13:15.320: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  May  4 12:13:15.320: INFO: LocalSubjectAccessReview has been verified
  May  4 12:13:15.320: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-2467" for this suite. @ 05/04/24 12:13:15.334
• [0.057 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 05/04/24 12:13:15.341
  May  4 12:13:15.341: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename watch @ 05/04/24 12:13:15.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:13:15.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:13:15.366
  STEP: getting a starting resourceVersion @ 05/04/24 12:13:15.369
  STEP: starting a background goroutine to produce watch events @ 05/04/24 12:13:15.373
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 05/04/24 12:13:15.373
  May  4 12:13:18.149: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4064" for this suite. @ 05/04/24 12:13:18.196
• [2.909 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1698
  STEP: Creating a kubernetes client @ 05/04/24 12:13:18.25
  May  4 12:13:18.250: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename kubectl @ 05/04/24 12:13:18.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:13:18.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:13:18.274
  STEP: creating Agnhost RC @ 05/04/24 12:13:18.277
  May  4 12:13:18.277: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-3355 create -f -'
  May  4 12:13:18.376: INFO: stderr: ""
  May  4 12:13:18.376: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/04/24 12:13:18.376
  May  4 12:13:19.383: INFO: Selector matched 1 pods for map[app:agnhost]
  May  4 12:13:19.383: INFO: Found 1 / 1
  May  4 12:13:19.383: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 05/04/24 12:13:19.383
  May  4 12:13:19.386: INFO: Selector matched 1 pods for map[app:agnhost]
  May  4 12:13:19.387: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  May  4 12:13:19.387: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-3355 patch pod agnhost-primary-jfsx4 -p {"metadata":{"annotations":{"x":"y"}}}'
  May  4 12:13:19.441: INFO: stderr: ""
  May  4 12:13:19.441: INFO: stdout: "pod/agnhost-primary-jfsx4 patched\n"
  STEP: checking annotations @ 05/04/24 12:13:19.441
  May  4 12:13:19.445: INFO: Selector matched 1 pods for map[app:agnhost]
  May  4 12:13:19.445: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  May  4 12:13:19.445: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3355" for this suite. @ 05/04/24 12:13:19.449
• [1.206 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 05/04/24 12:13:19.456
  May  4 12:13:19.456: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename replication-controller @ 05/04/24 12:13:19.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:13:19.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:13:19.477
  STEP: Creating replication controller my-hostname-basic-328de790-cdad-4c81-b7d8-e7b48d1da93f @ 05/04/24 12:13:19.48
  May  4 12:13:19.489: INFO: Pod name my-hostname-basic-328de790-cdad-4c81-b7d8-e7b48d1da93f: Found 0 pods out of 1
  May  4 12:13:24.495: INFO: Pod name my-hostname-basic-328de790-cdad-4c81-b7d8-e7b48d1da93f: Found 1 pods out of 1
  May  4 12:13:24.495: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-328de790-cdad-4c81-b7d8-e7b48d1da93f" are running
  May  4 12:13:24.500: INFO: Pod "my-hostname-basic-328de790-cdad-4c81-b7d8-e7b48d1da93f-bm9m2" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-04 12:13:20 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-04 12:13:19 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-04 12:13:20 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-04 12:13:20 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-04 12:13:19 +0000 UTC Reason: Message:}])
  May  4 12:13:24.500: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 05/04/24 12:13:24.5
  May  4 12:13:24.510: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3708" for this suite. @ 05/04/24 12:13:24.518
• [5.071 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:469
  STEP: Creating a kubernetes client @ 05/04/24 12:13:24.527
  May  4 12:13:24.527: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename sched-pred @ 05/04/24 12:13:24.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:13:24.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:13:24.565
  May  4 12:13:24.567: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  May  4 12:13:24.574: INFO: Waiting for terminating namespaces to be deleted...
  May  4 12:13:24.576: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-18-228 before test
  May  4 12:13:24.581: INFO: nginx-ingress-controller-kubernetes-worker-f5g2d from ingress-nginx-kubernetes-worker started at 2024-05-04 12:05:09 +0000 UTC (1 container statuses recorded)
  May  4 12:13:24.581: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  May  4 12:13:24.581: INFO: calico-node-rvkmx from kube-system started at 2024-05-04 12:12:09 +0000 UTC (1 container statuses recorded)
  May  4 12:13:24.581: INFO: 	Container calico-node ready: true, restart count 0
  May  4 12:13:24.581: INFO: agnhost-primary-jfsx4 from kubectl-3355 started at 2024-05-04 12:13:18 +0000 UTC (1 container statuses recorded)
  May  4 12:13:24.581: INFO: 	Container agnhost-primary ready: true, restart count 0
  May  4 12:13:24.581: INFO: my-hostname-basic-328de790-cdad-4c81-b7d8-e7b48d1da93f-bm9m2 from replication-controller-3708 started at 2024-05-04 12:13:19 +0000 UTC (1 container statuses recorded)
  May  4 12:13:24.581: INFO: 	Container my-hostname-basic-328de790-cdad-4c81-b7d8-e7b48d1da93f ready: true, restart count 0
  May  4 12:13:24.581: INFO: sonobuoy from sonobuoy started at 2024-05-04 12:12:07 +0000 UTC (1 container statuses recorded)
  May  4 12:13:24.581: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  May  4 12:13:24.581: INFO: sonobuoy-systemd-logs-daemon-set-12e57fb52bd44eb7-llzs6 from sonobuoy started at 2024-05-04 12:12:09 +0000 UTC (2 container statuses recorded)
  May  4 12:13:24.581: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May  4 12:13:24.581: INFO: 	Container systemd-logs ready: true, restart count 0
  May  4 12:13:24.581: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-33-38 before test
  May  4 12:13:24.585: INFO: nginx-ingress-controller-kubernetes-worker-6kjkz from ingress-nginx-kubernetes-worker started at 2024-05-04 11:56:20 +0000 UTC (1 container statuses recorded)
  May  4 12:13:24.585: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  May  4 12:13:24.585: INFO: calico-node-zvlhw from kube-system started at 2024-05-04 12:11:38 +0000 UTC (1 container statuses recorded)
  May  4 12:13:24.585: INFO: 	Container calico-node ready: true, restart count 0
  May  4 12:13:24.585: INFO: coredns-bddfd76d7-66zt7 from kube-system started at 2024-05-04 11:56:59 +0000 UTC (1 container statuses recorded)
  May  4 12:13:24.585: INFO: 	Container coredns ready: true, restart count 0
  May  4 12:13:24.585: INFO: kube-state-metrics-6f48cdd76-5zgtw from kube-system started at 2024-05-04 11:56:20 +0000 UTC (1 container statuses recorded)
  May  4 12:13:24.585: INFO: 	Container kube-state-metrics ready: true, restart count 4
  May  4 12:13:24.585: INFO: metrics-server-v0.6.3-69d7fbfdf8-hdjfr from kube-system started at 2024-05-04 11:56:59 +0000 UTC (2 container statuses recorded)
  May  4 12:13:24.585: INFO: 	Container metrics-server ready: true, restart count 6
  May  4 12:13:24.585: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  May  4 12:13:24.585: INFO: dashboard-metrics-scraper-5dd7cb5fc-kfwtl from kubernetes-dashboard started at 2024-05-04 11:56:59 +0000 UTC (1 container statuses recorded)
  May  4 12:13:24.585: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  May  4 12:13:24.585: INFO: kubernetes-dashboard-7b899cb9d9-7nz54 from kubernetes-dashboard started at 2024-05-04 11:56:59 +0000 UTC (1 container statuses recorded)
  May  4 12:13:24.585: INFO: 	Container kubernetes-dashboard ready: true, restart count 5
  May  4 12:13:24.585: INFO: sonobuoy-systemd-logs-daemon-set-12e57fb52bd44eb7-6g56f from sonobuoy started at 2024-05-04 12:12:09 +0000 UTC (2 container statuses recorded)
  May  4 12:13:24.585: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May  4 12:13:24.585: INFO: 	Container systemd-logs ready: true, restart count 0
  May  4 12:13:24.585: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-72-79 before test
  May  4 12:13:24.591: INFO: nginx-ingress-controller-kubernetes-worker-b5nwc from ingress-nginx-kubernetes-worker started at 2024-05-04 12:01:33 +0000 UTC (1 container statuses recorded)
  May  4 12:13:24.591: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 4
  May  4 12:13:24.591: INFO: calico-node-gt7z9 from kube-system started at 2024-05-04 12:11:48 +0000 UTC (1 container statuses recorded)
  May  4 12:13:24.591: INFO: 	Container calico-node ready: true, restart count 0
  May  4 12:13:24.591: INFO: sonobuoy-e2e-job-8f0e1aa0da094028 from sonobuoy started at 2024-05-04 12:12:09 +0000 UTC (2 container statuses recorded)
  May  4 12:13:24.591: INFO: 	Container e2e ready: true, restart count 0
  May  4 12:13:24.591: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May  4 12:13:24.591: INFO: sonobuoy-systemd-logs-daemon-set-12e57fb52bd44eb7-wfcjh from sonobuoy started at 2024-05-04 12:12:09 +0000 UTC (2 container statuses recorded)
  May  4 12:13:24.591: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May  4 12:13:24.591: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/04/24 12:13:24.591
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/04/24 12:13:26.621
  STEP: Trying to apply a random label on the found node. @ 05/04/24 12:13:26.637
  STEP: verifying the node has the label kubernetes.io/e2e-d7c5e8df-7eb0-43f2-b24d-4740ac39dd84 42 @ 05/04/24 12:13:26.645
  STEP: Trying to relaunch the pod, now with labels. @ 05/04/24 12:13:26.652
  STEP: removing the label kubernetes.io/e2e-d7c5e8df-7eb0-43f2-b24d-4740ac39dd84 off the node ip-172-31-72-79 @ 05/04/24 12:13:28.673
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-d7c5e8df-7eb0-43f2-b24d-4740ac39dd84 @ 05/04/24 12:13:28.686
  May  4 12:13:28.689: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6331" for this suite. @ 05/04/24 12:13:28.694
• [4.173 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 05/04/24 12:13:28.701
  May  4 12:13:28.701: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename deployment @ 05/04/24 12:13:28.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:13:28.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:13:28.724
  May  4 12:13:28.727: INFO: Creating deployment "webserver-deployment"
  May  4 12:13:28.735: INFO: Waiting for observed generation 1
  May  4 12:13:30.743: INFO: Waiting for all required pods to come up
  May  4 12:13:30.748: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 05/04/24 12:13:30.748
  May  4 12:13:34.764: INFO: Waiting for deployment "webserver-deployment" to complete
  May  4 12:13:34.772: INFO: Updating deployment "webserver-deployment" with a non-existent image
  May  4 12:13:34.780: INFO: Updating deployment webserver-deployment
  May  4 12:13:34.780: INFO: Waiting for observed generation 2
  May  4 12:13:36.788: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  May  4 12:13:36.791: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  May  4 12:13:36.796: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  May  4 12:13:36.806: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  May  4 12:13:36.806: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  May  4 12:13:36.810: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  May  4 12:13:36.817: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  May  4 12:13:36.817: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  May  4 12:13:36.827: INFO: Updating deployment webserver-deployment
  May  4 12:13:36.827: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  May  4 12:13:36.833: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  May  4 12:13:36.840: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  May  4 12:13:36.856: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9949",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0532a3cc-5c99-49e9-81c8-4d31a255ff02",
      ResourceVersion: (string) (len=4) "5928",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850421608,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421614,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421608,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May  4 12:13:36.864: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9949",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "84cac797-d4e6-4764-9e71-4eb901751cf1",
      ResourceVersion: (string) (len=4) "5925",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850421614,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "0532a3cc-5c99-49e9-81c8-4d31a255ff02",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421614,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 35 33 32 61 33  63 63 2d 35 63 39 39 2d  |\"0532a3cc-5c99-|
              00000120  34 39 65 39 2d 38 31 63  38 2d 34 64 33 31 61 32  |49e9-81c8-4d31a2|
              00000130  35 35 66 66 30 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |55ff02\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May  4 12:13:36.865: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  May  4 12:13:36.865: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9949",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "475d5a04-45e7-493c-a65e-e713530b1d8c",
      ResourceVersion: (string) (len=4) "5924",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850421608,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "0532a3cc-5c99-49e9-81c8-4d31a255ff02",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421614,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 35 33 32 61 33  63 63 2d 35 63 39 39 2d  |\"0532a3cc-5c99-|
              00000120  34 39 65 39 2d 38 31 63  38 2d 34 64 33 31 61 32  |49e9-81c8-4d31a2|
              00000130  35 35 66 66 30 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |55ff02\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May  4 12:13:36.876: INFO: Pod "webserver-deployment-557759b7c7-7hljl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-7hljl",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9949",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "edee8e96-90cf-4f81-8cf7-a382c31441aa",
      ResourceVersion: (string) (len=4) "5770",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850421608,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "475d5a04-45e7-493c-a65e-e713530b1d8c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421608,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 37  35 64 35 61 30 34 2d 34  |d\":\"475d5a04-4|
              00000090  35 65 37 2d 34 39 33 63  2d 61 36 35 65 2d 65 37  |5e7-493c-a65e-e7|
              000000a0  31 33 35 33 30 62 31 64  38 63 5c 22 7d 22 3a 7b  |13530b1d8c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 37  30 2e 37 30 5c 22 7d 22  |2.168.170.70\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pdvfl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pdvfl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-33-38",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421608,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421608,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.33.38",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.33.38"
        }
      },
      PodIP: (string) (len=14) "192.168.170.70",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.170.70"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850421608,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850421611,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://58563f1c3f95d25fea207e372e2aa60a3ea1fef83ba524cb12f73dc90c987ffb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  4 12:13:36.877: INFO: Pod "webserver-deployment-557759b7c7-845zp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-845zp",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9949",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "52225e20-095e-4690-b879-7fcaa6db08f6",
      ResourceVersion: (string) (len=4) "5747",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850421608,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "475d5a04-45e7-493c-a65e-e713530b1d8c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421608,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 37  35 64 35 61 30 34 2d 34  |d\":\"475d5a04-4|
              00000090  35 65 37 2d 34 39 33 63  2d 61 36 35 65 2d 65 37  |5e7-493c-a65e-e7|
              000000a0  31 33 35 33 30 62 31 64  38 63 5c 22 7d 22 3a 7b  |13530b1d8c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 38  36 2e 34 5c 22 7d 22 3a  |2.168.186.4\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-75qsz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-75qsz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-72-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421608,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421608,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.72.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.72.79"
        }
      },
      PodIP: (string) (len=13) "192.168.186.4",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.186.4"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850421608,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850421611,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ab128d9303e4823bab4409ff1388ff238ed84ea11d5285808b33dc8d0b2dcfb4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  4 12:13:36.884: INFO: Pod "webserver-deployment-557759b7c7-8j65f" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-8j65f",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9949",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eb59318b-6abc-4b6b-a649-6e32c9a55cc2",
      ResourceVersion: (string) (len=4) "5763",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850421608,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "475d5a04-45e7-493c-a65e-e713530b1d8c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421608,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 37  35 64 35 61 30 34 2d 34  |d\":\"475d5a04-4|
              00000090  35 65 37 2d 34 39 33 63  2d 61 36 35 65 2d 65 37  |5e7-493c-a65e-e7|
              000000a0  31 33 35 33 30 62 31 64  38 63 5c 22 7d 22 3a 7b  |13530b1d8c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 37  30 2e 37 31 5c 22 7d 22  |2.168.170.71\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-spq4g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-spq4g",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-33-38",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421608,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421608,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.33.38",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.33.38"
        }
      },
      PodIP: (string) (len=14) "192.168.170.71",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.170.71"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850421608,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850421611,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://84b9a002c5c1666e0b9bc75d869b66a2a7a0c9f28177feb1835fa63d49e95887",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  4 12:13:36.886: INFO: Pod "webserver-deployment-557759b7c7-8tdrn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-8tdrn",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9949",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a2211d0c-966d-406b-a5b1-4d74c0a99b09",
      ResourceVersion: (string) (len=4) "5759",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850421608,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "475d5a04-45e7-493c-a65e-e713530b1d8c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421608,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 37  35 64 35 61 30 34 2d 34  |d\":\"475d5a04-4|
              00000090  35 65 37 2d 34 39 33 63  2d 61 36 35 65 2d 65 37  |5e7-493c-a65e-e7|
              000000a0  31 33 35 33 30 62 31 64  38 63 5c 22 7d 22 3a 7b  |13530b1d8c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 34  39 2e 31 32 5c 22 7d 22  |2.168.149.12\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r77hs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r77hs",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-18-228",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421608,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421608,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.18.228",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.18.228"
        }
      },
      PodIP: (string) (len=14) "192.168.149.12",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.149.12"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850421608,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850421612,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2635d4ebbd194baf81dec570c3ec03361c36e2e66615a240cc5ede1b62727b63",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  4 12:13:36.888: INFO: Pod "webserver-deployment-557759b7c7-9cjjs" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-9cjjs",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9949",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d3b4f4ec-490d-411e-9478-514c8162bbd8",
      ResourceVersion: (string) (len=4) "5767",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850421608,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "475d5a04-45e7-493c-a65e-e713530b1d8c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421608,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 37  35 64 35 61 30 34 2d 34  |d\":\"475d5a04-4|
              00000090  35 65 37 2d 34 39 33 63  2d 61 36 35 65 2d 65 37  |5e7-493c-a65e-e7|
              000000a0  31 33 35 33 30 62 31 64  38 63 5c 22 7d 22 3a 7b  |13530b1d8c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 37  30 2e 37 32 5c 22 7d 22  |2.168.170.72\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tt9tj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tt9tj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-33-38",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421608,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421608,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.33.38",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.33.38"
        }
      },
      PodIP: (string) (len=14) "192.168.170.72",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.170.72"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850421608,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850421611,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://88486644774e53a4990cd5b46879b9fa42b577f2bab36b040aef495b40e14105",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  4 12:13:36.890: INFO: Pod "webserver-deployment-557759b7c7-b2vzh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-b2vzh",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9949",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0b9f9a41-b45d-4117-a307-a97e423ebc68",
      ResourceVersion: (string) (len=4) "5755",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850421608,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "475d5a04-45e7-493c-a65e-e713530b1d8c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421608,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 37  35 64 35 61 30 34 2d 34  |d\":\"475d5a04-4|
              00000090  35 65 37 2d 34 39 33 63  2d 61 36 35 65 2d 65 37  |5e7-493c-a65e-e7|
              000000a0  31 33 35 33 30 62 31 64  38 63 5c 22 7d 22 3a 7b  |13530b1d8c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 34  39 2e 31 31 5c 22 7d 22  |2.168.149.11\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f6t92",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f6t92",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-18-228",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421608,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421608,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.18.228",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.18.228"
        }
      },
      PodIP: (string) (len=14) "192.168.149.11",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.149.11"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850421608,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850421611,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e7f658e7a9e210a47baf86d9f2bfd2aff258b3294f33dbed271178a2c33e3da8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  4 12:13:36.893: INFO: Pod "webserver-deployment-557759b7c7-kl6zt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-kl6zt",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9949",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "16345627-726c-44ca-9366-4e0bc7bffb39",
      ResourceVersion: (string) (len=4) "5932",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850421616,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "475d5a04-45e7-493c-a65e-e713530b1d8c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 37  35 64 35 61 30 34 2d 34  |d\":\"475d5a04-4|
              00000090  35 65 37 2d 34 39 33 63  2d 61 36 35 65 2d 65 37  |5e7-493c-a65e-e7|
              000000a0  31 33 35 33 30 62 31 64  38 63 5c 22 7d 22 3a 7b  |13530b1d8c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5tfvv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5tfvv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-18-228",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  4 12:13:36.894: INFO: Pod "webserver-deployment-557759b7c7-swn9f" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-swn9f",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9949",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4a8f4006-005b-48e2-911a-10b90fc24c97",
      ResourceVersion: (string) (len=4) "5943",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850421616,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "475d5a04-45e7-493c-a65e-e713530b1d8c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 37  35 64 35 61 30 34 2d 34  |d\":\"475d5a04-4|
              00000090  35 65 37 2d 34 39 33 63  2d 61 36 35 65 2d 65 37  |5e7-493c-a65e-e7|
              000000a0  31 33 35 33 30 62 31 64  38 63 5c 22 7d 22 3a 7b  |13530b1d8c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8zrpb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8zrpb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-72-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  4 12:13:36.894: INFO: Pod "webserver-deployment-557759b7c7-tkq69" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-tkq69",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9949",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ca3b0068-e6a9-4a3e-aaae-b20c3fe1d0b3",
      ResourceVersion: (string) (len=4) "5750",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850421608,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "475d5a04-45e7-493c-a65e-e713530b1d8c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421608,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 37  35 64 35 61 30 34 2d 34  |d\":\"475d5a04-4|
              00000090  35 65 37 2d 34 39 33 63  2d 61 36 35 65 2d 65 37  |5e7-493c-a65e-e7|
              000000a0  31 33 35 33 30 62 31 64  38 63 5c 22 7d 22 3a 7b  |13530b1d8c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 38  36 2e 35 5c 22 7d 22 3a  |2.168.186.5\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-52qls",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-52qls",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-72-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421608,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421608,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.72.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.72.79"
        }
      },
      PodIP: (string) (len=13) "192.168.186.5",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.186.5"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850421608,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850421611,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2e264fd291f629615db1ea3a0d7f1f3520ddb444b731a2d96d1149803572769a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  4 12:13:36.896: INFO: Pod "webserver-deployment-557759b7c7-v9z75" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-v9z75",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9949",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "faa89a84-c258-4a73-9dea-e7171f7c48b9",
      ResourceVersion: (string) (len=4) "5942",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850421616,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "475d5a04-45e7-493c-a65e-e713530b1d8c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 37  35 64 35 61 30 34 2d 34  |d\":\"475d5a04-4|
              00000090  35 65 37 2d 34 39 33 63  2d 61 36 35 65 2d 65 37  |5e7-493c-a65e-e7|
              000000a0  31 33 35 33 30 62 31 64  38 63 5c 22 7d 22 3a 7b  |13530b1d8c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fbtmw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fbtmw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  4 12:13:36.901: INFO: Pod "webserver-deployment-557759b7c7-xhxm6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-xhxm6",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9949",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "45350efb-26d7-44cf-a787-9b08c09b5441",
      ResourceVersion: (string) (len=4) "5754",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850421608,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "475d5a04-45e7-493c-a65e-e713530b1d8c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421608,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 37  35 64 35 61 30 34 2d 34  |d\":\"475d5a04-4|
              00000090  35 65 37 2d 34 39 33 63  2d 61 36 35 65 2d 65 37  |5e7-493c-a65e-e7|
              000000a0  31 33 35 33 30 62 31 64  38 63 5c 22 7d 22 3a 7b  |13530b1d8c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 38  36 2e 36 5c 22 7d 22 3a  |2.168.186.6\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jpm5n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jpm5n",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-72-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421608,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421612,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421608,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.72.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.72.79"
        }
      },
      PodIP: (string) (len=13) "192.168.186.6",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.186.6"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850421608,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850421611,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://202442f7ff1aa720f80cff8ce0b9e4111cbbf7631d10d69aa19c0522c8b93190",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  4 12:13:36.905: INFO: Pod "webserver-deployment-557759b7c7-xxd6t" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-xxd6t",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9949",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3951701a-f8d1-4d73-8302-6dbdd885206c",
      ResourceVersion: (string) (len=4) "5939",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850421616,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "475d5a04-45e7-493c-a65e-e713530b1d8c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 37  35 64 35 61 30 34 2d 34  |d\":\"475d5a04-4|
              00000090  35 65 37 2d 34 39 33 63  2d 61 36 35 65 2d 65 37  |5e7-493c-a65e-e7|
              000000a0  31 33 35 33 30 62 31 64  38 63 5c 22 7d 22 3a 7b  |13530b1d8c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6xlx6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6xlx6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-18-228",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  4 12:13:36.906: INFO: Pod "webserver-deployment-9b4f5bf69-755xz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-755xz",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9949",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f518d34e-c729-4faa-9b03-c7cd724421de",
      ResourceVersion: (string) (len=4) "5921",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850421614,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "84cac797-d4e6-4764-9e71-4eb901751cf1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421614,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 34  63 61 63 37 39 37 2d 64  |d\":\"84cac797-d|
              00000090  34 65 36 2d 34 37 36 34  2d 39 65 37 31 2d 34 65  |4e6-4764-9e71-4e|
              000000a0  62 39 30 31 37 35 31 63  66 31 5c 22 7d 22 3a 7b  |b901751cf1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 37 30 2e 37  33 5c 22 7d 22 3a 7b 22  |68.170.73\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g9p84",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g9p84",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-33-38",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421614,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421614,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421614,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421614,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.33.38",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.33.38"
        }
      },
      PodIP: (string) (len=14) "192.168.170.73",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.170.73"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850421614,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  4 12:13:36.910: INFO: Pod "webserver-deployment-9b4f5bf69-7l8k4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-7l8k4",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9949",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5208fcda-52b7-4f20-a3e7-d74fd709bd63",
      ResourceVersion: (string) (len=4) "5914",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850421614,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "84cac797-d4e6-4764-9e71-4eb901751cf1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421614,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 34  63 61 63 37 39 37 2d 64  |d\":\"84cac797-d|
              00000090  34 65 36 2d 34 37 36 34  2d 39 65 37 31 2d 34 65  |4e6-4764-9e71-4e|
              000000a0  62 39 30 31 37 35 31 63  66 31 5c 22 7d 22 3a 7b  |b901751cf1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 34 39 2e 31  36 5c 22 7d 22 3a 7b 22  |68.149.16\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-smbxc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-smbxc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-18-228",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421614,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421614,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421614,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421614,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.18.228",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.18.228"
        }
      },
      PodIP: (string) (len=14) "192.168.149.16",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.149.16"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850421614,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  4 12:13:36.914: INFO: Pod "webserver-deployment-9b4f5bf69-b92cf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-b92cf",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9949",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7d0f1602-5e2e-450f-a14a-9cbf8d802e05",
      ResourceVersion: (string) (len=4) "5935",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850421616,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "84cac797-d4e6-4764-9e71-4eb901751cf1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 34  63 61 63 37 39 37 2d 64  |d\":\"84cac797-d|
              00000090  34 65 36 2d 34 37 36 34  2d 39 65 37 31 2d 34 65  |4e6-4764-9e71-4e|
              000000a0  62 39 30 31 37 35 31 63  66 31 5c 22 7d 22 3a 7b  |b901751cf1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-295tk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-295tk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-33-38",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  4 12:13:36.915: INFO: Pod "webserver-deployment-9b4f5bf69-ccrdp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-ccrdp",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9949",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "124e6ec2-a8b0-4be3-b781-9c2b17c7a89f",
      ResourceVersion: (string) (len=4) "5909",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850421614,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "84cac797-d4e6-4764-9e71-4eb901751cf1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421614,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 34  63 61 63 37 39 37 2d 64  |d\":\"84cac797-d|
              00000090  34 65 36 2d 34 37 36 34  2d 39 65 37 31 2d 34 65  |4e6-4764-9e71-4e|
              000000a0  62 39 30 31 37 35 31 63  66 31 5c 22 7d 22 3a 7b  |b901751cf1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 38 36 2e 37  5c 22 7d 22 3a 7b 22 2e  |68.186.7\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pxqdg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pxqdg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-72-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421614,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421614,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421614,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421614,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.72.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.72.79"
        }
      },
      PodIP: (string) (len=13) "192.168.186.7",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.186.7"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850421614,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  4 12:13:36.916: INFO: Pod "webserver-deployment-9b4f5bf69-jrvx9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-jrvx9",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9949",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e1f77f2d-0e08-4519-91c2-0e1ba29d7956",
      ResourceVersion: (string) (len=4) "5912",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850421614,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "84cac797-d4e6-4764-9e71-4eb901751cf1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421614,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 34  63 61 63 37 39 37 2d 64  |d\":\"84cac797-d|
              00000090  34 65 36 2d 34 37 36 34  2d 39 65 37 31 2d 34 65  |4e6-4764-9e71-4e|
              000000a0  62 39 30 31 37 35 31 63  66 31 5c 22 7d 22 3a 7b  |b901751cf1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 38 36 2e 38  5c 22 7d 22 3a 7b 22 2e  |68.186.8\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cm2vb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cm2vb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-72-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421614,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421614,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421614,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421614,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.72.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.72.79"
        }
      },
      PodIP: (string) (len=13) "192.168.186.8",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.186.8"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850421614,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  4 12:13:36.917: INFO: Pod "webserver-deployment-9b4f5bf69-rkhg4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-rkhg4",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9949",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7277eb35-9cee-4093-9b88-b92b3f148f0b",
      ResourceVersion: (string) (len=4) "5936",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850421616,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "84cac797-d4e6-4764-9e71-4eb901751cf1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 34  63 61 63 37 39 37 2d 64  |d\":\"84cac797-d|
              00000090  34 65 36 2d 34 37 36 34  2d 39 65 37 31 2d 34 65  |4e6-4764-9e71-4e|
              000000a0  62 39 30 31 37 35 31 63  66 31 5c 22 7d 22 3a 7b  |b901751cf1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jfhtx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jfhtx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  4 12:13:36.918: INFO: Pod "webserver-deployment-9b4f5bf69-rpzcr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-rpzcr",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9949",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b2503143-7fe6-438f-b8d7-fd37a975f894",
      ResourceVersion: (string) (len=4) "5937",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850421616,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "84cac797-d4e6-4764-9e71-4eb901751cf1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 34  63 61 63 37 39 37 2d 64  |d\":\"84cac797-d|
              00000090  34 65 36 2d 34 37 36 34  2d 39 65 37 31 2d 34 65  |4e6-4764-9e71-4e|
              000000a0  62 39 30 31 37 35 31 63  66 31 5c 22 7d 22 3a 7b  |b901751cf1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-79wdd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-79wdd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  4 12:13:36.919: INFO: Pod "webserver-deployment-9b4f5bf69-z8h46" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-z8h46",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9949",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "61525236-9167-49b9-a7f3-66ec036c43d1",
      ResourceVersion: (string) (len=4) "5918",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850421614,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "84cac797-d4e6-4764-9e71-4eb901751cf1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421614,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 34  63 61 63 37 39 37 2d 64  |d\":\"84cac797-d|
              00000090  34 65 36 2d 34 37 36 34  2d 39 65 37 31 2d 34 65  |4e6-4764-9e71-4e|
              000000a0  62 39 30 31 37 35 31 63  66 31 5c 22 7d 22 3a 7b  |b901751cf1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 31 34 39 2e 31  35 5c 22 7d 22 3a 7b 22  |68.149.15\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pbjhz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pbjhz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-18-228",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421616,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421614,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421614,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421614,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850421614,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.18.228",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.18.228"
        }
      },
      PodIP: (string) (len=14) "192.168.149.15",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.149.15"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850421614,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  4 12:13:36.923: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9949" for this suite. @ 05/04/24 12:13:36.929
• [8.239 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 05/04/24 12:13:36.94
  May  4 12:13:36.940: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename projected @ 05/04/24 12:13:36.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:13:36.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:13:37.002
  STEP: Creating configMap with name projected-configmap-test-volume-a502e44c-78d0-4cb6-b972-af79b1fa421e @ 05/04/24 12:13:37.005
  STEP: Creating a pod to test consume configMaps @ 05/04/24 12:13:37.01
  STEP: Saw pod success @ 05/04/24 12:13:43.044
  May  4 12:13:43.053: INFO: Trying to get logs from node ip-172-31-72-79 pod pod-projected-configmaps-0314c233-3484-4482-bd0d-dd59120537cb container agnhost-container: <nil>
  STEP: delete the pod @ 05/04/24 12:13:43.071
  May  4 12:13:43.089: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-523" for this suite. @ 05/04/24 12:13:43.093
• [6.160 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 05/04/24 12:13:43.101
  May  4 12:13:43.101: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename csiinlinevolumes @ 05/04/24 12:13:43.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:13:43.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:13:43.131
  STEP: Creating two CSIDrivers @ 05/04/24 12:13:43.137
  STEP: Getting "inline-driver-d2bbeac5-aeb6-4f46-af4a-b73f81566372" & "inline-driver-66e65c6d-8934-42aa-8607-93ae79844f71" @ 05/04/24 12:13:43.181
  STEP: Patching the CSIDriver "inline-driver-66e65c6d-8934-42aa-8607-93ae79844f71" @ 05/04/24 12:13:43.189
  STEP: Updating the CSIDriver "inline-driver-66e65c6d-8934-42aa-8607-93ae79844f71" @ 05/04/24 12:13:43.195
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-9306" @ 05/04/24 12:13:43.204
  STEP: Deleting CSIDriver "inline-driver-d2bbeac5-aeb6-4f46-af4a-b73f81566372" @ 05/04/24 12:13:43.228
  STEP: Confirm deletion of CSIDriver "inline-driver-d2bbeac5-aeb6-4f46-af4a-b73f81566372" @ 05/04/24 12:13:43.237
  STEP: Deleting CSIDriver "inline-driver-66e65c6d-8934-42aa-8607-93ae79844f71" via DeleteCollection @ 05/04/24 12:13:43.243
  STEP: Confirm deletion of CSIDriver "inline-driver-66e65c6d-8934-42aa-8607-93ae79844f71" @ 05/04/24 12:13:43.26
  May  4 12:13:43.264: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-9306" for this suite. @ 05/04/24 12:13:43.268
• [0.182 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 05/04/24 12:13:43.284
  May  4 12:13:43.284: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename projected @ 05/04/24 12:13:43.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:13:43.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:13:43.307
  STEP: Creating projection with secret that has name projected-secret-test-08b2caac-f41b-4704-92a9-66ff1501bf0b @ 05/04/24 12:13:43.31
  STEP: Creating a pod to test consume secrets @ 05/04/24 12:13:43.316
  STEP: Saw pod success @ 05/04/24 12:13:47.345
  May  4 12:13:47.348: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-projected-secrets-7704b52c-41ef-43a9-99d9-58b0af628341 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/04/24 12:13:47.355
  May  4 12:13:47.379: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7524" for this suite. @ 05/04/24 12:13:47.383
• [4.106 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 05/04/24 12:13:47.39
  May  4 12:13:47.390: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename namespaces @ 05/04/24 12:13:47.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:13:47.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:13:47.42
  STEP: Updating Namespace "namespaces-3228" @ 05/04/24 12:13:47.423
  May  4 12:13:47.432: INFO: Namespace "namespaces-3228" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"4b941899-c088-4611-9880-f7dd13864479", "kubernetes.io/metadata.name":"namespaces-3228", "namespaces-3228":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  May  4 12:13:47.432: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3228" for this suite. @ 05/04/24 12:13:47.435
• [0.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 05/04/24 12:13:47.444
  May  4 12:13:47.444: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename configmap @ 05/04/24 12:13:47.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:13:47.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:13:47.47
  STEP: Creating configMap with name configmap-test-volume-bf0faea1-22cf-4259-aac1-fdc8de06b090 @ 05/04/24 12:13:47.473
  STEP: Creating a pod to test consume configMaps @ 05/04/24 12:13:47.479
  STEP: Saw pod success @ 05/04/24 12:13:49.495
  May  4 12:13:49.499: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-configmaps-a08e13a9-bed6-4a3e-ba6d-0e153cc7795a container agnhost-container: <nil>
  STEP: delete the pod @ 05/04/24 12:13:49.51
  May  4 12:13:49.523: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8997" for this suite. @ 05/04/24 12:13:49.527
• [2.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 05/04/24 12:13:49.534
  May  4 12:13:49.534: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename container-probe @ 05/04/24 12:13:49.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:13:49.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:13:49.558
  STEP: Creating pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783 @ 05/04/24 12:13:49.56
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/04/24 12:13:51.579
  May  4 12:13:51.582: INFO: Initial restart count of pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae is 0
  May  4 12:13:51.586: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:13:53.592: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:13:55.596: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:13:57.603: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:13:59.608: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:14:01.612: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:14:03.619: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:14:05.624: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:14:07.629: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:14:09.634: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:14:11.639: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:14:13.645: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:14:15.650: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:14:17.658: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:14:19.664: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:14:21.669: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:14:23.674: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:14:25.680: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:14:27.684: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:14:29.689: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:14:31.693: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:14:33.699: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:14:35.704: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:14:37.709: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:14:39.715: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:14:41.721: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:14:43.725: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:14:45.733: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:14:47.738: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:14:49.744: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:14:51.750: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:14:53.755: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:14:55.762: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:14:57.768: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:14:59.774: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:15:01.781: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:15:03.786: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:15:05.791: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:15:07.797: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:15:09.802: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:15:11.807: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:15:13.813: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:15:15.817: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:15:17.825: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:15:19.831: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:15:21.836: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:15:23.843: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:15:25.849: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:15:27.853: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:15:29.858: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:15:31.862: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:15:33.868: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:15:35.872: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:15:37.878: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:15:39.883: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:15:41.887: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:15:43.894: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:15:45.901: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:15:47.905: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:15:49.909: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:15:51.913: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:15:53.918: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:15:55.923: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:15:57.929: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:15:59.934: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:16:01.938: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:16:03.944: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:16:05.949: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:16:07.954: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:16:09.959: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:16:11.963: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:16:13.970: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:16:15.975: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:16:17.980: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:16:19.987: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:16:21.992: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:16:23.996: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:16:26.002: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:16:28.006: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:16:30.014: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:16:32.021: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:16:34.025: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:16:36.032: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:16:38.037: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:16:40.041: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:16:42.048: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:16:44.054: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:16:46.058: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:16:48.063: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:16:50.067: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:16:52.074: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:16:54.079: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:16:56.084: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:16:58.089: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:17:00.094: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:17:02.099: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:17:04.105: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:17:06.111: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:17:08.117: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:17:10.122: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:17:12.128: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:17:14.134: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:17:16.139: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:17:18.147: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:17:20.152: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:17:22.156: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:17:24.163: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:17:26.169: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:17:28.175: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:17:30.180: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:17:32.185: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:17:34.190: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:17:36.196: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:17:38.200: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:17:40.206: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:17:42.210: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:17:44.216: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:17:46.221: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:17:48.225: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  May  4 12:17:50.231: INFO: Get pod test-grpc-9330c537-566d-404a-a905-9d6d44289cae in namespace container-probe-6783
  STEP: deleting the pod @ 05/04/24 12:17:52.231
  May  4 12:17:52.251: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6783" for this suite. @ 05/04/24 12:17:52.254
• [242.727 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 05/04/24 12:17:52.262
  May  4 12:17:52.262: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename lease-test @ 05/04/24 12:17:52.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:17:52.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:17:52.289
  May  4 12:17:52.364: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-2749" for this suite. @ 05/04/24 12:17:52.369
• [0.116 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 05/04/24 12:17:52.377
  May  4 12:17:52.378: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename svcaccounts @ 05/04/24 12:17:52.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:17:52.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:17:52.403
  STEP: creating a ServiceAccount @ 05/04/24 12:17:52.406
  STEP: watching for the ServiceAccount to be added @ 05/04/24 12:17:52.417
  STEP: patching the ServiceAccount @ 05/04/24 12:17:52.419
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 05/04/24 12:17:52.43
  STEP: deleting the ServiceAccount @ 05/04/24 12:17:52.434
  May  4 12:17:52.452: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8186" for this suite. @ 05/04/24 12:17:52.457
• [0.087 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 05/04/24 12:17:52.465
  May  4 12:17:52.465: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename watch @ 05/04/24 12:17:52.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:17:52.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:17:52.49
  STEP: creating a watch on configmaps with a certain label @ 05/04/24 12:17:52.497
  STEP: creating a new configmap @ 05/04/24 12:17:52.498
  STEP: modifying the configmap once @ 05/04/24 12:17:52.505
  STEP: changing the label value of the configmap @ 05/04/24 12:17:52.512
  STEP: Expecting to observe a delete notification for the watched object @ 05/04/24 12:17:52.522
  May  4 12:17:52.522: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3295  b5ccdb0f-8a98-4495-87d0-8b34d51e878b 6924 0 2024-05-04 12:17:52 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-04 12:17:52 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May  4 12:17:52.522: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3295  b5ccdb0f-8a98-4495-87d0-8b34d51e878b 6926 0 2024-05-04 12:17:52 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-04 12:17:52 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  May  4 12:17:52.522: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3295  b5ccdb0f-8a98-4495-87d0-8b34d51e878b 6927 0 2024-05-04 12:17:52 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-04 12:17:52 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 05/04/24 12:17:52.522
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 05/04/24 12:17:52.531
  STEP: changing the label value of the configmap back @ 05/04/24 12:18:02.532
  STEP: modifying the configmap a third time @ 05/04/24 12:18:02.542
  STEP: deleting the configmap @ 05/04/24 12:18:02.551
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 05/04/24 12:18:02.558
  May  4 12:18:02.558: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3295  b5ccdb0f-8a98-4495-87d0-8b34d51e878b 6970 0 2024-05-04 12:17:52 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-04 12:18:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May  4 12:18:02.558: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3295  b5ccdb0f-8a98-4495-87d0-8b34d51e878b 6971 0 2024-05-04 12:17:52 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-04 12:18:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  May  4 12:18:02.558: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3295  b5ccdb0f-8a98-4495-87d0-8b34d51e878b 6973 0 2024-05-04 12:17:52 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-04 12:18:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  May  4 12:18:02.558: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3295" for this suite. @ 05/04/24 12:18:02.561
• [10.103 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 05/04/24 12:18:02.568
  May  4 12:18:02.568: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename resourcequota @ 05/04/24 12:18:02.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:18:02.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:18:02.589
  STEP: Counting existing ResourceQuota @ 05/04/24 12:18:02.591
  STEP: Creating a ResourceQuota @ 05/04/24 12:18:07.597
  STEP: Ensuring resource quota status is calculated @ 05/04/24 12:18:07.603
  May  4 12:18:09.607: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3058" for this suite. @ 05/04/24 12:18:09.613
• [7.053 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:611
  STEP: Creating a kubernetes client @ 05/04/24 12:18:09.621
  May  4 12:18:09.621: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename security-context-test @ 05/04/24 12:18:09.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:18:09.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:18:09.644
  May  4 12:18:13.688: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2030" for this suite. @ 05/04/24 12:18:13.692
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 05/04/24 12:18:13.701
  May  4 12:18:13.701: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename dns @ 05/04/24 12:18:13.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:18:13.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:18:13.722
  STEP: Creating a test headless service @ 05/04/24 12:18:13.728
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-5617.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-5617.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 05/04/24 12:18:13.734
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-5617.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-5617.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 05/04/24 12:18:13.734
  STEP: creating a pod to probe DNS @ 05/04/24 12:18:13.734
  STEP: submitting the pod to kubernetes @ 05/04/24 12:18:13.734
  STEP: retrieving the pod @ 05/04/24 12:18:19.764
  STEP: looking for the results for each expected name from probers @ 05/04/24 12:18:19.769
  May  4 12:18:19.787: INFO: DNS probes using dns-5617/dns-test-8e59996d-6749-4086-b91e-97c4272de200 succeeded

  STEP: deleting the pod @ 05/04/24 12:18:19.787
  STEP: deleting the test headless service @ 05/04/24 12:18:19.798
  May  4 12:18:19.833: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5617" for this suite. @ 05/04/24 12:18:19.837
• [6.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 05/04/24 12:18:19.845
  May  4 12:18:19.845: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename pods @ 05/04/24 12:18:19.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:18:19.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:18:19.864
  STEP: creating the pod @ 05/04/24 12:18:19.867
  STEP: submitting the pod to kubernetes @ 05/04/24 12:18:19.867
  STEP: verifying QOS class is set on the pod @ 05/04/24 12:18:19.873
  May  4 12:18:19.877: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7990" for this suite. @ 05/04/24 12:18:19.881
• [0.043 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 05/04/24 12:18:19.889
  May  4 12:18:19.889: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename downward-api @ 05/04/24 12:18:19.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:18:19.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:18:19.911
  STEP: Creating a pod to test downward API volume plugin @ 05/04/24 12:18:19.913
  STEP: Saw pod success @ 05/04/24 12:18:21.936
  May  4 12:18:21.940: INFO: Trying to get logs from node ip-172-31-72-79 pod downwardapi-volume-4a11fb8a-9851-4d0c-b810-cbeeee125cd9 container client-container: <nil>
  STEP: delete the pod @ 05/04/24 12:18:21.953
  May  4 12:18:21.972: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1752" for this suite. @ 05/04/24 12:18:21.977
• [2.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 05/04/24 12:18:21.985
  May  4 12:18:21.985: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename taint-single-pod @ 05/04/24 12:18:21.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:18:22.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:18:22.01
  May  4 12:18:22.013: INFO: Waiting up to 1m0s for all nodes to be ready
  May  4 12:19:22.013: INFO: Waiting for terminating namespaces to be deleted...
  May  4 12:19:22.018: INFO: Starting informer...
  STEP: Starting pod... @ 05/04/24 12:19:22.018
  May  4 12:19:22.235: INFO: Pod is running on ip-172-31-18-228. Tainting Node
  STEP: Trying to apply a taint on the Node @ 05/04/24 12:19:22.235
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/04/24 12:19:22.244
  STEP: Waiting short time to make sure Pod is queued for deletion @ 05/04/24 12:19:22.249
  May  4 12:19:22.249: INFO: Pod wasn't evicted. Proceeding
  May  4 12:19:22.249: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/04/24 12:19:22.26
  STEP: Waiting some time to make sure that toleration time passed. @ 05/04/24 12:19:22.264
  May  4 12:20:37.264: INFO: Pod wasn't evicted. Test successful
  May  4 12:20:37.264: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-4521" for this suite. @ 05/04/24 12:20:37.268
• [135.292 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 05/04/24 12:20:37.278
  May  4 12:20:37.278: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename daemonsets @ 05/04/24 12:20:37.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:20:37.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:20:37.296
  STEP: Creating a simple DaemonSet "daemon-set" @ 05/04/24 12:20:37.32
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/04/24 12:20:37.325
  May  4 12:20:37.329: INFO: DaemonSet pods can't tolerate node ip-172-31-26-203 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 12:20:37.329: INFO: DaemonSet pods can't tolerate node ip-172-31-85-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 12:20:37.333: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  4 12:20:37.333: INFO: Node ip-172-31-18-228 is running 0 daemon pod, expected 1
  May  4 12:20:38.329: INFO: DaemonSet pods can't tolerate node ip-172-31-26-203 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 12:20:38.329: INFO: DaemonSet pods can't tolerate node ip-172-31-85-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 12:20:38.331: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  May  4 12:20:38.331: INFO: Node ip-172-31-72-79 is running 0 daemon pod, expected 1
  May  4 12:20:39.332: INFO: DaemonSet pods can't tolerate node ip-172-31-26-203 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 12:20:39.332: INFO: DaemonSet pods can't tolerate node ip-172-31-85-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 12:20:39.336: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  May  4 12:20:39.336: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 05/04/24 12:20:39.34
  May  4 12:20:39.354: INFO: DaemonSet pods can't tolerate node ip-172-31-26-203 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 12:20:39.354: INFO: DaemonSet pods can't tolerate node ip-172-31-85-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 12:20:39.358: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  May  4 12:20:39.358: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 05/04/24 12:20:39.358
  STEP: Deleting DaemonSet "daemon-set" @ 05/04/24 12:20:40.366
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2930, will wait for the garbage collector to delete the pods @ 05/04/24 12:20:40.366
  May  4 12:20:40.428: INFO: Deleting DaemonSet.extensions daemon-set took: 7.067914ms
  May  4 12:20:40.529: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.471798ms
  May  4 12:20:42.134: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  4 12:20:42.134: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May  4 12:20:42.140: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"7604"},"items":null}

  May  4 12:20:42.144: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"7604"},"items":null}

  May  4 12:20:42.156: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2930" for this suite. @ 05/04/24 12:20:42.16
• [4.890 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 05/04/24 12:20:42.168
  May  4 12:20:42.168: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename downward-api @ 05/04/24 12:20:42.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:20:42.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:20:42.192
  STEP: Creating a pod to test downward api env vars @ 05/04/24 12:20:42.194
  STEP: Saw pod success @ 05/04/24 12:20:46.216
  May  4 12:20:46.221: INFO: Trying to get logs from node ip-172-31-18-228 pod downward-api-ef10ecd9-11d7-48e2-a465-1c218e4e9592 container dapi-container: <nil>
  STEP: delete the pod @ 05/04/24 12:20:46.233
  May  4 12:20:46.247: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4219" for this suite. @ 05/04/24 12:20:46.25
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 05/04/24 12:20:46.258
  May  4 12:20:46.258: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename projected @ 05/04/24 12:20:46.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:20:46.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:20:46.279
  STEP: Creating configMap with name projected-configmap-test-volume-map-84ded584-3925-4b24-843a-185c32eb5938 @ 05/04/24 12:20:46.281
  STEP: Creating a pod to test consume configMaps @ 05/04/24 12:20:46.286
  STEP: Saw pod success @ 05/04/24 12:20:48.306
  May  4 12:20:48.309: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-projected-configmaps-160bdba4-3933-4d3f-82bb-1545fb8ce811 container agnhost-container: <nil>
  STEP: delete the pod @ 05/04/24 12:20:48.318
  May  4 12:20:48.336: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4477" for this suite. @ 05/04/24 12:20:48.34
• [2.089 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 05/04/24 12:20:48.347
  May  4 12:20:48.347: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/04/24 12:20:48.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:20:48.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:20:48.368
  May  4 12:20:48.371: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/04/24 12:20:49.802
  May  4 12:20:49.802: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=crd-publish-openapi-1312 --namespace=crd-publish-openapi-1312 create -f -'
  May  4 12:20:51.869: INFO: stderr: ""
  May  4 12:20:51.869: INFO: stdout: "e2e-test-crd-publish-openapi-8856-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  May  4 12:20:51.869: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=crd-publish-openapi-1312 --namespace=crd-publish-openapi-1312 delete e2e-test-crd-publish-openapi-8856-crds test-cr'
  May  4 12:20:51.930: INFO: stderr: ""
  May  4 12:20:51.930: INFO: stdout: "e2e-test-crd-publish-openapi-8856-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  May  4 12:20:51.931: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=crd-publish-openapi-1312 --namespace=crd-publish-openapi-1312 apply -f -'
  May  4 12:20:51.986: INFO: stderr: ""
  May  4 12:20:51.986: INFO: stdout: "e2e-test-crd-publish-openapi-8856-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  May  4 12:20:51.986: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=crd-publish-openapi-1312 --namespace=crd-publish-openapi-1312 delete e2e-test-crd-publish-openapi-8856-crds test-cr'
  May  4 12:20:52.038: INFO: stderr: ""
  May  4 12:20:52.038: INFO: stdout: "e2e-test-crd-publish-openapi-8856-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 05/04/24 12:20:52.038
  May  4 12:20:52.039: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=crd-publish-openapi-1312 explain e2e-test-crd-publish-openapi-8856-crds'
  May  4 12:20:52.080: INFO: stderr: ""
  May  4 12:20:52.080: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-8856-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  May  4 12:20:53.300: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1312" for this suite. @ 05/04/24 12:20:53.306
• [4.967 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 05/04/24 12:20:53.315
  May  4 12:20:53.315: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename container-runtime @ 05/04/24 12:20:53.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:20:53.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:20:53.332
  STEP: create the container @ 05/04/24 12:20:53.335
  W0504 12:20:53.344159      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/04/24 12:20:53.344
  STEP: get the container status @ 05/04/24 12:20:55.355
  STEP: the container should be terminated @ 05/04/24 12:20:55.36
  STEP: the termination message should be set @ 05/04/24 12:20:55.36
  May  4 12:20:55.360: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 05/04/24 12:20:55.36
  May  4 12:20:55.377: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8854" for this suite. @ 05/04/24 12:20:55.381
• [2.073 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 05/04/24 12:20:55.388
  May  4 12:20:55.388: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/04/24 12:20:55.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:20:55.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:20:55.405
  May  4 12:20:55.408: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 12:20:56.066: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1873" for this suite. @ 05/04/24 12:20:56.072
• [0.692 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 05/04/24 12:20:56.081
  May  4 12:20:56.081: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename services @ 05/04/24 12:20:56.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:20:56.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:20:56.097
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-9772 @ 05/04/24 12:20:56.1
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 05/04/24 12:20:56.112
  STEP: creating service externalsvc in namespace services-9772 @ 05/04/24 12:20:56.112
  STEP: creating replication controller externalsvc in namespace services-9772 @ 05/04/24 12:20:56.125
  I0504 12:20:56.133276      19 runners.go:197] Created replication controller with name: externalsvc, namespace: services-9772, replica count: 2
  I0504 12:20:59.184335      19 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 05/04/24 12:20:59.187
  May  4 12:20:59.202: INFO: Creating new exec pod
  May  4 12:21:01.218: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-9772 exec execpodd9j8z -- /bin/sh -x -c nslookup clusterip-service.services-9772.svc.cluster.local'
  May  4 12:21:01.339: INFO: stderr: "+ nslookup clusterip-service.services-9772.svc.cluster.local\n"
  May  4 12:21:01.339: INFO: stdout: "Server:\t\t10.152.183.182\nAddress:\t10.152.183.182#53\n\nclusterip-service.services-9772.svc.cluster.local\tcanonical name = externalsvc.services-9772.svc.cluster.local.\nName:\texternalsvc.services-9772.svc.cluster.local\nAddress: 10.152.183.166\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-9772, will wait for the garbage collector to delete the pods @ 05/04/24 12:21:01.339
  May  4 12:21:01.404: INFO: Deleting ReplicationController externalsvc took: 10.403911ms
  May  4 12:21:01.504: INFO: Terminating ReplicationController externalsvc pods took: 100.577035ms
  May  4 12:21:04.225: INFO: Cleaning up the ClusterIP to ExternalName test service
  May  4 12:21:04.239: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9772" for this suite. @ 05/04/24 12:21:04.243
• [8.172 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:321
  STEP: Creating a kubernetes client @ 05/04/24 12:21:04.253
  May  4 12:21:04.253: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename statefulset @ 05/04/24 12:21:04.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:21:04.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:21:04.272
  STEP: Creating service test in namespace statefulset-8981 @ 05/04/24 12:21:04.275
  STEP: Creating a new StatefulSet @ 05/04/24 12:21:04.279
  May  4 12:21:04.295: INFO: Found 0 stateful pods, waiting for 3
  May  4 12:21:14.302: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  May  4 12:21:14.302: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  May  4 12:21:14.302: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  May  4 12:21:14.313: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=statefulset-8981 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May  4 12:21:14.406: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May  4 12:21:14.406: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May  4 12:21:14.406: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 05/04/24 12:21:24.415
  May  4 12:21:24.437: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 05/04/24 12:21:24.437
  STEP: Updating Pods in reverse ordinal order @ 05/04/24 12:21:34.451
  May  4 12:21:34.455: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=statefulset-8981 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May  4 12:21:34.549: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May  4 12:21:34.549: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May  4 12:21:34.549: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May  4 12:21:44.568: INFO: Waiting for StatefulSet statefulset-8981/ss2 to complete update
  STEP: Rolling back to a previous revision @ 05/04/24 12:21:54.573
  May  4 12:21:54.573: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=statefulset-8981 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May  4 12:21:54.670: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May  4 12:21:54.670: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May  4 12:21:54.670: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May  4 12:22:04.705: INFO: Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 05/04/24 12:22:14.715
  May  4 12:22:14.718: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=statefulset-8981 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May  4 12:22:14.815: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May  4 12:22:14.815: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May  4 12:22:14.815: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May  4 12:22:24.831: INFO: Deleting all statefulset in ns statefulset-8981
  May  4 12:22:24.834: INFO: Scaling statefulset ss2 to 0
  May  4 12:22:34.850: INFO: Waiting for statefulset status.replicas updated to 0
  May  4 12:22:34.855: INFO: Deleting statefulset ss2
  May  4 12:22:34.871: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8981" for this suite. @ 05/04/24 12:22:34.875
• [90.628 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 05/04/24 12:22:34.881
  May  4 12:22:34.881: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename watch @ 05/04/24 12:22:34.882
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:22:34.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:22:34.9
  STEP: creating a watch on configmaps with label A @ 05/04/24 12:22:34.902
  STEP: creating a watch on configmaps with label B @ 05/04/24 12:22:34.904
  STEP: creating a watch on configmaps with label A or B @ 05/04/24 12:22:34.904
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 05/04/24 12:22:34.905
  May  4 12:22:34.910: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3579  559f42d4-e209-4875-b5f7-2bfb12323f2e 8561 0 2024-05-04 12:22:34 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-04 12:22:34 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May  4 12:22:34.910: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3579  559f42d4-e209-4875-b5f7-2bfb12323f2e 8561 0 2024-05-04 12:22:34 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-04 12:22:34 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 05/04/24 12:22:34.911
  May  4 12:22:34.920: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3579  559f42d4-e209-4875-b5f7-2bfb12323f2e 8562 0 2024-05-04 12:22:34 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-04 12:22:34 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  May  4 12:22:34.920: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3579  559f42d4-e209-4875-b5f7-2bfb12323f2e 8562 0 2024-05-04 12:22:34 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-04 12:22:34 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 05/04/24 12:22:34.92
  May  4 12:22:34.928: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3579  559f42d4-e209-4875-b5f7-2bfb12323f2e 8563 0 2024-05-04 12:22:34 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-04 12:22:34 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May  4 12:22:34.929: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3579  559f42d4-e209-4875-b5f7-2bfb12323f2e 8563 0 2024-05-04 12:22:34 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-04 12:22:34 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 05/04/24 12:22:34.929
  May  4 12:22:34.934: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3579  559f42d4-e209-4875-b5f7-2bfb12323f2e 8564 0 2024-05-04 12:22:34 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-04 12:22:34 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May  4 12:22:34.935: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3579  559f42d4-e209-4875-b5f7-2bfb12323f2e 8564 0 2024-05-04 12:22:34 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-04 12:22:34 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 05/04/24 12:22:34.935
  May  4 12:22:34.939: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3579  43196af9-a2b3-4597-81af-83088bc38ce4 8565 0 2024-05-04 12:22:34 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-04 12:22:34 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May  4 12:22:34.940: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3579  43196af9-a2b3-4597-81af-83088bc38ce4 8565 0 2024-05-04 12:22:34 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-04 12:22:34 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 05/04/24 12:22:44.94
  May  4 12:22:44.948: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3579  43196af9-a2b3-4597-81af-83088bc38ce4 8656 0 2024-05-04 12:22:34 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-04 12:22:34 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May  4 12:22:44.949: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3579  43196af9-a2b3-4597-81af-83088bc38ce4 8656 0 2024-05-04 12:22:34 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-04 12:22:34 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May  4 12:22:54.949: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3579" for this suite. @ 05/04/24 12:22:54.955
• [20.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 05/04/24 12:22:54.962
  May  4 12:22:54.962: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename pod-network-test @ 05/04/24 12:22:54.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:22:54.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:22:54.983
  STEP: Performing setup for networking test in namespace pod-network-test-6595 @ 05/04/24 12:22:54.985
  STEP: creating a selector @ 05/04/24 12:22:54.985
  STEP: Creating the service pods in kubernetes @ 05/04/24 12:22:54.985
  May  4 12:22:54.985: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 05/04/24 12:23:17.106
  May  4 12:23:19.139: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  May  4 12:23:19.139: INFO: Going to poll 192.168.149.33 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  May  4 12:23:19.142: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.149.33 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6595 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  4 12:23:19.142: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 12:23:19.142: INFO: ExecWithOptions: Clientset creation
  May  4 12:23:19.142: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6595/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.149.33+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May  4 12:23:20.199: INFO: Found all 1 expected endpoints: [netserver-0]
  May  4 12:23:20.199: INFO: Going to poll 192.168.170.78 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  May  4 12:23:20.204: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.170.78 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6595 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  4 12:23:20.204: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 12:23:20.204: INFO: ExecWithOptions: Clientset creation
  May  4 12:23:20.204: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6595/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.170.78+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May  4 12:23:21.259: INFO: Found all 1 expected endpoints: [netserver-1]
  May  4 12:23:21.259: INFO: Going to poll 192.168.186.16 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  May  4 12:23:21.264: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.186.16 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6595 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  4 12:23:21.264: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 12:23:21.264: INFO: ExecWithOptions: Clientset creation
  May  4 12:23:21.264: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6595/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.186.16+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May  4 12:23:22.310: INFO: Found all 1 expected endpoints: [netserver-2]
  May  4 12:23:22.310: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6595" for this suite. @ 05/04/24 12:23:22.316
• [27.364 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 05/04/24 12:23:22.326
  May  4 12:23:22.326: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename var-expansion @ 05/04/24 12:23:22.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:23:22.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:23:22.343
  STEP: Creating a pod to test env composition @ 05/04/24 12:23:22.346
  STEP: Saw pod success @ 05/04/24 12:23:26.372
  May  4 12:23:26.377: INFO: Trying to get logs from node ip-172-31-18-228 pod var-expansion-40dd8f25-a41d-4c8f-bcd9-76bda844a2c1 container dapi-container: <nil>
  STEP: delete the pod @ 05/04/24 12:23:26.396
  May  4 12:23:26.414: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7977" for this suite. @ 05/04/24 12:23:26.419
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 05/04/24 12:23:26.427
  May  4 12:23:26.427: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename downward-api @ 05/04/24 12:23:26.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:23:26.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:23:26.444
  STEP: Creating a pod to test downward API volume plugin @ 05/04/24 12:23:26.446
  STEP: Saw pod success @ 05/04/24 12:23:30.47
  May  4 12:23:30.474: INFO: Trying to get logs from node ip-172-31-18-228 pod downwardapi-volume-3bd6bd13-d8d0-427d-8cb1-1ac95f293962 container client-container: <nil>
  STEP: delete the pod @ 05/04/24 12:23:30.48
  May  4 12:23:30.499: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8113" for this suite. @ 05/04/24 12:23:30.503
• [4.083 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 05/04/24 12:23:30.51
  May  4 12:23:30.510: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename resourcequota @ 05/04/24 12:23:30.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:23:30.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:23:30.528
  STEP: Counting existing ResourceQuota @ 05/04/24 12:23:30.531
  STEP: Creating a ResourceQuota @ 05/04/24 12:23:35.535
  STEP: Ensuring resource quota status is calculated @ 05/04/24 12:23:35.542
  STEP: Creating a Service @ 05/04/24 12:23:37.547
  STEP: Creating a NodePort Service @ 05/04/24 12:23:37.568
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 05/04/24 12:23:37.593
  STEP: Ensuring resource quota status captures service creation @ 05/04/24 12:23:37.615
  STEP: Deleting Services @ 05/04/24 12:23:39.621
  STEP: Ensuring resource quota status released usage @ 05/04/24 12:23:39.665
  May  4 12:23:41.670: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8257" for this suite. @ 05/04/24 12:23:41.674
• [11.170 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 05/04/24 12:23:41.679
  May  4 12:23:41.679: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename projected @ 05/04/24 12:23:41.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:23:41.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:23:41.697
  STEP: Creating a pod to test downward API volume plugin @ 05/04/24 12:23:41.699
  STEP: Saw pod success @ 05/04/24 12:23:43.719
  May  4 12:23:43.722: INFO: Trying to get logs from node ip-172-31-18-228 pod downwardapi-volume-241473a8-5ea5-41aa-bf2f-ec52138a4e64 container client-container: <nil>
  STEP: delete the pod @ 05/04/24 12:23:43.729
  May  4 12:23:43.749: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1494" for this suite. @ 05/04/24 12:23:43.753
• [2.082 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 05/04/24 12:23:43.762
  May  4 12:23:43.762: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename csiinlinevolumes @ 05/04/24 12:23:43.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:23:43.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:23:43.779
  STEP: creating @ 05/04/24 12:23:43.786
  STEP: getting @ 05/04/24 12:23:43.807
  STEP: listing in namespace @ 05/04/24 12:23:43.811
  STEP: patching @ 05/04/24 12:23:43.814
  STEP: deleting @ 05/04/24 12:23:43.829
  May  4 12:23:43.841: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-378" for this suite. @ 05/04/24 12:23:43.844
• [0.091 seconds]
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 05/04/24 12:23:43.853
  May  4 12:23:43.853: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename projected @ 05/04/24 12:23:43.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:23:43.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:23:43.868
  STEP: Creating a pod to test downward API volume plugin @ 05/04/24 12:23:43.871
  STEP: Saw pod success @ 05/04/24 12:23:47.895
  May  4 12:23:47.899: INFO: Trying to get logs from node ip-172-31-18-228 pod downwardapi-volume-debe3d6c-f99b-4579-9a0d-9f7af55eaeff container client-container: <nil>
  STEP: delete the pod @ 05/04/24 12:23:47.905
  May  4 12:23:47.924: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5129" for this suite. @ 05/04/24 12:23:47.927
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 05/04/24 12:23:47.937
  May  4 12:23:47.937: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename emptydir @ 05/04/24 12:23:47.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:23:47.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:23:47.951
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 05/04/24 12:23:47.954
  STEP: Saw pod success @ 05/04/24 12:23:51.977
  May  4 12:23:51.981: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-06899d2a-848e-4953-9a90-c23ebca0cdbf container test-container: <nil>
  STEP: delete the pod @ 05/04/24 12:23:51.987
  May  4 12:23:52.005: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5342" for this suite. @ 05/04/24 12:23:52.009
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 05/04/24 12:23:52.018
  May  4 12:23:52.018: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename webhook @ 05/04/24 12:23:52.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:23:52.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:23:52.036
  STEP: Setting up server cert @ 05/04/24 12:23:52.064
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/04/24 12:23:52.239
  STEP: Deploying the webhook pod @ 05/04/24 12:23:52.249
  STEP: Wait for the deployment to be ready @ 05/04/24 12:23:52.264
  May  4 12:23:52.275: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/04/24 12:23:54.289
  STEP: Verifying the service has paired with the endpoint @ 05/04/24 12:23:54.305
  May  4 12:23:55.306: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 05/04/24 12:23:55.314
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/04/24 12:23:55.33
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 05/04/24 12:23:55.336
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/04/24 12:23:55.346
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 05/04/24 12:23:55.358
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/04/24 12:23:55.366
  May  4 12:23:55.417: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4791" for this suite. @ 05/04/24 12:23:55.421
  STEP: Destroying namespace "webhook-markers-4533" for this suite. @ 05/04/24 12:23:55.43
• [3.420 seconds]
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 05/04/24 12:23:55.438
  May  4 12:23:55.438: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename emptydir @ 05/04/24 12:23:55.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:23:55.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:23:55.453
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 05/04/24 12:23:55.457
  STEP: Saw pod success @ 05/04/24 12:23:59.483
  May  4 12:23:59.485: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-38cb3be0-8e11-476d-898e-54490a59128d container test-container: <nil>
  STEP: delete the pod @ 05/04/24 12:23:59.494
  May  4 12:23:59.511: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7682" for this suite. @ 05/04/24 12:23:59.515
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 05/04/24 12:23:59.526
  May  4 12:23:59.526: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename projected @ 05/04/24 12:23:59.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:23:59.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:23:59.598
  STEP: Creating a pod to test downward API volume plugin @ 05/04/24 12:23:59.6
  STEP: Saw pod success @ 05/04/24 12:24:01.622
  May  4 12:24:01.625: INFO: Trying to get logs from node ip-172-31-18-228 pod downwardapi-volume-c29abbd2-a2c4-41d6-bdcb-e8803239a4fd container client-container: <nil>
  STEP: delete the pod @ 05/04/24 12:24:01.632
  May  4 12:24:01.652: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-581" for this suite. @ 05/04/24 12:24:01.656
• [2.138 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:887
  STEP: Creating a kubernetes client @ 05/04/24 12:24:01.664
  May  4 12:24:01.664: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename kubectl @ 05/04/24 12:24:01.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:24:01.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:24:01.679
  STEP: validating api versions @ 05/04/24 12:24:01.683
  May  4 12:24:01.683: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-9661 api-versions'
  May  4 12:24:01.725: INFO: stderr: ""
  May  4 12:24:01.725: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  May  4 12:24:01.725: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9661" for this suite. @ 05/04/24 12:24:01.729
• [0.072 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1764
  STEP: Creating a kubernetes client @ 05/04/24 12:24:01.737
  May  4 12:24:01.737: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename kubectl @ 05/04/24 12:24:01.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:24:01.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:24:01.756
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/04/24 12:24:01.759
  May  4 12:24:01.759: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-9542 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  May  4 12:24:01.813: INFO: stderr: ""
  May  4 12:24:01.813: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 05/04/24 12:24:01.813
  May  4 12:24:01.818: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-9542 delete pods e2e-test-httpd-pod'
  May  4 12:24:03.495: INFO: stderr: ""
  May  4 12:24:03.495: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  May  4 12:24:03.495: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9542" for this suite. @ 05/04/24 12:24:03.5
• [1.772 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 05/04/24 12:24:03.509
  May  4 12:24:03.509: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/04/24 12:24:03.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:24:03.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:24:03.529
  May  4 12:24:03.532: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 12:24:04.556: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4792" for this suite. @ 05/04/24 12:24:04.56
• [1.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 05/04/24 12:24:04.568
  May  4 12:24:04.568: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename container-probe @ 05/04/24 12:24:04.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:24:04.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:24:04.588
  STEP: Creating pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949 @ 05/04/24 12:24:04.592
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/04/24 12:24:06.608
  May  4 12:24:06.613: INFO: Initial restart count of pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 is 0
  May  4 12:24:06.617: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:24:08.623: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:24:10.629: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:24:12.634: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:24:14.640: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:24:16.646: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:24:18.652: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:24:20.656: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:24:22.661: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:24:24.667: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:24:26.672: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:24:28.677: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:24:30.684: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:24:32.688: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:24:34.692: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:24:36.698: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:24:38.703: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:24:40.709: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:24:42.715: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:24:44.721: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:24:46.726: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:24:48.732: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:24:50.737: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:24:52.742: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:24:54.751: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:24:56.756: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:24:58.761: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:25:00.765: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:25:02.771: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:25:04.776: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:25:06.780: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:25:08.785: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:25:10.790: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:25:12.794: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:25:14.799: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:25:16.804: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:25:18.809: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:25:20.814: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:25:22.821: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:25:24.827: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:25:26.833: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:25:28.838: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:25:30.844: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:25:32.850: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:25:34.857: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:25:36.861: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:25:38.867: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:25:40.874: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:25:42.879: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:25:44.884: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:25:46.890: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:25:48.894: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:25:50.899: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:25:52.906: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:25:54.912: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:25:56.918: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:25:58.925: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:26:00.932: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:26:02.937: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:26:04.941: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:26:06.946: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:26:08.950: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:26:10.955: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:26:12.961: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:26:14.967: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:26:16.974: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:26:18.980: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:26:20.986: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:26:22.990: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:26:24.995: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:26:26.999: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:26:29.006: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:26:31.011: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:26:33.017: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:26:35.021: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:26:37.026: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:26:39.031: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:26:41.036: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:26:43.040: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:26:45.045: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:26:47.049: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:26:49.055: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:26:51.061: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:26:53.066: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:26:55.072: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:26:57.078: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:26:59.082: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:27:01.086: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:27:03.091: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:27:05.097: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:27:07.101: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:27:09.107: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:27:11.113: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:27:13.117: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:27:15.122: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:27:17.129: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:27:19.134: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:27:21.140: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:27:23.144: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:27:25.149: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:27:27.153: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:27:29.158: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:27:31.166: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:27:33.170: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:27:35.177: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:27:37.181: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:27:39.187: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:27:41.192: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:27:43.196: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:27:45.201: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:27:47.206: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:27:49.211: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:27:51.216: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:27:53.221: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:27:55.226: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:27:57.232: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:27:59.237: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:28:01.241: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:28:03.247: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  May  4 12:28:05.252: INFO: Get pod busybox-c0b6c0f0-f04b-4a98-abdd-37489e3c5b43 in namespace container-probe-949
  STEP: deleting the pod @ 05/04/24 12:28:07.252
  May  4 12:28:07.268: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-949" for this suite. @ 05/04/24 12:28:07.274
• [242.714 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 05/04/24 12:28:07.282
  May  4 12:28:07.282: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename cronjob @ 05/04/24 12:28:07.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:28:07.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:28:07.3
  STEP: Creating a cronjob @ 05/04/24 12:28:07.302
  STEP: creating @ 05/04/24 12:28:07.302
  STEP: getting @ 05/04/24 12:28:07.307
  STEP: listing @ 05/04/24 12:28:07.31
  STEP: watching @ 05/04/24 12:28:07.313
  May  4 12:28:07.313: INFO: starting watch
  STEP: cluster-wide listing @ 05/04/24 12:28:07.314
  STEP: cluster-wide watching @ 05/04/24 12:28:07.317
  May  4 12:28:07.317: INFO: starting watch
  STEP: patching @ 05/04/24 12:28:07.318
  STEP: updating @ 05/04/24 12:28:07.324
  May  4 12:28:07.333: INFO: waiting for watch events with expected annotations
  May  4 12:28:07.333: INFO: saw patched and updated annotations
  STEP: patching /status @ 05/04/24 12:28:07.333
  STEP: updating /status @ 05/04/24 12:28:07.34
  STEP: get /status @ 05/04/24 12:28:07.346
  STEP: deleting @ 05/04/24 12:28:07.35
  STEP: deleting a collection @ 05/04/24 12:28:07.367
  May  4 12:28:07.377: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-606" for this suite. @ 05/04/24 12:28:07.381
• [0.105 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2214
  STEP: Creating a kubernetes client @ 05/04/24 12:28:07.388
  May  4 12:28:07.388: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename services @ 05/04/24 12:28:07.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:28:07.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:28:07.406
  STEP: creating service in namespace services-8362 @ 05/04/24 12:28:07.408
  STEP: creating service affinity-nodeport in namespace services-8362 @ 05/04/24 12:28:07.408
  STEP: creating replication controller affinity-nodeport in namespace services-8362 @ 05/04/24 12:28:07.426
  I0504 12:28:07.436865      19 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-8362, replica count: 3
  I0504 12:28:10.487885      19 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May  4 12:28:10.500: INFO: Creating new exec pod
  May  4 12:28:13.519: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-8362 exec execpod-affinitywk2jd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  May  4 12:28:13.622: INFO: stderr: "+ nc -v -t -w 2 affinity-nodeport 80\n+ echo hostName\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  May  4 12:28:13.622: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May  4 12:28:13.622: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-8362 exec execpod-affinitywk2jd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.220 80'
  May  4 12:28:13.707: INFO: stderr: "+ nc -v -t -w 2 10.152.183.220 80\nConnection to 10.152.183.220 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  May  4 12:28:13.707: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May  4 12:28:13.708: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-8362 exec execpod-affinitywk2jd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.72.79 30287'
  May  4 12:28:13.798: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.72.79 30287\nConnection to 172.31.72.79 30287 port [tcp/*] succeeded!\n"
  May  4 12:28:13.798: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May  4 12:28:13.799: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-8362 exec execpod-affinitywk2jd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.18.228 30287'
  May  4 12:28:13.891: INFO: stderr: "+ nc -v -t -w 2 172.31.18.228 30287\nConnection to 172.31.18.228 30287 port [tcp/*] succeeded!\n+ echo hostName\n"
  May  4 12:28:13.891: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May  4 12:28:13.891: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-8362 exec execpod-affinitywk2jd -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.18.228:30287/ ; done'
  May  4 12:28:14.021: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:30287/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:30287/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:30287/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:30287/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:30287/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:30287/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:30287/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:30287/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:30287/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:30287/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:30287/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:30287/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:30287/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:30287/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:30287/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:30287/\n"
  May  4 12:28:14.021: INFO: stdout: "\naffinity-nodeport-s86bd\naffinity-nodeport-s86bd\naffinity-nodeport-s86bd\naffinity-nodeport-s86bd\naffinity-nodeport-s86bd\naffinity-nodeport-s86bd\naffinity-nodeport-s86bd\naffinity-nodeport-s86bd\naffinity-nodeport-s86bd\naffinity-nodeport-s86bd\naffinity-nodeport-s86bd\naffinity-nodeport-s86bd\naffinity-nodeport-s86bd\naffinity-nodeport-s86bd\naffinity-nodeport-s86bd\naffinity-nodeport-s86bd"
  May  4 12:28:14.021: INFO: Received response from host: affinity-nodeport-s86bd
  May  4 12:28:14.021: INFO: Received response from host: affinity-nodeport-s86bd
  May  4 12:28:14.021: INFO: Received response from host: affinity-nodeport-s86bd
  May  4 12:28:14.021: INFO: Received response from host: affinity-nodeport-s86bd
  May  4 12:28:14.021: INFO: Received response from host: affinity-nodeport-s86bd
  May  4 12:28:14.021: INFO: Received response from host: affinity-nodeport-s86bd
  May  4 12:28:14.021: INFO: Received response from host: affinity-nodeport-s86bd
  May  4 12:28:14.021: INFO: Received response from host: affinity-nodeport-s86bd
  May  4 12:28:14.021: INFO: Received response from host: affinity-nodeport-s86bd
  May  4 12:28:14.021: INFO: Received response from host: affinity-nodeport-s86bd
  May  4 12:28:14.021: INFO: Received response from host: affinity-nodeport-s86bd
  May  4 12:28:14.021: INFO: Received response from host: affinity-nodeport-s86bd
  May  4 12:28:14.021: INFO: Received response from host: affinity-nodeport-s86bd
  May  4 12:28:14.021: INFO: Received response from host: affinity-nodeport-s86bd
  May  4 12:28:14.021: INFO: Received response from host: affinity-nodeport-s86bd
  May  4 12:28:14.021: INFO: Received response from host: affinity-nodeport-s86bd
  May  4 12:28:14.021: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-8362, will wait for the garbage collector to delete the pods @ 05/04/24 12:28:14.039
  May  4 12:28:14.104: INFO: Deleting ReplicationController affinity-nodeport took: 8.513311ms
  May  4 12:28:14.204: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.76435ms
  May  4 12:28:17.027: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8362" for this suite. @ 05/04/24 12:28:17.031
• [9.652 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 05/04/24 12:28:17.04
  May  4 12:28:17.040: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename projected @ 05/04/24 12:28:17.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:28:17.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:28:17.053
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-aae23e17-1592-4ae2-9bce-7093bac596fe @ 05/04/24 12:28:17.061
  STEP: Creating the pod @ 05/04/24 12:28:17.065
  STEP: Updating configmap projected-configmap-test-upd-aae23e17-1592-4ae2-9bce-7093bac596fe @ 05/04/24 12:28:19.141
  STEP: waiting to observe update in volume @ 05/04/24 12:28:19.146
  May  4 12:29:39.529: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8535" for this suite. @ 05/04/24 12:29:39.534
• [82.502 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 05/04/24 12:29:39.542
  May  4 12:29:39.542: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename emptydir @ 05/04/24 12:29:39.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:29:39.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:29:39.56
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 05/04/24 12:29:39.563
  STEP: Saw pod success @ 05/04/24 12:29:43.591
  May  4 12:29:43.594: INFO: Trying to get logs from node ip-172-31-72-79 pod pod-0f28da1c-7f67-4ead-9651-77e9fdf5da86 container test-container: <nil>
  STEP: delete the pod @ 05/04/24 12:29:43.61
  May  4 12:29:43.627: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6353" for this suite. @ 05/04/24 12:29:43.631
• [4.096 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 05/04/24 12:29:43.638
  May  4 12:29:43.638: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename endpointslice @ 05/04/24 12:29:43.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:29:43.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:29:43.657
  May  4 12:29:45.711: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4777" for this suite. @ 05/04/24 12:29:45.716
• [2.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 05/04/24 12:29:45.725
  May  4 12:29:45.725: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename downward-api @ 05/04/24 12:29:45.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:29:45.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:29:45.744
  STEP: Creating a pod to test downward api env vars @ 05/04/24 12:29:45.746
  STEP: Saw pod success @ 05/04/24 12:29:49.77
  May  4 12:29:49.774: INFO: Trying to get logs from node ip-172-31-18-228 pod downward-api-fdb2a2be-ea48-49eb-94fe-217ec83757ab container dapi-container: <nil>
  STEP: delete the pod @ 05/04/24 12:29:49.78
  May  4 12:29:49.798: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2578" for this suite. @ 05/04/24 12:29:49.802
• [4.085 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 05/04/24 12:29:49.809
  May  4 12:29:49.809: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename pods @ 05/04/24 12:29:49.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:29:49.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:29:49.826
  STEP: creating a Pod with a static label @ 05/04/24 12:29:49.834
  STEP: watching for Pod to be ready @ 05/04/24 12:29:49.844
  May  4 12:29:49.845: INFO: observed Pod pod-test in namespace pods-4665 in phase Pending with labels: map[test-pod-static:true] & conditions []
  May  4 12:29:49.850: INFO: observed Pod pod-test in namespace pods-4665 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-04 12:29:49 +0000 UTC  }]
  May  4 12:29:49.864: INFO: observed Pod pod-test in namespace pods-4665 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-05-04 12:29:49 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-04 12:29:49 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-04 12:29:49 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-04 12:29:49 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-04 12:29:49 +0000 UTC  }]
  May  4 12:29:51.037: INFO: Found Pod pod-test in namespace pods-4665 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-04 12:29:51 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-04 12:29:49 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-05-04 12:29:51 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-05-04 12:29:51 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-04 12:29:49 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 05/04/24 12:29:51.041
  STEP: getting the Pod and ensuring that it's patched @ 05/04/24 12:29:51.049
  STEP: replacing the Pod's status Ready condition to False @ 05/04/24 12:29:51.053
  STEP: check the Pod again to ensure its Ready conditions are False @ 05/04/24 12:29:51.063
  STEP: deleting the Pod via a Collection with a LabelSelector @ 05/04/24 12:29:51.063
  STEP: watching for the Pod to be deleted @ 05/04/24 12:29:51.073
  May  4 12:29:51.074: INFO: observed event type MODIFIED
  May  4 12:29:51.527: INFO: observed event type MODIFIED
  May  4 12:29:53.043: INFO: observed event type MODIFIED
  May  4 12:29:53.188: INFO: observed event type MODIFIED
  May  4 12:29:54.048: INFO: observed event type MODIFIED
  May  4 12:29:54.058: INFO: observed event type MODIFIED
  May  4 12:29:54.067: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4665" for this suite. @ 05/04/24 12:29:54.07
• [4.267 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:408
  STEP: Creating a kubernetes client @ 05/04/24 12:29:54.076
  May  4 12:29:54.076: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename job @ 05/04/24 12:29:54.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:29:54.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:29:54.095
  STEP: Creating Indexed job @ 05/04/24 12:29:54.1
  STEP: Ensuring job reaches completions @ 05/04/24 12:29:54.106
  STEP: Ensuring pods with index for job exist @ 05/04/24 12:30:02.113
  May  4 12:30:02.118: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7002" for this suite. @ 05/04/24 12:30:02.122
• [8.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 05/04/24 12:30:02.128
  May  4 12:30:02.128: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename proxy @ 05/04/24 12:30:02.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:30:02.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:30:02.147
  May  4 12:30:02.150: INFO: Creating pod...
  May  4 12:30:04.167: INFO: Creating service...
  May  4 12:30:04.178: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6185/pods/agnhost/proxy/some/path/with/DELETE
  May  4 12:30:04.188: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  May  4 12:30:04.188: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6185/pods/agnhost/proxy/some/path/with/GET
  May  4 12:30:04.192: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  May  4 12:30:04.192: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6185/pods/agnhost/proxy/some/path/with/HEAD
  May  4 12:30:04.196: INFO: http.Client request:HEAD | StatusCode:200
  May  4 12:30:04.196: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6185/pods/agnhost/proxy/some/path/with/OPTIONS
  May  4 12:30:04.200: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  May  4 12:30:04.201: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6185/pods/agnhost/proxy/some/path/with/PATCH
  May  4 12:30:04.205: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  May  4 12:30:04.205: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6185/pods/agnhost/proxy/some/path/with/POST
  May  4 12:30:04.210: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  May  4 12:30:04.210: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6185/pods/agnhost/proxy/some/path/with/PUT
  May  4 12:30:04.213: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  May  4 12:30:04.213: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6185/services/test-service/proxy/some/path/with/DELETE
  May  4 12:30:04.220: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  May  4 12:30:04.220: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6185/services/test-service/proxy/some/path/with/GET
  May  4 12:30:04.226: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  May  4 12:30:04.226: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6185/services/test-service/proxy/some/path/with/HEAD
  May  4 12:30:04.230: INFO: http.Client request:HEAD | StatusCode:200
  May  4 12:30:04.230: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6185/services/test-service/proxy/some/path/with/OPTIONS
  May  4 12:30:04.237: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  May  4 12:30:04.237: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6185/services/test-service/proxy/some/path/with/PATCH
  May  4 12:30:04.242: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  May  4 12:30:04.242: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6185/services/test-service/proxy/some/path/with/POST
  May  4 12:30:04.247: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  May  4 12:30:04.247: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6185/services/test-service/proxy/some/path/with/PUT
  May  4 12:30:04.254: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  May  4 12:30:04.254: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-6185" for this suite. @ 05/04/24 12:30:04.258
• [2.139 seconds]
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 05/04/24 12:30:04.267
  May  4 12:30:04.267: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename replicaset @ 05/04/24 12:30:04.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:30:04.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:30:04.286
  STEP: Create a ReplicaSet @ 05/04/24 12:30:04.289
  STEP: Verify that the required pods have come up @ 05/04/24 12:30:04.294
  May  4 12:30:04.297: INFO: Pod name sample-pod: Found 0 pods out of 3
  May  4 12:30:09.304: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 05/04/24 12:30:09.305
  May  4 12:30:09.308: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 05/04/24 12:30:09.309
  STEP: DeleteCollection of the ReplicaSets @ 05/04/24 12:30:09.314
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 05/04/24 12:30:09.324
  May  4 12:30:09.331: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5096" for this suite. @ 05/04/24 12:30:09.335
• [5.081 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 05/04/24 12:30:09.348
  May  4 12:30:09.348: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename daemonsets @ 05/04/24 12:30:09.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:30:09.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:30:09.375
  STEP: Creating simple DaemonSet "daemon-set" @ 05/04/24 12:30:09.396
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/04/24 12:30:09.403
  May  4 12:30:09.408: INFO: DaemonSet pods can't tolerate node ip-172-31-26-203 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 12:30:09.408: INFO: DaemonSet pods can't tolerate node ip-172-31-85-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 12:30:09.410: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  4 12:30:09.410: INFO: Node ip-172-31-18-228 is running 0 daemon pod, expected 1
  May  4 12:30:10.408: INFO: DaemonSet pods can't tolerate node ip-172-31-26-203 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 12:30:10.408: INFO: DaemonSet pods can't tolerate node ip-172-31-85-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 12:30:10.413: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  May  4 12:30:10.413: INFO: Node ip-172-31-72-79 is running 0 daemon pod, expected 1
  May  4 12:30:11.409: INFO: DaemonSet pods can't tolerate node ip-172-31-26-203 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 12:30:11.409: INFO: DaemonSet pods can't tolerate node ip-172-31-85-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 12:30:11.414: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  May  4 12:30:11.414: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 05/04/24 12:30:11.417
  STEP: DeleteCollection of the DaemonSets @ 05/04/24 12:30:11.421
  STEP: Verify that ReplicaSets have been deleted @ 05/04/24 12:30:11.431
  May  4 12:30:11.451: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"10708"},"items":null}

  May  4 12:30:11.458: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"10711"},"items":[{"metadata":{"name":"daemon-set-77mzl","generateName":"daemon-set-","namespace":"daemonsets-25","uid":"dc8a80d8-9690-4ec7-9559-2991a19bd329","resourceVersion":"10709","creationTimestamp":"2024-05-04T12:30:09Z","deletionTimestamp":"2024-05-04T12:30:41Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"0271ce7d-14b2-4c24-a5c2-ca2cbfc7107a","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-05-04T12:30:09Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0271ce7d-14b2-4c24-a5c2-ca2cbfc7107a\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-05-04T12:30:10Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.149.54\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-4znsv","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-4znsv","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-18-228","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-18-228"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-04T12:30:10Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-04T12:30:09Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-04T12:30:10Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-04T12:30:10Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-04T12:30:09Z"}],"hostIP":"172.31.18.228","hostIPs":[{"ip":"172.31.18.228"}],"podIP":"192.168.149.54","podIPs":[{"ip":"192.168.149.54"}],"startTime":"2024-05-04T12:30:09Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-04T12:30:10Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://d8a40dea10c84b3abbaeb5596e19d44684b9003847bc9b6041456ab2daf79396","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-jnvmv","generateName":"daemon-set-","namespace":"daemonsets-25","uid":"36ea548b-e528-4381-a79a-9d86036c9291","resourceVersion":"10706","creationTimestamp":"2024-05-04T12:30:09Z","deletionTimestamp":"2024-05-04T12:30:41Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"0271ce7d-14b2-4c24-a5c2-ca2cbfc7107a","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-05-04T12:30:09Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0271ce7d-14b2-4c24-a5c2-ca2cbfc7107a\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-05-04T12:30:10Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.170.81\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-27zgw","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-27zgw","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-33-38","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-33-38"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-04T12:30:10Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-04T12:30:09Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-04T12:30:10Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-04T12:30:10Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-04T12:30:09Z"}],"hostIP":"172.31.33.38","hostIPs":[{"ip":"172.31.33.38"}],"podIP":"192.168.170.81","podIPs":[{"ip":"192.168.170.81"}],"startTime":"2024-05-04T12:30:09Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-04T12:30:10Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://f54122c7a32066082c91e19832db7b82ee681b4256c25aea972b1345e7e491f6","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-thbfp","generateName":"daemon-set-","namespace":"daemonsets-25","uid":"e1599bf4-e518-4fd2-92f8-2520b2644f87","resourceVersion":"10708","creationTimestamp":"2024-05-04T12:30:09Z","deletionTimestamp":"2024-05-04T12:30:41Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"0271ce7d-14b2-4c24-a5c2-ca2cbfc7107a","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-05-04T12:30:09Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0271ce7d-14b2-4c24-a5c2-ca2cbfc7107a\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-05-04T12:30:10Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.186.21\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-2cdfq","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-2cdfq","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-72-79","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-72-79"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-04T12:30:10Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-04T12:30:09Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-04T12:30:10Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-04T12:30:10Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-04T12:30:09Z"}],"hostIP":"172.31.72.79","hostIPs":[{"ip":"172.31.72.79"}],"podIP":"192.168.186.21","podIPs":[{"ip":"192.168.186.21"}],"startTime":"2024-05-04T12:30:09Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-04T12:30:10Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://4b01bdd08ea0d91fd1b0c8960776da2e66a46a8a6b1559ed4c7bcd9d02f85cb2","started":true}],"qosClass":"BestEffort"}}]}

  May  4 12:30:11.471: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-25" for this suite. @ 05/04/24 12:30:11.474
• [2.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 05/04/24 12:30:11.48
  May  4 12:30:11.480: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename webhook @ 05/04/24 12:30:11.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:30:11.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:30:11.5
  STEP: Setting up server cert @ 05/04/24 12:30:11.519
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/04/24 12:30:11.67
  STEP: Deploying the webhook pod @ 05/04/24 12:30:11.678
  STEP: Wait for the deployment to be ready @ 05/04/24 12:30:11.69
  May  4 12:30:11.698: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/04/24 12:30:13.71
  STEP: Verifying the service has paired with the endpoint @ 05/04/24 12:30:13.726
  May  4 12:30:14.726: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  May  4 12:30:14.733: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 05/04/24 12:30:15.241
  STEP: Creating a custom resource that should be denied by the webhook @ 05/04/24 12:30:15.255
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 05/04/24 12:30:17.273
  STEP: Updating the custom resource with disallowed data should be denied @ 05/04/24 12:30:17.279
  STEP: Deleting the custom resource should be denied @ 05/04/24 12:30:17.288
  STEP: Remove the offending key and value from the custom resource data @ 05/04/24 12:30:17.295
  STEP: Deleting the updated custom resource should be successful @ 05/04/24 12:30:17.303
  May  4 12:30:17.878: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4709" for this suite. @ 05/04/24 12:30:17.883
  STEP: Destroying namespace "webhook-markers-2627" for this suite. @ 05/04/24 12:30:17.891
• [6.417 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 05/04/24 12:30:17.898
  May  4 12:30:17.898: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename projected @ 05/04/24 12:30:17.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:30:17.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:30:17.916
  STEP: Creating a pod to test downward API volume plugin @ 05/04/24 12:30:17.919
  STEP: Saw pod success @ 05/04/24 12:30:21.942
  May  4 12:30:21.945: INFO: Trying to get logs from node ip-172-31-18-228 pod downwardapi-volume-06943aed-723b-48f9-ba9a-c13b95b3c0b1 container client-container: <nil>
  STEP: delete the pod @ 05/04/24 12:30:21.952
  May  4 12:30:21.969: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2418" for this suite. @ 05/04/24 12:30:21.972
• [4.081 seconds]
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 05/04/24 12:30:21.979
  May  4 12:30:21.979: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename events @ 05/04/24 12:30:21.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:30:21.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:30:21.998
  STEP: creating a test event @ 05/04/24 12:30:22.001
  STEP: listing all events in all namespaces @ 05/04/24 12:30:22.005
  STEP: patching the test event @ 05/04/24 12:30:22.022
  STEP: fetching the test event @ 05/04/24 12:30:22.029
  STEP: updating the test event @ 05/04/24 12:30:22.032
  STEP: getting the test event @ 05/04/24 12:30:22.042
  STEP: deleting the test event @ 05/04/24 12:30:22.046
  STEP: listing all events in all namespaces @ 05/04/24 12:30:22.053
  May  4 12:30:22.073: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2939" for this suite. @ 05/04/24 12:30:22.079
• [0.107 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 05/04/24 12:30:22.087
  May  4 12:30:22.087: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename container-probe @ 05/04/24 12:30:22.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:30:22.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:30:22.106
  STEP: Creating pod liveness-03a49a9d-de15-46d3-b12b-d5bbcb0bbedd in namespace container-probe-3029 @ 05/04/24 12:30:22.108
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/04/24 12:30:24.128
  May  4 12:30:24.131: INFO: Initial restart count of pod liveness-03a49a9d-de15-46d3-b12b-d5bbcb0bbedd is 0
  May  4 12:30:24.135: INFO: Get pod liveness-03a49a9d-de15-46d3-b12b-d5bbcb0bbedd in namespace container-probe-3029
  May  4 12:30:26.140: INFO: Get pod liveness-03a49a9d-de15-46d3-b12b-d5bbcb0bbedd in namespace container-probe-3029
  May  4 12:30:28.146: INFO: Get pod liveness-03a49a9d-de15-46d3-b12b-d5bbcb0bbedd in namespace container-probe-3029
  May  4 12:30:30.150: INFO: Get pod liveness-03a49a9d-de15-46d3-b12b-d5bbcb0bbedd in namespace container-probe-3029
  May  4 12:30:32.157: INFO: Get pod liveness-03a49a9d-de15-46d3-b12b-d5bbcb0bbedd in namespace container-probe-3029
  May  4 12:30:34.162: INFO: Get pod liveness-03a49a9d-de15-46d3-b12b-d5bbcb0bbedd in namespace container-probe-3029
  May  4 12:30:36.168: INFO: Get pod liveness-03a49a9d-de15-46d3-b12b-d5bbcb0bbedd in namespace container-probe-3029
  May  4 12:30:38.172: INFO: Get pod liveness-03a49a9d-de15-46d3-b12b-d5bbcb0bbedd in namespace container-probe-3029
  May  4 12:30:40.177: INFO: Get pod liveness-03a49a9d-de15-46d3-b12b-d5bbcb0bbedd in namespace container-probe-3029
  May  4 12:30:42.183: INFO: Get pod liveness-03a49a9d-de15-46d3-b12b-d5bbcb0bbedd in namespace container-probe-3029
  May  4 12:30:44.187: INFO: Get pod liveness-03a49a9d-de15-46d3-b12b-d5bbcb0bbedd in namespace container-probe-3029
  May  4 12:30:44.188: INFO: Restart count of pod container-probe-3029/liveness-03a49a9d-de15-46d3-b12b-d5bbcb0bbedd is now 1 (20.056465682s elapsed)
  STEP: deleting the pod @ 05/04/24 12:30:44.188
  May  4 12:30:44.207: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3029" for this suite. @ 05/04/24 12:30:44.211
• [22.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 05/04/24 12:30:44.22
  May  4 12:30:44.220: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename var-expansion @ 05/04/24 12:30:44.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:30:44.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:30:44.237
  STEP: creating the pod with failed condition @ 05/04/24 12:30:44.24
  STEP: updating the pod @ 05/04/24 12:32:44.253
  May  4 12:32:44.767: INFO: Successfully updated pod "var-expansion-5d445b15-1bcf-45b6-bf76-0db6895dc651"
  STEP: waiting for pod running @ 05/04/24 12:32:44.767
  STEP: deleting the pod gracefully @ 05/04/24 12:32:46.776
  May  4 12:32:46.776: INFO: Deleting pod "var-expansion-5d445b15-1bcf-45b6-bf76-0db6895dc651" in namespace "var-expansion-4585"
  May  4 12:32:46.786: INFO: Wait up to 5m0s for pod "var-expansion-5d445b15-1bcf-45b6-bf76-0db6895dc651" to be fully deleted
  May  4 12:33:18.876: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4585" for this suite. @ 05/04/24 12:33:18.88
• [154.668 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 05/04/24 12:33:18.888
  May  4 12:33:18.888: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename emptydir @ 05/04/24 12:33:18.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:33:18.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:33:18.909
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 05/04/24 12:33:18.911
  STEP: Saw pod success @ 05/04/24 12:33:22.937
  May  4 12:33:22.941: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-6e924bef-485b-4fa4-a16b-b9593836f371 container test-container: <nil>
  STEP: delete the pod @ 05/04/24 12:33:22.952
  May  4 12:33:22.972: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2606" for this suite. @ 05/04/24 12:33:22.976
• [4.095 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 05/04/24 12:33:22.983
  May  4 12:33:22.983: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename services @ 05/04/24 12:33:22.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:33:22.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:33:23
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-1622 @ 05/04/24 12:33:23.002
  STEP: changing the ExternalName service to type=NodePort @ 05/04/24 12:33:23.01
  STEP: creating replication controller externalname-service in namespace services-1622 @ 05/04/24 12:33:23.029
  I0504 12:33:23.043319      19 runners.go:197] Created replication controller with name: externalname-service, namespace: services-1622, replica count: 2
  I0504 12:33:26.094539      19 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May  4 12:33:26.094: INFO: Creating new exec pod
  May  4 12:33:29.112: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-1622 exec execpodscdgs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  May  4 12:33:29.214: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  May  4 12:33:29.214: INFO: stdout: "externalname-service-jgr9f"
  May  4 12:33:29.214: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-1622 exec execpodscdgs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.119 80'
  May  4 12:33:29.353: INFO: stderr: "+ nc -v -t -w 2 10.152.183.119 80\n+ echo hostName\nConnection to 10.152.183.119 80 port [tcp/http] succeeded!\n"
  May  4 12:33:29.353: INFO: stdout: "externalname-service-jgr9f"
  May  4 12:33:29.353: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-1622 exec execpodscdgs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.72.79 32260'
  May  4 12:33:29.448: INFO: stderr: "+ nc -v -t -w 2 172.31.72.79 32260\n+ echo hostName\nConnection to 172.31.72.79 32260 port [tcp/*] succeeded!\n"
  May  4 12:33:29.448: INFO: stdout: "externalname-service-jgr9f"
  May  4 12:33:29.448: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-1622 exec execpodscdgs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.18.228 32260'
  May  4 12:33:29.535: INFO: stderr: "+ nc -v -t -w 2 172.31.18.228 32260\nConnection to 172.31.18.228 32260 port [tcp/*] succeeded!\n+ echo hostName\n"
  May  4 12:33:29.535: INFO: stdout: ""
  May  4 12:33:30.449: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-1622 exec execpodscdgs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.18.228 32260'
  May  4 12:33:30.537: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.18.228 32260\nConnection to 172.31.18.228 32260 port [tcp/*] succeeded!\n"
  May  4 12:33:30.537: INFO: stdout: "externalname-service-jgr9f"
  May  4 12:33:30.537: INFO: Cleaning up the ExternalName to NodePort test service
  May  4 12:33:30.569: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1622" for this suite. @ 05/04/24 12:33:30.576
• [7.600 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 05/04/24 12:33:30.583
  May  4 12:33:30.583: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename svcaccounts @ 05/04/24 12:33:30.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:33:30.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:33:30.605
  May  4 12:33:30.612: INFO: Got root ca configmap in namespace "svcaccounts-1557"
  May  4 12:33:30.623: INFO: Deleted root ca configmap in namespace "svcaccounts-1557"
  STEP: waiting for a new root ca configmap created @ 05/04/24 12:33:31.123
  May  4 12:33:31.128: INFO: Recreated root ca configmap in namespace "svcaccounts-1557"
  May  4 12:33:31.132: INFO: Updated root ca configmap in namespace "svcaccounts-1557"
  STEP: waiting for the root ca configmap reconciled @ 05/04/24 12:33:31.633
  May  4 12:33:31.637: INFO: Reconciled root ca configmap in namespace "svcaccounts-1557"
  May  4 12:33:31.638: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1557" for this suite. @ 05/04/24 12:33:31.641
• [1.066 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 05/04/24 12:33:31.649
  May  4 12:33:31.649: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename projected @ 05/04/24 12:33:31.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:33:31.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:33:31.668
  STEP: Creating configMap with name projected-configmap-test-volume-map-bfc166ac-b041-4d48-9e19-f37b9917b007 @ 05/04/24 12:33:31.671
  STEP: Creating a pod to test consume configMaps @ 05/04/24 12:33:31.676
  STEP: Saw pod success @ 05/04/24 12:33:33.693
  May  4 12:33:33.697: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-projected-configmaps-08993f8f-32a9-4a48-bafa-61f80d2d4701 container agnhost-container: <nil>
  STEP: delete the pod @ 05/04/24 12:33:33.71
  May  4 12:33:33.730: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7991" for this suite. @ 05/04/24 12:33:33.733
• [2.093 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 05/04/24 12:33:33.743
  May  4 12:33:33.743: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename downward-api @ 05/04/24 12:33:33.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:33:33.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:33:33.76
  STEP: Creating a pod to test downward API volume plugin @ 05/04/24 12:33:33.763
  STEP: Saw pod success @ 05/04/24 12:33:35.777
  May  4 12:33:35.782: INFO: Trying to get logs from node ip-172-31-18-228 pod downwardapi-volume-ff1ac169-fb70-4e40-a55c-019e2a9ce415 container client-container: <nil>
  STEP: delete the pod @ 05/04/24 12:33:35.789
  May  4 12:33:35.804: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1239" for this suite. @ 05/04/24 12:33:35.807
• [2.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 05/04/24 12:33:35.817
  May  4 12:33:35.817: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename conformance-tests @ 05/04/24 12:33:35.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:33:35.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:33:35.839
  STEP: Getting node addresses @ 05/04/24 12:33:35.842
  May  4 12:33:35.842: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  May  4 12:33:35.847: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-1464" for this suite. @ 05/04/24 12:33:35.853
• [0.046 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 05/04/24 12:33:35.864
  May  4 12:33:35.864: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename secrets @ 05/04/24 12:33:35.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:33:35.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:33:35.884
  STEP: Creating secret with name secret-test-90d8a193-4aba-429e-ad78-712a436f0288 @ 05/04/24 12:33:35.89
  STEP: Creating a pod to test consume secrets @ 05/04/24 12:33:35.895
  STEP: Saw pod success @ 05/04/24 12:33:39.923
  May  4 12:33:39.925: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-secrets-58ac46b7-61cf-4b2a-b997-f90729cba571 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/04/24 12:33:39.932
  May  4 12:33:39.949: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3127" for this suite. @ 05/04/24 12:33:39.954
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 05/04/24 12:33:39.963
  May  4 12:33:39.963: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/04/24 12:33:39.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:33:39.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:33:39.983
  May  4 12:33:39.987: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 12:33:46.214: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4798" for this suite. @ 05/04/24 12:33:46.218
• [6.262 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 05/04/24 12:33:46.225
  May  4 12:33:46.225: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename pods @ 05/04/24 12:33:46.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:33:46.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:33:46.242
  STEP: creating pod @ 05/04/24 12:33:46.244
  May  4 12:33:48.269: INFO: Pod pod-hostip-3c556b10-92b3-4614-bf3a-c8c24342615d has hostIP: 172.31.18.228
  May  4 12:33:48.269: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8002" for this suite. @ 05/04/24 12:33:48.273
• [2.056 seconds]
------------------------------
SSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 05/04/24 12:33:48.281
  May  4 12:33:48.281: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename cronjob @ 05/04/24 12:33:48.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:33:48.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:33:48.295
  STEP: Creating a cronjob @ 05/04/24 12:33:48.297
  STEP: Ensuring more than one job is running at a time @ 05/04/24 12:33:48.302
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 05/04/24 12:35:00.308
  STEP: Removing cronjob @ 05/04/24 12:35:00.314
  May  4 12:35:00.322: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8216" for this suite. @ 05/04/24 12:35:00.334
• [72.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 05/04/24 12:35:00.353
  May  4 12:35:00.353: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename security-context @ 05/04/24 12:35:00.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:35:00.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:35:00.387
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 05/04/24 12:35:00.394
  STEP: Saw pod success @ 05/04/24 12:35:04.417
  May  4 12:35:04.422: INFO: Trying to get logs from node ip-172-31-72-79 pod security-context-54c87205-0aa8-4d8a-914e-f8e2723a8767 container test-container: <nil>
  STEP: delete the pod @ 05/04/24 12:35:04.439
  May  4 12:35:04.457: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-987" for this suite. @ 05/04/24 12:35:04.462
• [4.115 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 05/04/24 12:35:04.468
  May  4 12:35:04.468: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename webhook @ 05/04/24 12:35:04.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:35:04.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:35:04.485
  STEP: Setting up server cert @ 05/04/24 12:35:04.51
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/04/24 12:35:04.663
  STEP: Deploying the webhook pod @ 05/04/24 12:35:04.674
  STEP: Wait for the deployment to be ready @ 05/04/24 12:35:04.688
  May  4 12:35:04.699: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/04/24 12:35:06.713
  STEP: Verifying the service has paired with the endpoint @ 05/04/24 12:35:06.733
  May  4 12:35:07.733: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  May  4 12:35:07.742: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7510-crds.webhook.example.com via the AdmissionRegistration API @ 05/04/24 12:35:08.259
  STEP: Creating a custom resource that should be mutated by the webhook @ 05/04/24 12:35:08.274
  May  4 12:35:10.875: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-968" for this suite. @ 05/04/24 12:35:10.879
  STEP: Destroying namespace "webhook-markers-4825" for this suite. @ 05/04/24 12:35:10.887
• [6.427 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 05/04/24 12:35:10.895
  May  4 12:35:10.895: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename var-expansion @ 05/04/24 12:35:10.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:35:10.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:35:10.914
  May  4 12:35:12.938: INFO: Deleting pod "var-expansion-e788fabc-8f75-4918-91b3-ae8d0f0493d4" in namespace "var-expansion-3856"
  May  4 12:35:12.948: INFO: Wait up to 5m0s for pod "var-expansion-e788fabc-8f75-4918-91b3-ae8d0f0493d4" to be fully deleted
  May  4 12:35:14.957: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3856" for this suite. @ 05/04/24 12:35:14.961
• [4.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 05/04/24 12:35:14.967
  May  4 12:35:14.967: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename daemonsets @ 05/04/24 12:35:14.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:35:14.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:35:14.988
  May  4 12:35:15.007: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/04/24 12:35:15.014
  May  4 12:35:15.020: INFO: DaemonSet pods can't tolerate node ip-172-31-26-203 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 12:35:15.020: INFO: DaemonSet pods can't tolerate node ip-172-31-85-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 12:35:15.022: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  4 12:35:15.022: INFO: Node ip-172-31-18-228 is running 0 daemon pod, expected 1
  May  4 12:35:16.018: INFO: DaemonSet pods can't tolerate node ip-172-31-26-203 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 12:35:16.018: INFO: DaemonSet pods can't tolerate node ip-172-31-85-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 12:35:16.023: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May  4 12:35:16.023: INFO: Node ip-172-31-18-228 is running 0 daemon pod, expected 1
  May  4 12:35:17.020: INFO: DaemonSet pods can't tolerate node ip-172-31-26-203 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 12:35:17.020: INFO: DaemonSet pods can't tolerate node ip-172-31-85-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 12:35:17.024: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  May  4 12:35:17.024: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 05/04/24 12:35:17.036
  STEP: Check that daemon pods images are updated. @ 05/04/24 12:35:17.047
  May  4 12:35:17.051: INFO: Wrong image for pod: daemon-set-9k8x9. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May  4 12:35:17.051: INFO: Wrong image for pod: daemon-set-9kvvm. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May  4 12:35:17.051: INFO: Wrong image for pod: daemon-set-tn8l4. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May  4 12:35:17.056: INFO: DaemonSet pods can't tolerate node ip-172-31-26-203 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 12:35:17.057: INFO: DaemonSet pods can't tolerate node ip-172-31-85-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 12:35:18.051: INFO: Wrong image for pod: daemon-set-9k8x9. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May  4 12:35:18.051: INFO: Pod daemon-set-lfgzl is not available
  May  4 12:35:18.051: INFO: Wrong image for pod: daemon-set-tn8l4. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May  4 12:35:18.056: INFO: DaemonSet pods can't tolerate node ip-172-31-26-203 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 12:35:18.056: INFO: DaemonSet pods can't tolerate node ip-172-31-85-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 12:35:19.052: INFO: Pod daemon-set-9drmx is not available
  May  4 12:35:19.052: INFO: Wrong image for pod: daemon-set-tn8l4. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May  4 12:35:19.056: INFO: DaemonSet pods can't tolerate node ip-172-31-26-203 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 12:35:19.056: INFO: DaemonSet pods can't tolerate node ip-172-31-85-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 12:35:20.052: INFO: Pod daemon-set-9drmx is not available
  May  4 12:35:20.052: INFO: Wrong image for pod: daemon-set-tn8l4. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  May  4 12:35:20.055: INFO: DaemonSet pods can't tolerate node ip-172-31-26-203 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 12:35:20.055: INFO: DaemonSet pods can't tolerate node ip-172-31-85-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 12:35:21.052: INFO: Pod daemon-set-8zg4n is not available
  May  4 12:35:21.055: INFO: DaemonSet pods can't tolerate node ip-172-31-26-203 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 12:35:21.055: INFO: DaemonSet pods can't tolerate node ip-172-31-85-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 05/04/24 12:35:21.056
  May  4 12:35:21.060: INFO: DaemonSet pods can't tolerate node ip-172-31-26-203 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 12:35:21.060: INFO: DaemonSet pods can't tolerate node ip-172-31-85-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 12:35:21.063: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  May  4 12:35:21.063: INFO: Node ip-172-31-18-228 is running 0 daemon pod, expected 1
  May  4 12:35:22.061: INFO: DaemonSet pods can't tolerate node ip-172-31-26-203 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 12:35:22.061: INFO: DaemonSet pods can't tolerate node ip-172-31-85-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 12:35:22.066: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  May  4 12:35:22.066: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/04/24 12:35:22.083
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9350, will wait for the garbage collector to delete the pods @ 05/04/24 12:35:22.083
  May  4 12:35:22.147: INFO: Deleting DaemonSet.extensions daemon-set took: 8.94997ms
  May  4 12:35:22.247: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.667101ms
  May  4 12:35:23.752: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  4 12:35:23.752: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May  4 12:35:23.756: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"12348"},"items":null}

  May  4 12:35:23.760: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"12348"},"items":null}

  May  4 12:35:23.775: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9350" for this suite. @ 05/04/24 12:35:23.779
• [8.820 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 05/04/24 12:35:23.788
  May  4 12:35:23.788: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename watch @ 05/04/24 12:35:23.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:35:23.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:35:23.806
  STEP: creating a new configmap @ 05/04/24 12:35:23.808
  STEP: modifying the configmap once @ 05/04/24 12:35:23.813
  STEP: modifying the configmap a second time @ 05/04/24 12:35:23.821
  STEP: deleting the configmap @ 05/04/24 12:35:23.828
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 05/04/24 12:35:23.835
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 05/04/24 12:35:23.836
  May  4 12:35:23.836: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-282  0a0dcde9-3dda-4ce3-ae20-b82f188dbedf 12358 0 2024-05-04 12:35:23 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-05-04 12:35:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May  4 12:35:23.836: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-282  0a0dcde9-3dda-4ce3-ae20-b82f188dbedf 12359 0 2024-05-04 12:35:23 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-05-04 12:35:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May  4 12:35:23.836: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-282" for this suite. @ 05/04/24 12:35:23.84
• [0.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3129
  STEP: Creating a kubernetes client @ 05/04/24 12:35:23.849
  May  4 12:35:23.849: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename services @ 05/04/24 12:35:23.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:35:23.86
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:35:23.863
  STEP: fetching services @ 05/04/24 12:35:23.866
  May  4 12:35:23.869: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8285" for this suite. @ 05/04/24 12:35:23.873
• [0.031 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:962
  STEP: Creating a kubernetes client @ 05/04/24 12:35:23.88
  May  4 12:35:23.880: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename statefulset @ 05/04/24 12:35:23.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:35:23.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:35:23.898
  STEP: Creating service test in namespace statefulset-6096 @ 05/04/24 12:35:23.9
  May  4 12:35:23.922: INFO: Found 0 stateful pods, waiting for 1
  May  4 12:35:33.923: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 05/04/24 12:35:33.93
  W0504 12:35:33.939275      19 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  May  4 12:35:33.946: INFO: Found 1 stateful pods, waiting for 2
  May  4 12:35:43.949: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  May  4 12:35:43.949: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 05/04/24 12:35:43.957
  STEP: Delete all of the StatefulSets @ 05/04/24 12:35:43.961
  STEP: Verify that StatefulSets have been deleted @ 05/04/24 12:35:43.97
  May  4 12:35:43.973: INFO: Deleting all statefulset in ns statefulset-6096
  May  4 12:35:43.986: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6096" for this suite. @ 05/04/24 12:35:43.994
• [20.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 05/04/24 12:35:44.007
  May  4 12:35:44.007: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename cronjob @ 05/04/24 12:35:44.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:35:44.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:35:44.025
  STEP: Creating a ReplaceConcurrent cronjob @ 05/04/24 12:35:44.027
  STEP: Ensuring a job is scheduled @ 05/04/24 12:35:44.035
  STEP: Ensuring exactly one is scheduled @ 05/04/24 12:36:02.041
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 05/04/24 12:36:02.044
  STEP: Ensuring the job is replaced with a new one @ 05/04/24 12:36:02.047
  STEP: Removing cronjob @ 05/04/24 12:37:02.052
  May  4 12:37:02.059: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6334" for this suite. @ 05/04/24 12:37:02.064
• [78.067 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 05/04/24 12:37:02.074
  May  4 12:37:02.074: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename var-expansion @ 05/04/24 12:37:02.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:37:02.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:37:02.097
  May  4 12:37:04.118: INFO: Deleting pod "var-expansion-0d36cdfa-b864-470d-8e93-f346744d6fb9" in namespace "var-expansion-6495"
  May  4 12:37:04.128: INFO: Wait up to 5m0s for pod "var-expansion-0d36cdfa-b864-470d-8e93-f346744d6fb9" to be fully deleted
  May  4 12:37:06.138: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6495" for this suite. @ 05/04/24 12:37:06.142
• [4.078 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 05/04/24 12:37:06.152
  May  4 12:37:06.152: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename configmap @ 05/04/24 12:37:06.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:37:06.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:37:06.172
  STEP: Creating configMap with name configmap-test-upd-58df518e-4ebf-4365-a93e-ee6c178f9ff1 @ 05/04/24 12:37:06.178
  STEP: Creating the pod @ 05/04/24 12:37:06.183
  STEP: Updating configmap configmap-test-upd-58df518e-4ebf-4365-a93e-ee6c178f9ff1 @ 05/04/24 12:37:08.218
  STEP: waiting to observe update in volume @ 05/04/24 12:37:08.225
  May  4 12:38:36.633: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1287" for this suite. @ 05/04/24 12:38:36.638
• [90.494 seconds]
------------------------------
SSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:94
  STEP: Creating a kubernetes client @ 05/04/24 12:38:36.646
  May  4 12:38:36.646: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename configmap @ 05/04/24 12:38:36.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:38:36.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:38:36.66
  STEP: Creating configMap configmap-1919/configmap-test-dd11744c-8d40-4ebe-86be-b17c7d3ce0dd @ 05/04/24 12:38:36.663
  STEP: Creating a pod to test consume configMaps @ 05/04/24 12:38:36.668
  STEP: Saw pod success @ 05/04/24 12:38:40.693
  May  4 12:38:40.697: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-configmaps-987fec96-49c5-4136-815d-d6ea5103b7db container env-test: <nil>
  STEP: delete the pod @ 05/04/24 12:38:40.71
  May  4 12:38:40.730: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1919" for this suite. @ 05/04/24 12:38:40.735
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 05/04/24 12:38:40.742
  May  4 12:38:40.742: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename webhook @ 05/04/24 12:38:40.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:38:40.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:38:40.761
  STEP: Setting up server cert @ 05/04/24 12:38:40.781
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/04/24 12:38:41.13
  STEP: Deploying the webhook pod @ 05/04/24 12:38:41.138
  STEP: Wait for the deployment to be ready @ 05/04/24 12:38:41.15
  May  4 12:38:41.158: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/04/24 12:38:43.17
  STEP: Verifying the service has paired with the endpoint @ 05/04/24 12:38:43.187
  May  4 12:38:44.187: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 05/04/24 12:38:44.194
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/04/24 12:38:44.194
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 05/04/24 12:38:44.208
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 05/04/24 12:38:45.221
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/04/24 12:38:45.221
  STEP: Having no error when timeout is longer than webhook latency @ 05/04/24 12:38:46.255
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/04/24 12:38:46.255
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 05/04/24 12:38:51.289
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/04/24 12:38:51.289
  May  4 12:38:56.382: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4843" for this suite. @ 05/04/24 12:38:56.386
  STEP: Destroying namespace "webhook-markers-928" for this suite. @ 05/04/24 12:38:56.392
• [15.656 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 05/04/24 12:38:56.398
  May  4 12:38:56.398: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename projected @ 05/04/24 12:38:56.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:38:56.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:38:56.415
  STEP: Creating projection with secret that has name projected-secret-test-map-16a6c8bf-7af8-4930-8532-ad222536613d @ 05/04/24 12:38:56.417
  STEP: Creating a pod to test consume secrets @ 05/04/24 12:38:56.421
  STEP: Saw pod success @ 05/04/24 12:39:00.443
  May  4 12:39:00.448: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-projected-secrets-67154ceb-205b-44ce-84e2-59c8beae16f1 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/04/24 12:39:00.455
  May  4 12:39:00.474: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8754" for this suite. @ 05/04/24 12:39:00.478
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 05/04/24 12:39:00.484
  May  4 12:39:00.484: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename container-probe @ 05/04/24 12:39:00.485
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:39:00.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:39:00.502
  STEP: Creating pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 in namespace container-probe-1966 @ 05/04/24 12:39:00.504
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/04/24 12:39:02.52
  May  4 12:39:02.525: INFO: Initial restart count of pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 is 0
  May  4 12:39:02.529: INFO: Get pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 in namespace container-probe-1966
  May  4 12:39:04.534: INFO: Get pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 in namespace container-probe-1966
  May  4 12:39:06.538: INFO: Get pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 in namespace container-probe-1966
  May  4 12:39:08.544: INFO: Get pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 in namespace container-probe-1966
  May  4 12:39:10.550: INFO: Get pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 in namespace container-probe-1966
  May  4 12:39:12.556: INFO: Get pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 in namespace container-probe-1966
  May  4 12:39:14.561: INFO: Get pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 in namespace container-probe-1966
  May  4 12:39:16.568: INFO: Get pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 in namespace container-probe-1966
  May  4 12:39:18.572: INFO: Get pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 in namespace container-probe-1966
  May  4 12:39:20.576: INFO: Get pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 in namespace container-probe-1966
  May  4 12:39:22.582: INFO: Get pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 in namespace container-probe-1966
  May  4 12:39:24.587: INFO: Get pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 in namespace container-probe-1966
  May  4 12:39:26.592: INFO: Get pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 in namespace container-probe-1966
  May  4 12:39:28.597: INFO: Get pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 in namespace container-probe-1966
  May  4 12:39:30.604: INFO: Get pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 in namespace container-probe-1966
  May  4 12:39:32.611: INFO: Get pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 in namespace container-probe-1966
  May  4 12:39:34.617: INFO: Get pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 in namespace container-probe-1966
  May  4 12:39:36.622: INFO: Get pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 in namespace container-probe-1966
  May  4 12:39:38.627: INFO: Get pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 in namespace container-probe-1966
  May  4 12:39:40.634: INFO: Get pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 in namespace container-probe-1966
  May  4 12:39:42.640: INFO: Get pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 in namespace container-probe-1966
  May  4 12:39:44.644: INFO: Get pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 in namespace container-probe-1966
  May  4 12:39:46.650: INFO: Get pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 in namespace container-probe-1966
  May  4 12:39:48.654: INFO: Get pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 in namespace container-probe-1966
  May  4 12:39:50.660: INFO: Get pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 in namespace container-probe-1966
  May  4 12:39:52.666: INFO: Get pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 in namespace container-probe-1966
  May  4 12:39:54.670: INFO: Get pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 in namespace container-probe-1966
  May  4 12:39:56.677: INFO: Get pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 in namespace container-probe-1966
  May  4 12:39:58.682: INFO: Get pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 in namespace container-probe-1966
  May  4 12:40:00.687: INFO: Get pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 in namespace container-probe-1966
  May  4 12:40:02.692: INFO: Get pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 in namespace container-probe-1966
  May  4 12:40:04.697: INFO: Get pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 in namespace container-probe-1966
  May  4 12:40:06.703: INFO: Get pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 in namespace container-probe-1966
  May  4 12:40:08.709: INFO: Get pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 in namespace container-probe-1966
  May  4 12:40:10.714: INFO: Get pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 in namespace container-probe-1966
  May  4 12:40:12.720: INFO: Get pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 in namespace container-probe-1966
  May  4 12:40:14.726: INFO: Get pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 in namespace container-probe-1966
  May  4 12:40:16.731: INFO: Get pod test-grpc-16243521-dd4c-415d-8579-302ec96dce73 in namespace container-probe-1966
  May  4 12:40:16.731: INFO: Restart count of pod container-probe-1966/test-grpc-16243521-dd4c-415d-8579-302ec96dce73 is now 1 (1m14.206198706s elapsed)
  STEP: deleting the pod @ 05/04/24 12:40:16.731
  May  4 12:40:16.745: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1966" for this suite. @ 05/04/24 12:40:16.749
• [76.274 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:488
  STEP: Creating a kubernetes client @ 05/04/24 12:40:16.758
  May  4 12:40:16.758: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename security-context-test @ 05/04/24 12:40:16.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:40:16.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:40:16.775
  May  4 12:40:20.803: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6216" for this suite. @ 05/04/24 12:40:20.808
• [4.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:214
  STEP: Creating a kubernetes client @ 05/04/24 12:40:20.817
  May  4 12:40:20.817: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/04/24 12:40:20.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:40:20.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:40:20.837
  STEP: create the container to handle the HTTPGet hook request. @ 05/04/24 12:40:20.843
  STEP: create the pod with lifecycle hook @ 05/04/24 12:40:22.868
  STEP: delete the pod with lifecycle hook @ 05/04/24 12:40:24.891
  STEP: check prestop hook @ 05/04/24 12:40:26.908
  May  4 12:40:26.923: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7527" for this suite. @ 05/04/24 12:40:26.928
• [6.119 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 05/04/24 12:40:26.936
  May  4 12:40:26.936: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/04/24 12:40:26.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:40:26.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:40:26.951
  May  4 12:40:26.955: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 05/04/24 12:40:28.182
  May  4 12:40:28.182: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=crd-publish-openapi-7058 --namespace=crd-publish-openapi-7058 create -f -'
  May  4 12:40:28.250: INFO: stderr: ""
  May  4 12:40:28.250: INFO: stdout: "e2e-test-crd-publish-openapi-8807-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  May  4 12:40:28.250: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=crd-publish-openapi-7058 --namespace=crd-publish-openapi-7058 delete e2e-test-crd-publish-openapi-8807-crds test-foo'
  May  4 12:40:28.303: INFO: stderr: ""
  May  4 12:40:28.303: INFO: stdout: "e2e-test-crd-publish-openapi-8807-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  May  4 12:40:28.303: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=crd-publish-openapi-7058 --namespace=crd-publish-openapi-7058 apply -f -'
  May  4 12:40:28.363: INFO: stderr: ""
  May  4 12:40:28.363: INFO: stdout: "e2e-test-crd-publish-openapi-8807-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  May  4 12:40:28.363: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=crd-publish-openapi-7058 --namespace=crd-publish-openapi-7058 delete e2e-test-crd-publish-openapi-8807-crds test-foo'
  May  4 12:40:28.428: INFO: stderr: ""
  May  4 12:40:28.428: INFO: stdout: "e2e-test-crd-publish-openapi-8807-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 05/04/24 12:40:28.428
  May  4 12:40:28.428: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=crd-publish-openapi-7058 --namespace=crd-publish-openapi-7058 create -f -'
  May  4 12:40:28.474: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 05/04/24 12:40:28.474
  May  4 12:40:28.474: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=crd-publish-openapi-7058 --namespace=crd-publish-openapi-7058 create -f -'
  May  4 12:40:28.518: INFO: rc: 1
  May  4 12:40:28.518: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=crd-publish-openapi-7058 --namespace=crd-publish-openapi-7058 apply -f -'
  May  4 12:40:28.572: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 05/04/24 12:40:28.572
  May  4 12:40:28.572: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=crd-publish-openapi-7058 --namespace=crd-publish-openapi-7058 create -f -'
  May  4 12:40:28.618: INFO: rc: 1
  May  4 12:40:28.618: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=crd-publish-openapi-7058 --namespace=crd-publish-openapi-7058 apply -f -'
  May  4 12:40:28.669: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 05/04/24 12:40:28.669
  May  4 12:40:28.670: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=crd-publish-openapi-7058 explain e2e-test-crd-publish-openapi-8807-crds'
  May  4 12:40:28.712: INFO: stderr: ""
  May  4 12:40:28.712: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8807-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 05/04/24 12:40:28.712
  May  4 12:40:28.713: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=crd-publish-openapi-7058 explain e2e-test-crd-publish-openapi-8807-crds.metadata'
  May  4 12:40:28.755: INFO: stderr: ""
  May  4 12:40:28.755: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8807-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  May  4 12:40:28.755: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=crd-publish-openapi-7058 explain e2e-test-crd-publish-openapi-8807-crds.spec'
  May  4 12:40:28.799: INFO: stderr: ""
  May  4 12:40:28.799: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8807-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  May  4 12:40:28.799: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=crd-publish-openapi-7058 explain e2e-test-crd-publish-openapi-8807-crds.spec.bars'
  May  4 12:40:28.842: INFO: stderr: ""
  May  4 12:40:28.842: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8807-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 05/04/24 12:40:28.842
  May  4 12:40:28.842: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=crd-publish-openapi-7058 explain e2e-test-crd-publish-openapi-8807-crds.spec.bars2'
  May  4 12:40:28.886: INFO: rc: 1
  May  4 12:40:30.213: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7058" for this suite. @ 05/04/24 12:40:30.22
• [3.290 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 05/04/24 12:40:30.227
  May  4 12:40:30.227: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename field-validation @ 05/04/24 12:40:30.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:40:30.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:40:30.248
  May  4 12:40:30.251: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  W0504 12:40:32.789472      19 warnings.go:70] unknown field "alpha"
  W0504 12:40:32.789509      19 warnings.go:70] unknown field "beta"
  W0504 12:40:32.789597      19 warnings.go:70] unknown field "delta"
  W0504 12:40:32.789699      19 warnings.go:70] unknown field "epsilon"
  W0504 12:40:32.789725      19 warnings.go:70] unknown field "gamma"
  May  4 12:40:33.334: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3275" for this suite. @ 05/04/24 12:40:33.337
• [3.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 05/04/24 12:40:33.346
  May  4 12:40:33.346: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename gc @ 05/04/24 12:40:33.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:40:33.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:40:33.369
  STEP: create the deployment @ 05/04/24 12:40:33.372
  W0504 12:40:33.378020      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 05/04/24 12:40:33.378
  STEP: delete the deployment @ 05/04/24 12:40:33.884
  STEP: wait for all rs to be garbage collected @ 05/04/24 12:40:33.892
  STEP: expected 0 rs, got 1 rs @ 05/04/24 12:40:33.899
  STEP: expected 0 pods, got 2 pods @ 05/04/24 12:40:33.901
  STEP: Gathering metrics @ 05/04/24 12:40:34.406
  W0504 12:40:34.412505      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  May  4 12:40:34.412: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May  4 12:40:34.412: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2766" for this suite. @ 05/04/24 12:40:34.418
• [1.079 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 05/04/24 12:40:34.426
  May  4 12:40:34.426: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename subpath @ 05/04/24 12:40:34.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:40:34.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:40:34.447
  STEP: Setting up data @ 05/04/24 12:40:34.451
  STEP: Creating pod pod-subpath-test-configmap-4kzv @ 05/04/24 12:40:34.46
  STEP: Creating a pod to test atomic-volume-subpath @ 05/04/24 12:40:34.46
  STEP: Saw pod success @ 05/04/24 12:40:56.53
  May  4 12:40:56.533: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-subpath-test-configmap-4kzv container test-container-subpath-configmap-4kzv: <nil>
  STEP: delete the pod @ 05/04/24 12:40:56.545
  STEP: Deleting pod pod-subpath-test-configmap-4kzv @ 05/04/24 12:40:56.564
  May  4 12:40:56.564: INFO: Deleting pod "pod-subpath-test-configmap-4kzv" in namespace "subpath-7565"
  May  4 12:40:56.569: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7565" for this suite. @ 05/04/24 12:40:56.574
• [22.154 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1731
  STEP: Creating a kubernetes client @ 05/04/24 12:40:56.58
  May  4 12:40:56.581: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename kubectl @ 05/04/24 12:40:56.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:40:56.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:40:56.601
  May  4 12:40:56.605: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-3472 version'
  May  4 12:40:56.641: INFO: stderr: ""
  May  4 12:40:56.641: INFO: stdout: "Client Version: v1.29.4\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.29.4\n"
  May  4 12:40:56.641: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3472" for this suite. @ 05/04/24 12:40:56.646
• [0.072 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1084
  STEP: Creating a kubernetes client @ 05/04/24 12:40:56.653
  May  4 12:40:56.653: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename kubectl @ 05/04/24 12:40:56.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:40:56.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:40:56.676
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/04/24 12:40:56.682
  May  4 12:40:56.682: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-8738 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  May  4 12:40:56.731: INFO: stderr: ""
  May  4 12:40:56.731: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 05/04/24 12:40:56.731
  May  4 12:40:56.731: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-8738 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  May  4 12:40:56.781: INFO: stderr: ""
  May  4 12:40:56.781: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/04/24 12:40:56.781
  May  4 12:40:56.784: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-8738 delete pods e2e-test-httpd-pod'
  May  4 12:40:58.280: INFO: stderr: ""
  May  4 12:40:58.280: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  May  4 12:40:58.280: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8738" for this suite. @ 05/04/24 12:40:58.286
• [1.638 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 05/04/24 12:40:58.292
  May  4 12:40:58.292: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename runtimeclass @ 05/04/24 12:40:58.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:40:58.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:40:58.315
  STEP: getting /apis @ 05/04/24 12:40:58.317
  STEP: getting /apis/node.k8s.io @ 05/04/24 12:40:58.32
  STEP: getting /apis/node.k8s.io/v1 @ 05/04/24 12:40:58.321
  STEP: creating @ 05/04/24 12:40:58.322
  STEP: watching @ 05/04/24 12:40:58.344
  May  4 12:40:58.344: INFO: starting watch
  STEP: getting @ 05/04/24 12:40:58.349
  STEP: listing @ 05/04/24 12:40:58.352
  STEP: patching @ 05/04/24 12:40:58.356
  STEP: updating @ 05/04/24 12:40:58.361
  May  4 12:40:58.365: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 05/04/24 12:40:58.365
  STEP: deleting a collection @ 05/04/24 12:40:58.378
  May  4 12:40:58.395: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-599" for this suite. @ 05/04/24 12:40:58.4
• [0.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 05/04/24 12:40:58.409
  May  4 12:40:58.409: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename resourcequota @ 05/04/24 12:40:58.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:40:58.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:40:58.429
  STEP: Creating a ResourceQuota @ 05/04/24 12:40:58.431
  STEP: Getting a ResourceQuota @ 05/04/24 12:40:58.437
  STEP: Updating a ResourceQuota @ 05/04/24 12:40:58.44
  STEP: Verifying a ResourceQuota was modified @ 05/04/24 12:40:58.444
  STEP: Deleting a ResourceQuota @ 05/04/24 12:40:58.448
  STEP: Verifying the deleted ResourceQuota @ 05/04/24 12:40:58.457
  May  4 12:40:58.460: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9580" for this suite. @ 05/04/24 12:40:58.464
• [0.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 05/04/24 12:40:58.471
  May  4 12:40:58.471: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename field-validation @ 05/04/24 12:40:58.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:40:58.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:40:58.492
  May  4 12:40:58.494: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  W0504 12:41:01.034129      19 warnings.go:70] unknown field "alpha"
  W0504 12:41:01.034146      19 warnings.go:70] unknown field "beta"
  W0504 12:41:01.034149      19 warnings.go:70] unknown field "delta"
  W0504 12:41:01.034152      19 warnings.go:70] unknown field "epsilon"
  W0504 12:41:01.034155      19 warnings.go:70] unknown field "gamma"
  May  4 12:41:01.582: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8047" for this suite. @ 05/04/24 12:41:01.585
• [3.121 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:902
  STEP: Creating a kubernetes client @ 05/04/24 12:41:01.592
  May  4 12:41:01.592: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename statefulset @ 05/04/24 12:41:01.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:41:01.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:41:01.61
  STEP: Creating service test in namespace statefulset-1950 @ 05/04/24 12:41:01.614
  STEP: Creating statefulset ss in namespace statefulset-1950 @ 05/04/24 12:41:01.621
  May  4 12:41:01.631: INFO: Found 0 stateful pods, waiting for 1
  May  4 12:41:11.634: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 05/04/24 12:41:11.641
  STEP: updating a scale subresource @ 05/04/24 12:41:11.643
  STEP: verifying the statefulset Spec.Replicas was modified @ 05/04/24 12:41:11.651
  STEP: Patch a scale subresource @ 05/04/24 12:41:11.655
  STEP: verifying the statefulset Spec.Replicas was modified @ 05/04/24 12:41:11.662
  May  4 12:41:11.668: INFO: Deleting all statefulset in ns statefulset-1950
  May  4 12:41:11.672: INFO: Scaling statefulset ss to 0
  May  4 12:41:21.691: INFO: Waiting for statefulset status.replicas updated to 0
  May  4 12:41:21.695: INFO: Deleting statefulset ss
  May  4 12:41:21.709: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1950" for this suite. @ 05/04/24 12:41:21.713
• [20.129 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2177
  STEP: Creating a kubernetes client @ 05/04/24 12:41:21.721
  May  4 12:41:21.721: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename services @ 05/04/24 12:41:21.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:41:21.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:41:21.755
  STEP: creating service in namespace services-5062 @ 05/04/24 12:41:21.757
  STEP: creating service affinity-clusterip in namespace services-5062 @ 05/04/24 12:41:21.758
  STEP: creating replication controller affinity-clusterip in namespace services-5062 @ 05/04/24 12:41:21.771
  I0504 12:41:21.778036      19 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-5062, replica count: 3
  I0504 12:41:24.829711      19 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May  4 12:41:24.837: INFO: Creating new exec pod
  May  4 12:41:27.858: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-5062 exec execpod-affinityhbhfv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  May  4 12:41:27.967: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip 80\n+ echo hostName\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  May  4 12:41:27.967: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May  4 12:41:27.967: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-5062 exec execpod-affinityhbhfv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.109 80'
  May  4 12:41:28.069: INFO: stderr: "+ nc -v -t -w 2 10.152.183.109 80\n+ echo hostName\nConnection to 10.152.183.109 80 port [tcp/http] succeeded!\n"
  May  4 12:41:28.069: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May  4 12:41:28.070: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-5062 exec execpod-affinityhbhfv -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.109:80/ ; done'
  May  4 12:41:28.238: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n"
  May  4 12:41:28.238: INFO: stdout: "\naffinity-clusterip-6shkn\naffinity-clusterip-6shkn\naffinity-clusterip-6shkn\naffinity-clusterip-6shkn\naffinity-clusterip-6shkn\naffinity-clusterip-6shkn\naffinity-clusterip-6shkn\naffinity-clusterip-6shkn\naffinity-clusterip-6shkn\naffinity-clusterip-6shkn\naffinity-clusterip-6shkn\naffinity-clusterip-6shkn\naffinity-clusterip-6shkn\naffinity-clusterip-6shkn\naffinity-clusterip-6shkn\naffinity-clusterip-6shkn"
  May  4 12:41:28.238: INFO: Received response from host: affinity-clusterip-6shkn
  May  4 12:41:28.238: INFO: Received response from host: affinity-clusterip-6shkn
  May  4 12:41:28.238: INFO: Received response from host: affinity-clusterip-6shkn
  May  4 12:41:28.238: INFO: Received response from host: affinity-clusterip-6shkn
  May  4 12:41:28.238: INFO: Received response from host: affinity-clusterip-6shkn
  May  4 12:41:28.238: INFO: Received response from host: affinity-clusterip-6shkn
  May  4 12:41:28.238: INFO: Received response from host: affinity-clusterip-6shkn
  May  4 12:41:28.238: INFO: Received response from host: affinity-clusterip-6shkn
  May  4 12:41:28.239: INFO: Received response from host: affinity-clusterip-6shkn
  May  4 12:41:28.239: INFO: Received response from host: affinity-clusterip-6shkn
  May  4 12:41:28.239: INFO: Received response from host: affinity-clusterip-6shkn
  May  4 12:41:28.239: INFO: Received response from host: affinity-clusterip-6shkn
  May  4 12:41:28.239: INFO: Received response from host: affinity-clusterip-6shkn
  May  4 12:41:28.239: INFO: Received response from host: affinity-clusterip-6shkn
  May  4 12:41:28.239: INFO: Received response from host: affinity-clusterip-6shkn
  May  4 12:41:28.239: INFO: Received response from host: affinity-clusterip-6shkn
  May  4 12:41:28.239: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-5062, will wait for the garbage collector to delete the pods @ 05/04/24 12:41:28.252
  May  4 12:41:28.316: INFO: Deleting ReplicationController affinity-clusterip took: 9.352396ms
  May  4 12:41:28.417: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.764895ms
  May  4 12:41:31.435: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5062" for this suite. @ 05/04/24 12:41:31.439
• [9.724 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 05/04/24 12:41:31.446
  May  4 12:41:31.446: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename replication-controller @ 05/04/24 12:41:31.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:41:31.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:41:31.469
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 05/04/24 12:41:31.471
  STEP: When a replication controller with a matching selector is created @ 05/04/24 12:41:33.491
  STEP: Then the orphan pod is adopted @ 05/04/24 12:41:33.498
  May  4 12:41:34.508: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-764" for this suite. @ 05/04/24 12:41:34.513
• [3.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 05/04/24 12:41:34.522
  May  4 12:41:34.522: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename svcaccounts @ 05/04/24 12:41:34.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:41:34.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:41:34.544
  STEP: reading a file in the container @ 05/04/24 12:41:36.57
  May  4 12:41:36.570: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-3115 pod-service-account-5d498504-555e-47a9-9b85-974e2a29d523 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 05/04/24 12:41:36.664
  May  4 12:41:36.664: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-3115 pod-service-account-5d498504-555e-47a9-9b85-974e2a29d523 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 05/04/24 12:41:36.756
  May  4 12:41:36.756: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-3115 pod-service-account-5d498504-555e-47a9-9b85-974e2a29d523 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  May  4 12:41:36.848: INFO: Got root ca configmap in namespace "svcaccounts-3115"
  May  4 12:41:36.849: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3115" for this suite. @ 05/04/24 12:41:36.854
• [2.340 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 05/04/24 12:41:36.862
  May  4 12:41:36.862: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/04/24 12:41:36.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:41:36.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:41:36.884
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 05/04/24 12:41:36.886
  May  4 12:41:36.887: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 05/04/24 12:41:41.842
  May  4 12:41:41.842: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 12:41:43.136: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 12:41:48.154: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9985" for this suite. @ 05/04/24 12:41:48.162
• [11.307 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 05/04/24 12:41:48.169
  May  4 12:41:48.169: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename apf @ 05/04/24 12:41:48.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:41:48.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:41:48.195
  STEP: getting /apis @ 05/04/24 12:41:48.198
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 05/04/24 12:41:48.201
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 05/04/24 12:41:48.202
  STEP: creating @ 05/04/24 12:41:48.203
  STEP: getting @ 05/04/24 12:41:48.233
  STEP: listing @ 05/04/24 12:41:48.239
  STEP: watching @ 05/04/24 12:41:48.243
  May  4 12:41:48.243: INFO: starting watch
  STEP: patching @ 05/04/24 12:41:48.244
  STEP: updating @ 05/04/24 12:41:48.249
  May  4 12:41:48.258: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 05/04/24 12:41:48.258
  STEP: patching /status @ 05/04/24 12:41:48.26
  STEP: updating /status @ 05/04/24 12:41:48.27
  STEP: deleting @ 05/04/24 12:41:48.284
  STEP: deleting a collection @ 05/04/24 12:41:48.296
  May  4 12:41:48.318: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-4825" for this suite. @ 05/04/24 12:41:48.321
• [0.157 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 05/04/24 12:41:48.326
  May  4 12:41:48.326: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename projected @ 05/04/24 12:41:48.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:41:48.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:41:48.348
  STEP: Creating projection with secret that has name projected-secret-test-9cbf5e6b-0460-40a8-bf1b-40ccdfd33058 @ 05/04/24 12:41:48.35
  STEP: Creating a pod to test consume secrets @ 05/04/24 12:41:48.356
  STEP: Saw pod success @ 05/04/24 12:41:52.383
  May  4 12:41:52.386: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-projected-secrets-754f4981-3dbf-4d6e-99bb-004c4eda4315 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/04/24 12:41:52.394
  May  4 12:41:52.411: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5684" for this suite. @ 05/04/24 12:41:52.415
• [4.096 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:47
  STEP: Creating a kubernetes client @ 05/04/24 12:41:52.422
  May  4 12:41:52.422: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename secrets @ 05/04/24 12:41:52.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:41:52.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:41:52.443
  STEP: Creating secret with name secret-test-8cc26102-bcdf-4789-9650-099b5b011946 @ 05/04/24 12:41:52.445
  STEP: Creating a pod to test consume secrets @ 05/04/24 12:41:52.45
  STEP: Saw pod success @ 05/04/24 12:41:56.475
  May  4 12:41:56.478: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-secrets-ab100f1e-55af-4af6-9c5d-328ad8aa2b4d container secret-env-test: <nil>
  STEP: delete the pod @ 05/04/24 12:41:56.485
  May  4 12:41:56.507: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7605" for this suite. @ 05/04/24 12:41:56.512
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 05/04/24 12:41:56.521
  May  4 12:41:56.521: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename podtemplate @ 05/04/24 12:41:56.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:41:56.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:41:56.543
  STEP: Create set of pod templates @ 05/04/24 12:41:56.546
  May  4 12:41:56.551: INFO: created test-podtemplate-1
  May  4 12:41:56.556: INFO: created test-podtemplate-2
  May  4 12:41:56.566: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 05/04/24 12:41:56.566
  STEP: delete collection of pod templates @ 05/04/24 12:41:56.568
  May  4 12:41:56.568: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 05/04/24 12:41:56.588
  May  4 12:41:56.588: INFO: requesting list of pod templates to confirm quantity
  May  4 12:41:56.597: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-2462" for this suite. @ 05/04/24 12:41:56.601
• [0.087 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 05/04/24 12:41:56.608
  May  4 12:41:56.608: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename resourcequota @ 05/04/24 12:41:56.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:41:56.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:41:56.645
  STEP: Discovering how many secrets are in namespace by default @ 05/04/24 12:41:56.648
  STEP: Counting existing ResourceQuota @ 05/04/24 12:42:01.653
  STEP: Creating a ResourceQuota @ 05/04/24 12:42:06.658
  STEP: Ensuring resource quota status is calculated @ 05/04/24 12:42:06.666
  STEP: Creating a Secret @ 05/04/24 12:42:08.671
  STEP: Ensuring resource quota status captures secret creation @ 05/04/24 12:42:08.682
  STEP: Deleting a secret @ 05/04/24 12:42:10.688
  STEP: Ensuring resource quota status released usage @ 05/04/24 12:42:10.695
  May  4 12:42:12.702: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3211" for this suite. @ 05/04/24 12:42:12.705
• [16.111 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 05/04/24 12:42:12.719
  May  4 12:42:12.719: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename namespaces @ 05/04/24 12:42:12.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:42:12.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:42:12.739
  STEP: Creating a test namespace @ 05/04/24 12:42:12.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:42:12.759
  STEP: Creating a pod in the namespace @ 05/04/24 12:42:12.762
  STEP: Waiting for the pod to have running status @ 05/04/24 12:42:12.77
  STEP: Deleting the namespace @ 05/04/24 12:42:14.782
  STEP: Waiting for the namespace to be removed. @ 05/04/24 12:42:14.791
  STEP: Recreating the namespace @ 05/04/24 12:42:25.797
  STEP: Verifying there are no pods in the namespace @ 05/04/24 12:42:25.824
  May  4 12:42:25.829: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9761" for this suite. @ 05/04/24 12:42:25.834
  STEP: Destroying namespace "nsdeletetest-9310" for this suite. @ 05/04/24 12:42:25.841
  May  4 12:42:25.845: INFO: Namespace nsdeletetest-9310 was already deleted
  STEP: Destroying namespace "nsdeletetest-5740" for this suite. @ 05/04/24 12:42:25.845
• [13.132 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 05/04/24 12:42:25.852
  May  4 12:42:25.852: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename gc @ 05/04/24 12:42:25.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:42:25.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:42:25.873
  STEP: create the rc1 @ 05/04/24 12:42:25.879
  STEP: create the rc2 @ 05/04/24 12:42:25.886
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 05/04/24 12:42:31.899
  STEP: delete the rc simpletest-rc-to-be-deleted @ 05/04/24 12:42:32.486
  STEP: wait for the rc to be deleted @ 05/04/24 12:42:32.504
  May  4 12:42:37.517: INFO: 71 pods remaining
  May  4 12:42:37.517: INFO: 71 pods has nil DeletionTimestamp
  May  4 12:42:37.517: INFO: 
  STEP: Gathering metrics @ 05/04/24 12:42:42.518
  W0504 12:42:42.524677      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  May  4 12:42:42.524: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May  4 12:42:42.524: INFO: Deleting pod "simpletest-rc-to-be-deleted-22g5j" in namespace "gc-9394"
  May  4 12:42:42.539: INFO: Deleting pod "simpletest-rc-to-be-deleted-276lp" in namespace "gc-9394"
  May  4 12:42:42.551: INFO: Deleting pod "simpletest-rc-to-be-deleted-2fhgg" in namespace "gc-9394"
  May  4 12:42:42.563: INFO: Deleting pod "simpletest-rc-to-be-deleted-2wc5l" in namespace "gc-9394"
  May  4 12:42:42.573: INFO: Deleting pod "simpletest-rc-to-be-deleted-4p6sd" in namespace "gc-9394"
  May  4 12:42:42.587: INFO: Deleting pod "simpletest-rc-to-be-deleted-4w72b" in namespace "gc-9394"
  May  4 12:42:42.601: INFO: Deleting pod "simpletest-rc-to-be-deleted-55cs6" in namespace "gc-9394"
  May  4 12:42:42.616: INFO: Deleting pod "simpletest-rc-to-be-deleted-5dwz7" in namespace "gc-9394"
  May  4 12:42:42.632: INFO: Deleting pod "simpletest-rc-to-be-deleted-5fr84" in namespace "gc-9394"
  May  4 12:42:42.643: INFO: Deleting pod "simpletest-rc-to-be-deleted-5gb8k" in namespace "gc-9394"
  May  4 12:42:42.660: INFO: Deleting pod "simpletest-rc-to-be-deleted-5knpz" in namespace "gc-9394"
  May  4 12:42:42.673: INFO: Deleting pod "simpletest-rc-to-be-deleted-5r9fb" in namespace "gc-9394"
  May  4 12:42:42.685: INFO: Deleting pod "simpletest-rc-to-be-deleted-5rhwx" in namespace "gc-9394"
  May  4 12:42:42.698: INFO: Deleting pod "simpletest-rc-to-be-deleted-5sknj" in namespace "gc-9394"
  May  4 12:42:42.709: INFO: Deleting pod "simpletest-rc-to-be-deleted-5x8pm" in namespace "gc-9394"
  May  4 12:42:42.728: INFO: Deleting pod "simpletest-rc-to-be-deleted-666n4" in namespace "gc-9394"
  May  4 12:42:42.741: INFO: Deleting pod "simpletest-rc-to-be-deleted-678qm" in namespace "gc-9394"
  May  4 12:42:42.752: INFO: Deleting pod "simpletest-rc-to-be-deleted-68bg6" in namespace "gc-9394"
  May  4 12:42:42.764: INFO: Deleting pod "simpletest-rc-to-be-deleted-6czcn" in namespace "gc-9394"
  May  4 12:42:42.779: INFO: Deleting pod "simpletest-rc-to-be-deleted-6k4pr" in namespace "gc-9394"
  May  4 12:42:42.791: INFO: Deleting pod "simpletest-rc-to-be-deleted-6n7t6" in namespace "gc-9394"
  May  4 12:42:42.804: INFO: Deleting pod "simpletest-rc-to-be-deleted-6xx2s" in namespace "gc-9394"
  May  4 12:42:42.820: INFO: Deleting pod "simpletest-rc-to-be-deleted-7jxrp" in namespace "gc-9394"
  May  4 12:42:42.836: INFO: Deleting pod "simpletest-rc-to-be-deleted-889b4" in namespace "gc-9394"
  May  4 12:42:42.851: INFO: Deleting pod "simpletest-rc-to-be-deleted-8c5jd" in namespace "gc-9394"
  May  4 12:42:42.867: INFO: Deleting pod "simpletest-rc-to-be-deleted-8xdqh" in namespace "gc-9394"
  May  4 12:42:42.879: INFO: Deleting pod "simpletest-rc-to-be-deleted-8zmlm" in namespace "gc-9394"
  May  4 12:42:42.891: INFO: Deleting pod "simpletest-rc-to-be-deleted-8zww2" in namespace "gc-9394"
  May  4 12:42:42.909: INFO: Deleting pod "simpletest-rc-to-be-deleted-9lz5h" in namespace "gc-9394"
  May  4 12:42:42.925: INFO: Deleting pod "simpletest-rc-to-be-deleted-9q8mf" in namespace "gc-9394"
  May  4 12:42:42.940: INFO: Deleting pod "simpletest-rc-to-be-deleted-bbfnk" in namespace "gc-9394"
  May  4 12:42:42.958: INFO: Deleting pod "simpletest-rc-to-be-deleted-brb2q" in namespace "gc-9394"
  May  4 12:42:42.973: INFO: Deleting pod "simpletest-rc-to-be-deleted-brhch" in namespace "gc-9394"
  May  4 12:42:42.995: INFO: Deleting pod "simpletest-rc-to-be-deleted-c7m7l" in namespace "gc-9394"
  May  4 12:42:43.020: INFO: Deleting pod "simpletest-rc-to-be-deleted-cjlrc" in namespace "gc-9394"
  May  4 12:42:43.051: INFO: Deleting pod "simpletest-rc-to-be-deleted-cn6hx" in namespace "gc-9394"
  May  4 12:42:43.073: INFO: Deleting pod "simpletest-rc-to-be-deleted-cs2rz" in namespace "gc-9394"
  May  4 12:42:43.096: INFO: Deleting pod "simpletest-rc-to-be-deleted-csl6w" in namespace "gc-9394"
  May  4 12:42:43.116: INFO: Deleting pod "simpletest-rc-to-be-deleted-d4lg9" in namespace "gc-9394"
  May  4 12:42:43.137: INFO: Deleting pod "simpletest-rc-to-be-deleted-d9t7r" in namespace "gc-9394"
  May  4 12:42:43.156: INFO: Deleting pod "simpletest-rc-to-be-deleted-dd9sc" in namespace "gc-9394"
  May  4 12:42:43.171: INFO: Deleting pod "simpletest-rc-to-be-deleted-dh7t2" in namespace "gc-9394"
  May  4 12:42:43.188: INFO: Deleting pod "simpletest-rc-to-be-deleted-dvt9x" in namespace "gc-9394"
  May  4 12:42:43.208: INFO: Deleting pod "simpletest-rc-to-be-deleted-fl8l7" in namespace "gc-9394"
  May  4 12:42:43.233: INFO: Deleting pod "simpletest-rc-to-be-deleted-fs8fn" in namespace "gc-9394"
  May  4 12:42:43.254: INFO: Deleting pod "simpletest-rc-to-be-deleted-fspb5" in namespace "gc-9394"
  May  4 12:42:43.277: INFO: Deleting pod "simpletest-rc-to-be-deleted-fwgs5" in namespace "gc-9394"
  May  4 12:42:43.313: INFO: Deleting pod "simpletest-rc-to-be-deleted-fwzw5" in namespace "gc-9394"
  May  4 12:42:43.325: INFO: Deleting pod "simpletest-rc-to-be-deleted-g9rvd" in namespace "gc-9394"
  May  4 12:42:43.339: INFO: Deleting pod "simpletest-rc-to-be-deleted-ghrq7" in namespace "gc-9394"
  May  4 12:42:43.352: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9394" for this suite. @ 05/04/24 12:42:43.357
• [17.511 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 05/04/24 12:42:43.364
  May  4 12:42:43.364: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename apf @ 05/04/24 12:42:43.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:42:43.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:42:43.389
  STEP: getting /apis @ 05/04/24 12:42:43.393
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 05/04/24 12:42:43.396
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 05/04/24 12:42:43.397
  STEP: creating @ 05/04/24 12:42:43.398
  STEP: getting @ 05/04/24 12:42:43.418
  STEP: listing @ 05/04/24 12:42:43.42
  STEP: watching @ 05/04/24 12:42:43.425
  May  4 12:42:43.425: INFO: starting watch
  STEP: patching @ 05/04/24 12:42:43.426
  STEP: updating @ 05/04/24 12:42:43.433
  May  4 12:42:43.443: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 05/04/24 12:42:43.443
  STEP: patching /status @ 05/04/24 12:42:43.447
  STEP: updating /status @ 05/04/24 12:42:43.452
  STEP: deleting @ 05/04/24 12:42:43.462
  STEP: deleting a collection @ 05/04/24 12:42:43.478
  May  4 12:42:43.499: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-9677" for this suite. @ 05/04/24 12:42:43.504
• [0.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 05/04/24 12:42:43.511
  May  4 12:42:43.511: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename pod-network-test @ 05/04/24 12:42:43.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:42:43.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:42:43.533
  STEP: Performing setup for networking test in namespace pod-network-test-9863 @ 05/04/24 12:42:43.536
  STEP: creating a selector @ 05/04/24 12:42:43.536
  STEP: Creating the service pods in kubernetes @ 05/04/24 12:42:43.536
  May  4 12:42:43.536: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 05/04/24 12:43:05.651
  May  4 12:43:07.685: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  May  4 12:43:07.685: INFO: Going to poll 192.168.149.63 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  May  4 12:43:07.688: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.149.63:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9863 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  4 12:43:07.688: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 12:43:07.688: INFO: ExecWithOptions: Clientset creation
  May  4 12:43:07.688: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9863/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.149.63%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May  4 12:43:07.741: INFO: Found all 1 expected endpoints: [netserver-0]
  May  4 12:43:07.741: INFO: Going to poll 192.168.170.120 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  May  4 12:43:07.746: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.170.120:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9863 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  4 12:43:07.746: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 12:43:07.746: INFO: ExecWithOptions: Clientset creation
  May  4 12:43:07.746: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9863/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.170.120%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May  4 12:43:07.800: INFO: Found all 1 expected endpoints: [netserver-1]
  May  4 12:43:07.800: INFO: Going to poll 192.168.186.3 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  May  4 12:43:07.804: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.186.3:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9863 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  4 12:43:07.804: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 12:43:07.804: INFO: ExecWithOptions: Clientset creation
  May  4 12:43:07.804: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9863/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.186.3%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May  4 12:43:07.854: INFO: Found all 1 expected endpoints: [netserver-2]
  May  4 12:43:07.854: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9863" for this suite. @ 05/04/24 12:43:07.86
• [24.358 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 05/04/24 12:43:07.869
  May  4 12:43:07.869: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename field-validation @ 05/04/24 12:43:07.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:43:07.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:43:07.893
  May  4 12:43:07.895: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 12:43:10.977: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5802" for this suite. @ 05/04/24 12:43:10.981
• [3.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 05/04/24 12:43:10.991
  May  4 12:43:10.991: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename endpointslicemirroring @ 05/04/24 12:43:10.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:43:11.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:43:11.013
  STEP: mirroring a new custom Endpoint @ 05/04/24 12:43:11.028
  May  4 12:43:11.038: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 05/04/24 12:43:13.044
  May  4 12:43:13.051: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 05/04/24 12:43:15.055
  May  4 12:43:15.067: INFO: Waiting for 0 EndpointSlices to exist, got 1
  May  4 12:43:17.071: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-8061" for this suite. @ 05/04/24 12:43:17.074
• [6.092 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 05/04/24 12:43:17.083
  May  4 12:43:17.083: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename services @ 05/04/24 12:43:17.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:43:17.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:43:17.108
  STEP: creating service nodeport-test with type=NodePort in namespace services-4288 @ 05/04/24 12:43:17.11
  STEP: creating replication controller nodeport-test in namespace services-4288 @ 05/04/24 12:43:17.126
  I0504 12:43:17.131257      19 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-4288, replica count: 2
  I0504 12:43:20.181887      19 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May  4 12:43:20.181: INFO: Creating new exec pod
  May  4 12:43:23.207: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-4288 exec execpodst784 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  May  4 12:43:23.307: INFO: stderr: "+ nc -v -t -w 2 nodeport-test 80\n+ echo hostName\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  May  4 12:43:23.307: INFO: stdout: "nodeport-test-45gct"
  May  4 12:43:23.307: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-4288 exec execpodst784 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.48 80'
  May  4 12:43:23.405: INFO: stderr: "+ nc -v -t -w 2 10.152.183.48 80\n+ echo hostName\nConnection to 10.152.183.48 80 port [tcp/http] succeeded!\n"
  May  4 12:43:23.405: INFO: stdout: "nodeport-test-45gct"
  May  4 12:43:23.405: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-4288 exec execpodst784 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.33.38 32546'
  May  4 12:43:23.505: INFO: stderr: "+ nc -v -t -w 2 172.31.33.38 32546\n+ echo hostName\nConnection to 172.31.33.38 32546 port [tcp/*] succeeded!\n"
  May  4 12:43:23.505: INFO: stdout: ""
  May  4 12:43:24.406: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-4288 exec execpodst784 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.33.38 32546'
  May  4 12:43:24.507: INFO: stderr: "+ nc -v -t -w 2 172.31.33.38 32546\n+ echo hostName\nConnection to 172.31.33.38 32546 port [tcp/*] succeeded!\n"
  May  4 12:43:24.507: INFO: stdout: "nodeport-test-45gct"
  May  4 12:43:24.507: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-4288 exec execpodst784 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.18.228 32546'
  May  4 12:43:24.605: INFO: stderr: "+ nc -v -t -w 2 172.31.18.228 32546\n+ echo hostName\nConnection to 172.31.18.228 32546 port [tcp/*] succeeded!\n"
  May  4 12:43:24.605: INFO: stdout: "nodeport-test-45gct"
  May  4 12:43:24.605: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4288" for this suite. @ 05/04/24 12:43:24.61
• [7.534 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 05/04/24 12:43:24.617
  May  4 12:43:24.617: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename endpointslice @ 05/04/24 12:43:24.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:43:24.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:43:24.69
  STEP: referencing a single matching pod @ 05/04/24 12:43:29.767
  STEP: referencing matching pods with named port @ 05/04/24 12:43:34.776
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 05/04/24 12:43:39.786
  STEP: recreating EndpointSlices after they've been deleted @ 05/04/24 12:43:44.793
  May  4 12:43:44.814: INFO: EndpointSlice for Service endpointslice-1116/example-named-port not found
  May  4 12:43:54.821: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1116" for this suite. @ 05/04/24 12:43:54.824
• [30.214 seconds]
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 05/04/24 12:43:54.831
  May  4 12:43:54.831: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename emptydir-wrapper @ 05/04/24 12:43:54.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:43:54.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:43:54.853
  STEP: Creating 50 configmaps @ 05/04/24 12:43:54.856
  STEP: Creating RC which spawns configmap-volume pods @ 05/04/24 12:43:55.086
  May  4 12:43:55.193: INFO: Pod name wrapped-volume-race-f119fe99-38f3-4960-8073-6c6975b0a6c9: Found 3 pods out of 5
  May  4 12:44:00.199: INFO: Pod name wrapped-volume-race-f119fe99-38f3-4960-8073-6c6975b0a6c9: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/04/24 12:44:00.199
  STEP: Creating RC which spawns configmap-volume pods @ 05/04/24 12:44:00.22
  May  4 12:44:00.233: INFO: Pod name wrapped-volume-race-544a81a4-9439-4591-89f3-ec3b3fb428a2: Found 0 pods out of 5
  May  4 12:44:05.242: INFO: Pod name wrapped-volume-race-544a81a4-9439-4591-89f3-ec3b3fb428a2: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/04/24 12:44:05.242
  STEP: Creating RC which spawns configmap-volume pods @ 05/04/24 12:44:05.262
  May  4 12:44:05.274: INFO: Pod name wrapped-volume-race-87dd7adb-df4b-4fa7-9749-827d4f619a2a: Found 0 pods out of 5
  May  4 12:44:10.284: INFO: Pod name wrapped-volume-race-87dd7adb-df4b-4fa7-9749-827d4f619a2a: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/04/24 12:44:10.285
  STEP: deleting ReplicationController wrapped-volume-race-87dd7adb-df4b-4fa7-9749-827d4f619a2a in namespace emptydir-wrapper-9117, will wait for the garbage collector to delete the pods @ 05/04/24 12:44:10.303
  May  4 12:44:10.366: INFO: Deleting ReplicationController wrapped-volume-race-87dd7adb-df4b-4fa7-9749-827d4f619a2a took: 7.252677ms
  May  4 12:44:10.466: INFO: Terminating ReplicationController wrapped-volume-race-87dd7adb-df4b-4fa7-9749-827d4f619a2a pods took: 100.104508ms
  STEP: deleting ReplicationController wrapped-volume-race-544a81a4-9439-4591-89f3-ec3b3fb428a2 in namespace emptydir-wrapper-9117, will wait for the garbage collector to delete the pods @ 05/04/24 12:44:11.567
  May  4 12:44:11.631: INFO: Deleting ReplicationController wrapped-volume-race-544a81a4-9439-4591-89f3-ec3b3fb428a2 took: 7.691404ms
  May  4 12:44:11.732: INFO: Terminating ReplicationController wrapped-volume-race-544a81a4-9439-4591-89f3-ec3b3fb428a2 pods took: 100.99418ms
  STEP: deleting ReplicationController wrapped-volume-race-f119fe99-38f3-4960-8073-6c6975b0a6c9 in namespace emptydir-wrapper-9117, will wait for the garbage collector to delete the pods @ 05/04/24 12:44:13.232
  May  4 12:44:13.295: INFO: Deleting ReplicationController wrapped-volume-race-f119fe99-38f3-4960-8073-6c6975b0a6c9 took: 6.37232ms
  May  4 12:44:13.396: INFO: Terminating ReplicationController wrapped-volume-race-f119fe99-38f3-4960-8073-6c6975b0a6c9 pods took: 100.853109ms
  STEP: Cleaning up the configMaps @ 05/04/24 12:44:15.096
  May  4 12:44:15.411: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-9117" for this suite. @ 05/04/24 12:44:15.416
• [20.590 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:153
  STEP: Creating a kubernetes client @ 05/04/24 12:44:15.421
  May  4 12:44:15.421: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/04/24 12:44:15.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:44:15.439
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:44:15.442
  STEP: create the container to handle the HTTPGet hook request. @ 05/04/24 12:44:15.448
  STEP: create the pod with lifecycle hook @ 05/04/24 12:44:17.469
  STEP: delete the pod with lifecycle hook @ 05/04/24 12:44:19.489
  STEP: check prestop hook @ 05/04/24 12:44:23.511
  May  4 12:44:23.527: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1842" for this suite. @ 05/04/24 12:44:23.533
• [8.118 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 05/04/24 12:44:23.54
  May  4 12:44:23.540: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename emptydir @ 05/04/24 12:44:23.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:44:23.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:44:23.56
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 05/04/24 12:44:23.563
  STEP: Saw pod success @ 05/04/24 12:44:27.584
  May  4 12:44:27.588: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-b7f3a6f7-b277-401a-99f0-b31f15aa4a8d container test-container: <nil>
  STEP: delete the pod @ 05/04/24 12:44:27.603
  May  4 12:44:27.619: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4991" for this suite. @ 05/04/24 12:44:27.622
• [4.091 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 05/04/24 12:44:27.631
  May  4 12:44:27.631: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename subpath @ 05/04/24 12:44:27.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:44:27.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:44:27.654
  STEP: Setting up data @ 05/04/24 12:44:27.657
  STEP: Creating pod pod-subpath-test-secret-6cpd @ 05/04/24 12:44:27.669
  STEP: Creating a pod to test atomic-volume-subpath @ 05/04/24 12:44:27.669
  STEP: Saw pod success @ 05/04/24 12:44:51.748
  May  4 12:44:51.751: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-subpath-test-secret-6cpd container test-container-subpath-secret-6cpd: <nil>
  STEP: delete the pod @ 05/04/24 12:44:51.759
  STEP: Deleting pod pod-subpath-test-secret-6cpd @ 05/04/24 12:44:51.776
  May  4 12:44:51.776: INFO: Deleting pod "pod-subpath-test-secret-6cpd" in namespace "subpath-8635"
  May  4 12:44:51.780: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8635" for this suite. @ 05/04/24 12:44:51.783
• [24.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 05/04/24 12:44:51.79
  May  4 12:44:51.790: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename deployment @ 05/04/24 12:44:51.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:44:51.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:44:51.813
  May  4 12:44:51.826: INFO: Pod name rollover-pod: Found 0 pods out of 1
  May  4 12:44:56.830: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/04/24 12:44:56.83
  May  4 12:44:56.830: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  May  4 12:44:58.837: INFO: Creating deployment "test-rollover-deployment"
  May  4 12:44:58.846: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  May  4 12:45:00.857: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  May  4 12:45:00.864: INFO: Ensure that both replica sets have 1 created replica
  May  4 12:45:00.871: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  May  4 12:45:00.882: INFO: Updating deployment test-rollover-deployment
  May  4 12:45:00.882: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  May  4 12:45:02.891: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  May  4 12:45:02.898: INFO: Make sure deployment "test-rollover-deployment" is complete
  May  4 12:45:02.903: INFO: all replica sets need to contain the pod-template-hash label
  May  4 12:45:02.903: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 4, 12, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 4, 12, 44, 58, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 4, 12, 45, 1, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 4, 12, 44, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May  4 12:45:04.914: INFO: all replica sets need to contain the pod-template-hash label
  May  4 12:45:04.914: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 4, 12, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 4, 12, 44, 58, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 4, 12, 45, 1, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 4, 12, 44, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May  4 12:45:06.913: INFO: all replica sets need to contain the pod-template-hash label
  May  4 12:45:06.913: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 4, 12, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 4, 12, 44, 58, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 4, 12, 45, 1, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 4, 12, 44, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May  4 12:45:08.910: INFO: all replica sets need to contain the pod-template-hash label
  May  4 12:45:08.910: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 4, 12, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 4, 12, 44, 58, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 4, 12, 45, 1, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 4, 12, 44, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May  4 12:45:10.914: INFO: all replica sets need to contain the pod-template-hash label
  May  4 12:45:10.914: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 4, 12, 44, 58, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 4, 12, 44, 58, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 4, 12, 45, 1, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 4, 12, 44, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May  4 12:45:12.912: INFO: 
  May  4 12:45:12.912: INFO: Ensure that both old replica sets have no replicas
  May  4 12:45:12.924: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3721",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4d82633b-7a86-4bcf-8d83-6ceb7dbf0d5a",
      ResourceVersion: (string) (len=5) "18637",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850423498,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423511,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423511,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-68774655d5\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May  4 12:45:12.928: INFO: New ReplicaSet "test-rollover-deployment-68774655d5" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-68774655d5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3721",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "43070e1b-d30b-41b9-aa46-5f2b8556dc70",
      ResourceVersion: (string) (len=5) "18627",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850423500,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "4d82633b-7a86-4bcf-8d83-6ceb7dbf0d5a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 64 38 32 36 33  33 62 2d 37 61 38 36 2d  |\"4d82633b-7a86-|
              00000120  34 62 63 66 2d 38 64 38  33 2d 36 63 65 62 37 64  |4bcf-8d83-6ceb7d|
              00000130  62 66 30 64 35 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |bf0d5a\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423511,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May  4 12:45:12.930: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  May  4 12:45:12.930: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3721",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5bee4c3c-4986-402d-a270-20e010595074",
      ResourceVersion: (string) (len=5) "18636",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850423491,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "4d82633b-7a86-4bcf-8d83-6ceb7dbf0d5a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423491,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423511,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  34 64 38 32 36 33 33 62  2d 37 61 38 36 2d 34 62  |4d82633b-7a86-4b|
              000000c0  63 66 2d 38 64 38 33 2d  36 63 65 62 37 64 62 66  |cf-8d83-6ceb7dbf|
              000000d0  30 64 35 61 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |0d5a\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423511,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May  4 12:45:12.932: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3721",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8f932e94-2edc-4017-ab69-77394ae35238",
      ResourceVersion: (string) (len=5) "18590",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850423498,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "4d82633b-7a86-4bcf-8d83-6ceb7dbf0d5a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 64 38 32 36 33  33 62 2d 37 61 38 36 2d  |\"4d82633b-7a86-|
              00000120  34 62 63 66 2d 38 64 38  33 2d 36 63 65 62 37 64  |4bcf-8d83-6ceb7d|
              00000130  62 66 30 64 35 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |bf0d5a\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May  4 12:45:12.935: INFO: Pod "test-rollover-deployment-68774655d5-k5kpt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-68774655d5-k5kpt",
      GenerateName: (string) (len=36) "test-rollover-deployment-68774655d5-",
      Namespace: (string) (len=15) "deployment-3721",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1d52e964-6abc-46bf-a191-c6cd215f62aa",
      ResourceVersion: (string) (len=5) "18605",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850423500,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-68774655d5",
          UID: (types.UID) (len=36) "43070e1b-d30b-41b9-aa46-5f2b8556dc70",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 33  30 37 30 65 31 62 2d 64  |d\":\"43070e1b-d|
              00000090  33 30 62 2d 34 31 62 39  2d 61 61 34 36 2d 35 66  |30b-41b9-aa46-5f|
              000000a0  32 62 38 35 35 36 64 63  37 30 5c 22 7d 22 3a 7b  |2b8556dc70\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 38  36 2e 36 5c 22 7d 22 3a  |2.168.186.6\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cgbmg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cgbmg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-72-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.72.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.72.79"
        }
      },
      PodIP: (string) (len=13) "192.168.186.6",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.186.6"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850423500,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850423501,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://4de8a5bd9bd5c348c107e182e1fd5194859c9c2cd470eb17b40af17dbb90bc62",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  4 12:45:12.937: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3721" for this suite. @ 05/04/24 12:45:12.942
• [21.159 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 05/04/24 12:45:12.949
  May  4 12:45:12.949: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename replication-controller @ 05/04/24 12:45:12.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:45:12.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:45:12.975
  May  4 12:45:12.979: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 05/04/24 12:45:13.991
  STEP: Checking rc "condition-test" has the desired failure condition set @ 05/04/24 12:45:13.997
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 05/04/24 12:45:15.006
  May  4 12:45:15.015: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 05/04/24 12:45:15.015
  May  4 12:45:16.027: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5511" for this suite. @ 05/04/24 12:45:16.031
• [3.091 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1632
  STEP: Creating a kubernetes client @ 05/04/24 12:45:16.04
  May  4 12:45:16.040: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename kubectl @ 05/04/24 12:45:16.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:45:16.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:45:16.062
  STEP: creating the pod @ 05/04/24 12:45:16.065
  May  4 12:45:16.065: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-6618 create -f -'
  May  4 12:45:16.152: INFO: stderr: ""
  May  4 12:45:16.152: INFO: stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 05/04/24 12:45:18.163
  May  4 12:45:18.163: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-6618 label pods pause testing-label=testing-label-value'
  May  4 12:45:18.230: INFO: stderr: ""
  May  4 12:45:18.230: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 05/04/24 12:45:18.23
  May  4 12:45:18.230: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-6618 get pod pause -L testing-label'
  May  4 12:45:18.274: INFO: stderr: ""
  May  4 12:45:18.274: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 05/04/24 12:45:18.274
  May  4 12:45:18.275: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-6618 label pods pause testing-label-'
  May  4 12:45:18.327: INFO: stderr: ""
  May  4 12:45:18.327: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 05/04/24 12:45:18.327
  May  4 12:45:18.327: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-6618 get pod pause -L testing-label'
  May  4 12:45:18.372: INFO: stderr: ""
  May  4 12:45:18.372: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 05/04/24 12:45:18.372
  May  4 12:45:18.373: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-6618 delete --grace-period=0 --force -f -'
  May  4 12:45:18.430: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May  4 12:45:18.430: INFO: stdout: "pod \"pause\" force deleted\n"
  May  4 12:45:18.430: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-6618 get rc,svc -l name=pause --no-headers'
  May  4 12:45:18.478: INFO: stderr: "No resources found in kubectl-6618 namespace.\n"
  May  4 12:45:18.478: INFO: stdout: ""
  May  4 12:45:18.478: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-6618 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  May  4 12:45:18.520: INFO: stderr: ""
  May  4 12:45:18.520: INFO: stdout: ""
  May  4 12:45:18.520: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6618" for this suite. @ 05/04/24 12:45:18.523
• [2.491 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 05/04/24 12:45:18.531
  May  4 12:45:18.531: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename watch @ 05/04/24 12:45:18.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:45:18.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:45:18.556
  STEP: creating a watch on configmaps @ 05/04/24 12:45:18.562
  STEP: creating a new configmap @ 05/04/24 12:45:18.563
  STEP: modifying the configmap once @ 05/04/24 12:45:18.572
  STEP: closing the watch once it receives two notifications @ 05/04/24 12:45:18.581
  May  4 12:45:18.581: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1936  50782ba3-83fb-470f-9def-d80287c5db7f 18774 0 2024-05-04 12:45:18 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-04 12:45:18 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  May  4 12:45:18.582: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1936  50782ba3-83fb-470f-9def-d80287c5db7f 18775 0 2024-05-04 12:45:18 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-04 12:45:18 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 05/04/24 12:45:18.582
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 05/04/24 12:45:18.589
  STEP: deleting the configmap @ 05/04/24 12:45:18.59
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 05/04/24 12:45:18.596
  May  4 12:45:18.596: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1936  50782ba3-83fb-470f-9def-d80287c5db7f 18776 0 2024-05-04 12:45:18 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-04 12:45:18 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May  4 12:45:18.597: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1936  50782ba3-83fb-470f-9def-d80287c5db7f 18777 0 2024-05-04 12:45:18 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-04 12:45:18 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  May  4 12:45:18.597: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1936" for this suite. @ 05/04/24 12:45:18.601
• [0.078 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 05/04/24 12:45:18.609
  May  4 12:45:18.609: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename pods @ 05/04/24 12:45:18.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:45:18.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:45:18.633
  May  4 12:45:18.635: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: creating the pod @ 05/04/24 12:45:18.635
  STEP: submitting the pod to kubernetes @ 05/04/24 12:45:18.636
  May  4 12:45:20.721: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5512" for this suite. @ 05/04/24 12:45:20.727
• [2.127 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 05/04/24 12:45:20.736
  May  4 12:45:20.736: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename dns @ 05/04/24 12:45:20.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:45:20.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:45:20.758
  STEP: Creating a test headless service @ 05/04/24 12:45:20.762
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-840.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-840.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-840.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-840.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-840.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-840.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-840.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-840.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-840.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-840.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-840.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-840.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 221.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.221_udp@PTR;check="$$(dig +tcp +noall +answer +search 221.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.221_tcp@PTR;sleep 1; done
   @ 05/04/24 12:45:20.785
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-840.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-840.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-840.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-840.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-840.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-840.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-840.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-840.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-840.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-840.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-840.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-840.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 221.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.221_udp@PTR;check="$$(dig +tcp +noall +answer +search 221.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.221_tcp@PTR;sleep 1; done
   @ 05/04/24 12:45:20.785
  STEP: creating a pod to probe DNS @ 05/04/24 12:45:20.785
  STEP: submitting the pod to kubernetes @ 05/04/24 12:45:20.785
  STEP: retrieving the pod @ 05/04/24 12:45:22.805
  STEP: looking for the results for each expected name from probers @ 05/04/24 12:45:22.81
  May  4 12:45:22.815: INFO: Unable to read wheezy_udp@dns-test-service.dns-840.svc.cluster.local from pod dns-840/dns-test-0c14ca6b-84ad-4205-85ce-87fbd0ad4b4a: the server could not find the requested resource (get pods dns-test-0c14ca6b-84ad-4205-85ce-87fbd0ad4b4a)
  May  4 12:45:22.818: INFO: Unable to read wheezy_tcp@dns-test-service.dns-840.svc.cluster.local from pod dns-840/dns-test-0c14ca6b-84ad-4205-85ce-87fbd0ad4b4a: the server could not find the requested resource (get pods dns-test-0c14ca6b-84ad-4205-85ce-87fbd0ad4b4a)
  May  4 12:45:22.823: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-840.svc.cluster.local from pod dns-840/dns-test-0c14ca6b-84ad-4205-85ce-87fbd0ad4b4a: the server could not find the requested resource (get pods dns-test-0c14ca6b-84ad-4205-85ce-87fbd0ad4b4a)
  May  4 12:45:22.826: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-840.svc.cluster.local from pod dns-840/dns-test-0c14ca6b-84ad-4205-85ce-87fbd0ad4b4a: the server could not find the requested resource (get pods dns-test-0c14ca6b-84ad-4205-85ce-87fbd0ad4b4a)
  May  4 12:45:22.845: INFO: Unable to read jessie_udp@dns-test-service.dns-840.svc.cluster.local from pod dns-840/dns-test-0c14ca6b-84ad-4205-85ce-87fbd0ad4b4a: the server could not find the requested resource (get pods dns-test-0c14ca6b-84ad-4205-85ce-87fbd0ad4b4a)
  May  4 12:45:22.850: INFO: Unable to read jessie_tcp@dns-test-service.dns-840.svc.cluster.local from pod dns-840/dns-test-0c14ca6b-84ad-4205-85ce-87fbd0ad4b4a: the server could not find the requested resource (get pods dns-test-0c14ca6b-84ad-4205-85ce-87fbd0ad4b4a)
  May  4 12:45:22.852: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-840.svc.cluster.local from pod dns-840/dns-test-0c14ca6b-84ad-4205-85ce-87fbd0ad4b4a: the server could not find the requested resource (get pods dns-test-0c14ca6b-84ad-4205-85ce-87fbd0ad4b4a)
  May  4 12:45:22.857: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-840.svc.cluster.local from pod dns-840/dns-test-0c14ca6b-84ad-4205-85ce-87fbd0ad4b4a: the server could not find the requested resource (get pods dns-test-0c14ca6b-84ad-4205-85ce-87fbd0ad4b4a)
  May  4 12:45:22.873: INFO: Lookups using dns-840/dns-test-0c14ca6b-84ad-4205-85ce-87fbd0ad4b4a failed for: [wheezy_udp@dns-test-service.dns-840.svc.cluster.local wheezy_tcp@dns-test-service.dns-840.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-840.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-840.svc.cluster.local jessie_udp@dns-test-service.dns-840.svc.cluster.local jessie_tcp@dns-test-service.dns-840.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-840.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-840.svc.cluster.local]

  May  4 12:45:22.878: INFO: Pod client logs for webserver: 
  May  4 12:45:22.886: INFO: Pod client logs for querier: 
  May  4 12:45:22.893: INFO: Pod client logs for jessie-querier: 
  May  4 12:45:27.873: INFO: DNS probes using dns-840/dns-test-0c14ca6b-84ad-4205-85ce-87fbd0ad4b4a succeeded

  STEP: deleting the pod @ 05/04/24 12:45:27.873
  STEP: deleting the test service @ 05/04/24 12:45:27.887
  STEP: deleting the test headless service @ 05/04/24 12:45:27.913
  May  4 12:45:27.930: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-840" for this suite. @ 05/04/24 12:45:27.933
• [7.204 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 05/04/24 12:45:27.941
  May  4 12:45:27.941: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename emptydir @ 05/04/24 12:45:27.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:45:27.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:45:27.963
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 05/04/24 12:45:27.965
  STEP: Saw pod success @ 05/04/24 12:45:29.986
  May  4 12:45:29.989: INFO: Trying to get logs from node ip-172-31-72-79 pod pod-c1dd552b-a994-4818-8bfb-c08cea113611 container test-container: <nil>
  STEP: delete the pod @ 05/04/24 12:45:29.998
  May  4 12:45:30.017: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7215" for this suite. @ 05/04/24 12:45:30.021
• [2.086 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 05/04/24 12:45:30.027
  May  4 12:45:30.027: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename var-expansion @ 05/04/24 12:45:30.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:45:30.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:45:30.054
  STEP: Creating a pod to test substitution in volume subpath @ 05/04/24 12:45:30.057
  STEP: Saw pod success @ 05/04/24 12:45:34.077
  May  4 12:45:34.081: INFO: Trying to get logs from node ip-172-31-18-228 pod var-expansion-fdce39cc-0464-4d50-85d0-04469a28582e container dapi-container: <nil>
  STEP: delete the pod @ 05/04/24 12:45:34.087
  May  4 12:45:34.101: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7745" for this suite. @ 05/04/24 12:45:34.105
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 05/04/24 12:45:34.112
  May  4 12:45:34.112: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename deployment @ 05/04/24 12:45:34.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:45:34.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:45:34.131
  May  4 12:45:34.134: INFO: Creating deployment "test-recreate-deployment"
  May  4 12:45:34.140: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  May  4 12:45:34.145: INFO: new replicaset for deployment "test-recreate-deployment" is yet to be created
  May  4 12:45:36.155: INFO: Waiting deployment "test-recreate-deployment" to complete
  May  4 12:45:36.159: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  May  4 12:45:36.169: INFO: Updating deployment test-recreate-deployment
  May  4 12:45:36.169: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  May  4 12:45:36.261: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5007",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fc420aec-470a-4519-b425-aac2856db5bf",
      ResourceVersion: (string) (len=5) "19079",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850423534,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423536,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423536,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423536,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423536,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423536,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423534,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May  4 12:45:36.265: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5007",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d53f188f-944a-40eb-a937-3948b64c5d65",
      ResourceVersion: (string) (len=5) "19077",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850423536,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "fc420aec-470a-4519-b425-aac2856db5bf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423536,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 63 34 32 30 61  65 63 2d 34 37 30 61 2d  |\"fc420aec-470a-|
              00000120  34 35 31 39 2d 62 34 32  35 2d 61 61 63 32 38 35  |4519-b425-aac285|
              00000130  36 64 62 35 62 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |6db5bf\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423536,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May  4 12:45:36.266: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  May  4 12:45:36.267: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-5cf87b5b86",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5007",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "697193c5-dff9-4335-b666-9c0f3fcc7375",
      ResourceVersion: (string) (len=5) "19067",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850423534,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "fc420aec-470a-4519-b425-aac2856db5bf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423536,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 63 34 32 30 61  65 63 2d 34 37 30 61 2d  |\"fc420aec-470a-|
              00000120  34 35 31 39 2d 62 34 32  35 2d 61 61 63 32 38 35  |4519-b425-aac285|
              00000130  36 64 62 35 62 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |6db5bf\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423536,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May  4 12:45:36.273: INFO: Pod "test-recreate-deployment-76fb77d45-2792p" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-2792p",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-5007",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1c2db7a9-d815-4352-9ee7-0e0f0efcaf04",
      ResourceVersion: (string) (len=5) "19078",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850423536,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "d53f188f-944a-40eb-a937-3948b64c5d65",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423536,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 35  33 66 31 38 38 66 2d 39  |d\":\"d53f188f-9|
              00000090  34 34 61 2d 34 30 65 62  2d 61 39 33 37 2d 33 39  |44a-40eb-a937-39|
              000000a0  34 38 62 36 34 63 35 64  36 35 5c 22 7d 22 3a 7b  |48b64c5d65\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423536,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2dz4z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2dz4z",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-18-228",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423536,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423536,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423536,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423536,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423536,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.18.228",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.18.228"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850423536,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  4 12:45:36.274: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5007" for this suite. @ 05/04/24 12:45:36.278
• [2.175 seconds]
------------------------------
SSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 05/04/24 12:45:36.287
  May  4 12:45:36.287: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename podtemplate @ 05/04/24 12:45:36.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:45:36.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:45:36.309
  May  4 12:45:36.342: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9047" for this suite. @ 05/04/24 12:45:36.344
• [0.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2236
  STEP: Creating a kubernetes client @ 05/04/24 12:45:36.353
  May  4 12:45:36.353: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename services @ 05/04/24 12:45:36.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:45:36.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:45:36.377
  STEP: creating service in namespace services-2604 @ 05/04/24 12:45:36.379
  STEP: creating service affinity-nodeport-transition in namespace services-2604 @ 05/04/24 12:45:36.379
  STEP: creating replication controller affinity-nodeport-transition in namespace services-2604 @ 05/04/24 12:45:36.401
  I0504 12:45:36.407326      19 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-2604, replica count: 3
  I0504 12:45:39.458289      19 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May  4 12:45:39.470: INFO: Creating new exec pod
  May  4 12:45:42.492: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-2604 exec execpod-affinitymv4c8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  May  4 12:45:42.592: INFO: stderr: "+ nc -v -t -w 2 affinity-nodeport-transition 80\n+ echo hostName\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  May  4 12:45:42.592: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May  4 12:45:42.592: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-2604 exec execpod-affinitymv4c8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.70 80'
  May  4 12:45:42.680: INFO: stderr: "+ + nc -v -t -w 2 10.152.183.70 80\nechoConnection to 10.152.183.70 80 port [tcp/http] succeeded!\n hostName\n"
  May  4 12:45:42.680: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May  4 12:45:42.680: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-2604 exec execpod-affinitymv4c8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.33.38 31247'
  May  4 12:45:42.778: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.33.38 31247\nConnection to 172.31.33.38 31247 port [tcp/*] succeeded!\n"
  May  4 12:45:42.778: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May  4 12:45:42.778: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-2604 exec execpod-affinitymv4c8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.18.228 31247'
  May  4 12:45:42.870: INFO: stderr: "+ nc -v -t -w 2 172.31.18.228 31247\n+ echo hostName\nConnection to 172.31.18.228 31247 port [tcp/*] succeeded!\n"
  May  4 12:45:42.870: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May  4 12:45:42.880: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-2604 exec execpod-affinitymv4c8 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.18.228:31247/ ; done'
  May  4 12:45:43.054: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:31247/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:31247/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:31247/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:31247/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:31247/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:31247/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:31247/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:31247/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:31247/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:31247/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:31247/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:31247/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:31247/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:31247/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:31247/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:31247/\n"
  May  4 12:45:43.054: INFO: stdout: "\naffinity-nodeport-transition-tfkk6\naffinity-nodeport-transition-tsjzn\naffinity-nodeport-transition-tsjzn\naffinity-nodeport-transition-tfkk6\naffinity-nodeport-transition-tfkk6\naffinity-nodeport-transition-tsjzn\naffinity-nodeport-transition-tsjzn\naffinity-nodeport-transition-cblck\naffinity-nodeport-transition-cblck\naffinity-nodeport-transition-tfkk6\naffinity-nodeport-transition-tfkk6\naffinity-nodeport-transition-tfkk6\naffinity-nodeport-transition-tfkk6\naffinity-nodeport-transition-cblck\naffinity-nodeport-transition-tsjzn\naffinity-nodeport-transition-tfkk6"
  May  4 12:45:43.054: INFO: Received response from host: affinity-nodeport-transition-tfkk6
  May  4 12:45:43.054: INFO: Received response from host: affinity-nodeport-transition-tsjzn
  May  4 12:45:43.054: INFO: Received response from host: affinity-nodeport-transition-tsjzn
  May  4 12:45:43.054: INFO: Received response from host: affinity-nodeport-transition-tfkk6
  May  4 12:45:43.054: INFO: Received response from host: affinity-nodeport-transition-tfkk6
  May  4 12:45:43.054: INFO: Received response from host: affinity-nodeport-transition-tsjzn
  May  4 12:45:43.054: INFO: Received response from host: affinity-nodeport-transition-tsjzn
  May  4 12:45:43.054: INFO: Received response from host: affinity-nodeport-transition-cblck
  May  4 12:45:43.054: INFO: Received response from host: affinity-nodeport-transition-cblck
  May  4 12:45:43.054: INFO: Received response from host: affinity-nodeport-transition-tfkk6
  May  4 12:45:43.054: INFO: Received response from host: affinity-nodeport-transition-tfkk6
  May  4 12:45:43.054: INFO: Received response from host: affinity-nodeport-transition-tfkk6
  May  4 12:45:43.054: INFO: Received response from host: affinity-nodeport-transition-tfkk6
  May  4 12:45:43.054: INFO: Received response from host: affinity-nodeport-transition-cblck
  May  4 12:45:43.054: INFO: Received response from host: affinity-nodeport-transition-tsjzn
  May  4 12:45:43.054: INFO: Received response from host: affinity-nodeport-transition-tfkk6
  May  4 12:45:43.065: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-2604 exec execpod-affinitymv4c8 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.18.228:31247/ ; done'
  May  4 12:45:43.222: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:31247/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:31247/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:31247/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:31247/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:31247/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:31247/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:31247/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:31247/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:31247/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:31247/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:31247/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:31247/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:31247/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:31247/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:31247/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.228:31247/\n"
  May  4 12:45:43.222: INFO: stdout: "\naffinity-nodeport-transition-tsjzn\naffinity-nodeport-transition-tsjzn\naffinity-nodeport-transition-tsjzn\naffinity-nodeport-transition-tsjzn\naffinity-nodeport-transition-tsjzn\naffinity-nodeport-transition-tsjzn\naffinity-nodeport-transition-tsjzn\naffinity-nodeport-transition-tsjzn\naffinity-nodeport-transition-tsjzn\naffinity-nodeport-transition-tsjzn\naffinity-nodeport-transition-tsjzn\naffinity-nodeport-transition-tsjzn\naffinity-nodeport-transition-tsjzn\naffinity-nodeport-transition-tsjzn\naffinity-nodeport-transition-tsjzn\naffinity-nodeport-transition-tsjzn"
  May  4 12:45:43.222: INFO: Received response from host: affinity-nodeport-transition-tsjzn
  May  4 12:45:43.222: INFO: Received response from host: affinity-nodeport-transition-tsjzn
  May  4 12:45:43.222: INFO: Received response from host: affinity-nodeport-transition-tsjzn
  May  4 12:45:43.222: INFO: Received response from host: affinity-nodeport-transition-tsjzn
  May  4 12:45:43.222: INFO: Received response from host: affinity-nodeport-transition-tsjzn
  May  4 12:45:43.222: INFO: Received response from host: affinity-nodeport-transition-tsjzn
  May  4 12:45:43.222: INFO: Received response from host: affinity-nodeport-transition-tsjzn
  May  4 12:45:43.222: INFO: Received response from host: affinity-nodeport-transition-tsjzn
  May  4 12:45:43.222: INFO: Received response from host: affinity-nodeport-transition-tsjzn
  May  4 12:45:43.222: INFO: Received response from host: affinity-nodeport-transition-tsjzn
  May  4 12:45:43.222: INFO: Received response from host: affinity-nodeport-transition-tsjzn
  May  4 12:45:43.222: INFO: Received response from host: affinity-nodeport-transition-tsjzn
  May  4 12:45:43.222: INFO: Received response from host: affinity-nodeport-transition-tsjzn
  May  4 12:45:43.222: INFO: Received response from host: affinity-nodeport-transition-tsjzn
  May  4 12:45:43.222: INFO: Received response from host: affinity-nodeport-transition-tsjzn
  May  4 12:45:43.222: INFO: Received response from host: affinity-nodeport-transition-tsjzn
  May  4 12:45:43.222: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-2604, will wait for the garbage collector to delete the pods @ 05/04/24 12:45:43.235
  May  4 12:45:43.298: INFO: Deleting ReplicationController affinity-nodeport-transition took: 7.195031ms
  May  4 12:45:43.404: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 105.970265ms
  May  4 12:45:46.430: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2604" for this suite. @ 05/04/24 12:45:46.435
• [10.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:334
  STEP: Creating a kubernetes client @ 05/04/24 12:45:46.444
  May  4 12:45:46.444: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename sched-pred @ 05/04/24 12:45:46.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:45:46.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:45:46.463
  May  4 12:45:46.468: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  May  4 12:45:46.476: INFO: Waiting for terminating namespaces to be deleted...
  May  4 12:45:46.480: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-18-228 before test
  May  4 12:45:46.483: INFO: nginx-ingress-controller-kubernetes-worker-hj9cd from ingress-nginx-kubernetes-worker started at 2024-05-04 12:19:33 +0000 UTC (1 container statuses recorded)
  May  4 12:45:46.483: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  May  4 12:45:46.483: INFO: calico-node-rvkmx from kube-system started at 2024-05-04 12:12:09 +0000 UTC (1 container statuses recorded)
  May  4 12:45:46.483: INFO: 	Container calico-node ready: true, restart count 0
  May  4 12:45:46.483: INFO: pod-exec-websocket-8b27abb8-ef31-4fe4-8f09-46eb8dcb3712 from pods-5512 started at 2024-05-04 12:45:18 +0000 UTC (1 container statuses recorded)
  May  4 12:45:46.483: INFO: 	Container main ready: true, restart count 0
  May  4 12:45:46.483: INFO: sonobuoy from sonobuoy started at 2024-05-04 12:12:07 +0000 UTC (1 container statuses recorded)
  May  4 12:45:46.483: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  May  4 12:45:46.483: INFO: sonobuoy-systemd-logs-daemon-set-12e57fb52bd44eb7-llzs6 from sonobuoy started at 2024-05-04 12:12:09 +0000 UTC (2 container statuses recorded)
  May  4 12:45:46.483: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May  4 12:45:46.483: INFO: 	Container systemd-logs ready: true, restart count 0
  May  4 12:45:46.483: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-33-38 before test
  May  4 12:45:46.489: INFO: nginx-ingress-controller-kubernetes-worker-6kjkz from ingress-nginx-kubernetes-worker started at 2024-05-04 11:56:20 +0000 UTC (1 container statuses recorded)
  May  4 12:45:46.489: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  May  4 12:45:46.489: INFO: calico-node-zvlhw from kube-system started at 2024-05-04 12:11:38 +0000 UTC (1 container statuses recorded)
  May  4 12:45:46.489: INFO: 	Container calico-node ready: true, restart count 0
  May  4 12:45:46.489: INFO: coredns-bddfd76d7-66zt7 from kube-system started at 2024-05-04 11:56:59 +0000 UTC (1 container statuses recorded)
  May  4 12:45:46.489: INFO: 	Container coredns ready: true, restart count 0
  May  4 12:45:46.489: INFO: kube-state-metrics-6f48cdd76-5zgtw from kube-system started at 2024-05-04 11:56:20 +0000 UTC (1 container statuses recorded)
  May  4 12:45:46.490: INFO: 	Container kube-state-metrics ready: true, restart count 4
  May  4 12:45:46.490: INFO: metrics-server-v0.6.3-69d7fbfdf8-hdjfr from kube-system started at 2024-05-04 11:56:59 +0000 UTC (2 container statuses recorded)
  May  4 12:45:46.490: INFO: 	Container metrics-server ready: true, restart count 6
  May  4 12:45:46.490: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  May  4 12:45:46.490: INFO: dashboard-metrics-scraper-5dd7cb5fc-kfwtl from kubernetes-dashboard started at 2024-05-04 11:56:59 +0000 UTC (1 container statuses recorded)
  May  4 12:45:46.490: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  May  4 12:45:46.490: INFO: kubernetes-dashboard-7b899cb9d9-7nz54 from kubernetes-dashboard started at 2024-05-04 11:56:59 +0000 UTC (1 container statuses recorded)
  May  4 12:45:46.490: INFO: 	Container kubernetes-dashboard ready: true, restart count 5
  May  4 12:45:46.490: INFO: sonobuoy-systemd-logs-daemon-set-12e57fb52bd44eb7-6g56f from sonobuoy started at 2024-05-04 12:12:09 +0000 UTC (2 container statuses recorded)
  May  4 12:45:46.490: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May  4 12:45:46.490: INFO: 	Container systemd-logs ready: true, restart count 0
  May  4 12:45:46.490: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-72-79 before test
  May  4 12:45:46.495: INFO: nginx-ingress-controller-kubernetes-worker-b5nwc from ingress-nginx-kubernetes-worker started at 2024-05-04 12:01:33 +0000 UTC (1 container statuses recorded)
  May  4 12:45:46.495: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 4
  May  4 12:45:46.495: INFO: calico-node-gt7z9 from kube-system started at 2024-05-04 12:11:48 +0000 UTC (1 container statuses recorded)
  May  4 12:45:46.495: INFO: 	Container calico-node ready: true, restart count 0
  May  4 12:45:46.495: INFO: sonobuoy-e2e-job-8f0e1aa0da094028 from sonobuoy started at 2024-05-04 12:12:09 +0000 UTC (2 container statuses recorded)
  May  4 12:45:46.495: INFO: 	Container e2e ready: true, restart count 0
  May  4 12:45:46.495: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May  4 12:45:46.495: INFO: sonobuoy-systemd-logs-daemon-set-12e57fb52bd44eb7-wfcjh from sonobuoy started at 2024-05-04 12:12:09 +0000 UTC (2 container statuses recorded)
  May  4 12:45:46.495: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May  4 12:45:46.495: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-18-228 @ 05/04/24 12:45:46.509
  STEP: verifying the node has the label node ip-172-31-33-38 @ 05/04/24 12:45:46.522
  STEP: verifying the node has the label node ip-172-31-72-79 @ 05/04/24 12:45:46.535
  May  4 12:45:46.549: INFO: Pod nginx-ingress-controller-kubernetes-worker-6kjkz requesting resource cpu=0m on Node ip-172-31-33-38
  May  4 12:45:46.549: INFO: Pod nginx-ingress-controller-kubernetes-worker-b5nwc requesting resource cpu=0m on Node ip-172-31-72-79
  May  4 12:45:46.549: INFO: Pod nginx-ingress-controller-kubernetes-worker-hj9cd requesting resource cpu=0m on Node ip-172-31-18-228
  May  4 12:45:46.549: INFO: Pod calico-node-gt7z9 requesting resource cpu=250m on Node ip-172-31-72-79
  May  4 12:45:46.549: INFO: Pod calico-node-rvkmx requesting resource cpu=250m on Node ip-172-31-18-228
  May  4 12:45:46.549: INFO: Pod calico-node-zvlhw requesting resource cpu=250m on Node ip-172-31-33-38
  May  4 12:45:46.549: INFO: Pod coredns-bddfd76d7-66zt7 requesting resource cpu=100m on Node ip-172-31-33-38
  May  4 12:45:46.549: INFO: Pod kube-state-metrics-6f48cdd76-5zgtw requesting resource cpu=0m on Node ip-172-31-33-38
  May  4 12:45:46.549: INFO: Pod metrics-server-v0.6.3-69d7fbfdf8-hdjfr requesting resource cpu=5m on Node ip-172-31-33-38
  May  4 12:45:46.549: INFO: Pod dashboard-metrics-scraper-5dd7cb5fc-kfwtl requesting resource cpu=0m on Node ip-172-31-33-38
  May  4 12:45:46.549: INFO: Pod kubernetes-dashboard-7b899cb9d9-7nz54 requesting resource cpu=0m on Node ip-172-31-33-38
  May  4 12:45:46.549: INFO: Pod pod-exec-websocket-8b27abb8-ef31-4fe4-8f09-46eb8dcb3712 requesting resource cpu=0m on Node ip-172-31-18-228
  May  4 12:45:46.549: INFO: Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-18-228
  May  4 12:45:46.549: INFO: Pod sonobuoy-e2e-job-8f0e1aa0da094028 requesting resource cpu=0m on Node ip-172-31-72-79
  May  4 12:45:46.549: INFO: Pod sonobuoy-systemd-logs-daemon-set-12e57fb52bd44eb7-6g56f requesting resource cpu=0m on Node ip-172-31-33-38
  May  4 12:45:46.549: INFO: Pod sonobuoy-systemd-logs-daemon-set-12e57fb52bd44eb7-llzs6 requesting resource cpu=0m on Node ip-172-31-18-228
  May  4 12:45:46.549: INFO: Pod sonobuoy-systemd-logs-daemon-set-12e57fb52bd44eb7-wfcjh requesting resource cpu=0m on Node ip-172-31-72-79
  STEP: Starting Pods to consume most of the cluster CPU. @ 05/04/24 12:45:46.549
  May  4 12:45:46.549: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-18-228
  May  4 12:45:46.560: INFO: Creating a pod which consumes cpu=1151m on Node ip-172-31-33-38
  May  4 12:45:46.566: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-72-79
  STEP: Creating another pod that requires unavailable amount of CPU. @ 05/04/24 12:45:48.592
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a0e26413-54c3-4484-8282-ca72b1b84048.17cc49d728a10713], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4938/filler-pod-a0e26413-54c3-4484-8282-ca72b1b84048 to ip-172-31-18-228] @ 05/04/24 12:45:48.596
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a0e26413-54c3-4484-8282-ca72b1b84048.17cc49d7481f67c7], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/04/24 12:45:48.596
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a0e26413-54c3-4484-8282-ca72b1b84048.17cc49d749190dc1], Reason = [Created], Message = [Created container filler-pod-a0e26413-54c3-4484-8282-ca72b1b84048] @ 05/04/24 12:45:48.596
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a0e26413-54c3-4484-8282-ca72b1b84048.17cc49d74c72ce0f], Reason = [Started], Message = [Started container filler-pod-a0e26413-54c3-4484-8282-ca72b1b84048] @ 05/04/24 12:45:48.596
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c4762ab3-7146-4082-9adc-af5acc62e913.17cc49d72924c8af], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4938/filler-pod-c4762ab3-7146-4082-9adc-af5acc62e913 to ip-172-31-72-79] @ 05/04/24 12:45:48.596
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c4762ab3-7146-4082-9adc-af5acc62e913.17cc49d749079790], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/04/24 12:45:48.596
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c4762ab3-7146-4082-9adc-af5acc62e913.17cc49d749fbe6b3], Reason = [Created], Message = [Created container filler-pod-c4762ab3-7146-4082-9adc-af5acc62e913] @ 05/04/24 12:45:48.596
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c4762ab3-7146-4082-9adc-af5acc62e913.17cc49d74c7e5c6d], Reason = [Started], Message = [Started container filler-pod-c4762ab3-7146-4082-9adc-af5acc62e913] @ 05/04/24 12:45:48.596
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e5caae14-270e-4d01-96bd-8b36dd81cb81.17cc49d728f2019c], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4938/filler-pod-e5caae14-270e-4d01-96bd-8b36dd81cb81 to ip-172-31-33-38] @ 05/04/24 12:45:48.596
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e5caae14-270e-4d01-96bd-8b36dd81cb81.17cc49d74742b2a1], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/04/24 12:45:48.596
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e5caae14-270e-4d01-96bd-8b36dd81cb81.17cc49d748240e97], Reason = [Created], Message = [Created container filler-pod-e5caae14-270e-4d01-96bd-8b36dd81cb81] @ 05/04/24 12:45:48.596
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e5caae14-270e-4d01-96bd-8b36dd81cb81.17cc49d74b7b9fca], Reason = [Started], Message = [Started container filler-pod-e5caae14-270e-4d01-96bd-8b36dd81cb81] @ 05/04/24 12:45:48.596
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17cc49d7a1e368b7], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.] @ 05/04/24 12:45:48.608
  STEP: removing the label node off the node ip-172-31-18-228 @ 05/04/24 12:45:49.609
  STEP: verifying the node doesn't have the label node @ 05/04/24 12:45:49.62
  STEP: removing the label node off the node ip-172-31-33-38 @ 05/04/24 12:45:49.624
  STEP: verifying the node doesn't have the label node @ 05/04/24 12:45:49.635
  STEP: removing the label node off the node ip-172-31-72-79 @ 05/04/24 12:45:49.64
  STEP: verifying the node doesn't have the label node @ 05/04/24 12:45:49.651
  May  4 12:45:49.657: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4938" for this suite. @ 05/04/24 12:45:49.667
• [3.233 seconds]
------------------------------
S
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 05/04/24 12:45:49.677
  May  4 12:45:49.677: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename init-container @ 05/04/24 12:45:49.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:45:49.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:45:49.706
  STEP: creating the pod @ 05/04/24 12:45:49.709
  May  4 12:45:49.709: INFO: PodSpec: initContainers in spec.initContainers
  May  4 12:45:53.247: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6825" for this suite. @ 05/04/24 12:45:53.252
• [3.583 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 05/04/24 12:45:53.26
  May  4 12:45:53.260: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/04/24 12:45:53.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:45:53.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:45:53.281
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 05/04/24 12:45:53.283
  May  4 12:45:53.284: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 12:45:54.511: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 12:45:59.477: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4278" for this suite. @ 05/04/24 12:45:59.484
• [6.231 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 05/04/24 12:45:59.492
  May  4 12:45:59.492: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename projected @ 05/04/24 12:45:59.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:45:59.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:45:59.522
  STEP: Creating a pod to test downward API volume plugin @ 05/04/24 12:45:59.525
  STEP: Saw pod success @ 05/04/24 12:46:01.539
  May  4 12:46:01.544: INFO: Trying to get logs from node ip-172-31-18-228 pod downwardapi-volume-333660dd-ae3d-45b0-ab3a-11326d4826c9 container client-container: <nil>
  STEP: delete the pod @ 05/04/24 12:46:01.55
  May  4 12:46:01.565: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3793" for this suite. @ 05/04/24 12:46:01.569
• [2.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 05/04/24 12:46:01.578
  May  4 12:46:01.578: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename resourcequota @ 05/04/24 12:46:01.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:46:01.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:46:01.603
  STEP: Counting existing ResourceQuota @ 05/04/24 12:46:18.61
  STEP: Creating a ResourceQuota @ 05/04/24 12:46:23.615
  STEP: Ensuring resource quota status is calculated @ 05/04/24 12:46:23.62
  STEP: Creating a ConfigMap @ 05/04/24 12:46:25.625
  STEP: Ensuring resource quota status captures configMap creation @ 05/04/24 12:46:25.639
  STEP: Deleting a ConfigMap @ 05/04/24 12:46:27.647
  STEP: Ensuring resource quota status released usage @ 05/04/24 12:46:27.653
  May  4 12:46:29.658: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1823" for this suite. @ 05/04/24 12:46:29.667
• [28.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 05/04/24 12:46:29.675
  May  4 12:46:29.675: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename secrets @ 05/04/24 12:46:29.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:46:29.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:46:29.701
  STEP: Creating secret with name secret-test-f260f947-5429-48cf-a1b8-6072c3ab6edb @ 05/04/24 12:46:29.705
  STEP: Creating a pod to test consume secrets @ 05/04/24 12:46:29.711
  STEP: Saw pod success @ 05/04/24 12:46:33.737
  May  4 12:46:33.739: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-secrets-698c04fa-b612-44a5-a891-656d2167bdcb container secret-volume-test: <nil>
  STEP: delete the pod @ 05/04/24 12:46:33.747
  May  4 12:46:33.766: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5390" for this suite. @ 05/04/24 12:46:33.771
• [4.103 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 05/04/24 12:46:33.777
  May  4 12:46:33.777: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename pods @ 05/04/24 12:46:33.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:46:33.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:46:33.798
  STEP: creating the pod @ 05/04/24 12:46:33.803
  STEP: submitting the pod to kubernetes @ 05/04/24 12:46:33.803
  W0504 12:46:33.813880      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 05/04/24 12:46:35.826
  STEP: updating the pod @ 05/04/24 12:46:35.831
  May  4 12:46:36.344: INFO: Successfully updated pod "pod-update-activedeadlineseconds-8c844f3b-ce60-4233-9143-d319a0526637"
  May  4 12:46:40.357: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1649" for this suite. @ 05/04/24 12:46:40.361
• [6.590 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 05/04/24 12:46:40.368
  May  4 12:46:40.368: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename secrets @ 05/04/24 12:46:40.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:46:40.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:46:40.387
  STEP: Creating secret with name secret-test-4ba0bba7-f474-46ba-9006-956ebdc91d06 @ 05/04/24 12:46:40.389
  STEP: Creating a pod to test consume secrets @ 05/04/24 12:46:40.394
  STEP: Saw pod success @ 05/04/24 12:46:44.422
  May  4 12:46:44.426: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-secrets-a9102487-f83c-4186-b2ae-4dae70a4fb47 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/04/24 12:46:44.432
  May  4 12:46:44.447: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4129" for this suite. @ 05/04/24 12:46:44.452
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 05/04/24 12:46:44.459
  May  4 12:46:44.459: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename dns @ 05/04/24 12:46:44.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:46:44.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:46:44.483
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 05/04/24 12:46:44.486
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 05/04/24 12:46:44.486
  STEP: creating a pod to probe DNS @ 05/04/24 12:46:44.486
  STEP: submitting the pod to kubernetes @ 05/04/24 12:46:44.486
  STEP: retrieving the pod @ 05/04/24 12:46:46.502
  STEP: looking for the results for each expected name from probers @ 05/04/24 12:46:46.505
  May  4 12:46:46.522: INFO: DNS probes using dns-5097/dns-test-34f601c2-2824-4fbb-9933-788099ac4f72 succeeded

  STEP: deleting the pod @ 05/04/24 12:46:46.522
  May  4 12:46:46.539: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5097" for this suite. @ 05/04/24 12:46:46.543
• [2.093 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 05/04/24 12:46:46.552
  May  4 12:46:46.552: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename replicaset @ 05/04/24 12:46:46.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:46:46.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:46:46.576
  May  4 12:46:46.593: INFO: Pod name sample-pod: Found 0 pods out of 1
  May  4 12:46:51.597: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/04/24 12:46:51.597
  STEP: Scaling up "test-rs" replicaset @ 05/04/24 12:46:51.597
  May  4 12:46:51.606: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 05/04/24 12:46:51.606
  May  4 12:46:51.616: INFO: observed ReplicaSet test-rs in namespace replicaset-4672 with ReadyReplicas 1, AvailableReplicas 1
  May  4 12:46:51.635: INFO: observed ReplicaSet test-rs in namespace replicaset-4672 with ReadyReplicas 1, AvailableReplicas 1
  May  4 12:46:51.660: INFO: observed ReplicaSet test-rs in namespace replicaset-4672 with ReadyReplicas 1, AvailableReplicas 1
  May  4 12:46:51.672: INFO: observed ReplicaSet test-rs in namespace replicaset-4672 with ReadyReplicas 1, AvailableReplicas 1
  May  4 12:46:52.426: INFO: observed ReplicaSet test-rs in namespace replicaset-4672 with ReadyReplicas 2, AvailableReplicas 2
  May  4 12:46:52.930: INFO: observed Replicaset test-rs in namespace replicaset-4672 with ReadyReplicas 3 found true
  May  4 12:46:52.930: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4672" for this suite. @ 05/04/24 12:46:52.935
• [6.390 seconds]
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 05/04/24 12:46:52.943
  May  4 12:46:52.943: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename replicaset @ 05/04/24 12:46:52.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:46:52.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:46:52.961
  May  4 12:46:52.965: INFO: Creating ReplicaSet my-hostname-basic-c491aa67-afcc-4400-931f-93ee862576ec
  May  4 12:46:52.973: INFO: Pod name my-hostname-basic-c491aa67-afcc-4400-931f-93ee862576ec: Found 0 pods out of 1
  May  4 12:46:57.980: INFO: Pod name my-hostname-basic-c491aa67-afcc-4400-931f-93ee862576ec: Found 1 pods out of 1
  May  4 12:46:57.980: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-c491aa67-afcc-4400-931f-93ee862576ec" is running
  May  4 12:46:57.983: INFO: Pod "my-hostname-basic-c491aa67-afcc-4400-931f-93ee862576ec-nsmrm" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-04 12:46:54 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-04 12:46:52 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-04 12:46:54 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-04 12:46:54 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-04 12:46:52 +0000 UTC Reason: Message:}])
  May  4 12:46:57.983: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 05/04/24 12:46:57.983
  May  4 12:46:57.993: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5747" for this suite. @ 05/04/24 12:46:57.996
• [5.060 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 05/04/24 12:46:58.003
  May  4 12:46:58.003: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename subpath @ 05/04/24 12:46:58.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:46:58.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:46:58.026
  STEP: Setting up data @ 05/04/24 12:46:58.029
  STEP: Creating pod pod-subpath-test-downwardapi-sx2k @ 05/04/24 12:46:58.042
  STEP: Creating a pod to test atomic-volume-subpath @ 05/04/24 12:46:58.042
  STEP: Saw pod success @ 05/04/24 12:47:22.118
  May  4 12:47:22.123: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-subpath-test-downwardapi-sx2k container test-container-subpath-downwardapi-sx2k: <nil>
  STEP: delete the pod @ 05/04/24 12:47:22.129
  STEP: Deleting pod pod-subpath-test-downwardapi-sx2k @ 05/04/24 12:47:22.145
  May  4 12:47:22.145: INFO: Deleting pod "pod-subpath-test-downwardapi-sx2k" in namespace "subpath-2258"
  May  4 12:47:22.149: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2258" for this suite. @ 05/04/24 12:47:22.154
• [24.159 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 05/04/24 12:47:22.162
  May  4 12:47:22.162: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename sysctl @ 05/04/24 12:47:22.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:47:22.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:47:22.187
  STEP: Creating a pod with one valid and two invalid sysctls @ 05/04/24 12:47:22.19
  May  4 12:47:22.196: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-2055" for this suite. @ 05/04/24 12:47:22.2
• [0.044 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 05/04/24 12:47:22.207
  May  4 12:47:22.207: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename deployment @ 05/04/24 12:47:22.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:47:22.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:47:22.226
  May  4 12:47:22.231: INFO: Creating simple deployment test-new-deployment
  May  4 12:47:22.245: INFO: deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 05/04/24 12:47:24.262
  STEP: updating a scale subresource @ 05/04/24 12:47:24.265
  STEP: verifying the deployment Spec.Replicas was modified @ 05/04/24 12:47:24.273
  STEP: Patch a scale subresource @ 05/04/24 12:47:24.278
  May  4 12:47:24.303: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9264",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f53d178c-64aa-45a1-b7c5-b7cbe30ebc3b",
      ResourceVersion: (string) (len=5) "20095",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850423642,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May  4 12:47:24.310: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9264",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d5efa927-4756-4f0a-b987-e2f7ac083ecd",
      ResourceVersion: (string) (len=5) "20091",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850423642,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "f53d178c-64aa-45a1-b7c5-b7cbe30ebc3b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 35 33 64 31 37  38 63 2d 36 34 61 61 2d  |\"f53d178c-64aa-|
              00000120  34 35 61 31 2d 62 37 63  35 2d 62 37 63 62 65 33  |45a1-b7c5-b7cbe3|
              00000130  30 65 62 63 33 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0ebc3b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May  4 12:47:24.315: INFO: Pod "test-new-deployment-557759b7c7-295x6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-295x6",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9264",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "78172cd2-90c1-4c38-9a31-a01a46850f5c",
      ResourceVersion: (string) (len=5) "20092",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850423644,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "d5efa927-4756-4f0a-b987-e2f7ac083ecd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 35  65 66 61 39 32 37 2d 34  |d\":\"d5efa927-4|
              00000090  37 35 36 2d 34 66 30 61  2d 62 39 38 37 2d 65 32  |756-4f0a-b987-e2|
              000000a0  66 37 61 63 30 38 33 65  63 64 5c 22 7d 22 3a 7b  |f7ac083ecd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dp24q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dp24q",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-72-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  4 12:47:24.316: INFO: Pod "test-new-deployment-557759b7c7-x8fj8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-x8fj8",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9264",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2bd9d405-18d0-4981-a330-e71fdee8fb08",
      ResourceVersion: (string) (len=5) "20081",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850423642,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "d5efa927-4756-4f0a-b987-e2f7ac083ecd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 35  65 66 61 39 32 37 2d 34  |d\":\"d5efa927-4|
              00000090  37 35 36 2d 34 66 30 61  2d 62 39 38 37 2d 65 32  |756-4f0a-b987-e2|
              000000a0  66 37 61 63 30 38 33 65  63 64 5c 22 7d 22 3a 7b  |f7ac083ecd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 34  39 2e 33 39 5c 22 7d 22  |2.168.149.39\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7txfc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7txfc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-18-228",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850423642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.18.228",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.18.228"
        }
      },
      PodIP: (string) (len=14) "192.168.149.39",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.149.39"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850423642,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850423642,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2aa2ce9807d3236805833e52e8587deaf6e154c6ff8e75aa77e817c246911be4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  4 12:47:24.317: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9264" for this suite. @ 05/04/24 12:47:24.322
• [2.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 05/04/24 12:47:24.331
  May  4 12:47:24.331: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename projected @ 05/04/24 12:47:24.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:47:24.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:47:24.356
  STEP: Creating a pod to test downward API volume plugin @ 05/04/24 12:47:24.359
  STEP: Saw pod success @ 05/04/24 12:47:28.39
  May  4 12:47:28.394: INFO: Trying to get logs from node ip-172-31-18-228 pod downwardapi-volume-c321063e-50d5-4668-8569-cc40818a05f0 container client-container: <nil>
  STEP: delete the pod @ 05/04/24 12:47:28.402
  May  4 12:47:28.417: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1143" for this suite. @ 05/04/24 12:47:28.421
• [4.098 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 05/04/24 12:47:28.429
  May  4 12:47:28.429: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename webhook @ 05/04/24 12:47:28.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:47:28.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:47:28.45
  STEP: Setting up server cert @ 05/04/24 12:47:28.478
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/04/24 12:47:28.724
  STEP: Deploying the webhook pod @ 05/04/24 12:47:28.734
  STEP: Wait for the deployment to be ready @ 05/04/24 12:47:28.746
  May  4 12:47:28.754: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/04/24 12:47:30.767
  STEP: Verifying the service has paired with the endpoint @ 05/04/24 12:47:30.783
  May  4 12:47:31.783: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  May  4 12:47:31.791: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6236-crds.webhook.example.com via the AdmissionRegistration API @ 05/04/24 12:47:32.304
  STEP: Creating a custom resource while v1 is storage version @ 05/04/24 12:47:32.319
  STEP: Patching Custom Resource Definition to set v2 as storage @ 05/04/24 12:47:34.348
  STEP: Patching the custom resource while v2 is storage version @ 05/04/24 12:47:34.362
  May  4 12:47:34.956: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-391" for this suite. @ 05/04/24 12:47:34.959
  STEP: Destroying namespace "webhook-markers-1710" for this suite. @ 05/04/24 12:47:34.968
• [6.545 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1031
  STEP: Creating a kubernetes client @ 05/04/24 12:47:34.975
  May  4 12:47:34.975: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename statefulset @ 05/04/24 12:47:34.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:47:34.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:47:34.997
  STEP: Creating service test in namespace statefulset-3558 @ 05/04/24 12:47:35
  STEP: Creating statefulset ss in namespace statefulset-3558 @ 05/04/24 12:47:35.013
  May  4 12:47:35.028: INFO: Found 0 stateful pods, waiting for 1
  May  4 12:47:45.026: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 05/04/24 12:47:45.033
  STEP: Getting /status @ 05/04/24 12:47:45.042
  May  4 12:47:45.047: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 05/04/24 12:47:45.047
  May  4 12:47:45.057: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 05/04/24 12:47:45.057
  May  4 12:47:45.059: INFO: Observed &StatefulSet event: ADDED
  May  4 12:47:45.059: INFO: Found Statefulset ss in namespace statefulset-3558 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May  4 12:47:45.059: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 05/04/24 12:47:45.059
  May  4 12:47:45.060: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  May  4 12:47:45.067: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 05/04/24 12:47:45.067
  May  4 12:47:45.069: INFO: Observed &StatefulSet event: ADDED
  May  4 12:47:45.069: INFO: Deleting all statefulset in ns statefulset-3558
  May  4 12:47:45.071: INFO: Scaling statefulset ss to 0
  May  4 12:47:55.087: INFO: Waiting for statefulset status.replicas updated to 0
  May  4 12:47:55.090: INFO: Deleting statefulset ss
  May  4 12:47:55.102: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3558" for this suite. @ 05/04/24 12:47:55.106
• [20.140 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 05/04/24 12:47:55.115
  May  4 12:47:55.115: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename webhook @ 05/04/24 12:47:55.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:47:55.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:47:55.139
  STEP: Setting up server cert @ 05/04/24 12:47:55.165
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/04/24 12:47:55.357
  STEP: Deploying the webhook pod @ 05/04/24 12:47:55.362
  STEP: Wait for the deployment to be ready @ 05/04/24 12:47:55.373
  May  4 12:47:55.381: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/04/24 12:47:57.394
  STEP: Verifying the service has paired with the endpoint @ 05/04/24 12:47:57.406
  May  4 12:47:58.407: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 05/04/24 12:47:58.416
  STEP: create a pod that should be denied by the webhook @ 05/04/24 12:47:58.429
  STEP: create a pod that causes the webhook to hang @ 05/04/24 12:47:58.44
  STEP: create a configmap that should be denied by the webhook @ 05/04/24 12:48:08.448
  STEP: create a configmap that should be admitted by the webhook @ 05/04/24 12:48:08.479
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 05/04/24 12:48:08.486
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 05/04/24 12:48:08.495
  STEP: create a namespace that bypass the webhook @ 05/04/24 12:48:08.499
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 05/04/24 12:48:08.518
  May  4 12:48:08.570: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5485" for this suite. @ 05/04/24 12:48:08.575
  STEP: Destroying namespace "webhook-markers-5411" for this suite. @ 05/04/24 12:48:08.584
  STEP: Destroying namespace "exempted-namespace-9610" for this suite. @ 05/04/24 12:48:08.591
• [13.484 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 05/04/24 12:48:08.599
  May  4 12:48:08.600: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename configmap @ 05/04/24 12:48:08.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:48:08.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:48:08.62
  STEP: Creating configMap with name configmap-test-volume-map-04c03df5-d145-49b4-9dce-05e0f2557638 @ 05/04/24 12:48:08.622
  STEP: Creating a pod to test consume configMaps @ 05/04/24 12:48:08.628
  STEP: Saw pod success @ 05/04/24 12:48:12.655
  May  4 12:48:12.659: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-configmaps-80271fc3-10ba-407a-ae77-8003c6b3cbe5 container agnhost-container: <nil>
  STEP: delete the pod @ 05/04/24 12:48:12.667
  May  4 12:48:12.690: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3741" for this suite. @ 05/04/24 12:48:12.693
• [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 05/04/24 12:48:12.701
  May  4 12:48:12.701: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename init-container @ 05/04/24 12:48:12.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:48:12.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:48:12.723
  STEP: creating the pod @ 05/04/24 12:48:12.726
  May  4 12:48:12.726: INFO: PodSpec: initContainers in spec.initContainers
  May  4 12:48:15.718: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-397" for this suite. @ 05/04/24 12:48:15.722
• [3.026 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 05/04/24 12:48:15.727
  May  4 12:48:15.727: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/04/24 12:48:15.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:48:15.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:48:15.749
  STEP: set up a multi version CRD @ 05/04/24 12:48:15.752
  May  4 12:48:15.752: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: rename a version @ 05/04/24 12:48:18.905
  STEP: check the new version name is served @ 05/04/24 12:48:18.917
  STEP: check the old version name is removed @ 05/04/24 12:48:19.725
  STEP: check the other version is not changed @ 05/04/24 12:48:20.345
  May  4 12:48:22.760: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5632" for this suite. @ 05/04/24 12:48:22.768
• [7.050 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 05/04/24 12:48:22.777
  May  4 12:48:22.777: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename webhook @ 05/04/24 12:48:22.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:48:22.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:48:22.8
  STEP: Setting up server cert @ 05/04/24 12:48:22.829
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/04/24 12:48:22.975
  STEP: Deploying the webhook pod @ 05/04/24 12:48:22.985
  STEP: Wait for the deployment to be ready @ 05/04/24 12:48:22.999
  May  4 12:48:23.006: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/04/24 12:48:25.019
  STEP: Verifying the service has paired with the endpoint @ 05/04/24 12:48:25.03
  May  4 12:48:26.031: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 05/04/24 12:48:26.039
  STEP: create a configmap that should be updated by the webhook @ 05/04/24 12:48:26.053
  May  4 12:48:26.106: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2791" for this suite. @ 05/04/24 12:48:26.112
  STEP: Destroying namespace "webhook-markers-3318" for this suite. @ 05/04/24 12:48:26.12
• [3.348 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 05/04/24 12:48:26.126
  May  4 12:48:26.126: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename container-probe @ 05/04/24 12:48:26.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:48:26.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:48:26.145
  STEP: Creating pod busybox-272505f7-3488-4f1f-992f-3e6f81124142 in namespace container-probe-3339 @ 05/04/24 12:48:26.148
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/04/24 12:48:28.166
  May  4 12:48:28.169: INFO: Initial restart count of pod busybox-272505f7-3488-4f1f-992f-3e6f81124142 is 0
  May  4 12:48:28.174: INFO: Get pod busybox-272505f7-3488-4f1f-992f-3e6f81124142 in namespace container-probe-3339
  May  4 12:48:30.180: INFO: Get pod busybox-272505f7-3488-4f1f-992f-3e6f81124142 in namespace container-probe-3339
  May  4 12:48:32.184: INFO: Get pod busybox-272505f7-3488-4f1f-992f-3e6f81124142 in namespace container-probe-3339
  May  4 12:48:34.191: INFO: Get pod busybox-272505f7-3488-4f1f-992f-3e6f81124142 in namespace container-probe-3339
  May  4 12:48:36.197: INFO: Get pod busybox-272505f7-3488-4f1f-992f-3e6f81124142 in namespace container-probe-3339
  May  4 12:48:38.203: INFO: Get pod busybox-272505f7-3488-4f1f-992f-3e6f81124142 in namespace container-probe-3339
  May  4 12:48:40.209: INFO: Get pod busybox-272505f7-3488-4f1f-992f-3e6f81124142 in namespace container-probe-3339
  May  4 12:48:42.212: INFO: Get pod busybox-272505f7-3488-4f1f-992f-3e6f81124142 in namespace container-probe-3339
  May  4 12:48:44.218: INFO: Get pod busybox-272505f7-3488-4f1f-992f-3e6f81124142 in namespace container-probe-3339
  May  4 12:48:46.223: INFO: Get pod busybox-272505f7-3488-4f1f-992f-3e6f81124142 in namespace container-probe-3339
  May  4 12:48:48.230: INFO: Get pod busybox-272505f7-3488-4f1f-992f-3e6f81124142 in namespace container-probe-3339
  May  4 12:48:50.235: INFO: Get pod busybox-272505f7-3488-4f1f-992f-3e6f81124142 in namespace container-probe-3339
  May  4 12:48:52.240: INFO: Get pod busybox-272505f7-3488-4f1f-992f-3e6f81124142 in namespace container-probe-3339
  May  4 12:48:54.245: INFO: Get pod busybox-272505f7-3488-4f1f-992f-3e6f81124142 in namespace container-probe-3339
  May  4 12:48:56.249: INFO: Get pod busybox-272505f7-3488-4f1f-992f-3e6f81124142 in namespace container-probe-3339
  May  4 12:48:58.256: INFO: Get pod busybox-272505f7-3488-4f1f-992f-3e6f81124142 in namespace container-probe-3339
  May  4 12:49:00.262: INFO: Get pod busybox-272505f7-3488-4f1f-992f-3e6f81124142 in namespace container-probe-3339
  May  4 12:49:02.267: INFO: Get pod busybox-272505f7-3488-4f1f-992f-3e6f81124142 in namespace container-probe-3339
  May  4 12:49:04.276: INFO: Get pod busybox-272505f7-3488-4f1f-992f-3e6f81124142 in namespace container-probe-3339
  May  4 12:49:06.281: INFO: Get pod busybox-272505f7-3488-4f1f-992f-3e6f81124142 in namespace container-probe-3339
  May  4 12:49:08.288: INFO: Get pod busybox-272505f7-3488-4f1f-992f-3e6f81124142 in namespace container-probe-3339
  May  4 12:49:10.293: INFO: Get pod busybox-272505f7-3488-4f1f-992f-3e6f81124142 in namespace container-probe-3339
  May  4 12:49:12.297: INFO: Get pod busybox-272505f7-3488-4f1f-992f-3e6f81124142 in namespace container-probe-3339
  May  4 12:49:14.303: INFO: Get pod busybox-272505f7-3488-4f1f-992f-3e6f81124142 in namespace container-probe-3339
  May  4 12:49:16.308: INFO: Get pod busybox-272505f7-3488-4f1f-992f-3e6f81124142 in namespace container-probe-3339
  May  4 12:49:18.315: INFO: Get pod busybox-272505f7-3488-4f1f-992f-3e6f81124142 in namespace container-probe-3339
  May  4 12:49:18.315: INFO: Restart count of pod container-probe-3339/busybox-272505f7-3488-4f1f-992f-3e6f81124142 is now 1 (50.146124361s elapsed)
  STEP: deleting the pod @ 05/04/24 12:49:18.315
  May  4 12:49:18.336: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3339" for this suite. @ 05/04/24 12:49:18.344
• [52.226 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 05/04/24 12:49:18.352
  May  4 12:49:18.352: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename containers @ 05/04/24 12:49:18.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:49:18.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:49:18.374
  STEP: Creating a pod to test override all @ 05/04/24 12:49:18.377
  STEP: Saw pod success @ 05/04/24 12:49:22.407
  May  4 12:49:22.410: INFO: Trying to get logs from node ip-172-31-18-228 pod client-containers-14b5b3d9-882b-4d98-9737-1b0400c7f45c container agnhost-container: <nil>
  STEP: delete the pod @ 05/04/24 12:49:22.418
  May  4 12:49:22.435: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8232" for this suite. @ 05/04/24 12:49:22.438
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:784
  STEP: Creating a kubernetes client @ 05/04/24 12:49:22.449
  May  4 12:49:22.449: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename job @ 05/04/24 12:49:22.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:49:22.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:49:22.471
  STEP: Creating a job @ 05/04/24 12:49:22.476
  STEP: Ensure pods equal to parallelism count is attached to the job @ 05/04/24 12:49:22.483
  STEP: patching /status @ 05/04/24 12:49:24.49
  STEP: updating /status @ 05/04/24 12:49:24.496
  STEP: get /status @ 05/04/24 12:49:24.505
  May  4 12:49:24.508: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6137" for this suite. @ 05/04/24 12:49:24.513
• [2.070 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 05/04/24 12:49:24.519
  May  4 12:49:24.519: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename webhook @ 05/04/24 12:49:24.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:49:24.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:49:24.54
  STEP: Setting up server cert @ 05/04/24 12:49:24.567
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/04/24 12:49:24.802
  STEP: Deploying the webhook pod @ 05/04/24 12:49:24.815
  STEP: Wait for the deployment to be ready @ 05/04/24 12:49:24.83
  May  4 12:49:24.840: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/04/24 12:49:26.852
  STEP: Verifying the service has paired with the endpoint @ 05/04/24 12:49:26.865
  May  4 12:49:27.866: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 05/04/24 12:49:27.875
  STEP: create a pod @ 05/04/24 12:49:27.887
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 05/04/24 12:49:29.902
  May  4 12:49:29.902: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=webhook-6759 attach --namespace=webhook-6759 to-be-attached-pod -i -c=container1'
  May  4 12:49:29.953: INFO: rc: 1
  May  4 12:49:30.001: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6759" for this suite. @ 05/04/24 12:49:30.009
  STEP: Destroying namespace "webhook-markers-19" for this suite. @ 05/04/24 12:49:30.015
• [5.504 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1538
  STEP: Creating a kubernetes client @ 05/04/24 12:49:30.024
  May  4 12:49:30.024: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename kubectl @ 05/04/24 12:49:30.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:49:30.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:49:30.045
  STEP: creating Agnhost RC @ 05/04/24 12:49:30.047
  May  4 12:49:30.047: INFO: namespace kubectl-7258
  May  4 12:49:30.048: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-7258 create -f -'
  May  4 12:49:30.171: INFO: stderr: ""
  May  4 12:49:30.171: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/04/24 12:49:30.171
  May  4 12:49:31.176: INFO: Selector matched 1 pods for map[app:agnhost]
  May  4 12:49:31.176: INFO: Found 0 / 1
  May  4 12:49:32.177: INFO: Selector matched 1 pods for map[app:agnhost]
  May  4 12:49:32.177: INFO: Found 1 / 1
  May  4 12:49:32.177: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  May  4 12:49:32.182: INFO: Selector matched 1 pods for map[app:agnhost]
  May  4 12:49:32.182: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  May  4 12:49:32.182: INFO: wait on agnhost-primary startup in kubectl-7258 
  May  4 12:49:32.182: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-7258 logs agnhost-primary-v4rz9 agnhost-primary'
  May  4 12:49:32.238: INFO: stderr: ""
  May  4 12:49:32.238: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 05/04/24 12:49:32.238
  May  4 12:49:32.238: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-7258 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  May  4 12:49:32.300: INFO: stderr: ""
  May  4 12:49:32.300: INFO: stdout: "service/rm2 exposed\n"
  May  4 12:49:32.306: INFO: Service rm2 in namespace kubectl-7258 found.
  STEP: exposing service @ 05/04/24 12:49:34.315
  May  4 12:49:34.315: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-7258 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  May  4 12:49:34.374: INFO: stderr: ""
  May  4 12:49:34.374: INFO: stdout: "service/rm3 exposed\n"
  May  4 12:49:34.379: INFO: Service rm3 in namespace kubectl-7258 found.
  May  4 12:49:36.389: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7258" for this suite. @ 05/04/24 12:49:36.393
• [6.378 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 05/04/24 12:49:36.401
  May  4 12:49:36.402: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename disruption @ 05/04/24 12:49:36.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:49:36.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:49:36.423
  STEP: Waiting for the pdb to be processed @ 05/04/24 12:49:36.431
  STEP: Updating PodDisruptionBudget status @ 05/04/24 12:49:38.435
  STEP: Waiting for all pods to be running @ 05/04/24 12:49:38.445
  May  4 12:49:38.449: INFO: running pods: 0 < 1
  STEP: locating a running pod @ 05/04/24 12:49:40.45
  STEP: Waiting for the pdb to be processed @ 05/04/24 12:49:40.461
  STEP: Patching PodDisruptionBudget status @ 05/04/24 12:49:40.469
  STEP: Waiting for the pdb to be processed @ 05/04/24 12:49:40.477
  May  4 12:49:40.486: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-52" for this suite. @ 05/04/24 12:49:40.489
• [4.097 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 05/04/24 12:49:40.499
  May  4 12:49:40.499: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/04/24 12:49:40.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:49:40.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:49:40.521
  May  4 12:49:40.525: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/04/24 12:49:41.798
  May  4 12:49:41.798: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=crd-publish-openapi-9294 --namespace=crd-publish-openapi-9294 create -f -'
  May  4 12:49:43.857: INFO: stderr: ""
  May  4 12:49:43.857: INFO: stdout: "e2e-test-crd-publish-openapi-272-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  May  4 12:49:43.857: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=crd-publish-openapi-9294 --namespace=crd-publish-openapi-9294 delete e2e-test-crd-publish-openapi-272-crds test-cr'
  May  4 12:49:43.907: INFO: stderr: ""
  May  4 12:49:43.907: INFO: stdout: "e2e-test-crd-publish-openapi-272-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  May  4 12:49:43.907: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=crd-publish-openapi-9294 --namespace=crd-publish-openapi-9294 apply -f -'
  May  4 12:49:43.964: INFO: stderr: ""
  May  4 12:49:43.964: INFO: stdout: "e2e-test-crd-publish-openapi-272-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  May  4 12:49:43.964: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=crd-publish-openapi-9294 --namespace=crd-publish-openapi-9294 delete e2e-test-crd-publish-openapi-272-crds test-cr'
  May  4 12:49:44.023: INFO: stderr: ""
  May  4 12:49:44.023: INFO: stdout: "e2e-test-crd-publish-openapi-272-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 05/04/24 12:49:44.023
  May  4 12:49:44.023: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=crd-publish-openapi-9294 explain e2e-test-crd-publish-openapi-272-crds'
  May  4 12:49:44.065: INFO: stderr: ""
  May  4 12:49:44.065: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-272-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  May  4 12:49:45.312: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9294" for this suite. @ 05/04/24 12:49:45.32
• [4.828 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 05/04/24 12:49:45.327
  May  4 12:49:45.327: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename resourcequota @ 05/04/24 12:49:45.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:49:45.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:49:45.345
  STEP: Counting existing ResourceQuota @ 05/04/24 12:49:45.351
  STEP: Creating a ResourceQuota @ 05/04/24 12:49:50.353
  STEP: Ensuring resource quota status is calculated @ 05/04/24 12:49:50.36
  STEP: Creating a ReplicaSet @ 05/04/24 12:49:52.364
  STEP: Ensuring resource quota status captures replicaset creation @ 05/04/24 12:49:52.376
  STEP: Deleting a ReplicaSet @ 05/04/24 12:49:54.382
  STEP: Ensuring resource quota status released usage @ 05/04/24 12:49:54.39
  May  4 12:49:56.393: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3910" for this suite. @ 05/04/24 12:49:56.4
• [11.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 05/04/24 12:49:56.409
  May  4 12:49:56.409: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename resourcequota @ 05/04/24 12:49:56.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:49:56.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:49:56.429
  STEP: Creating a ResourceQuota with best effort scope @ 05/04/24 12:49:56.432
  STEP: Ensuring ResourceQuota status is calculated @ 05/04/24 12:49:56.436
  STEP: Creating a ResourceQuota with not best effort scope @ 05/04/24 12:49:58.442
  STEP: Ensuring ResourceQuota status is calculated @ 05/04/24 12:49:58.448
  STEP: Creating a best-effort pod @ 05/04/24 12:50:00.455
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 05/04/24 12:50:00.469
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 05/04/24 12:50:02.475
  STEP: Deleting the pod @ 05/04/24 12:50:04.479
  STEP: Ensuring resource quota status released the pod usage @ 05/04/24 12:50:04.494
  STEP: Creating a not best-effort pod @ 05/04/24 12:50:06.499
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 05/04/24 12:50:06.508
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 05/04/24 12:50:08.514
  STEP: Deleting the pod @ 05/04/24 12:50:10.52
  STEP: Ensuring resource quota status released the pod usage @ 05/04/24 12:50:10.538
  May  4 12:50:12.544: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9058" for this suite. @ 05/04/24 12:50:12.549
• [16.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 05/04/24 12:50:12.557
  May  4 12:50:12.557: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename dns @ 05/04/24 12:50:12.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:50:12.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:50:12.575
  STEP: Creating a test headless service @ 05/04/24 12:50:12.578
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9108.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-9108.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9108.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9108.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-9108.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-9108.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-9108.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-9108.svc.cluster.local;sleep 1; done
   @ 05/04/24 12:50:12.583
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9108.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-9108.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9108.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-9108.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-9108.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-9108.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-9108.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-9108.svc.cluster.local;sleep 1; done
   @ 05/04/24 12:50:12.583
  STEP: creating a pod to probe DNS @ 05/04/24 12:50:12.583
  STEP: submitting the pod to kubernetes @ 05/04/24 12:50:12.583
  STEP: retrieving the pod @ 05/04/24 12:50:14.608
  STEP: looking for the results for each expected name from probers @ 05/04/24 12:50:14.613
  May  4 12:50:14.618: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-9108.svc.cluster.local from pod dns-9108/dns-test-b75d607c-531c-4763-b7da-eb4fb599c983: the server could not find the requested resource (get pods dns-test-b75d607c-531c-4763-b7da-eb4fb599c983)
  May  4 12:50:14.622: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9108.svc.cluster.local from pod dns-9108/dns-test-b75d607c-531c-4763-b7da-eb4fb599c983: the server could not find the requested resource (get pods dns-test-b75d607c-531c-4763-b7da-eb4fb599c983)
  May  4 12:50:14.627: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-9108.svc.cluster.local from pod dns-9108/dns-test-b75d607c-531c-4763-b7da-eb4fb599c983: the server could not find the requested resource (get pods dns-test-b75d607c-531c-4763-b7da-eb4fb599c983)
  May  4 12:50:14.632: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-9108.svc.cluster.local from pod dns-9108/dns-test-b75d607c-531c-4763-b7da-eb4fb599c983: the server could not find the requested resource (get pods dns-test-b75d607c-531c-4763-b7da-eb4fb599c983)
  May  4 12:50:14.635: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9108.svc.cluster.local from pod dns-9108/dns-test-b75d607c-531c-4763-b7da-eb4fb599c983: the server could not find the requested resource (get pods dns-test-b75d607c-531c-4763-b7da-eb4fb599c983)
  May  4 12:50:14.639: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9108.svc.cluster.local from pod dns-9108/dns-test-b75d607c-531c-4763-b7da-eb4fb599c983: the server could not find the requested resource (get pods dns-test-b75d607c-531c-4763-b7da-eb4fb599c983)
  May  4 12:50:14.643: INFO: Unable to read jessie_udp@dns-test-service-2.dns-9108.svc.cluster.local from pod dns-9108/dns-test-b75d607c-531c-4763-b7da-eb4fb599c983: the server could not find the requested resource (get pods dns-test-b75d607c-531c-4763-b7da-eb4fb599c983)
  May  4 12:50:14.646: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-9108.svc.cluster.local from pod dns-9108/dns-test-b75d607c-531c-4763-b7da-eb4fb599c983: the server could not find the requested resource (get pods dns-test-b75d607c-531c-4763-b7da-eb4fb599c983)
  May  4 12:50:14.646: INFO: Lookups using dns-9108/dns-test-b75d607c-531c-4763-b7da-eb4fb599c983 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-9108.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9108.svc.cluster.local wheezy_udp@dns-test-service-2.dns-9108.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-9108.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9108.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9108.svc.cluster.local jessie_udp@dns-test-service-2.dns-9108.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9108.svc.cluster.local]

  May  4 12:50:14.658: INFO: Pod client logs for webserver: 
  May  4 12:50:14.663: INFO: Pod client logs for querier: 
  May  4 12:50:14.671: INFO: Pod client logs for jessie-querier: 
  May  4 12:50:19.645: INFO: DNS probes using dns-9108/dns-test-b75d607c-531c-4763-b7da-eb4fb599c983 succeeded

  STEP: deleting the pod @ 05/04/24 12:50:19.646
  STEP: deleting the test headless service @ 05/04/24 12:50:19.664
  May  4 12:50:19.678: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9108" for this suite. @ 05/04/24 12:50:19.684
• [7.136 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 05/04/24 12:50:19.692
  May  4 12:50:19.692: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename webhook @ 05/04/24 12:50:19.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:50:19.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:50:19.708
  STEP: Setting up server cert @ 05/04/24 12:50:19.729
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/04/24 12:50:19.887
  STEP: Deploying the webhook pod @ 05/04/24 12:50:19.896
  STEP: Wait for the deployment to be ready @ 05/04/24 12:50:19.91
  May  4 12:50:19.928: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/04/24 12:50:21.938
  STEP: Verifying the service has paired with the endpoint @ 05/04/24 12:50:21.947
  May  4 12:50:22.948: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 05/04/24 12:50:23.022
  STEP: Creating a configMap that should be mutated @ 05/04/24 12:50:23.03
  STEP: Deleting the collection of validation webhooks @ 05/04/24 12:50:23.053
  STEP: Creating a configMap that should not be mutated @ 05/04/24 12:50:23.105
  May  4 12:50:23.156: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3007" for this suite. @ 05/04/24 12:50:23.16
  STEP: Destroying namespace "webhook-markers-9901" for this suite. @ 05/04/24 12:50:23.167
• [3.482 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 05/04/24 12:50:23.175
  May  4 12:50:23.175: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename aggregator @ 05/04/24 12:50:23.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:50:23.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:50:23.19
  May  4 12:50:23.193: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Registering the sample API server. @ 05/04/24 12:50:23.194
  May  4 12:50:23.524: INFO: Found ClusterRoles; assuming RBAC is enabled.
  May  4 12:50:23.557: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
  May  4 12:50:25.603: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May  4 12:50:27.608: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May  4 12:50:29.609: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May  4 12:50:31.608: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May  4 12:50:33.608: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May  4 12:50:35.609: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May  4 12:50:37.609: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May  4 12:50:39.608: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May  4 12:50:41.609: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May  4 12:50:43.609: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May  4 12:50:45.607: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May  4 12:50:47.609: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 4, 12, 50, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  May  4 12:50:49.729: INFO: Waited 114.025738ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 05/04/24 12:50:49.758
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 05/04/24 12:50:49.762
  STEP: List APIServices @ 05/04/24 12:50:49.77
  May  4 12:50:49.775: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 05/04/24 12:50:49.775
  May  4 12:50:49.788: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 05/04/24 12:50:49.788
  May  4 12:50:49.797: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.May, 4, 12, 50, 49, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 05/04/24 12:50:49.797
  May  4 12:50:49.801: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-05-04 12:50:49 +0000 UTC Passed all checks passed}
  May  4 12:50:49.801: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May  4 12:50:49.801: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 05/04/24 12:50:49.801
  May  4 12:50:49.812: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1532642649" @ 05/04/24 12:50:49.812
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 05/04/24 12:50:49.82
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 05/04/24 12:50:49.825
  STEP: Patch APIService Status @ 05/04/24 12:50:49.83
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 05/04/24 12:50:49.837
  May  4 12:50:49.840: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-05-04 12:50:49 +0000 UTC Passed all checks passed}
  May  4 12:50:49.840: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May  4 12:50:49.840: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  May  4 12:50:49.840: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 05/04/24 12:50:49.841
  STEP: Confirm that the generated APIService has been deleted @ 05/04/24 12:50:49.851
  May  4 12:50:49.851: INFO: Requesting list of APIServices to confirm quantity
  May  4 12:50:49.856: INFO: Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  May  4 12:50:49.856: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  May  4 12:50:49.963: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-7735" for this suite. @ 05/04/24 12:50:49.967
• [26.798 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 05/04/24 12:50:49.973
  May  4 12:50:49.973: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename chunking @ 05/04/24 12:50:49.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:50:49.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:50:49.992
  STEP: creating a large number of resources @ 05/04/24 12:50:49.995
  STEP: retrieving the first page @ 05/04/24 12:51:07.681
  May  4 12:51:07.729: INFO: Retrieved 40/40 results with rv 22165 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNjUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 05/04/24 12:51:07.729
  May  4 12:51:27.738: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNjUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May  4 12:51:47.736: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNjUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May  4 12:52:07.736: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNjUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May  4 12:52:27.735: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNjUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May  4 12:52:47.736: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNjUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May  4 12:53:07.735: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNjUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May  4 12:53:27.733: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNjUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May  4 12:53:47.738: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNjUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May  4 12:54:07.737: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNjUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May  4 12:54:27.736: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNjUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May  4 12:54:47.738: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNjUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May  4 12:55:07.736: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNjUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May  4 12:55:27.736: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNjUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May  4 12:55:47.737: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNjUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May  4 12:56:07.736: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNjUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May  4 12:56:27.736: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNjUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May  4 12:56:47.736: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNjUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May  4 12:57:07.735: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNjUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May  4 12:57:27.735: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNjUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May  4 12:57:47.738: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNjUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May  4 12:58:07.737: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNjUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May  4 12:58:27.735: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNjUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May  4 12:58:47.738: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNjUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May  4 12:59:07.737: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNjUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  May  4 12:59:27.736: INFO: got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  May  4 12:59:27.736: INFO: Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 05/04/24 12:59:27.736
  STEP: retrieving all remaining pages @ 05/04/24 12:59:27.74
  May  4 12:59:27.743: INFO: Retrieved 40/40 results with rv 23129 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjMxMjksInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  May  4 12:59:27.748: INFO: Retrieved 40/40 results with rv 23129 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjMxMjksInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  May  4 12:59:27.752: INFO: Retrieved 40/40 results with rv 23129 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjMxMjksInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  May  4 12:59:27.755: INFO: Retrieved 40/40 results with rv 23129 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjMxMjksInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  May  4 12:59:27.759: INFO: Retrieved 40/40 results with rv 23129 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjMxMjksInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  May  4 12:59:27.764: INFO: Retrieved 40/40 results with rv 23129 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjMxMjksInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  May  4 12:59:27.767: INFO: Retrieved 40/40 results with rv 23129 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjMxMjksInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  May  4 12:59:27.772: INFO: Retrieved 40/40 results with rv 23129 and continue 
  May  4 12:59:27.772: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-3950" for this suite. @ 05/04/24 12:59:27.776
• [517.808 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 05/04/24 12:59:27.782
  May  4 12:59:27.782: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename proxy @ 05/04/24 12:59:27.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:59:27.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:59:27.803
  May  4 12:59:27.806: INFO: Creating pod...
  May  4 12:59:29.822: INFO: Creating service...
  May  4 12:59:29.834: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5561/pods/agnhost/proxy?method=DELETE
  May  4 12:59:29.844: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  May  4 12:59:29.844: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5561/pods/agnhost/proxy?method=OPTIONS
  May  4 12:59:29.849: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  May  4 12:59:29.849: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5561/pods/agnhost/proxy?method=PATCH
  May  4 12:59:29.855: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  May  4 12:59:29.855: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5561/pods/agnhost/proxy?method=POST
  May  4 12:59:29.859: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  May  4 12:59:29.859: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5561/pods/agnhost/proxy?method=PUT
  May  4 12:59:29.863: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  May  4 12:59:29.863: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5561/services/e2e-proxy-test-service/proxy?method=DELETE
  May  4 12:59:29.869: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  May  4 12:59:29.869: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5561/services/e2e-proxy-test-service/proxy?method=OPTIONS
  May  4 12:59:29.875: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  May  4 12:59:29.875: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5561/services/e2e-proxy-test-service/proxy?method=PATCH
  May  4 12:59:29.880: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  May  4 12:59:29.880: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5561/services/e2e-proxy-test-service/proxy?method=POST
  May  4 12:59:29.886: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  May  4 12:59:29.886: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5561/services/e2e-proxy-test-service/proxy?method=PUT
  May  4 12:59:29.892: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  May  4 12:59:29.892: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5561/pods/agnhost/proxy?method=GET
  May  4 12:59:29.895: INFO: http.Client request:GET StatusCode:301
  May  4 12:59:29.895: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5561/services/e2e-proxy-test-service/proxy?method=GET
  May  4 12:59:29.898: INFO: http.Client request:GET StatusCode:301
  May  4 12:59:29.898: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5561/pods/agnhost/proxy?method=HEAD
  May  4 12:59:29.902: INFO: http.Client request:HEAD StatusCode:301
  May  4 12:59:29.902: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5561/services/e2e-proxy-test-service/proxy?method=HEAD
  May  4 12:59:29.908: INFO: http.Client request:HEAD StatusCode:301
  May  4 12:59:29.908: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5561" for this suite. @ 05/04/24 12:59:29.913
• [2.138 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:349
  STEP: Creating a kubernetes client @ 05/04/24 12:59:29.921
  May  4 12:59:29.921: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename security-context-test @ 05/04/24 12:59:29.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:59:29.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:59:29.937
  May  4 12:59:33.967: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8303" for this suite. @ 05/04/24 12:59:33.971
• [4.058 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3565
  STEP: Creating a kubernetes client @ 05/04/24 12:59:33.979
  May  4 12:59:33.979: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename services @ 05/04/24 12:59:33.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:59:33.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:59:33.995
  STEP: creating a collection of services @ 05/04/24 12:59:33.997
  May  4 12:59:33.997: INFO: Creating e2e-svc-a-jsztr
  May  4 12:59:34.011: INFO: Creating e2e-svc-b-6n5k5
  May  4 12:59:34.029: INFO: Creating e2e-svc-c-k4dpz
  STEP: deleting service collection @ 05/04/24 12:59:34.044
  May  4 12:59:34.080: INFO: Collection of services has been deleted
  May  4 12:59:34.080: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9248" for this suite. @ 05/04/24 12:59:34.085
• [0.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 05/04/24 12:59:34.093
  May  4 12:59:34.093: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename deployment @ 05/04/24 12:59:34.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:59:34.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:59:34.115
  May  4 12:59:34.130: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  May  4 12:59:39.134: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/04/24 12:59:39.134
  May  4 12:59:39.134: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 05/04/24 12:59:39.146
  May  4 12:59:39.158: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5409",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2e6a8ab2-9cf3-45ba-82fb-35b7b202ba9f",
      ResourceVersion: (string) (len=5) "23668",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850424379,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850424379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  May  4 12:59:39.162: INFO: New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  May  4 12:59:39.169: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5409" for this suite. @ 05/04/24 12:59:39.173
• [5.090 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1863
  STEP: Creating a kubernetes client @ 05/04/24 12:59:39.184
  May  4 12:59:39.184: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename kubectl @ 05/04/24 12:59:39.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:59:39.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:59:39.209
  STEP: Starting the proxy @ 05/04/24 12:59:39.212
  May  4 12:59:39.212: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-4074 proxy --unix-socket=/tmp/kubectl-proxy-unix4272308053/test'
  STEP: retrieving proxy /api/ output @ 05/04/24 12:59:39.28
  May  4 12:59:39.281: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4074" for this suite. @ 05/04/24 12:59:39.286
• [0.113 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 05/04/24 12:59:39.298
  May  4 12:59:39.298: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename pods @ 05/04/24 12:59:39.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:59:39.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:59:39.319
  May  4 12:59:39.322: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: creating the pod @ 05/04/24 12:59:39.323
  STEP: submitting the pod to kubernetes @ 05/04/24 12:59:39.323
  May  4 12:59:41.359: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1805" for this suite. @ 05/04/24 12:59:41.364
• [2.075 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 05/04/24 12:59:41.373
  May  4 12:59:41.373: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename container-runtime @ 05/04/24 12:59:41.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 12:59:41.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 12:59:41.39
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 05/04/24 12:59:41.404
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 05/04/24 12:59:57.488
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 05/04/24 12:59:57.493
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 05/04/24 12:59:57.498
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 05/04/24 12:59:57.498
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 05/04/24 12:59:57.524
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 05/04/24 13:00:00.544
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 05/04/24 13:00:01.551
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 05/04/24 13:00:01.559
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 05/04/24 13:00:01.559
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 05/04/24 13:00:01.584
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 05/04/24 13:00:02.597
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 05/04/24 13:00:04.614
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 05/04/24 13:00:04.621
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 05/04/24 13:00:04.621
  May  4 13:00:04.649: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5972" for this suite. @ 05/04/24 13:00:04.653
• [23.287 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:344
  STEP: Creating a kubernetes client @ 05/04/24 13:00:04.66
  May  4 13:00:04.660: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename kubectl @ 05/04/24 13:00:04.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:00:04.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:00:04.681
  STEP: creating a replication controller @ 05/04/24 13:00:04.683
  May  4 13:00:04.683: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-3674 create -f -'
  May  4 13:00:04.771: INFO: stderr: ""
  May  4 13:00:04.771: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/04/24 13:00:04.771
  May  4 13:00:04.771: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-3674 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May  4 13:00:04.821: INFO: stderr: ""
  May  4 13:00:04.821: INFO: stdout: "update-demo-nautilus-2ncns update-demo-nautilus-dgcvr "
  May  4 13:00:04.821: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-3674 get pods update-demo-nautilus-2ncns -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May  4 13:00:04.865: INFO: stderr: ""
  May  4 13:00:04.865: INFO: stdout: ""
  May  4 13:00:04.865: INFO: update-demo-nautilus-2ncns is created but not running
  May  4 13:00:09.866: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-3674 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May  4 13:00:09.911: INFO: stderr: ""
  May  4 13:00:09.911: INFO: stdout: "update-demo-nautilus-2ncns update-demo-nautilus-dgcvr "
  May  4 13:00:09.911: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-3674 get pods update-demo-nautilus-2ncns -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May  4 13:00:09.959: INFO: stderr: ""
  May  4 13:00:09.959: INFO: stdout: "true"
  May  4 13:00:09.959: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-3674 get pods update-demo-nautilus-2ncns -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May  4 13:00:10.006: INFO: stderr: ""
  May  4 13:00:10.006: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May  4 13:00:10.006: INFO: validating pod update-demo-nautilus-2ncns
  May  4 13:00:10.013: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May  4 13:00:10.013: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May  4 13:00:10.013: INFO: update-demo-nautilus-2ncns is verified up and running
  May  4 13:00:10.013: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-3674 get pods update-demo-nautilus-dgcvr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May  4 13:00:10.058: INFO: stderr: ""
  May  4 13:00:10.058: INFO: stdout: "true"
  May  4 13:00:10.059: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-3674 get pods update-demo-nautilus-dgcvr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May  4 13:00:10.102: INFO: stderr: ""
  May  4 13:00:10.102: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May  4 13:00:10.102: INFO: validating pod update-demo-nautilus-dgcvr
  May  4 13:00:10.109: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May  4 13:00:10.109: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May  4 13:00:10.109: INFO: update-demo-nautilus-dgcvr is verified up and running
  STEP: using delete to clean up resources @ 05/04/24 13:00:10.109
  May  4 13:00:10.109: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-3674 delete --grace-period=0 --force -f -'
  May  4 13:00:10.158: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May  4 13:00:10.158: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  May  4 13:00:10.158: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-3674 get rc,svc -l name=update-demo --no-headers'
  May  4 13:00:10.256: INFO: stderr: "No resources found in kubectl-3674 namespace.\n"
  May  4 13:00:10.256: INFO: stdout: ""
  May  4 13:00:10.256: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-3674 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  May  4 13:00:10.355: INFO: stderr: ""
  May  4 13:00:10.355: INFO: stdout: ""
  May  4 13:00:10.355: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3674" for this suite. @ 05/04/24 13:00:10.361
• [5.709 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 05/04/24 13:00:10.374
  May  4 13:00:10.374: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename deployment @ 05/04/24 13:00:10.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:00:10.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:00:10.403
  May  4 13:00:10.407: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  May  4 13:00:10.417: INFO: Pod name sample-pod: Found 0 pods out of 1
  May  4 13:00:15.423: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/04/24 13:00:15.423
  May  4 13:00:15.423: INFO: Creating deployment "test-rolling-update-deployment"
  May  4 13:00:15.429: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  May  4 13:00:15.436: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  May  4 13:00:17.446: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  May  4 13:00:17.449: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  May  4 13:00:17.459: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2772",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "28f6248e-63d1-41b5-a983-a0042457e398",
      ResourceVersion: (string) (len=5) "24046",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850424415,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850424415,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850424416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850424415,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850424415,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850424416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850424415,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-7ddb77f68b\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May  4 13:00:17.464: INFO: New ReplicaSet "test-rolling-update-deployment-7ddb77f68b" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2772",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2f47f86c-2977-4d88-bc13-6355301f89b6",
      ResourceVersion: (string) (len=5) "24036",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850424415,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "28f6248e-63d1-41b5-a983-a0042457e398",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850424415,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 38 66 36 32 34  38 65 2d 36 33 64 31 2d  |\"28f6248e-63d1-|
              00000120  34 31 62 35 2d 61 39 38  33 2d 61 30 30 34 32 34  |41b5-a983-a00424|
              00000130  35 37 65 33 39 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |57e398\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850424416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May  4 13:00:17.465: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  May  4 13:00:17.465: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2772",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f04c93e8-bb3a-4450-af28-fa5764eb96d4",
      ResourceVersion: (string) (len=5) "24045",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850424410,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "28f6248e-63d1-41b5-a983-a0042457e398",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850424410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850424416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 32 38 66 36 32 34 38  |"uid\":\"28f6248|
              000000b0  65 2d 36 33 64 31 2d 34  31 62 35 2d 61 39 38 33  |e-63d1-41b5-a983|
              000000c0  2d 61 30 30 34 32 34 35  37 65 33 39 38 5c 22 7d  |-a0042457e398\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850424416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May  4 13:00:17.469: INFO: Pod "test-rolling-update-deployment-7ddb77f68b-nk2lz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-7ddb77f68b-nk2lz",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-7ddb77f68b-",
      Namespace: (string) (len=15) "deployment-2772",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "243a6069-4d1d-4a8b-83ce-78e77a151989",
      ResourceVersion: (string) (len=5) "24035",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850424415,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
          UID: (types.UID) (len=36) "2f47f86c-2977-4d88-bc13-6355301f89b6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850424415,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  34 37 66 38 36 63 2d 32  |d\":\"2f47f86c-2|
              00000090  39 37 37 2d 34 64 38 38  2d 62 63 31 33 2d 36 33  |977-4d88-bc13-63|
              000000a0  35 35 33 30 31 66 38 39  62 36 5c 22 7d 22 3a 7b  |55301f89b6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850424416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 34  39 2e 34 33 5c 22 7d 22  |2.168.149.43\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h5hk5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h5hk5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-18-228",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850424416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850424415,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850424416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850424416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850424415,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.18.228",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.18.228"
        }
      },
      PodIP: (string) (len=14) "192.168.149.43",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.149.43"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850424415,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850424416,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://7b2d850f01a97843479715729fd30838b896b0c9e169df3a3c63d385d6c0a4fd",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  4 13:00:17.470: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2772" for this suite. @ 05/04/24 13:00:17.475
• [7.107 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 05/04/24 13:00:17.481
  May  4 13:00:17.481: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename events @ 05/04/24 13:00:17.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:00:17.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:00:17.501
  STEP: creating a test event @ 05/04/24 13:00:17.503
  STEP: listing events in all namespaces @ 05/04/24 13:00:17.51
  STEP: listing events in test namespace @ 05/04/24 13:00:17.52
  STEP: listing events with field selection filtering on source @ 05/04/24 13:00:17.525
  STEP: listing events with field selection filtering on reportingController @ 05/04/24 13:00:17.529
  STEP: getting the test event @ 05/04/24 13:00:17.533
  STEP: patching the test event @ 05/04/24 13:00:17.535
  STEP: getting the test event @ 05/04/24 13:00:17.547
  STEP: updating the test event @ 05/04/24 13:00:17.55
  STEP: getting the test event @ 05/04/24 13:00:17.557
  STEP: deleting the test event @ 05/04/24 13:00:17.56
  STEP: listing events in all namespaces @ 05/04/24 13:00:17.569
  STEP: listing events in test namespace @ 05/04/24 13:00:17.582
  May  4 13:00:17.586: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2809" for this suite. @ 05/04/24 13:00:17.589
• [0.116 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 05/04/24 13:00:17.597
  May  4 13:00:17.597: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename sched-preemption @ 05/04/24 13:00:17.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:00:17.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:00:17.615
  May  4 13:00:17.631: INFO: Waiting up to 1m0s for all nodes to be ready
  May  4 13:01:17.637: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 05/04/24 13:01:17.642
  May  4 13:01:17.663: INFO: Created pod: pod0-0-sched-preemption-low-priority
  May  4 13:01:17.674: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  May  4 13:01:17.691: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  May  4 13:01:17.699: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  May  4 13:01:17.717: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  May  4 13:01:17.728: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 05/04/24 13:01:17.728
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 05/04/24 13:01:19.759
  May  4 13:01:23.845: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4475" for this suite. @ 05/04/24 13:01:23.85
• [66.260 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 05/04/24 13:01:23.858
  May  4 13:01:23.858: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename subpath @ 05/04/24 13:01:23.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:01:23.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:01:23.882
  STEP: Setting up data @ 05/04/24 13:01:23.884
  STEP: Creating pod pod-subpath-test-projected-2ssg @ 05/04/24 13:01:23.893
  STEP: Creating a pod to test atomic-volume-subpath @ 05/04/24 13:01:23.893
  STEP: Saw pod success @ 05/04/24 13:01:47.976
  May  4 13:01:47.980: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-subpath-test-projected-2ssg container test-container-subpath-projected-2ssg: <nil>
  STEP: delete the pod @ 05/04/24 13:01:47.993
  STEP: Deleting pod pod-subpath-test-projected-2ssg @ 05/04/24 13:01:48.014
  May  4 13:01:48.015: INFO: Deleting pod "pod-subpath-test-projected-2ssg" in namespace "subpath-2846"
  May  4 13:01:48.017: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2846" for this suite. @ 05/04/24 13:01:48.023
• [24.176 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 05/04/24 13:01:48.035
  May  4 13:01:48.035: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename webhook @ 05/04/24 13:01:48.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:01:48.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:01:48.056
  STEP: Setting up server cert @ 05/04/24 13:01:48.081
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/04/24 13:01:48.383
  STEP: Deploying the webhook pod @ 05/04/24 13:01:48.392
  STEP: Wait for the deployment to be ready @ 05/04/24 13:01:48.407
  May  4 13:01:48.414: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/04/24 13:01:50.429
  STEP: Verifying the service has paired with the endpoint @ 05/04/24 13:01:50.441
  May  4 13:01:51.441: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 05/04/24 13:01:51.45
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 05/04/24 13:01:51.467
  STEP: Creating a configMap that should not be mutated @ 05/04/24 13:01:51.475
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 05/04/24 13:01:51.487
  STEP: Creating a configMap that should be mutated @ 05/04/24 13:01:51.494
  May  4 13:01:51.560: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4398" for this suite. @ 05/04/24 13:01:51.564
  STEP: Destroying namespace "webhook-markers-9459" for this suite. @ 05/04/24 13:01:51.573
• [3.544 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 05/04/24 13:01:51.58
  May  4 13:01:51.580: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename containers @ 05/04/24 13:01:51.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:01:51.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:01:51.601
  STEP: Creating a pod to test override command @ 05/04/24 13:01:51.603
  STEP: Saw pod success @ 05/04/24 13:01:55.629
  May  4 13:01:55.634: INFO: Trying to get logs from node ip-172-31-18-228 pod client-containers-ee86a523-9838-4a42-9faf-7b50cde0b592 container agnhost-container: <nil>
  STEP: delete the pod @ 05/04/24 13:01:55.641
  May  4 13:01:55.659: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8648" for this suite. @ 05/04/24 13:01:55.662
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 05/04/24 13:01:55.672
  May  4 13:01:55.672: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename projected @ 05/04/24 13:01:55.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:01:55.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:01:55.691
  STEP: Creating configMap with name cm-test-opt-del-27ffeff9-7c31-46a3-b136-dcd560f8a81c @ 05/04/24 13:01:55.698
  STEP: Creating configMap with name cm-test-opt-upd-d06bc235-f02f-4aa4-b229-ce4b1295b166 @ 05/04/24 13:01:55.701
  STEP: Creating the pod @ 05/04/24 13:01:55.709
  STEP: Deleting configmap cm-test-opt-del-27ffeff9-7c31-46a3-b136-dcd560f8a81c @ 05/04/24 13:01:57.75
  STEP: Updating configmap cm-test-opt-upd-d06bc235-f02f-4aa4-b229-ce4b1295b166 @ 05/04/24 13:01:57.757
  STEP: Creating configMap with name cm-test-opt-create-8ab38f36-07db-41e0-9f79-6ae7487c2926 @ 05/04/24 13:01:57.762
  STEP: waiting to observe update in volume @ 05/04/24 13:01:57.767
  May  4 13:03:02.087: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6350" for this suite. @ 05/04/24 13:03:02.094
• [66.432 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 05/04/24 13:03:02.104
  May  4 13:03:02.104: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename configmap @ 05/04/24 13:03:02.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:03:02.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:03:02.124
  STEP: Creating configMap with name configmap-test-volume-map-909c3ea3-ecdc-40ad-b0f7-b619fa8b08ef @ 05/04/24 13:03:02.126
  STEP: Creating a pod to test consume configMaps @ 05/04/24 13:03:02.13
  STEP: Saw pod success @ 05/04/24 13:03:06.151
  May  4 13:03:06.157: INFO: Trying to get logs from node ip-172-31-72-79 pod pod-configmaps-458de66f-3d9e-4c5f-9dfc-736583e9bee4 container agnhost-container: <nil>
  STEP: delete the pod @ 05/04/24 13:03:06.167
  May  4 13:03:06.191: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3918" for this suite. @ 05/04/24 13:03:06.196
• [4.102 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 05/04/24 13:03:06.206
  May  4 13:03:06.206: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename projected @ 05/04/24 13:03:06.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:03:06.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:03:06.223
  STEP: Creating secret with name projected-secret-test-094f702e-72cf-44a2-bff9-848d3bb3644a @ 05/04/24 13:03:06.226
  STEP: Creating a pod to test consume secrets @ 05/04/24 13:03:06.231
  STEP: Saw pod success @ 05/04/24 13:03:10.256
  May  4 13:03:10.260: INFO: Trying to get logs from node ip-172-31-72-79 pod pod-projected-secrets-6ae3564f-978f-4af0-9b72-2c9a2f21de19 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/04/24 13:03:10.266
  May  4 13:03:10.285: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9351" for this suite. @ 05/04/24 13:03:10.288
• [4.089 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 05/04/24 13:03:10.295
  May  4 13:03:10.295: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename container-runtime @ 05/04/24 13:03:10.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:03:10.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:03:10.316
  STEP: create the container @ 05/04/24 13:03:10.319
  W0504 13:03:10.332109      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 05/04/24 13:03:10.332
  STEP: get the container status @ 05/04/24 13:03:12.348
  STEP: the container should be terminated @ 05/04/24 13:03:12.351
  STEP: the termination message should be set @ 05/04/24 13:03:12.351
  May  4 13:03:12.351: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 05/04/24 13:03:12.351
  May  4 13:03:12.371: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5621" for this suite. @ 05/04/24 13:03:12.374
• [2.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 05/04/24 13:03:12.382
  May  4 13:03:12.382: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename field-validation @ 05/04/24 13:03:12.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:03:12.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:03:12.402
  STEP: apply creating a deployment @ 05/04/24 13:03:12.405
  May  4 13:03:12.419: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2453" for this suite. @ 05/04/24 13:03:12.422
• [0.049 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 05/04/24 13:03:12.431
  May  4 13:03:12.431: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename configmap @ 05/04/24 13:03:12.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:03:12.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:03:12.447
  STEP: Creating configMap with name configmap-test-upd-47f0b4d8-02b5-4bd4-93b4-5f9a4bd5dd3f @ 05/04/24 13:03:12.454
  STEP: Creating the pod @ 05/04/24 13:03:12.459
  STEP: Waiting for pod with text data @ 05/04/24 13:03:14.481
  STEP: Waiting for pod with binary data @ 05/04/24 13:03:14.491
  May  4 13:03:14.498: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2523" for this suite. @ 05/04/24 13:03:14.502
• [2.079 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 05/04/24 13:03:14.51
  May  4 13:03:14.510: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename gc @ 05/04/24 13:03:14.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:03:14.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:03:14.528
  May  4 13:03:14.566: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"400a5f4c-fcf1-4eac-b8df-60ab0d6a924f", Controller:(*bool)(0xc002f26c3e), BlockOwnerDeletion:(*bool)(0xc002f26c3f)}}
  May  4 13:03:14.574: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"6f8101f9-3784-4edc-a0cb-abb3953f72b3", Controller:(*bool)(0xc0037457ee), BlockOwnerDeletion:(*bool)(0xc0037457ef)}}
  May  4 13:03:14.581: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"8005000d-1fbc-4a4f-818b-e4b0d04d0fc4", Controller:(*bool)(0xc002f26e8a), BlockOwnerDeletion:(*bool)(0xc002f26e8b)}}
  May  4 13:03:19.597: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5558" for this suite. @ 05/04/24 13:03:19.603
• [5.098 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 05/04/24 13:03:19.608
  May  4 13:03:19.609: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename field-validation @ 05/04/24 13:03:19.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:03:19.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:03:19.63
  May  4 13:03:19.633: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  W0504 13:03:19.634395      19 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc001579f10 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W0504 13:03:22.173591      19 warnings.go:70] unknown field "alpha"
  W0504 13:03:22.173614      19 warnings.go:70] unknown field "beta"
  W0504 13:03:22.173622      19 warnings.go:70] unknown field "delta"
  W0504 13:03:22.173625      19 warnings.go:70] unknown field "epsilon"
  W0504 13:03:22.173628      19 warnings.go:70] unknown field "gamma"
  May  4 13:03:22.719: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7751" for this suite. @ 05/04/24 13:03:22.724
• [3.123 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1053
  STEP: Creating a kubernetes client @ 05/04/24 13:03:22.732
  May  4 13:03:22.732: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename kubectl @ 05/04/24 13:03:22.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:03:22.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:03:22.751
  STEP: create deployment with httpd image @ 05/04/24 13:03:22.753
  May  4 13:03:22.753: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-2085 create -f -'
  May  4 13:03:22.828: INFO: stderr: ""
  May  4 13:03:22.828: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 05/04/24 13:03:22.828
  May  4 13:03:22.828: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-2085 diff -f -'
  May  4 13:03:27.138: INFO: rc: 1
  May  4 13:03:27.138: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-2085 delete -f -'
  May  4 13:03:27.191: INFO: stderr: ""
  May  4 13:03:27.191: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  May  4 13:03:27.191: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2085" for this suite. @ 05/04/24 13:03:27.196
• [4.472 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 05/04/24 13:03:27.204
  May  4 13:03:27.204: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename dns @ 05/04/24 13:03:27.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:03:27.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:03:27.226
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 05/04/24 13:03:27.228
  May  4 13:03:27.236: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-6238  8aabed37-074f-4b08-b56e-2040a1a87ef3 25142 0 2024-05-04 13:03:27 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-05-04 13:03:27 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-vqnqq,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-vqnqq,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 05/04/24 13:03:29.25
  May  4 13:03:29.250: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-6238 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  4 13:03:29.250: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 13:03:29.251: INFO: ExecWithOptions: Clientset creation
  May  4 13:03:29.251: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-6238/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 05/04/24 13:03:29.327
  May  4 13:03:29.327: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-6238 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  4 13:03:29.327: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 13:03:29.328: INFO: ExecWithOptions: Clientset creation
  May  4 13:03:29.328: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-6238/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  May  4 13:03:29.383: INFO: Deleting pod test-dns-nameservers...
  May  4 13:03:29.401: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6238" for this suite. @ 05/04/24 13:03:29.405
• [2.207 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 05/04/24 13:03:29.411
  May  4 13:03:29.411: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename security-context @ 05/04/24 13:03:29.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:03:29.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:03:29.433
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 05/04/24 13:03:29.436
  STEP: Saw pod success @ 05/04/24 13:03:31.455
  May  4 13:03:31.459: INFO: Trying to get logs from node ip-172-31-18-228 pod security-context-f6655baa-5935-4f97-abf6-30d5aaf50825 container test-container: <nil>
  STEP: delete the pod @ 05/04/24 13:03:31.466
  May  4 13:03:31.485: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-8011" for this suite. @ 05/04/24 13:03:31.489
• [2.085 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 05/04/24 13:03:31.496
  May  4 13:03:31.496: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename dns @ 05/04/24 13:03:31.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:03:31.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:03:31.513
  STEP: Creating a test externalName service @ 05/04/24 13:03:31.516
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8508.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8508.svc.cluster.local; sleep 1; done
   @ 05/04/24 13:03:31.52
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8508.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8508.svc.cluster.local; sleep 1; done
   @ 05/04/24 13:03:31.52
  STEP: creating a pod to probe DNS @ 05/04/24 13:03:31.52
  STEP: submitting the pod to kubernetes @ 05/04/24 13:03:31.52
  STEP: retrieving the pod @ 05/04/24 13:03:33.546
  STEP: looking for the results for each expected name from probers @ 05/04/24 13:03:33.55
  May  4 13:03:33.560: INFO: DNS probes using dns-test-83fd84b0-9a11-463d-b36c-beae0fba4c26 succeeded

  STEP: changing the externalName to bar.example.com @ 05/04/24 13:03:33.56
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8508.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8508.svc.cluster.local; sleep 1; done
   @ 05/04/24 13:03:33.57
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8508.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8508.svc.cluster.local; sleep 1; done
   @ 05/04/24 13:03:33.57
  STEP: creating a second pod to probe DNS @ 05/04/24 13:03:33.57
  STEP: submitting the pod to kubernetes @ 05/04/24 13:03:33.57
  STEP: retrieving the pod @ 05/04/24 13:03:39.595
  STEP: looking for the results for each expected name from probers @ 05/04/24 13:03:39.599
  May  4 13:03:39.608: INFO: DNS probes using dns-test-157bd426-7cca-4ed6-8a05-d83d0330bbab succeeded

  STEP: changing the service to type=ClusterIP @ 05/04/24 13:03:39.608
  W0504 13:03:39.624117      19 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8508.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-8508.svc.cluster.local; sleep 1; done
   @ 05/04/24 13:03:39.624
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8508.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-8508.svc.cluster.local; sleep 1; done
   @ 05/04/24 13:03:39.624
  STEP: creating a third pod to probe DNS @ 05/04/24 13:03:39.624
  STEP: submitting the pod to kubernetes @ 05/04/24 13:03:39.628
  STEP: retrieving the pod @ 05/04/24 13:03:41.65
  STEP: looking for the results for each expected name from probers @ 05/04/24 13:03:41.654
  May  4 13:03:41.664: INFO: DNS probes using dns-test-dc19ede9-a2df-439f-aaf8-40432a116c08 succeeded

  STEP: deleting the pod @ 05/04/24 13:03:41.665
  STEP: deleting the pod @ 05/04/24 13:03:41.681
  STEP: deleting the pod @ 05/04/24 13:03:41.695
  STEP: deleting the test externalName service @ 05/04/24 13:03:41.715
  May  4 13:03:41.733: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8508" for this suite. @ 05/04/24 13:03:41.739
• [10.250 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 05/04/24 13:03:41.746
  May  4 13:03:41.746: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename configmap @ 05/04/24 13:03:41.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:03:41.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:03:41.764
  May  4 13:03:41.816: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-141" for this suite. @ 05/04/24 13:03:41.826
• [0.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 05/04/24 13:03:41.839
  May  4 13:03:41.839: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename replication-controller @ 05/04/24 13:03:41.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:03:41.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:03:41.867
  STEP: Given a ReplicationController is created @ 05/04/24 13:03:41.871
  STEP: When the matched label of one of its pods change @ 05/04/24 13:03:41.877
  May  4 13:03:41.881: INFO: Pod name pod-release: Found 0 pods out of 1
  May  4 13:03:46.885: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 05/04/24 13:03:46.898
  May  4 13:03:47.906: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3364" for this suite. @ 05/04/24 13:03:47.91
• [6.079 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 05/04/24 13:03:47.918
  May  4 13:03:47.918: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename projected @ 05/04/24 13:03:47.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:03:47.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:03:47.935
  STEP: Creating projection with secret that has name projected-secret-test-c564b9cf-717c-4840-8bf5-1520d777c7ba @ 05/04/24 13:03:47.938
  STEP: Creating a pod to test consume secrets @ 05/04/24 13:03:47.944
  STEP: Saw pod success @ 05/04/24 13:03:49.964
  May  4 13:03:49.968: INFO: Trying to get logs from node ip-172-31-72-79 pod pod-projected-secrets-53612bca-d8f0-477e-aa1d-6e8d1662d02a container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/04/24 13:03:49.976
  May  4 13:03:49.991: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-370" for this suite. @ 05/04/24 13:03:49.996
• [2.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 05/04/24 13:03:50.004
  May  4 13:03:50.004: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename containers @ 05/04/24 13:03:50.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:03:50.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:03:50.024
  May  4 13:03:52.052: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3163" for this suite. @ 05/04/24 13:03:52.056
• [2.061 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 05/04/24 13:03:52.065
  May  4 13:03:52.065: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/04/24 13:03:52.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:03:52.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:03:52.083
  May  4 13:03:52.086: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/04/24 13:03:53.267
  May  4 13:03:53.267: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=crd-publish-openapi-7280 --namespace=crd-publish-openapi-7280 create -f -'
  May  4 13:03:55.350: INFO: stderr: ""
  May  4 13:03:55.350: INFO: stdout: "e2e-test-crd-publish-openapi-5433-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  May  4 13:03:55.350: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=crd-publish-openapi-7280 --namespace=crd-publish-openapi-7280 delete e2e-test-crd-publish-openapi-5433-crds test-cr'
  May  4 13:03:55.405: INFO: stderr: ""
  May  4 13:03:55.405: INFO: stdout: "e2e-test-crd-publish-openapi-5433-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  May  4 13:03:55.405: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=crd-publish-openapi-7280 --namespace=crd-publish-openapi-7280 apply -f -'
  May  4 13:03:55.467: INFO: stderr: ""
  May  4 13:03:55.467: INFO: stdout: "e2e-test-crd-publish-openapi-5433-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  May  4 13:03:55.467: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=crd-publish-openapi-7280 --namespace=crd-publish-openapi-7280 delete e2e-test-crd-publish-openapi-5433-crds test-cr'
  May  4 13:03:55.521: INFO: stderr: ""
  May  4 13:03:55.521: INFO: stdout: "e2e-test-crd-publish-openapi-5433-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 05/04/24 13:03:55.521
  May  4 13:03:55.521: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=crd-publish-openapi-7280 explain e2e-test-crd-publish-openapi-5433-crds'
  May  4 13:03:55.581: INFO: stderr: ""
  May  4 13:03:55.581: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-5433-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  May  4 13:03:56.764: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7280" for this suite. @ 05/04/24 13:03:56.769
• [4.713 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 05/04/24 13:03:56.779
  May  4 13:03:56.779: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename pods @ 05/04/24 13:03:56.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:03:56.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:03:56.801
  STEP: Saw pod success @ 05/04/24 13:04:00.85
  May  4 13:04:00.854: INFO: Trying to get logs from node ip-172-31-72-79 pod client-envvars-a50d2393-40a4-41fa-bca0-312a10961f19 container env3cont: <nil>
  STEP: delete the pod @ 05/04/24 13:04:00.867
  May  4 13:04:00.882: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-448" for this suite. @ 05/04/24 13:04:00.887
• [4.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 05/04/24 13:04:00.894
  May  4 13:04:00.894: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename svcaccounts @ 05/04/24 13:04:00.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:04:00.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:04:00.916
  May  4 13:04:00.942: INFO: created pod pod-service-account-defaultsa
  May  4 13:04:00.942: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  May  4 13:04:00.948: INFO: created pod pod-service-account-mountsa
  May  4 13:04:00.948: INFO: pod pod-service-account-mountsa service account token volume mount: true
  May  4 13:04:00.954: INFO: created pod pod-service-account-nomountsa
  May  4 13:04:00.954: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  May  4 13:04:00.961: INFO: created pod pod-service-account-defaultsa-mountspec
  May  4 13:04:00.961: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  May  4 13:04:00.972: INFO: created pod pod-service-account-mountsa-mountspec
  May  4 13:04:00.972: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  May  4 13:04:00.980: INFO: created pod pod-service-account-nomountsa-mountspec
  May  4 13:04:00.981: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  May  4 13:04:00.989: INFO: created pod pod-service-account-defaultsa-nomountspec
  May  4 13:04:00.989: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  May  4 13:04:00.995: INFO: created pod pod-service-account-mountsa-nomountspec
  May  4 13:04:00.995: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  May  4 13:04:01.001: INFO: created pod pod-service-account-nomountsa-nomountspec
  May  4 13:04:01.001: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  May  4 13:04:01.001: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4538" for this suite. @ 05/04/24 13:04:01.005
• [0.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 05/04/24 13:04:01.017
  May  4 13:04:01.017: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename cronjob @ 05/04/24 13:04:01.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:04:01.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:04:01.045
  STEP: Creating a suspended cronjob @ 05/04/24 13:04:01.06
  STEP: Ensuring no jobs are scheduled @ 05/04/24 13:04:01.068
  STEP: Ensuring no job exists by listing jobs explicitly @ 05/04/24 13:09:01.076
  STEP: Removing cronjob @ 05/04/24 13:09:01.08
  May  4 13:09:01.086: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3031" for this suite. @ 05/04/24 13:09:01.09
• [300.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:136
  STEP: Creating a kubernetes client @ 05/04/24 13:09:01.097
  May  4 13:09:01.097: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/04/24 13:09:01.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:09:01.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:09:01.119
  STEP: create the container to handle the HTTPGet hook request. @ 05/04/24 13:09:01.127
  STEP: create the pod with lifecycle hook @ 05/04/24 13:09:03.15
  STEP: check poststart hook @ 05/04/24 13:09:05.17
  STEP: delete the pod with lifecycle hook @ 05/04/24 13:09:05.19
  May  4 13:09:09.213: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-956" for this suite. @ 05/04/24 13:09:09.217
• [8.129 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 05/04/24 13:09:09.226
  May  4 13:09:09.226: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename resourcequota @ 05/04/24 13:09:09.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:09:09.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:09:09.249
  STEP: Creating a ResourceQuota @ 05/04/24 13:09:09.251
  STEP: Getting a ResourceQuota @ 05/04/24 13:09:09.256
  STEP: Listing all ResourceQuotas with LabelSelector @ 05/04/24 13:09:09.263
  STEP: Patching the ResourceQuota @ 05/04/24 13:09:09.277
  STEP: Deleting a Collection of ResourceQuotas @ 05/04/24 13:09:09.287
  STEP: Verifying the deleted ResourceQuota @ 05/04/24 13:09:09.301
  May  4 13:09:09.304: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8047" for this suite. @ 05/04/24 13:09:09.307
• [0.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:139
  STEP: Creating a kubernetes client @ 05/04/24 13:09:09.318
  May  4 13:09:09.318: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename configmap @ 05/04/24 13:09:09.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:09:09.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:09:09.339
  STEP: Creating configMap that has name configmap-test-emptyKey-b79acfbc-ef1c-4a77-876d-85241ef3f6fa @ 05/04/24 13:09:09.342
  May  4 13:09:09.343: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4540" for this suite. @ 05/04/24 13:09:09.348
• [0.038 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 05/04/24 13:09:09.356
  May  4 13:09:09.356: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename sched-preemption @ 05/04/24 13:09:09.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:09:09.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:09:09.375
  May  4 13:09:09.392: INFO: Waiting up to 1m0s for all nodes to be ready
  May  4 13:10:09.397: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 05/04/24 13:10:09.401
  May  4 13:10:09.401: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename sched-preemption-path @ 05/04/24 13:10:09.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:10:09.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:10:09.427
  May  4 13:10:09.443: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  May  4 13:10:09.446: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  May  4 13:10:09.525: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-9125" for this suite. @ 05/04/24 13:10:09.529
  May  4 13:10:09.537: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-69" for this suite. @ 05/04/24 13:10:09.541
• [60.192 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 05/04/24 13:10:09.548
  May  4 13:10:09.548: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename secrets @ 05/04/24 13:10:09.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:10:09.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:10:09.57
  STEP: Creating secret with name secret-test-f713bde9-599c-4da7-beaf-dec8653bd810 @ 05/04/24 13:10:09.597
  STEP: Creating a pod to test consume secrets @ 05/04/24 13:10:09.602
  STEP: Saw pod success @ 05/04/24 13:10:13.63
  May  4 13:10:13.633: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-secrets-34859cde-c213-40f4-81ac-e56712f9c89b container secret-volume-test: <nil>
  STEP: delete the pod @ 05/04/24 13:10:13.648
  May  4 13:10:13.666: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-378" for this suite. @ 05/04/24 13:10:13.67
  STEP: Destroying namespace "secret-namespace-5566" for this suite. @ 05/04/24 13:10:13.678
• [4.137 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 05/04/24 13:10:13.686
  May  4 13:10:13.686: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename ingressclass @ 05/04/24 13:10:13.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:10:13.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:10:13.712
  STEP: getting /apis @ 05/04/24 13:10:13.715
  STEP: getting /apis/networking.k8s.io @ 05/04/24 13:10:13.718
  STEP: getting /apis/networking.k8s.iov1 @ 05/04/24 13:10:13.719
  STEP: creating @ 05/04/24 13:10:13.72
  STEP: getting @ 05/04/24 13:10:13.736
  STEP: listing @ 05/04/24 13:10:13.738
  STEP: watching @ 05/04/24 13:10:13.742
  May  4 13:10:13.742: INFO: starting watch
  STEP: patching @ 05/04/24 13:10:13.743
  STEP: updating @ 05/04/24 13:10:13.748
  May  4 13:10:13.752: INFO: waiting for watch events with expected annotations
  May  4 13:10:13.752: INFO: saw patched and updated annotations
  STEP: deleting @ 05/04/24 13:10:13.752
  STEP: deleting a collection @ 05/04/24 13:10:13.766
  May  4 13:10:13.782: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-6441" for this suite. @ 05/04/24 13:10:13.786
• [0.108 seconds]
------------------------------
S
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:169
  STEP: Creating a kubernetes client @ 05/04/24 13:10:13.795
  May  4 13:10:13.795: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/04/24 13:10:13.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:10:13.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:10:13.814
  STEP: create the container to handle the HTTPGet hook request. @ 05/04/24 13:10:13.82
  STEP: create the pod with lifecycle hook @ 05/04/24 13:10:15.845
  STEP: check poststart hook @ 05/04/24 13:10:17.865
  STEP: delete the pod with lifecycle hook @ 05/04/24 13:10:17.872
  May  4 13:10:19.889: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8977" for this suite. @ 05/04/24 13:10:19.893
• [6.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 05/04/24 13:10:19.9
  May  4 13:10:19.900: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename downward-api @ 05/04/24 13:10:19.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:10:19.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:10:19.926
  STEP: Creating the pod @ 05/04/24 13:10:19.929
  May  4 13:10:22.466: INFO: Successfully updated pod "labelsupdate7f974a29-2e63-4893-85c2-e47541ae933c"
  May  4 13:10:26.495: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1820" for this suite. @ 05/04/24 13:10:26.5
• [6.605 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 05/04/24 13:10:26.506
  May  4 13:10:26.506: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename downward-api @ 05/04/24 13:10:26.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:10:26.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:10:26.527
  STEP: Creating a pod to test downward API volume plugin @ 05/04/24 13:10:26.53
  STEP: Saw pod success @ 05/04/24 13:10:30.557
  May  4 13:10:30.561: INFO: Trying to get logs from node ip-172-31-18-228 pod downwardapi-volume-f8a9593f-facf-4127-8d69-47807c29e419 container client-container: <nil>
  STEP: delete the pod @ 05/04/24 13:10:30.566
  May  4 13:10:30.587: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6812" for this suite. @ 05/04/24 13:10:30.592
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:855
  STEP: Creating a kubernetes client @ 05/04/24 13:10:30.598
  May  4 13:10:30.598: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename job @ 05/04/24 13:10:30.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:10:30.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:10:30.621
  STEP: Creating a suspended job @ 05/04/24 13:10:30.625
  STEP: Patching the Job @ 05/04/24 13:10:30.632
  STEP: Watching for Job to be patched @ 05/04/24 13:10:30.649
  May  4 13:10:30.650: INFO: Event ADDED observed for Job e2e-cqx92 in namespace job-5020 with labels: map[e2e-job-label:e2e-cqx92] and annotations: map[]
  May  4 13:10:30.650: INFO: Event MODIFIED observed for Job e2e-cqx92 in namespace job-5020 with labels: map[e2e-job-label:e2e-cqx92] and annotations: map[]
  May  4 13:10:30.650: INFO: Event MODIFIED found for Job e2e-cqx92 in namespace job-5020 with labels: map[e2e-cqx92:patched e2e-job-label:e2e-cqx92] and annotations: map[]
  STEP: Updating the job @ 05/04/24 13:10:30.65
  STEP: Watching for Job to be updated @ 05/04/24 13:10:30.662
  May  4 13:10:30.663: INFO: Event MODIFIED found for Job e2e-cqx92 in namespace job-5020 with labels: map[e2e-cqx92:patched e2e-job-label:e2e-cqx92] and annotations: map[updated:true]
  May  4 13:10:30.663: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 05/04/24 13:10:30.663
  May  4 13:10:30.666: INFO: Job: e2e-cqx92 as labels: map[e2e-cqx92:patched e2e-job-label:e2e-cqx92]
  STEP: Waiting for job to complete @ 05/04/24 13:10:30.666
  STEP: Delete a job collection with a labelselector @ 05/04/24 13:10:38.673
  STEP: Watching for Job to be deleted @ 05/04/24 13:10:38.682
  May  4 13:10:38.684: INFO: Event MODIFIED observed for Job e2e-cqx92 in namespace job-5020 with labels: map[e2e-cqx92:patched e2e-job-label:e2e-cqx92] and annotations: map[updated:true]
  May  4 13:10:38.684: INFO: Event MODIFIED observed for Job e2e-cqx92 in namespace job-5020 with labels: map[e2e-cqx92:patched e2e-job-label:e2e-cqx92] and annotations: map[updated:true]
  May  4 13:10:38.684: INFO: Event MODIFIED observed for Job e2e-cqx92 in namespace job-5020 with labels: map[e2e-cqx92:patched e2e-job-label:e2e-cqx92] and annotations: map[updated:true]
  May  4 13:10:38.684: INFO: Event MODIFIED observed for Job e2e-cqx92 in namespace job-5020 with labels: map[e2e-cqx92:patched e2e-job-label:e2e-cqx92] and annotations: map[updated:true]
  May  4 13:10:38.684: INFO: Event MODIFIED observed for Job e2e-cqx92 in namespace job-5020 with labels: map[e2e-cqx92:patched e2e-job-label:e2e-cqx92] and annotations: map[updated:true]
  May  4 13:10:38.684: INFO: Event MODIFIED observed for Job e2e-cqx92 in namespace job-5020 with labels: map[e2e-cqx92:patched e2e-job-label:e2e-cqx92] and annotations: map[updated:true]
  May  4 13:10:38.684: INFO: Event MODIFIED observed for Job e2e-cqx92 in namespace job-5020 with labels: map[e2e-cqx92:patched e2e-job-label:e2e-cqx92] and annotations: map[updated:true]
  May  4 13:10:38.684: INFO: Event DELETED found for Job e2e-cqx92 in namespace job-5020 with labels: map[e2e-cqx92:patched e2e-job-label:e2e-cqx92] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 05/04/24 13:10:38.684
  May  4 13:10:38.688: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5020" for this suite. @ 05/04/24 13:10:38.692
• [8.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 05/04/24 13:10:38.709
  May  4 13:10:38.709: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename sysctl @ 05/04/24 13:10:38.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:10:38.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:10:38.73
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 05/04/24 13:10:38.733
  STEP: Watching for error events or started pod @ 05/04/24 13:10:38.741
  STEP: Waiting for pod completion @ 05/04/24 13:10:40.745
  STEP: Checking that the pod succeeded @ 05/04/24 13:10:42.76
  STEP: Getting logs from the pod @ 05/04/24 13:10:42.76
  STEP: Checking that the sysctl is actually updated @ 05/04/24 13:10:42.765
  May  4 13:10:42.765: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-6279" for this suite. @ 05/04/24 13:10:42.771
• [4.070 seconds]
------------------------------
S
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 05/04/24 13:10:42.779
  May  4 13:10:42.779: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename kubelet-test @ 05/04/24 13:10:42.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:10:42.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:10:42.801
  May  4 13:10:46.820: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3301" for this suite. @ 05/04/24 13:10:46.825
• [4.054 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 05/04/24 13:10:46.833
  May  4 13:10:46.833: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename emptydir @ 05/04/24 13:10:46.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:10:46.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:10:46.855
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 05/04/24 13:10:46.857
  STEP: Saw pod success @ 05/04/24 13:10:50.883
  May  4 13:10:50.886: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-e63a0d2f-8877-47e5-89ab-15c5466b6131 container test-container: <nil>
  STEP: delete the pod @ 05/04/24 13:10:50.893
  May  4 13:10:50.909: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8738" for this suite. @ 05/04/24 13:10:50.913
• [4.087 seconds]
------------------------------
SS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:155
  STEP: Creating a kubernetes client @ 05/04/24 13:10:50.92
  May  4 13:10:50.920: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename secrets @ 05/04/24 13:10:50.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:10:50.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:10:50.941
  STEP: creating a secret @ 05/04/24 13:10:50.944
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 05/04/24 13:10:50.948
  STEP: patching the secret @ 05/04/24 13:10:50.952
  STEP: deleting the secret using a LabelSelector @ 05/04/24 13:10:50.962
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 05/04/24 13:10:50.97
  May  4 13:10:50.974: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8100" for this suite. @ 05/04/24 13:10:50.977
• [0.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 05/04/24 13:10:50.985
  May  4 13:10:50.985: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename gc @ 05/04/24 13:10:50.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:10:51.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:10:51.006
  STEP: create the rc @ 05/04/24 13:10:51.009
  W0504 13:10:51.015180      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 05/04/24 13:10:56.019
  STEP: wait for all pods to be garbage collected @ 05/04/24 13:10:56.026
  STEP: Gathering metrics @ 05/04/24 13:11:01.034
  W0504 13:11:01.041298      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  May  4 13:11:01.041: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May  4 13:11:01.041: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9951" for this suite. @ 05/04/24 13:11:01.044
• [10.067 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 05/04/24 13:11:01.051
  May  4 13:11:01.052: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename namespaces @ 05/04/24 13:11:01.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:11:01.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:11:01.074
  STEP: Read namespace status @ 05/04/24 13:11:01.077
  May  4 13:11:01.079: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 05/04/24 13:11:01.079
  May  4 13:11:01.085: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 05/04/24 13:11:01.085
  May  4 13:11:01.096: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  May  4 13:11:01.097: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6458" for this suite. @ 05/04/24 13:11:01.101
• [0.058 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 05/04/24 13:11:01.11
  May  4 13:11:01.110: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename secrets @ 05/04/24 13:11:01.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:11:01.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:11:01.128
  May  4 13:11:01.169: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6572" for this suite. @ 05/04/24 13:11:01.173
• [0.070 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 05/04/24 13:11:01.181
  May  4 13:11:01.181: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename replicaset @ 05/04/24 13:11:01.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:11:01.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:11:01.205
  STEP: Create a Replicaset @ 05/04/24 13:11:01.212
  STEP: Verify that the required pods have come up. @ 05/04/24 13:11:01.218
  May  4 13:11:01.221: INFO: Pod name sample-pod: Found 0 pods out of 1
  May  4 13:11:06.226: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/04/24 13:11:06.226
  STEP: Getting /status @ 05/04/24 13:11:06.226
  May  4 13:11:06.231: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 05/04/24 13:11:06.231
  May  4 13:11:06.239: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 05/04/24 13:11:06.239
  May  4 13:11:06.241: INFO: Observed &ReplicaSet event: ADDED
  May  4 13:11:06.241: INFO: Observed &ReplicaSet event: MODIFIED
  May  4 13:11:06.241: INFO: Observed &ReplicaSet event: MODIFIED
  May  4 13:11:06.241: INFO: Observed &ReplicaSet event: MODIFIED
  May  4 13:11:06.241: INFO: Found replicaset test-rs in namespace replicaset-5610 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  May  4 13:11:06.241: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 05/04/24 13:11:06.241
  May  4 13:11:06.241: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  May  4 13:11:06.249: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 05/04/24 13:11:06.25
  May  4 13:11:06.251: INFO: Observed &ReplicaSet event: ADDED
  May  4 13:11:06.251: INFO: Observed &ReplicaSet event: MODIFIED
  May  4 13:11:06.251: INFO: Observed &ReplicaSet event: MODIFIED
  May  4 13:11:06.251: INFO: Observed &ReplicaSet event: MODIFIED
  May  4 13:11:06.251: INFO: Observed replicaset test-rs in namespace replicaset-5610 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May  4 13:11:06.251: INFO: Observed &ReplicaSet event: MODIFIED
  May  4 13:11:06.251: INFO: Found replicaset test-rs in namespace replicaset-5610 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  May  4 13:11:06.251: INFO: Replicaset test-rs has a patched status
  May  4 13:11:06.251: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5610" for this suite. @ 05/04/24 13:11:06.26
• [5.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 05/04/24 13:11:06.27
  May  4 13:11:06.270: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename chunking @ 05/04/24 13:11:06.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:11:06.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:11:06.292
  STEP: creating a large number of resources @ 05/04/24 13:11:06.294
  STEP: retrieving those results in paged fashion several times @ 05/04/24 13:11:23.977
  May  4 13:11:24.026: INFO: Retrieved 17/17 results with rv 27812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  May  4 13:11:24.077: INFO: Retrieved 17/17 results with rv 27812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  May  4 13:11:24.126: INFO: Retrieved 17/17 results with rv 27812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  May  4 13:11:24.175: INFO: Retrieved 17/17 results with rv 27812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  May  4 13:11:24.227: INFO: Retrieved 17/17 results with rv 27812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  May  4 13:11:24.275: INFO: Retrieved 17/17 results with rv 27812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  May  4 13:11:24.324: INFO: Retrieved 17/17 results with rv 27812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  May  4 13:11:24.377: INFO: Retrieved 17/17 results with rv 27812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  May  4 13:11:24.426: INFO: Retrieved 17/17 results with rv 27812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  May  4 13:11:24.474: INFO: Retrieved 17/17 results with rv 27812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  May  4 13:11:24.527: INFO: Retrieved 17/17 results with rv 27812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  May  4 13:11:24.575: INFO: Retrieved 17/17 results with rv 27812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  May  4 13:11:24.625: INFO: Retrieved 17/17 results with rv 27812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  May  4 13:11:24.676: INFO: Retrieved 17/17 results with rv 27812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  May  4 13:11:24.727: INFO: Retrieved 17/17 results with rv 27812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  May  4 13:11:24.775: INFO: Retrieved 17/17 results with rv 27812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  May  4 13:11:24.826: INFO: Retrieved 17/17 results with rv 27812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  May  4 13:11:24.875: INFO: Retrieved 17/17 results with rv 27812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  May  4 13:11:24.925: INFO: Retrieved 17/17 results with rv 27812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  May  4 13:11:24.977: INFO: Retrieved 17/17 results with rv 27812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  May  4 13:11:25.026: INFO: Retrieved 17/17 results with rv 27812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  May  4 13:11:25.075: INFO: Retrieved 17/17 results with rv 27812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  May  4 13:11:25.127: INFO: Retrieved 17/17 results with rv 27812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  May  4 13:11:25.175: INFO: Retrieved 9/17 results with rv 27812 and continue 
  May  4 13:11:25.225: INFO: Retrieved 17/17 results with rv 27815 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTUsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  May  4 13:11:25.276: INFO: Retrieved 17/17 results with rv 27815 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTUsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  May  4 13:11:25.326: INFO: Retrieved 17/17 results with rv 27815 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTUsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  May  4 13:11:25.375: INFO: Retrieved 17/17 results with rv 27815 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTUsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  May  4 13:11:25.427: INFO: Retrieved 17/17 results with rv 27815 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTUsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  May  4 13:11:25.475: INFO: Retrieved 17/17 results with rv 27815 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTUsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  May  4 13:11:25.525: INFO: Retrieved 17/17 results with rv 27815 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTUsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  May  4 13:11:25.577: INFO: Retrieved 17/17 results with rv 27815 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTUsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  May  4 13:11:25.625: INFO: Retrieved 17/17 results with rv 27815 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTUsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  May  4 13:11:25.675: INFO: Retrieved 17/17 results with rv 27815 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTUsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  May  4 13:11:25.728: INFO: Retrieved 17/17 results with rv 27815 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTUsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  May  4 13:11:25.775: INFO: Retrieved 17/17 results with rv 27815 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTUsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  May  4 13:11:25.825: INFO: Retrieved 17/17 results with rv 27815 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTUsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  May  4 13:11:25.877: INFO: Retrieved 17/17 results with rv 27815 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTUsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  May  4 13:11:25.925: INFO: Retrieved 17/17 results with rv 27815 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTUsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  May  4 13:11:25.974: INFO: Retrieved 17/17 results with rv 27815 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTUsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  May  4 13:11:26.026: INFO: Retrieved 17/17 results with rv 27815 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTUsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  May  4 13:11:26.075: INFO: Retrieved 17/17 results with rv 27815 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTUsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  May  4 13:11:26.125: INFO: Retrieved 17/17 results with rv 27815 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTUsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  May  4 13:11:26.177: INFO: Retrieved 17/17 results with rv 27815 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTUsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  May  4 13:11:26.226: INFO: Retrieved 17/17 results with rv 27815 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTUsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  May  4 13:11:26.275: INFO: Retrieved 17/17 results with rv 27815 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTUsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  May  4 13:11:26.327: INFO: Retrieved 17/17 results with rv 27815 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTUsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  May  4 13:11:26.376: INFO: Retrieved 9/17 results with rv 27815 and continue 
  May  4 13:11:26.425: INFO: Retrieved 17/17 results with rv 27817 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTcsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  May  4 13:11:26.477: INFO: Retrieved 17/17 results with rv 27817 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTcsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  May  4 13:11:26.526: INFO: Retrieved 17/17 results with rv 27817 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTcsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  May  4 13:11:26.575: INFO: Retrieved 17/17 results with rv 27817 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTcsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  May  4 13:11:26.626: INFO: Retrieved 17/17 results with rv 27817 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTcsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  May  4 13:11:26.675: INFO: Retrieved 17/17 results with rv 27817 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTcsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  May  4 13:11:26.725: INFO: Retrieved 17/17 results with rv 27817 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTcsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  May  4 13:11:26.777: INFO: Retrieved 17/17 results with rv 27817 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTcsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  May  4 13:11:26.825: INFO: Retrieved 17/17 results with rv 27817 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTcsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  May  4 13:11:26.874: INFO: Retrieved 17/17 results with rv 27817 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTcsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  May  4 13:11:26.926: INFO: Retrieved 17/17 results with rv 27817 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTcsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  May  4 13:11:26.975: INFO: Retrieved 17/17 results with rv 27817 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTcsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  May  4 13:11:27.025: INFO: Retrieved 17/17 results with rv 27817 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTcsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  May  4 13:11:27.077: INFO: Retrieved 17/17 results with rv 27817 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTcsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  May  4 13:11:27.126: INFO: Retrieved 17/17 results with rv 27817 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTcsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  May  4 13:11:27.175: INFO: Retrieved 17/17 results with rv 27817 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTcsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  May  4 13:11:27.227: INFO: Retrieved 17/17 results with rv 27817 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTcsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  May  4 13:11:27.276: INFO: Retrieved 17/17 results with rv 27817 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTcsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  May  4 13:11:27.324: INFO: Retrieved 17/17 results with rv 27817 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTcsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  May  4 13:11:27.377: INFO: Retrieved 17/17 results with rv 27817 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTcsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  May  4 13:11:27.426: INFO: Retrieved 17/17 results with rv 27817 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTcsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  May  4 13:11:27.475: INFO: Retrieved 17/17 results with rv 27817 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTcsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  May  4 13:11:27.527: INFO: Retrieved 17/17 results with rv 27817 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjc4MTcsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  May  4 13:11:27.575: INFO: Retrieved 9/17 results with rv 27817 and continue 
  STEP: retrieving those results all at once @ 05/04/24 13:11:27.575
  May  4 13:11:27.630: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-9043" for this suite. @ 05/04/24 13:11:27.676
• [21.461 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 05/04/24 13:11:27.731
  May  4 13:11:27.731: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename deployment @ 05/04/24 13:11:27.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:11:27.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:11:27.754
  STEP: creating a Deployment @ 05/04/24 13:11:27.76
  STEP: waiting for Deployment to be created @ 05/04/24 13:11:27.766
  STEP: waiting for all Replicas to be Ready @ 05/04/24 13:11:27.767
  May  4 13:11:27.769: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May  4 13:11:27.769: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May  4 13:11:27.780: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May  4 13:11:27.780: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May  4 13:11:27.795: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May  4 13:11:27.795: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May  4 13:11:28.009: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May  4 13:11:28.009: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  May  4 13:11:29.033: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  May  4 13:11:29.033: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  May  4 13:11:29.434: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 05/04/24 13:11:29.435
  May  4 13:11:29.444: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 05/04/24 13:11:29.445
  May  4 13:11:29.446: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 0
  May  4 13:11:29.446: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 0
  May  4 13:11:29.447: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 0
  May  4 13:11:29.447: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 0
  May  4 13:11:29.447: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 0
  May  4 13:11:29.447: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 0
  May  4 13:11:29.447: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 0
  May  4 13:11:29.448: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 0
  May  4 13:11:29.448: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 1
  May  4 13:11:29.448: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 1
  May  4 13:11:29.448: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 2
  May  4 13:11:29.448: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 2
  May  4 13:11:29.448: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 2
  May  4 13:11:29.448: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 2
  May  4 13:11:29.454: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 2
  May  4 13:11:29.454: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 2
  May  4 13:11:29.470: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 2
  May  4 13:11:29.470: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 2
  May  4 13:11:29.511: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 1
  May  4 13:11:29.511: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 1
  May  4 13:11:29.526: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 1
  May  4 13:11:29.526: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 1
  May  4 13:11:31.048: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 2
  May  4 13:11:31.048: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 2
  May  4 13:11:31.072: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 1
  STEP: listing Deployments @ 05/04/24 13:11:31.072
  May  4 13:11:31.075: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 05/04/24 13:11:31.075
  May  4 13:11:31.095: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 05/04/24 13:11:31.096
  May  4 13:11:31.101: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  May  4 13:11:31.107: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  May  4 13:11:31.126: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  May  4 13:11:31.149: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  May  4 13:11:31.161: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  May  4 13:11:32.092: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  May  4 13:11:32.123: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  May  4 13:11:32.146: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  May  4 13:11:33.459: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 05/04/24 13:11:33.483
  STEP: fetching the DeploymentStatus @ 05/04/24 13:11:33.492
  May  4 13:11:33.501: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 1
  May  4 13:11:33.501: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 1
  May  4 13:11:33.501: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 1
  May  4 13:11:33.501: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 1
  May  4 13:11:33.501: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 1
  May  4 13:11:33.501: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 2
  May  4 13:11:33.501: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 2
  May  4 13:11:33.501: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 2
  May  4 13:11:33.501: INFO: observed Deployment test-deployment in namespace deployment-6971 with ReadyReplicas 3
  STEP: deleting the Deployment @ 05/04/24 13:11:33.502
  May  4 13:11:33.512: INFO: observed event type MODIFIED
  May  4 13:11:33.512: INFO: observed event type MODIFIED
  May  4 13:11:33.512: INFO: observed event type MODIFIED
  May  4 13:11:33.513: INFO: observed event type MODIFIED
  May  4 13:11:33.513: INFO: observed event type MODIFIED
  May  4 13:11:33.513: INFO: observed event type MODIFIED
  May  4 13:11:33.513: INFO: observed event type MODIFIED
  May  4 13:11:33.513: INFO: observed event type MODIFIED
  May  4 13:11:33.513: INFO: observed event type MODIFIED
  May  4 13:11:33.513: INFO: observed event type MODIFIED
  May  4 13:11:33.513: INFO: observed event type MODIFIED
  May  4 13:11:33.513: INFO: observed event type MODIFIED
  May  4 13:11:33.516: INFO: Log out all the ReplicaSets if there is no deployment created
  May  4 13:11:33.521: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6971",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "409cf690-3496-41dc-97a6-f401ec5a7474",
      ResourceVersion: (string) (len=5) "28142",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850425089,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "0a4f3a56-756f-4676-88a0-2ed7b887e11f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850425093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 30 61 34 66  33 61 35 36 2d 37 35 36  |":\"0a4f3a56-756|
              00000130  66 2d 34 36 37 36 2d 38  38 61 30 2d 32 65 64 37  |f-4676-88a0-2ed7|
              00000140  62 38 38 37 65 31 31 66  5c 22 7d 22 3a 7b 7d 7d  |b887e11f\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850425093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  May  4 13:11:33.524: INFO: pod: "test-deployment-64fd565c98-gpx8n":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-gpx8n",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-6971",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4c4ca50b-1fb9-463e-89f4-ebe73ab66dce",
      ResourceVersion: (string) (len=5) "28134",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850425089,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850425095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "409cf690-3496-41dc-97a6-f401ec5a7474",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850425089,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  34 30 39 63 66 36 39 30  |uid\":\"409cf690|
              000000a0  2d 33 34 39 36 2d 34 31  64 63 2d 39 37 61 36 2d  |-3496-41dc-97a6-|
              000000b0  66 34 30 31 65 63 35 61  37 34 37 34 5c 22 7d 22  |f401ec5a7474\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850425091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 34  39 2e 32 38 5c 22 7d 22  |2.168.149.28\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d2slt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d2slt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-18-228",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850425091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850425089,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850425091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850425091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850425089,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.18.228",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.18.228"
        }
      },
      PodIP: (string) (len=14) "192.168.149.28",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.149.28"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850425089,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850425090,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://3621a4426bb73c5977836acef73b6edb1204686732b48d8f29917678ecf1fc3d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  May  4 13:11:33.526: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6971",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c41d986d-2f17-454b-9056-f76367a850eb",
      ResourceVersion: (string) (len=5) "28127",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850425091,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "0a4f3a56-756f-4676-88a0-2ed7b887e11f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850425092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 30 61 34 66  33 61 35 36 2d 37 35 36  |":\"0a4f3a56-756|
              00000130  66 2d 34 36 37 36 2d 38  38 61 30 2d 32 65 64 37  |f-4676-88a0-2ed7|
              00000140  62 38 38 37 65 31 31 66  5c 22 7d 22 3a 7b 7d 7d  |b887e11f\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850425093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  May  4 13:11:33.533: INFO: pod: "test-deployment-79ff746c4-8khpz":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-8khpz",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-6971",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "66c3a9db-d546-4087-80ae-a80b77f39542",
      ResourceVersion: (string) (len=5) "28124",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850425092,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "c41d986d-2f17-454b-9056-f76367a850eb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850425092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  63 34 31 64 39 38 36 64  |uid\":\"c41d986d|
              000000a0  2d 32 66 31 37 2d 34 35  34 62 2d 39 30 35 36 2d  |-2f17-454b-9056-|
              000000b0  66 37 36 33 36 37 61 38  35 30 65 62 5c 22 7d 22  |f76367a850eb\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850425093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 38  36 2e 35 31 5c 22 7d 22  |2.168.186.51\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v848g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v848g",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-72-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850425093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850425092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850425093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850425093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850425092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.72.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.72.79"
        }
      },
      PodIP: (string) (len=14) "192.168.186.51",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.186.51"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850425092,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850425092,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4c8776f25c6f2c94c9dd85afe726a56120c4efdcaf5592ae37c92191d3b16a05",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  May  4 13:11:33.535: INFO: pod: "test-deployment-79ff746c4-jz74x":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-jz74x",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-6971",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c0d583ad-fcc9-42a7-b6b4-380e55ead09a",
      ResourceVersion: (string) (len=5) "27957",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850425091,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "c41d986d-2f17-454b-9056-f76367a850eb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850425091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  63 34 31 64 39 38 36 64  |uid\":\"c41d986d|
              000000a0  2d 32 66 31 37 2d 34 35  34 62 2d 39 30 35 36 2d  |-2f17-454b-9056-|
              000000b0  66 37 36 33 36 37 61 38  35 30 65 62 5c 22 7d 22  |f76367a850eb\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850425092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 34  39 2e 33 32 5c 22 7d 22  |2.168.149.32\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lkv7h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lkv7h",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-18-228",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850425092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850425091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850425092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850425092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850425091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.18.228",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.18.228"
        }
      },
      PodIP: (string) (len=14) "192.168.149.32",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.149.32"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850425091,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850425091,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5dbf46571be06fcfbfe0dd6c414c28a97abf6e62032b48dad6cb4b350e658bc2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  May  4 13:11:33.536: INFO: ReplicaSet "test-deployment-7fcc79b8c7":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-7fcc79b8c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6971",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b492a11f-8acd-4322-a83b-41561d85793d",
      ResourceVersion: (string) (len=5) "27908",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850425087,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "0a4f3a56-756f-4676-88a0-2ed7b887e11f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850425091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 30 61 34 66  33 61 35 36 2d 37 35 36  |":\"0a4f3a56-756|
              00000130  66 2d 34 36 37 36 2d 38  38 61 30 2d 32 65 64 37  |f-4676-88a0-2ed7|
              00000140  62 38 38 37 65 31 31 66  5c 22 7d 22 3a 7b 7d 7d  |b887e11f\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850425091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  May  4 13:11:33.542: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6971" for this suite. @ 05/04/24 13:11:33.546
• [5.823 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 05/04/24 13:11:33.555
  May  4 13:11:33.555: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename sched-preemption @ 05/04/24 13:11:33.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:11:33.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:11:33.58
  May  4 13:11:33.597: INFO: Waiting up to 1m0s for all nodes to be ready
  May  4 13:12:33.604: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 05/04/24 13:12:33.608
  May  4 13:12:33.629: INFO: Created pod: pod0-0-sched-preemption-low-priority
  May  4 13:12:33.636: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  May  4 13:12:33.656: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  May  4 13:12:33.662: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  May  4 13:12:33.680: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  May  4 13:12:33.687: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 05/04/24 13:12:33.687
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 05/04/24 13:12:35.714
  May  4 13:12:39.827: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7188" for this suite. @ 05/04/24 13:12:39.831
• [66.281 seconds]
------------------------------
SSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 05/04/24 13:12:39.836
  May  4 13:12:39.836: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename disruption @ 05/04/24 13:12:39.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:12:39.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:12:39.859
  STEP: creating the pdb @ 05/04/24 13:12:39.862
  STEP: Waiting for the pdb to be processed @ 05/04/24 13:12:39.867
  STEP: updating the pdb @ 05/04/24 13:12:41.874
  STEP: Waiting for the pdb to be processed @ 05/04/24 13:12:41.883
  STEP: patching the pdb @ 05/04/24 13:12:41.89
  STEP: Waiting for the pdb to be processed @ 05/04/24 13:12:41.898
  STEP: Waiting for the pdb to be deleted @ 05/04/24 13:12:43.911
  May  4 13:12:43.916: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2539" for this suite. @ 05/04/24 13:12:43.918
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 05/04/24 13:12:43.925
  May  4 13:12:43.925: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename gc @ 05/04/24 13:12:43.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:12:43.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:12:43.946
  STEP: create the rc @ 05/04/24 13:12:43.953
  W0504 13:12:43.960010      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 05/04/24 13:12:49.974
  STEP: wait for the rc to be deleted @ 05/04/24 13:12:49.986
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 05/04/24 13:12:54.992
  STEP: Gathering metrics @ 05/04/24 13:13:25
  W0504 13:13:25.007323      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  May  4 13:13:25.007: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May  4 13:13:25.007: INFO: Deleting pod "simpletest.rc-2fww7" in namespace "gc-8112"
  May  4 13:13:25.021: INFO: Deleting pod "simpletest.rc-2j46m" in namespace "gc-8112"
  May  4 13:13:25.034: INFO: Deleting pod "simpletest.rc-2n7js" in namespace "gc-8112"
  May  4 13:13:25.046: INFO: Deleting pod "simpletest.rc-4hc7x" in namespace "gc-8112"
  May  4 13:13:25.058: INFO: Deleting pod "simpletest.rc-4hpxv" in namespace "gc-8112"
  May  4 13:13:25.069: INFO: Deleting pod "simpletest.rc-4sjcq" in namespace "gc-8112"
  May  4 13:13:25.083: INFO: Deleting pod "simpletest.rc-4sxm4" in namespace "gc-8112"
  May  4 13:13:25.097: INFO: Deleting pod "simpletest.rc-52v94" in namespace "gc-8112"
  May  4 13:13:25.110: INFO: Deleting pod "simpletest.rc-5jz2b" in namespace "gc-8112"
  May  4 13:13:25.121: INFO: Deleting pod "simpletest.rc-5x7mb" in namespace "gc-8112"
  May  4 13:13:25.137: INFO: Deleting pod "simpletest.rc-5zsgg" in namespace "gc-8112"
  May  4 13:13:25.150: INFO: Deleting pod "simpletest.rc-6ctbh" in namespace "gc-8112"
  May  4 13:13:25.165: INFO: Deleting pod "simpletest.rc-6jj8r" in namespace "gc-8112"
  May  4 13:13:25.177: INFO: Deleting pod "simpletest.rc-6plpw" in namespace "gc-8112"
  May  4 13:13:25.190: INFO: Deleting pod "simpletest.rc-7fdqp" in namespace "gc-8112"
  May  4 13:13:25.207: INFO: Deleting pod "simpletest.rc-7hsh5" in namespace "gc-8112"
  May  4 13:13:25.220: INFO: Deleting pod "simpletest.rc-7phkw" in namespace "gc-8112"
  May  4 13:13:25.237: INFO: Deleting pod "simpletest.rc-7s7jt" in namespace "gc-8112"
  May  4 13:13:25.248: INFO: Deleting pod "simpletest.rc-7tvcz" in namespace "gc-8112"
  May  4 13:13:25.265: INFO: Deleting pod "simpletest.rc-8dwkk" in namespace "gc-8112"
  May  4 13:13:25.274: INFO: Deleting pod "simpletest.rc-8gn45" in namespace "gc-8112"
  May  4 13:13:25.286: INFO: Deleting pod "simpletest.rc-8gqqv" in namespace "gc-8112"
  May  4 13:13:25.304: INFO: Deleting pod "simpletest.rc-8j8l6" in namespace "gc-8112"
  May  4 13:13:25.319: INFO: Deleting pod "simpletest.rc-8jztx" in namespace "gc-8112"
  May  4 13:13:25.334: INFO: Deleting pod "simpletest.rc-9l59b" in namespace "gc-8112"
  May  4 13:13:25.349: INFO: Deleting pod "simpletest.rc-9xvnq" in namespace "gc-8112"
  May  4 13:13:25.381: INFO: Deleting pod "simpletest.rc-bdpjq" in namespace "gc-8112"
  May  4 13:13:25.406: INFO: Deleting pod "simpletest.rc-bgp8b" in namespace "gc-8112"
  May  4 13:13:25.438: INFO: Deleting pod "simpletest.rc-bvdqq" in namespace "gc-8112"
  May  4 13:13:25.457: INFO: Deleting pod "simpletest.rc-c2f74" in namespace "gc-8112"
  May  4 13:13:25.471: INFO: Deleting pod "simpletest.rc-c7qb7" in namespace "gc-8112"
  May  4 13:13:25.484: INFO: Deleting pod "simpletest.rc-chcrj" in namespace "gc-8112"
  May  4 13:13:25.507: INFO: Deleting pod "simpletest.rc-djcq6" in namespace "gc-8112"
  May  4 13:13:25.518: INFO: Deleting pod "simpletest.rc-dl9rh" in namespace "gc-8112"
  May  4 13:13:25.535: INFO: Deleting pod "simpletest.rc-dsrjq" in namespace "gc-8112"
  May  4 13:13:25.548: INFO: Deleting pod "simpletest.rc-f4gsw" in namespace "gc-8112"
  May  4 13:13:25.563: INFO: Deleting pod "simpletest.rc-fcnk7" in namespace "gc-8112"
  May  4 13:13:25.577: INFO: Deleting pod "simpletest.rc-ffn72" in namespace "gc-8112"
  May  4 13:13:25.589: INFO: Deleting pod "simpletest.rc-fzbl2" in namespace "gc-8112"
  May  4 13:13:25.606: INFO: Deleting pod "simpletest.rc-g8cqc" in namespace "gc-8112"
  May  4 13:13:25.620: INFO: Deleting pod "simpletest.rc-g95fb" in namespace "gc-8112"
  May  4 13:13:25.633: INFO: Deleting pod "simpletest.rc-gqmzw" in namespace "gc-8112"
  May  4 13:13:25.649: INFO: Deleting pod "simpletest.rc-gsfzv" in namespace "gc-8112"
  May  4 13:13:25.666: INFO: Deleting pod "simpletest.rc-gw9z4" in namespace "gc-8112"
  May  4 13:13:25.681: INFO: Deleting pod "simpletest.rc-h5svt" in namespace "gc-8112"
  May  4 13:13:25.695: INFO: Deleting pod "simpletest.rc-hk52w" in namespace "gc-8112"
  May  4 13:13:25.711: INFO: Deleting pod "simpletest.rc-hl5lg" in namespace "gc-8112"
  May  4 13:13:25.734: INFO: Deleting pod "simpletest.rc-j8rtd" in namespace "gc-8112"
  May  4 13:13:25.760: INFO: Deleting pod "simpletest.rc-jph4d" in namespace "gc-8112"
  May  4 13:13:25.786: INFO: Deleting pod "simpletest.rc-jr899" in namespace "gc-8112"
  May  4 13:13:25.799: INFO: Deleting pod "simpletest.rc-jtrdr" in namespace "gc-8112"
  May  4 13:13:25.813: INFO: Deleting pod "simpletest.rc-ktd8t" in namespace "gc-8112"
  May  4 13:13:25.827: INFO: Deleting pod "simpletest.rc-l27j5" in namespace "gc-8112"
  May  4 13:13:25.841: INFO: Deleting pod "simpletest.rc-lfrcs" in namespace "gc-8112"
  May  4 13:13:25.857: INFO: Deleting pod "simpletest.rc-m5lwj" in namespace "gc-8112"
  May  4 13:13:25.868: INFO: Deleting pod "simpletest.rc-mgtns" in namespace "gc-8112"
  May  4 13:13:25.881: INFO: Deleting pod "simpletest.rc-mjdvb" in namespace "gc-8112"
  May  4 13:13:25.896: INFO: Deleting pod "simpletest.rc-mmcw4" in namespace "gc-8112"
  May  4 13:13:25.910: INFO: Deleting pod "simpletest.rc-msx54" in namespace "gc-8112"
  May  4 13:13:25.921: INFO: Deleting pod "simpletest.rc-ncqp7" in namespace "gc-8112"
  May  4 13:13:25.933: INFO: Deleting pod "simpletest.rc-np2g4" in namespace "gc-8112"
  May  4 13:13:25.944: INFO: Deleting pod "simpletest.rc-ntpqk" in namespace "gc-8112"
  May  4 13:13:25.955: INFO: Deleting pod "simpletest.rc-nxswp" in namespace "gc-8112"
  May  4 13:13:25.971: INFO: Deleting pod "simpletest.rc-pv9mp" in namespace "gc-8112"
  May  4 13:13:25.989: INFO: Deleting pod "simpletest.rc-q7gpp" in namespace "gc-8112"
  May  4 13:13:26.001: INFO: Deleting pod "simpletest.rc-q9vnp" in namespace "gc-8112"
  May  4 13:13:26.023: INFO: Deleting pod "simpletest.rc-qgj8x" in namespace "gc-8112"
  May  4 13:13:26.037: INFO: Deleting pod "simpletest.rc-qjzgg" in namespace "gc-8112"
  May  4 13:13:26.050: INFO: Deleting pod "simpletest.rc-qnl66" in namespace "gc-8112"
  May  4 13:13:26.064: INFO: Deleting pod "simpletest.rc-qpb29" in namespace "gc-8112"
  May  4 13:13:26.111: INFO: Deleting pod "simpletest.rc-rhhs8" in namespace "gc-8112"
  May  4 13:13:26.161: INFO: Deleting pod "simpletest.rc-rkh4v" in namespace "gc-8112"
  May  4 13:13:26.213: INFO: Deleting pod "simpletest.rc-rl7mb" in namespace "gc-8112"
  May  4 13:13:26.257: INFO: Deleting pod "simpletest.rc-rmh8p" in namespace "gc-8112"
  May  4 13:13:26.322: INFO: Deleting pod "simpletest.rc-rmm67" in namespace "gc-8112"
  May  4 13:13:26.361: INFO: Deleting pod "simpletest.rc-rpkp9" in namespace "gc-8112"
  May  4 13:13:26.412: INFO: Deleting pod "simpletest.rc-rsxzr" in namespace "gc-8112"
  May  4 13:13:26.457: INFO: Deleting pod "simpletest.rc-s8r5h" in namespace "gc-8112"
  May  4 13:13:26.505: INFO: Deleting pod "simpletest.rc-sdn4r" in namespace "gc-8112"
  May  4 13:13:26.576: INFO: Deleting pod "simpletest.rc-slrz6" in namespace "gc-8112"
  May  4 13:13:26.620: INFO: Deleting pod "simpletest.rc-sqrkk" in namespace "gc-8112"
  May  4 13:13:26.656: INFO: Deleting pod "simpletest.rc-t5tcc" in namespace "gc-8112"
  May  4 13:13:26.723: INFO: Deleting pod "simpletest.rc-t6lz8" in namespace "gc-8112"
  May  4 13:13:26.761: INFO: Deleting pod "simpletest.rc-tkwjq" in namespace "gc-8112"
  May  4 13:13:26.806: INFO: Deleting pod "simpletest.rc-tmg2l" in namespace "gc-8112"
  May  4 13:13:26.858: INFO: Deleting pod "simpletest.rc-twv7z" in namespace "gc-8112"
  May  4 13:13:26.909: INFO: Deleting pod "simpletest.rc-txq9d" in namespace "gc-8112"
  May  4 13:13:26.957: INFO: Deleting pod "simpletest.rc-vblqs" in namespace "gc-8112"
  May  4 13:13:27.025: INFO: Deleting pod "simpletest.rc-vnxbz" in namespace "gc-8112"
  May  4 13:13:27.056: INFO: Deleting pod "simpletest.rc-w99rp" in namespace "gc-8112"
  May  4 13:13:27.112: INFO: Deleting pod "simpletest.rc-w9wkl" in namespace "gc-8112"
  May  4 13:13:27.160: INFO: Deleting pod "simpletest.rc-ww7sk" in namespace "gc-8112"
  May  4 13:13:27.214: INFO: Deleting pod "simpletest.rc-wwjv8" in namespace "gc-8112"
  May  4 13:13:27.260: INFO: Deleting pod "simpletest.rc-x4c42" in namespace "gc-8112"
  May  4 13:13:27.314: INFO: Deleting pod "simpletest.rc-xf9vb" in namespace "gc-8112"
  May  4 13:13:27.357: INFO: Deleting pod "simpletest.rc-xksmr" in namespace "gc-8112"
  May  4 13:13:27.415: INFO: Deleting pod "simpletest.rc-xn7hs" in namespace "gc-8112"
  May  4 13:13:27.461: INFO: Deleting pod "simpletest.rc-xnrtk" in namespace "gc-8112"
  May  4 13:13:27.507: INFO: Deleting pod "simpletest.rc-z692n" in namespace "gc-8112"
  May  4 13:13:27.561: INFO: Deleting pod "simpletest.rc-zlgfw" in namespace "gc-8112"
  May  4 13:13:27.608: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8112" for this suite. @ 05/04/24 13:13:27.647
• [43.782 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 05/04/24 13:13:27.708
  May  4 13:13:27.708: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename resourcequota @ 05/04/24 13:13:27.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:13:27.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:13:27.74
  STEP: Creating a ResourceQuota with terminating scope @ 05/04/24 13:13:27.743
  STEP: Ensuring ResourceQuota status is calculated @ 05/04/24 13:13:27.748
  STEP: Creating a ResourceQuota with not terminating scope @ 05/04/24 13:13:29.757
  STEP: Ensuring ResourceQuota status is calculated @ 05/04/24 13:13:29.768
  STEP: Creating a long running pod @ 05/04/24 13:13:31.772
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 05/04/24 13:13:31.79
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 05/04/24 13:13:33.796
  STEP: Deleting the pod @ 05/04/24 13:13:35.799
  STEP: Ensuring resource quota status released the pod usage @ 05/04/24 13:13:35.819
  STEP: Creating a terminating pod @ 05/04/24 13:13:37.825
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 05/04/24 13:13:37.837
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 05/04/24 13:13:39.842
  STEP: Deleting the pod @ 05/04/24 13:13:41.849
  STEP: Ensuring resource quota status released the pod usage @ 05/04/24 13:13:41.862
  May  4 13:13:43.867: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3617" for this suite. @ 05/04/24 13:13:43.87
• [16.172 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 05/04/24 13:13:43.88
  May  4 13:13:43.880: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename services @ 05/04/24 13:13:43.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:13:43.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:13:43.899
  May  4 13:13:43.904: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2399" for this suite. @ 05/04/24 13:13:43.909
• [0.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:357
  STEP: Creating a kubernetes client @ 05/04/24 13:13:43.917
  May  4 13:13:43.917: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename kubectl @ 05/04/24 13:13:43.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:13:43.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:13:43.939
  STEP: creating a replication controller @ 05/04/24 13:13:43.942
  May  4 13:13:43.942: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-1267 create -f -'
  May  4 13:13:44.024: INFO: stderr: ""
  May  4 13:13:44.024: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/04/24 13:13:44.025
  May  4 13:13:44.025: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-1267 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May  4 13:13:44.071: INFO: stderr: ""
  May  4 13:13:44.071: INFO: stdout: "update-demo-nautilus-svx9x update-demo-nautilus-t5v5t "
  May  4 13:13:44.071: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-1267 get pods update-demo-nautilus-svx9x -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May  4 13:13:44.117: INFO: stderr: ""
  May  4 13:13:44.117: INFO: stdout: ""
  May  4 13:13:44.117: INFO: update-demo-nautilus-svx9x is created but not running
  May  4 13:13:49.118: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-1267 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May  4 13:13:49.164: INFO: stderr: ""
  May  4 13:13:49.164: INFO: stdout: "update-demo-nautilus-svx9x update-demo-nautilus-t5v5t "
  May  4 13:13:49.164: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-1267 get pods update-demo-nautilus-svx9x -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May  4 13:13:49.206: INFO: stderr: ""
  May  4 13:13:49.206: INFO: stdout: "true"
  May  4 13:13:49.206: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-1267 get pods update-demo-nautilus-svx9x -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May  4 13:13:49.283: INFO: stderr: ""
  May  4 13:13:49.283: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May  4 13:13:49.283: INFO: validating pod update-demo-nautilus-svx9x
  May  4 13:13:49.290: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May  4 13:13:49.290: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May  4 13:13:49.290: INFO: update-demo-nautilus-svx9x is verified up and running
  May  4 13:13:49.290: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-1267 get pods update-demo-nautilus-t5v5t -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May  4 13:13:49.372: INFO: stderr: ""
  May  4 13:13:49.372: INFO: stdout: "true"
  May  4 13:13:49.372: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-1267 get pods update-demo-nautilus-t5v5t -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May  4 13:13:49.416: INFO: stderr: ""
  May  4 13:13:49.416: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May  4 13:13:49.416: INFO: validating pod update-demo-nautilus-t5v5t
  May  4 13:13:49.422: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May  4 13:13:49.422: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May  4 13:13:49.422: INFO: update-demo-nautilus-t5v5t is verified up and running
  STEP: scaling down the replication controller @ 05/04/24 13:13:49.422
  May  4 13:13:49.423: INFO: scanned /root for discovery docs: <nil>
  May  4 13:13:49.423: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-1267 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  May  4 13:13:50.485: INFO: stderr: ""
  May  4 13:13:50.485: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/04/24 13:13:50.485
  May  4 13:13:50.485: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-1267 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May  4 13:13:50.532: INFO: stderr: ""
  May  4 13:13:50.532: INFO: stdout: "update-demo-nautilus-svx9x update-demo-nautilus-t5v5t "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 05/04/24 13:13:50.532
  May  4 13:13:55.532: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-1267 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May  4 13:13:55.575: INFO: stderr: ""
  May  4 13:13:55.575: INFO: stdout: "update-demo-nautilus-svx9x "
  May  4 13:13:55.575: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-1267 get pods update-demo-nautilus-svx9x -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May  4 13:13:55.618: INFO: stderr: ""
  May  4 13:13:55.618: INFO: stdout: "true"
  May  4 13:13:55.619: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-1267 get pods update-demo-nautilus-svx9x -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May  4 13:13:55.663: INFO: stderr: ""
  May  4 13:13:55.663: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May  4 13:13:55.663: INFO: validating pod update-demo-nautilus-svx9x
  May  4 13:13:55.668: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May  4 13:13:55.668: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May  4 13:13:55.668: INFO: update-demo-nautilus-svx9x is verified up and running
  STEP: scaling up the replication controller @ 05/04/24 13:13:55.668
  May  4 13:13:55.669: INFO: scanned /root for discovery docs: <nil>
  May  4 13:13:55.669: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-1267 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  May  4 13:13:56.730: INFO: stderr: ""
  May  4 13:13:56.730: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/04/24 13:13:56.73
  May  4 13:13:56.730: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-1267 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  May  4 13:13:56.801: INFO: stderr: ""
  May  4 13:13:56.801: INFO: stdout: "update-demo-nautilus-95wmk update-demo-nautilus-svx9x "
  May  4 13:13:56.802: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-1267 get pods update-demo-nautilus-95wmk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May  4 13:13:56.876: INFO: stderr: ""
  May  4 13:13:56.876: INFO: stdout: "true"
  May  4 13:13:56.876: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-1267 get pods update-demo-nautilus-95wmk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May  4 13:13:56.944: INFO: stderr: ""
  May  4 13:13:56.944: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May  4 13:13:56.944: INFO: validating pod update-demo-nautilus-95wmk
  May  4 13:13:56.950: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May  4 13:13:56.950: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May  4 13:13:56.950: INFO: update-demo-nautilus-95wmk is verified up and running
  May  4 13:13:56.950: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-1267 get pods update-demo-nautilus-svx9x -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  May  4 13:13:57.022: INFO: stderr: ""
  May  4 13:13:57.022: INFO: stdout: "true"
  May  4 13:13:57.022: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-1267 get pods update-demo-nautilus-svx9x -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  May  4 13:13:57.093: INFO: stderr: ""
  May  4 13:13:57.093: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  May  4 13:13:57.093: INFO: validating pod update-demo-nautilus-svx9x
  May  4 13:13:57.098: INFO: got data: {
    "image": "nautilus.jpg"
  }

  May  4 13:13:57.098: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  May  4 13:13:57.098: INFO: update-demo-nautilus-svx9x is verified up and running
  STEP: using delete to clean up resources @ 05/04/24 13:13:57.098
  May  4 13:13:57.098: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-1267 delete --grace-period=0 --force -f -'
  May  4 13:13:57.172: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May  4 13:13:57.172: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  May  4 13:13:57.172: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-1267 get rc,svc -l name=update-demo --no-headers'
  May  4 13:13:57.274: INFO: stderr: "No resources found in kubectl-1267 namespace.\n"
  May  4 13:13:57.274: INFO: stdout: ""
  May  4 13:13:57.274: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-1267 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  May  4 13:13:57.378: INFO: stderr: ""
  May  4 13:13:57.378: INFO: stdout: ""
  May  4 13:13:57.379: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1267" for this suite. @ 05/04/24 13:13:57.383
• [13.474 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 05/04/24 13:13:57.391
  May  4 13:13:57.391: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename field-validation @ 05/04/24 13:13:57.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:13:57.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:13:57.416
  May  4 13:13:57.422: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  W0504 13:13:59.960866      19 warnings.go:70] unknown field "alpha"
  W0504 13:13:59.960891      19 warnings.go:70] unknown field "beta"
  W0504 13:13:59.960895      19 warnings.go:70] unknown field "delta"
  W0504 13:13:59.960898      19 warnings.go:70] unknown field "epsilon"
  W0504 13:13:59.960900      19 warnings.go:70] unknown field "gamma"
  May  4 13:14:00.504: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2092" for this suite. @ 05/04/24 13:14:00.509
• [3.124 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 05/04/24 13:14:00.516
  May  4 13:14:00.516: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename crd-webhook @ 05/04/24 13:14:00.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:14:00.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:14:00.538
  STEP: Setting up server cert @ 05/04/24 13:14:00.54
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/04/24 13:14:00.793
  STEP: Deploying the custom resource conversion webhook pod @ 05/04/24 13:14:00.805
  STEP: Wait for the deployment to be ready @ 05/04/24 13:14:00.82
  May  4 13:14:00.829: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/04/24 13:14:02.842
  STEP: Verifying the service has paired with the endpoint @ 05/04/24 13:14:02.86
  May  4 13:14:03.861: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  May  4 13:14:03.869: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Creating a v1 custom resource @ 05/04/24 13:14:06.423
  STEP: Create a v2 custom resource @ 05/04/24 13:14:06.444
  STEP: List CRs in v1 @ 05/04/24 13:14:06.468
  STEP: List CRs in v2 @ 05/04/24 13:14:06.474
  May  4 13:14:07.031: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-982" for this suite. @ 05/04/24 13:14:07.034
• [6.528 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 05/04/24 13:14:07.044
  May  4 13:14:07.044: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename downward-api @ 05/04/24 13:14:07.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:14:07.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:14:07.066
  STEP: Creating the pod @ 05/04/24 13:14:07.069
  May  4 13:14:09.619: INFO: Successfully updated pod "annotationupdate075f626f-17d0-4c2e-9896-a9642d186b12"
  May  4 13:14:13.645: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5667" for this suite. @ 05/04/24 13:14:13.649
• [6.612 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:655
  STEP: Creating a kubernetes client @ 05/04/24 13:14:13.657
  May  4 13:14:13.657: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename job @ 05/04/24 13:14:13.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:14:13.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:14:13.677
  STEP: Creating a job @ 05/04/24 13:14:13.68
  STEP: Ensuring active pods == parallelism @ 05/04/24 13:14:13.685
  STEP: Orphaning one of the Job's Pods @ 05/04/24 13:14:15.69
  May  4 13:14:16.206: INFO: Successfully updated pod "adopt-release-h2vjw"
  STEP: Checking that the Job readopts the Pod @ 05/04/24 13:14:16.207
  STEP: Removing the labels from the Job's Pod @ 05/04/24 13:14:18.214
  May  4 13:14:18.728: INFO: Successfully updated pod "adopt-release-h2vjw"
  STEP: Checking that the Job releases the Pod @ 05/04/24 13:14:18.728
  May  4 13:14:20.738: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1399" for this suite. @ 05/04/24 13:14:20.741
• [7.092 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 05/04/24 13:14:20.749
  May  4 13:14:20.749: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename resourcequota @ 05/04/24 13:14:20.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:14:20.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:14:20.776
  STEP: Creating resourceQuota "e2e-rq-status-zwktw" @ 05/04/24 13:14:20.782
  May  4 13:14:20.789: INFO: Resource quota "e2e-rq-status-zwktw" reports spec: hard cpu limit of 500m
  May  4 13:14:20.789: INFO: Resource quota "e2e-rq-status-zwktw" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-zwktw" /status @ 05/04/24 13:14:20.789
  STEP: Confirm /status for "e2e-rq-status-zwktw" resourceQuota via watch @ 05/04/24 13:14:20.796
  May  4 13:14:20.797: INFO: observed resourceQuota "e2e-rq-status-zwktw" in namespace "resourcequota-565" with hard status: v1.ResourceList(nil)
  May  4 13:14:20.797: INFO: Found resourceQuota "e2e-rq-status-zwktw" in namespace "resourcequota-565" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  May  4 13:14:20.798: INFO: ResourceQuota "e2e-rq-status-zwktw" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 05/04/24 13:14:20.802
  May  4 13:14:20.808: INFO: Resource quota "e2e-rq-status-zwktw" reports spec: hard cpu limit of 1
  May  4 13:14:20.808: INFO: Resource quota "e2e-rq-status-zwktw" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-zwktw" /status @ 05/04/24 13:14:20.808
  STEP: Confirm /status for "e2e-rq-status-zwktw" resourceQuota via watch @ 05/04/24 13:14:20.812
  May  4 13:14:20.814: INFO: observed resourceQuota "e2e-rq-status-zwktw" in namespace "resourcequota-565" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  May  4 13:14:20.814: INFO: Found resourceQuota "e2e-rq-status-zwktw" in namespace "resourcequota-565" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  May  4 13:14:20.814: INFO: ResourceQuota "e2e-rq-status-zwktw" /status was patched
  STEP: Get "e2e-rq-status-zwktw" /status @ 05/04/24 13:14:20.814
  May  4 13:14:20.818: INFO: Resourcequota "e2e-rq-status-zwktw" reports status: hard cpu of 1
  May  4 13:14:20.818: INFO: Resourcequota "e2e-rq-status-zwktw" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-zwktw" /status before checking Spec is unchanged @ 05/04/24 13:14:20.821
  May  4 13:14:20.834: INFO: Resourcequota "e2e-rq-status-zwktw" reports status: hard cpu of 2
  May  4 13:14:20.834: INFO: Resourcequota "e2e-rq-status-zwktw" reports status: hard memory of 2Gi
  May  4 13:14:20.835: INFO: observed resourceQuota "e2e-rq-status-zwktw" in namespace "resourcequota-565" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  May  4 13:14:20.835: INFO: Found resourceQuota "e2e-rq-status-zwktw" in namespace "resourcequota-565" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  May  4 13:14:20.839: INFO: ResourceQuota "e2e-rq-status-zwktw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zwktw", GenerateName:"", Namespace:"resourcequota-565", SelfLink:"", UID:"82728dc2-84fa-49b5-a4df-f35bd76e037d", ResourceVersion:"31801", Generation:0, CreationTimestamp:time.Date(2024, time.May, 4, 13, 14, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zwktw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 4, 13, 14, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010d8258), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 4, 13, 14, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010d8318), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 4, 13, 14, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010d8360), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May  4 13:14:25.840: INFO: ResourceQuota "e2e-rq-status-zwktw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zwktw", GenerateName:"", Namespace:"resourcequota-565", SelfLink:"", UID:"82728dc2-84fa-49b5-a4df-f35bd76e037d", ResourceVersion:"31801", Generation:0, CreationTimestamp:time.Date(2024, time.May, 4, 13, 14, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zwktw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 4, 13, 14, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0063f54a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 4, 13, 14, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0063f5500), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 4, 13, 14, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0063f5590), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May  4 13:14:30.842: INFO: ResourceQuota "e2e-rq-status-zwktw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zwktw", GenerateName:"", Namespace:"resourcequota-565", SelfLink:"", UID:"82728dc2-84fa-49b5-a4df-f35bd76e037d", ResourceVersion:"31801", Generation:0, CreationTimestamp:time.Date(2024, time.May, 4, 13, 14, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zwktw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 4, 13, 14, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0063f5920), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 4, 13, 14, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0063f59c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 4, 13, 14, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0063f5ab8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May  4 13:14:35.841: INFO: ResourceQuota "e2e-rq-status-zwktw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zwktw", GenerateName:"", Namespace:"resourcequota-565", SelfLink:"", UID:"82728dc2-84fa-49b5-a4df-f35bd76e037d", ResourceVersion:"31801", Generation:0, CreationTimestamp:time.Date(2024, time.May, 4, 13, 14, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zwktw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 4, 13, 14, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0063f5ec0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 4, 13, 14, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0063f5f08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 4, 13, 14, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0063f5f38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May  4 13:14:40.840: INFO: ResourceQuota "e2e-rq-status-zwktw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zwktw", GenerateName:"", Namespace:"resourcequota-565", SelfLink:"", UID:"82728dc2-84fa-49b5-a4df-f35bd76e037d", ResourceVersion:"31801", Generation:0, CreationTimestamp:time.Date(2024, time.May, 4, 13, 14, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zwktw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 4, 13, 14, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0015f41f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 4, 13, 14, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0015f4258), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 4, 13, 14, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0015f42d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May  4 13:14:45.842: INFO: ResourceQuota "e2e-rq-status-zwktw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zwktw", GenerateName:"", Namespace:"resourcequota-565", SelfLink:"", UID:"82728dc2-84fa-49b5-a4df-f35bd76e037d", ResourceVersion:"31801", Generation:0, CreationTimestamp:time.Date(2024, time.May, 4, 13, 14, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zwktw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 4, 13, 14, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010d8840), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 4, 13, 14, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010d88a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 4, 13, 14, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010d88e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May  4 13:14:50.841: INFO: ResourceQuota "e2e-rq-status-zwktw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zwktw", GenerateName:"", Namespace:"resourcequota-565", SelfLink:"", UID:"82728dc2-84fa-49b5-a4df-f35bd76e037d", ResourceVersion:"31801", Generation:0, CreationTimestamp:time.Date(2024, time.May, 4, 13, 14, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zwktw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 4, 13, 14, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0015f4630), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 4, 13, 14, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0015f4660), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 4, 13, 14, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0015f46a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May  4 13:14:55.839: INFO: ResourceQuota "e2e-rq-status-zwktw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zwktw", GenerateName:"", Namespace:"resourcequota-565", SelfLink:"", UID:"82728dc2-84fa-49b5-a4df-f35bd76e037d", ResourceVersion:"31801", Generation:0, CreationTimestamp:time.Date(2024, time.May, 4, 13, 14, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zwktw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 4, 13, 14, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010d8ba0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 4, 13, 14, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010d8c00), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 4, 13, 14, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010d8c48), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May  4 13:15:00.842: INFO: ResourceQuota "e2e-rq-status-zwktw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-zwktw", GenerateName:"", Namespace:"resourcequota-565", SelfLink:"", UID:"82728dc2-84fa-49b5-a4df-f35bd76e037d", ResourceVersion:"31801", Generation:0, CreationTimestamp:time.Date(2024, time.May, 4, 13, 14, 20, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-zwktw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 4, 13, 14, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0015f4be8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 4, 13, 14, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0015f4c48), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 4, 13, 14, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0015f4ca8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  May  4 13:15:05.840: INFO: ResourceQuota "e2e-rq-status-zwktw" Spec was unchanged and /status reset
  May  4 13:15:05.840: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-565" for this suite. @ 05/04/24 13:15:05.846
• [45.104 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 05/04/24 13:15:05.853
  May  4 13:15:05.853: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename emptydir-wrapper @ 05/04/24 13:15:05.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:15:05.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:15:05.875
  STEP: Cleaning up the secret @ 05/04/24 13:15:07.912
  STEP: Cleaning up the configmap @ 05/04/24 13:15:07.917
  STEP: Cleaning up the pod @ 05/04/24 13:15:07.923
  May  4 13:15:07.938: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-2905" for this suite. @ 05/04/24 13:15:07.941
• [2.096 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 05/04/24 13:15:07.949
  May  4 13:15:07.949: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename var-expansion @ 05/04/24 13:15:07.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:15:07.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:15:07.971
  STEP: Creating a pod to test substitution in container's args @ 05/04/24 13:15:07.973
  STEP: Saw pod success @ 05/04/24 13:15:11.993
  May  4 13:15:11.996: INFO: Trying to get logs from node ip-172-31-18-228 pod var-expansion-73cd4774-2862-45f9-9c7c-c219d1dc724c container dapi-container: <nil>
  STEP: delete the pod @ 05/04/24 13:15:12.002
  May  4 13:15:12.020: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2230" for this suite. @ 05/04/24 13:15:12.025
• [4.082 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 05/04/24 13:15:12.032
  May  4 13:15:12.032: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/04/24 13:15:12.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:15:12.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:15:12.051
  May  4 13:15:12.056: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 13:15:15.168: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1544" for this suite. @ 05/04/24 13:15:15.173
• [3.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 05/04/24 13:15:15.18
  May  4 13:15:15.180: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename podtemplate @ 05/04/24 13:15:15.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:15:15.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:15:15.201
  STEP: Create a pod template @ 05/04/24 13:15:15.204
  STEP: Replace a pod template @ 05/04/24 13:15:15.208
  May  4 13:15:15.218: INFO: Found updated podtemplate annotation: "true"

  May  4 13:15:15.218: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-4217" for this suite. @ 05/04/24 13:15:15.221
• [0.047 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2199
  STEP: Creating a kubernetes client @ 05/04/24 13:15:15.227
  May  4 13:15:15.227: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename services @ 05/04/24 13:15:15.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:15:15.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:15:15.252
  STEP: creating service in namespace services-3123 @ 05/04/24 13:15:15.254
  STEP: creating service affinity-clusterip-transition in namespace services-3123 @ 05/04/24 13:15:15.254
  STEP: creating replication controller affinity-clusterip-transition in namespace services-3123 @ 05/04/24 13:15:15.266
  I0504 13:15:15.273645      19 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-3123, replica count: 3
  I0504 13:15:18.325361      19 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May  4 13:15:18.333: INFO: Creating new exec pod
  May  4 13:15:21.353: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-3123 exec execpod-affinityqgx6x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  May  4 13:15:21.455: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip-transition 80\n+ echo hostName\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  May  4 13:15:21.455: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May  4 13:15:21.455: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-3123 exec execpod-affinityqgx6x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.77 80'
  May  4 13:15:21.546: INFO: stderr: "+ nc -v -t -w 2 10.152.183.77 80\n+ echo hostName\nConnection to 10.152.183.77 80 port [tcp/http] succeeded!\n"
  May  4 13:15:21.546: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May  4 13:15:21.557: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-3123 exec execpod-affinityqgx6x -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.77:80/ ; done'
  May  4 13:15:21.712: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n"
  May  4 13:15:21.712: INFO: stdout: "\naffinity-clusterip-transition-67bcv\naffinity-clusterip-transition-67bcv\naffinity-clusterip-transition-67bcv\naffinity-clusterip-transition-67bcv\naffinity-clusterip-transition-jlrgs\naffinity-clusterip-transition-jlrgs\naffinity-clusterip-transition-jlrgs\naffinity-clusterip-transition-b2bmw\naffinity-clusterip-transition-67bcv\naffinity-clusterip-transition-jlrgs\naffinity-clusterip-transition-67bcv\naffinity-clusterip-transition-jlrgs\naffinity-clusterip-transition-jlrgs\naffinity-clusterip-transition-67bcv\naffinity-clusterip-transition-67bcv\naffinity-clusterip-transition-67bcv"
  May  4 13:15:21.712: INFO: Received response from host: affinity-clusterip-transition-67bcv
  May  4 13:15:21.712: INFO: Received response from host: affinity-clusterip-transition-67bcv
  May  4 13:15:21.712: INFO: Received response from host: affinity-clusterip-transition-67bcv
  May  4 13:15:21.712: INFO: Received response from host: affinity-clusterip-transition-67bcv
  May  4 13:15:21.712: INFO: Received response from host: affinity-clusterip-transition-jlrgs
  May  4 13:15:21.712: INFO: Received response from host: affinity-clusterip-transition-jlrgs
  May  4 13:15:21.712: INFO: Received response from host: affinity-clusterip-transition-jlrgs
  May  4 13:15:21.712: INFO: Received response from host: affinity-clusterip-transition-b2bmw
  May  4 13:15:21.712: INFO: Received response from host: affinity-clusterip-transition-67bcv
  May  4 13:15:21.712: INFO: Received response from host: affinity-clusterip-transition-jlrgs
  May  4 13:15:21.712: INFO: Received response from host: affinity-clusterip-transition-67bcv
  May  4 13:15:21.712: INFO: Received response from host: affinity-clusterip-transition-jlrgs
  May  4 13:15:21.712: INFO: Received response from host: affinity-clusterip-transition-jlrgs
  May  4 13:15:21.712: INFO: Received response from host: affinity-clusterip-transition-67bcv
  May  4 13:15:21.712: INFO: Received response from host: affinity-clusterip-transition-67bcv
  May  4 13:15:21.712: INFO: Received response from host: affinity-clusterip-transition-67bcv
  May  4 13:15:21.723: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-3123 exec execpod-affinityqgx6x -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.77:80/ ; done'
  May  4 13:15:21.873: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.77:80/\n"
  May  4 13:15:21.873: INFO: stdout: "\naffinity-clusterip-transition-67bcv\naffinity-clusterip-transition-67bcv\naffinity-clusterip-transition-67bcv\naffinity-clusterip-transition-67bcv\naffinity-clusterip-transition-67bcv\naffinity-clusterip-transition-67bcv\naffinity-clusterip-transition-67bcv\naffinity-clusterip-transition-67bcv\naffinity-clusterip-transition-67bcv\naffinity-clusterip-transition-67bcv\naffinity-clusterip-transition-67bcv\naffinity-clusterip-transition-67bcv\naffinity-clusterip-transition-67bcv\naffinity-clusterip-transition-67bcv\naffinity-clusterip-transition-67bcv\naffinity-clusterip-transition-67bcv"
  May  4 13:15:21.873: INFO: Received response from host: affinity-clusterip-transition-67bcv
  May  4 13:15:21.873: INFO: Received response from host: affinity-clusterip-transition-67bcv
  May  4 13:15:21.873: INFO: Received response from host: affinity-clusterip-transition-67bcv
  May  4 13:15:21.873: INFO: Received response from host: affinity-clusterip-transition-67bcv
  May  4 13:15:21.873: INFO: Received response from host: affinity-clusterip-transition-67bcv
  May  4 13:15:21.873: INFO: Received response from host: affinity-clusterip-transition-67bcv
  May  4 13:15:21.873: INFO: Received response from host: affinity-clusterip-transition-67bcv
  May  4 13:15:21.873: INFO: Received response from host: affinity-clusterip-transition-67bcv
  May  4 13:15:21.873: INFO: Received response from host: affinity-clusterip-transition-67bcv
  May  4 13:15:21.873: INFO: Received response from host: affinity-clusterip-transition-67bcv
  May  4 13:15:21.873: INFO: Received response from host: affinity-clusterip-transition-67bcv
  May  4 13:15:21.873: INFO: Received response from host: affinity-clusterip-transition-67bcv
  May  4 13:15:21.873: INFO: Received response from host: affinity-clusterip-transition-67bcv
  May  4 13:15:21.873: INFO: Received response from host: affinity-clusterip-transition-67bcv
  May  4 13:15:21.873: INFO: Received response from host: affinity-clusterip-transition-67bcv
  May  4 13:15:21.873: INFO: Received response from host: affinity-clusterip-transition-67bcv
  May  4 13:15:21.873: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-3123, will wait for the garbage collector to delete the pods @ 05/04/24 13:15:21.888
  May  4 13:15:21.950: INFO: Deleting ReplicationController affinity-clusterip-transition took: 9.120071ms
  May  4 13:15:22.051: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.300941ms
  May  4 13:15:24.970: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3123" for this suite. @ 05/04/24 13:15:24.976
• [9.757 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 05/04/24 13:15:24.984
  May  4 13:15:24.984: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename runtimeclass @ 05/04/24 13:15:24.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:15:25.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:15:25.004
  May  4 13:15:25.014: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3736" for this suite. @ 05/04/24 13:15:25.018
• [0.041 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 05/04/24 13:15:25.025
  May  4 13:15:25.025: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename projected @ 05/04/24 13:15:25.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:15:25.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:15:25.045
  STEP: Creating configMap with name projected-configmap-test-volume-bf9ae337-c8a9-440d-8cac-6ce98ec4887a @ 05/04/24 13:15:25.048
  STEP: Creating a pod to test consume configMaps @ 05/04/24 13:15:25.053
  STEP: Saw pod success @ 05/04/24 13:15:27.075
  May  4 13:15:27.079: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-projected-configmaps-c2f4a06f-8afd-4e5c-855f-a9dfc1b39069 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 05/04/24 13:15:27.088
  May  4 13:15:27.107: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6747" for this suite. @ 05/04/24 13:15:27.112
• [2.093 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 05/04/24 13:15:27.119
  May  4 13:15:27.119: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename projected @ 05/04/24 13:15:27.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:15:27.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:15:27.142
  STEP: Creating configMap with name projected-configmap-test-volume-bc828ea2-b5a7-4973-a1ea-a5fd6a7c56f9 @ 05/04/24 13:15:27.145
  STEP: Creating a pod to test consume configMaps @ 05/04/24 13:15:27.148
  STEP: Saw pod success @ 05/04/24 13:15:31.17
  May  4 13:15:31.173: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-projected-configmaps-61e86b10-2396-4891-b192-1e869941b718 container agnhost-container: <nil>
  STEP: delete the pod @ 05/04/24 13:15:31.18
  May  4 13:15:31.198: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-536" for this suite. @ 05/04/24 13:15:31.203
• [4.090 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3154
  STEP: Creating a kubernetes client @ 05/04/24 13:15:31.209
  May  4 13:15:31.209: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename services @ 05/04/24 13:15:31.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:15:31.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:15:31.234
  STEP: creating an Endpoint @ 05/04/24 13:15:31.24
  STEP: waiting for available Endpoint @ 05/04/24 13:15:31.244
  STEP: listing all Endpoints @ 05/04/24 13:15:31.245
  STEP: updating the Endpoint @ 05/04/24 13:15:31.25
  STEP: fetching the Endpoint @ 05/04/24 13:15:31.255
  STEP: patching the Endpoint @ 05/04/24 13:15:31.257
  STEP: fetching the Endpoint @ 05/04/24 13:15:31.266
  STEP: deleting the Endpoint by Collection @ 05/04/24 13:15:31.269
  STEP: waiting for Endpoint deletion @ 05/04/24 13:15:31.281
  STEP: fetching the Endpoint @ 05/04/24 13:15:31.282
  May  4 13:15:31.284: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6037" for this suite. @ 05/04/24 13:15:31.289
• [0.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:530
  STEP: Creating a kubernetes client @ 05/04/24 13:15:31.297
  May  4 13:15:31.297: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename security-context-test @ 05/04/24 13:15:31.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:15:31.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:15:31.317
  May  4 13:15:35.352: INFO: Got logs for pod "busybox-privileged-false-703caa62-8b2e-4bb7-b8d2-53fecdb071ee": "ip: RTNETLINK answers: Operation not permitted\n"
  May  4 13:15:35.352: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3023" for this suite. @ 05/04/24 13:15:35.358
• [4.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 05/04/24 13:15:35.368
  May  4 13:15:35.368: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/04/24 13:15:35.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:15:35.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:15:35.395
  STEP: fetching the /apis discovery document @ 05/04/24 13:15:35.398
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 05/04/24 13:15:35.399
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 05/04/24 13:15:35.399
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 05/04/24 13:15:35.399
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 05/04/24 13:15:35.4
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 05/04/24 13:15:35.4
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 05/04/24 13:15:35.401
  May  4 13:15:35.401: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7573" for this suite. @ 05/04/24 13:15:35.405
• [0.044 seconds]
------------------------------
SS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 05/04/24 13:15:35.412
  May  4 13:15:35.412: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename cronjob @ 05/04/24 13:15:35.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:15:35.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:15:35.431
  STEP: Creating a ForbidConcurrent cronjob @ 05/04/24 13:15:35.434
  STEP: Ensuring a job is scheduled @ 05/04/24 13:15:35.444
  STEP: Ensuring exactly one is scheduled @ 05/04/24 13:16:01.451
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 05/04/24 13:16:01.455
  STEP: Ensuring no more jobs are scheduled @ 05/04/24 13:16:01.46
  STEP: Removing cronjob @ 05/04/24 13:21:01.467
  May  4 13:21:01.475: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8914" for this suite. @ 05/04/24 13:21:01.48
• [326.077 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 05/04/24 13:21:01.489
  May  4 13:21:01.489: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename services @ 05/04/24 13:21:01.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:21:01.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:21:01.515
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-5802 @ 05/04/24 13:21:01.552
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 05/04/24 13:21:01.6
  STEP: creating service externalsvc in namespace services-5802 @ 05/04/24 13:21:01.6
  STEP: creating replication controller externalsvc in namespace services-5802 @ 05/04/24 13:21:01.61
  I0504 13:21:01.618348      19 runners.go:197] Created replication controller with name: externalsvc, namespace: services-5802, replica count: 2
  I0504 13:21:04.668871      19 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 05/04/24 13:21:04.674
  May  4 13:21:04.695: INFO: Creating new exec pod
  May  4 13:21:06.716: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-5802 exec execpod5tmsw -- /bin/sh -x -c nslookup nodeport-service.services-5802.svc.cluster.local'
  May  4 13:21:06.843: INFO: stderr: "+ nslookup nodeport-service.services-5802.svc.cluster.local\n"
  May  4 13:21:06.843: INFO: stdout: "Server:\t\t10.152.183.182\nAddress:\t10.152.183.182#53\n\nnodeport-service.services-5802.svc.cluster.local\tcanonical name = externalsvc.services-5802.svc.cluster.local.\nName:\texternalsvc.services-5802.svc.cluster.local\nAddress: 10.152.183.187\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-5802, will wait for the garbage collector to delete the pods @ 05/04/24 13:21:06.843
  May  4 13:21:06.906: INFO: Deleting ReplicationController externalsvc took: 8.161426ms
  May  4 13:21:07.007: INFO: Terminating ReplicationController externalsvc pods took: 100.987095ms
  May  4 13:21:09.628: INFO: Cleaning up the NodePort to ExternalName test service
  May  4 13:21:09.640: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5802" for this suite. @ 05/04/24 13:21:09.643
• [8.160 seconds]
------------------------------
SSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 05/04/24 13:21:09.65
  May  4 13:21:09.650: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 05/04/24 13:21:09.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:21:09.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:21:09.673
  STEP: Setting up the test @ 05/04/24 13:21:09.676
  STEP: Creating hostNetwork=false pod @ 05/04/24 13:21:09.676
  STEP: Creating hostNetwork=true pod @ 05/04/24 13:21:11.699
  STEP: Running the test @ 05/04/24 13:21:13.719
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 05/04/24 13:21:13.719
  May  4 13:21:13.719: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9102 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  4 13:21:13.719: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 13:21:13.719: INFO: ExecWithOptions: Clientset creation
  May  4 13:21:13.719: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9102/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  May  4 13:21:13.770: INFO: Exec stderr: ""
  May  4 13:21:13.770: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9102 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  4 13:21:13.770: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 13:21:13.770: INFO: ExecWithOptions: Clientset creation
  May  4 13:21:13.770: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9102/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  May  4 13:21:13.817: INFO: Exec stderr: ""
  May  4 13:21:13.817: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9102 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  4 13:21:13.817: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 13:21:13.818: INFO: ExecWithOptions: Clientset creation
  May  4 13:21:13.818: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9102/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  May  4 13:21:13.857: INFO: Exec stderr: ""
  May  4 13:21:13.857: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9102 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  4 13:21:13.857: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 13:21:13.858: INFO: ExecWithOptions: Clientset creation
  May  4 13:21:13.858: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9102/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  May  4 13:21:13.897: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 05/04/24 13:21:13.897
  May  4 13:21:13.897: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9102 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  4 13:21:13.897: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 13:21:13.898: INFO: ExecWithOptions: Clientset creation
  May  4 13:21:13.898: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9102/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  May  4 13:21:13.949: INFO: Exec stderr: ""
  May  4 13:21:13.949: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9102 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  4 13:21:13.950: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 13:21:13.950: INFO: ExecWithOptions: Clientset creation
  May  4 13:21:13.950: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9102/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  May  4 13:21:14.001: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 05/04/24 13:21:14.001
  May  4 13:21:14.001: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9102 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  4 13:21:14.001: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 13:21:14.002: INFO: ExecWithOptions: Clientset creation
  May  4 13:21:14.002: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9102/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  May  4 13:21:14.065: INFO: Exec stderr: ""
  May  4 13:21:14.065: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9102 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  4 13:21:14.065: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 13:21:14.065: INFO: ExecWithOptions: Clientset creation
  May  4 13:21:14.065: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9102/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  May  4 13:21:14.112: INFO: Exec stderr: ""
  May  4 13:21:14.112: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9102 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  4 13:21:14.112: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 13:21:14.113: INFO: ExecWithOptions: Clientset creation
  May  4 13:21:14.113: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9102/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  May  4 13:21:14.161: INFO: Exec stderr: ""
  May  4 13:21:14.161: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9102 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  4 13:21:14.161: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 13:21:14.161: INFO: ExecWithOptions: Clientset creation
  May  4 13:21:14.161: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9102/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  May  4 13:21:14.213: INFO: Exec stderr: ""
  May  4 13:21:14.213: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-9102" for this suite. @ 05/04/24 13:21:14.217
• [4.576 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 05/04/24 13:21:14.226
  May  4 13:21:14.226: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename controllerrevisions @ 05/04/24 13:21:14.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:21:14.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:21:14.255
  STEP: Creating DaemonSet "e2e-nrqxk-daemon-set" @ 05/04/24 13:21:14.278
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/04/24 13:21:14.285
  May  4 13:21:14.289: INFO: DaemonSet pods can't tolerate node ip-172-31-26-203 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 13:21:14.289: INFO: DaemonSet pods can't tolerate node ip-172-31-85-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 13:21:14.291: INFO: Number of nodes with available pods controlled by daemonset e2e-nrqxk-daemon-set: 0
  May  4 13:21:14.291: INFO: Node ip-172-31-18-228 is running 0 daemon pod, expected 1
  May  4 13:21:15.289: INFO: DaemonSet pods can't tolerate node ip-172-31-26-203 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 13:21:15.289: INFO: DaemonSet pods can't tolerate node ip-172-31-85-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 13:21:15.293: INFO: Number of nodes with available pods controlled by daemonset e2e-nrqxk-daemon-set: 0
  May  4 13:21:15.293: INFO: Node ip-172-31-18-228 is running 0 daemon pod, expected 1
  May  4 13:21:16.292: INFO: DaemonSet pods can't tolerate node ip-172-31-26-203 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 13:21:16.292: INFO: DaemonSet pods can't tolerate node ip-172-31-85-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 13:21:16.297: INFO: Number of nodes with available pods controlled by daemonset e2e-nrqxk-daemon-set: 3
  May  4 13:21:16.297: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-nrqxk-daemon-set
  STEP: Confirm DaemonSet "e2e-nrqxk-daemon-set" successfully created with "daemonset-name=e2e-nrqxk-daemon-set" label @ 05/04/24 13:21:16.3
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-nrqxk-daemon-set" @ 05/04/24 13:21:16.308
  May  4 13:21:16.311: INFO: Located ControllerRevision: "e2e-nrqxk-daemon-set-5689947689"
  STEP: Patching ControllerRevision "e2e-nrqxk-daemon-set-5689947689" @ 05/04/24 13:21:16.315
  May  4 13:21:16.322: INFO: e2e-nrqxk-daemon-set-5689947689 has been patched
  STEP: Create a new ControllerRevision @ 05/04/24 13:21:16.322
  May  4 13:21:16.326: INFO: Created ControllerRevision: e2e-nrqxk-daemon-set-6b695577fc
  STEP: Confirm that there are two ControllerRevisions @ 05/04/24 13:21:16.326
  May  4 13:21:16.326: INFO: Requesting list of ControllerRevisions to confirm quantity
  May  4 13:21:16.330: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-nrqxk-daemon-set-5689947689" @ 05/04/24 13:21:16.33
  STEP: Confirm that there is only one ControllerRevision @ 05/04/24 13:21:16.337
  May  4 13:21:16.337: INFO: Requesting list of ControllerRevisions to confirm quantity
  May  4 13:21:16.341: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-nrqxk-daemon-set-6b695577fc" @ 05/04/24 13:21:16.344
  May  4 13:21:16.353: INFO: e2e-nrqxk-daemon-set-6b695577fc has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 05/04/24 13:21:16.353
  W0504 13:21:16.365462      19 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 05/04/24 13:21:16.365
  May  4 13:21:16.365: INFO: Requesting list of ControllerRevisions to confirm quantity
  May  4 13:21:17.365: INFO: Requesting list of ControllerRevisions to confirm quantity
  May  4 13:21:17.369: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-nrqxk-daemon-set-6b695577fc=updated" @ 05/04/24 13:21:17.369
  STEP: Confirm that there is only one ControllerRevision @ 05/04/24 13:21:17.379
  May  4 13:21:17.379: INFO: Requesting list of ControllerRevisions to confirm quantity
  May  4 13:21:17.383: INFO: Found 1 ControllerRevisions
  May  4 13:21:17.387: INFO: ControllerRevision "e2e-nrqxk-daemon-set-6b7977799b" has revision 3
  STEP: Deleting DaemonSet "e2e-nrqxk-daemon-set" @ 05/04/24 13:21:17.389
  STEP: deleting DaemonSet.extensions e2e-nrqxk-daemon-set in namespace controllerrevisions-9074, will wait for the garbage collector to delete the pods @ 05/04/24 13:21:17.389
  May  4 13:21:17.451: INFO: Deleting DaemonSet.extensions e2e-nrqxk-daemon-set took: 6.921038ms
  May  4 13:21:17.552: INFO: Terminating DaemonSet.extensions e2e-nrqxk-daemon-set pods took: 100.817982ms
  May  4 13:21:18.957: INFO: Number of nodes with available pods controlled by daemonset e2e-nrqxk-daemon-set: 0
  May  4 13:21:18.957: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-nrqxk-daemon-set
  May  4 13:21:18.962: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"33380"},"items":null}

  May  4 13:21:18.965: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"33380"},"items":null}

  May  4 13:21:18.980: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-9074" for this suite. @ 05/04/24 13:21:18.983
• [4.763 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 05/04/24 13:21:18.99
  May  4 13:21:18.990: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename emptydir @ 05/04/24 13:21:18.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:21:19.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:21:19.012
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 05/04/24 13:21:19.015
  STEP: Saw pod success @ 05/04/24 13:21:23.04
  May  4 13:21:23.043: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-9927a010-df1d-430a-aae3-c252a68b6e66 container test-container: <nil>
  STEP: delete the pod @ 05/04/24 13:21:23.063
  May  4 13:21:23.080: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2702" for this suite. @ 05/04/24 13:21:23.085
• [4.100 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 05/04/24 13:21:23.091
  May  4 13:21:23.091: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename taint-multiple-pods @ 05/04/24 13:21:23.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:21:23.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:21:23.115
  May  4 13:21:23.117: INFO: Waiting up to 1m0s for all nodes to be ready
  May  4 13:22:23.119: INFO: Waiting for terminating namespaces to be deleted...
  May  4 13:22:23.123: INFO: Starting informer...
  STEP: Starting pods... @ 05/04/24 13:22:23.123
  May  4 13:22:23.345: INFO: Pod1 is running on ip-172-31-18-228. Tainting Node
  May  4 13:22:25.569: INFO: Pod2 is running on ip-172-31-18-228. Tainting Node
  STEP: Trying to apply a taint on the Node @ 05/04/24 13:22:25.569
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/04/24 13:22:25.578
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 05/04/24 13:22:25.581
  May  4 13:22:31.650: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  May  4 13:22:51.684: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/04/24 13:22:51.698
  May  4 13:22:51.701: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-9551" for this suite. @ 05/04/24 13:22:51.707
• [88.624 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 05/04/24 13:22:51.715
  May  4 13:22:51.715: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename webhook @ 05/04/24 13:22:51.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:22:51.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:22:51.748
  STEP: Setting up server cert @ 05/04/24 13:22:51.772
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/04/24 13:22:51.994
  STEP: Deploying the webhook pod @ 05/04/24 13:22:52.002
  STEP: Wait for the deployment to be ready @ 05/04/24 13:22:52.016
  May  4 13:22:52.024: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/04/24 13:22:54.039
  STEP: Verifying the service has paired with the endpoint @ 05/04/24 13:22:54.05
  May  4 13:22:55.050: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 05/04/24 13:22:55.057
  STEP: create a pod that should be updated by the webhook @ 05/04/24 13:22:55.069
  May  4 13:22:55.125: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9688" for this suite. @ 05/04/24 13:22:55.132
  STEP: Destroying namespace "webhook-markers-7693" for this suite. @ 05/04/24 13:22:55.139
• [3.431 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 05/04/24 13:22:55.146
  May  4 13:22:55.146: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename tables @ 05/04/24 13:22:55.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:22:55.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:22:55.169
  May  4 13:22:55.174: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-8434" for this suite. @ 05/04/24 13:22:55.178
• [0.038 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 05/04/24 13:22:55.185
  May  4 13:22:55.185: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename endpointslice @ 05/04/24 13:22:55.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:22:55.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:22:55.204
  May  4 13:22:55.217: INFO: Endpoints addresses: [172.31.26.203 172.31.85.184] , ports: [6443]
  May  4 13:22:55.217: INFO: EndpointSlices addresses: [172.31.26.203 172.31.85.184] , ports: [6443]
  May  4 13:22:55.217: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8705" for this suite. @ 05/04/24 13:22:55.22
• [0.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 05/04/24 13:22:55.23
  May  4 13:22:55.231: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename downward-api @ 05/04/24 13:22:55.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:22:55.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:22:55.249
  STEP: Creating a pod to test downward api env vars @ 05/04/24 13:22:55.252
  STEP: Saw pod success @ 05/04/24 13:22:59.276
  May  4 13:22:59.282: INFO: Trying to get logs from node ip-172-31-72-79 pod downward-api-65454a45-dfae-4f21-8232-06dfaea13a49 container dapi-container: <nil>
  STEP: delete the pod @ 05/04/24 13:22:59.303
  May  4 13:22:59.324: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7646" for this suite. @ 05/04/24 13:22:59.328
• [4.104 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 05/04/24 13:22:59.334
  May  4 13:22:59.334: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename hostport @ 05/04/24 13:22:59.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:22:59.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:22:59.368
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 05/04/24 13:22:59.376
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.18.228 on the node which pod1 resides and expect scheduled @ 05/04/24 13:23:01.4
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.18.228 but use UDP protocol on the node which pod2 resides @ 05/04/24 13:23:03.418
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 05/04/24 13:23:17.48
  May  4 13:23:17.480: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.18.228 http://127.0.0.1:54323/hostname] Namespace:hostport-8144 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  4 13:23:17.480: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 13:23:17.480: INFO: ExecWithOptions: Clientset creation
  May  4 13:23:17.480: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-8144/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.18.228+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.18.228, port: 54323 @ 05/04/24 13:23:17.524
  May  4 13:23:17.524: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.18.228:54323/hostname] Namespace:hostport-8144 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  4 13:23:17.524: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 13:23:17.524: INFO: ExecWithOptions: Clientset creation
  May  4 13:23:17.524: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-8144/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.18.228%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.18.228, port: 54323 UDP @ 05/04/24 13:23:17.571
  May  4 13:23:17.571: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.18.228 54323] Namespace:hostport-8144 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  4 13:23:17.572: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 13:23:17.572: INFO: ExecWithOptions: Clientset creation
  May  4 13:23:17.572: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-8144/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.18.228+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  May  4 13:23:22.625: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-8144" for this suite. @ 05/04/24 13:23:22.629
• [23.304 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 05/04/24 13:23:22.638
  May  4 13:23:22.638: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename secrets @ 05/04/24 13:23:22.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:23:22.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:23:22.658
  STEP: Creating secret with name secret-test-ae6ea42e-71d9-46bc-b125-7145189cdf1a @ 05/04/24 13:23:22.66
  STEP: Creating a pod to test consume secrets @ 05/04/24 13:23:22.665
  STEP: Saw pod success @ 05/04/24 13:23:24.686
  May  4 13:23:24.690: INFO: Trying to get logs from node ip-172-31-72-79 pod pod-secrets-8f5201ff-764d-4335-8eb9-a574ad3a8159 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/04/24 13:23:24.697
  May  4 13:23:24.717: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5903" for this suite. @ 05/04/24 13:23:24.721
• [2.090 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 05/04/24 13:23:24.729
  May  4 13:23:24.729: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename gc @ 05/04/24 13:23:24.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:23:24.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:23:24.751
  STEP: create the deployment @ 05/04/24 13:23:24.753
  W0504 13:23:24.761069      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 05/04/24 13:23:24.761
  STEP: delete the deployment @ 05/04/24 13:23:25.271
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 05/04/24 13:23:25.279
  STEP: Gathering metrics @ 05/04/24 13:23:25.798
  W0504 13:23:25.807398      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  May  4 13:23:25.807: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May  4 13:23:25.811: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1806" for this suite. @ 05/04/24 13:23:25.814
• [1.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 05/04/24 13:23:25.821
  May  4 13:23:25.821: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename downward-api @ 05/04/24 13:23:25.822
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:23:25.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:23:25.842
  STEP: Creating a pod to test downward api env vars @ 05/04/24 13:23:25.845
  STEP: Saw pod success @ 05/04/24 13:23:27.863
  May  4 13:23:27.865: INFO: Trying to get logs from node ip-172-31-72-79 pod downward-api-1a74f3c3-8717-4b33-8c82-a05b54e36a73 container dapi-container: <nil>
  STEP: delete the pod @ 05/04/24 13:23:27.874
  May  4 13:23:27.891: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7202" for this suite. @ 05/04/24 13:23:27.894
• [2.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 05/04/24 13:23:27.903
  May  4 13:23:27.903: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename pods @ 05/04/24 13:23:27.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:23:27.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:23:27.922
  STEP: creating the pod @ 05/04/24 13:23:27.924
  STEP: submitting the pod to kubernetes @ 05/04/24 13:23:27.924
  STEP: verifying the pod is in kubernetes @ 05/04/24 13:23:29.944
  STEP: updating the pod @ 05/04/24 13:23:29.948
  May  4 13:23:30.460: INFO: Successfully updated pod "pod-update-183e5686-e01f-45f0-8937-546dc02c9196"
  STEP: verifying the updated pod is in kubernetes @ 05/04/24 13:23:30.465
  May  4 13:23:30.469: INFO: Pod update OK
  May  4 13:23:30.469: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1955" for this suite. @ 05/04/24 13:23:30.472
• [2.578 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 05/04/24 13:23:30.481
  May  4 13:23:30.481: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename subpath @ 05/04/24 13:23:30.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:23:30.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:23:30.503
  STEP: Setting up data @ 05/04/24 13:23:30.506
  STEP: Creating pod pod-subpath-test-configmap-j6lj @ 05/04/24 13:23:30.516
  STEP: Creating a pod to test atomic-volume-subpath @ 05/04/24 13:23:30.516
  STEP: Saw pod success @ 05/04/24 13:23:54.592
  May  4 13:23:54.596: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-subpath-test-configmap-j6lj container test-container-subpath-configmap-j6lj: <nil>
  STEP: delete the pod @ 05/04/24 13:23:54.606
  STEP: Deleting pod pod-subpath-test-configmap-j6lj @ 05/04/24 13:23:54.621
  May  4 13:23:54.621: INFO: Deleting pod "pod-subpath-test-configmap-j6lj" in namespace "subpath-6423"
  May  4 13:23:54.625: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6423" for this suite. @ 05/04/24 13:23:54.63
• [24.155 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 05/04/24 13:23:54.637
  May  4 13:23:54.637: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename crd-watch @ 05/04/24 13:23:54.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:23:54.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:23:54.659
  May  4 13:23:54.662: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Creating first CR  @ 05/04/24 13:23:57.198
  May  4 13:23:57.201: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-04T13:23:57Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-04T13:23:57Z]] name:name1 resourceVersion:34337 uid:43be3046-1eb4-4cfd-84c9-7b99f51b3010] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 05/04/24 13:24:07.202
  May  4 13:24:07.209: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-04T13:24:07Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-04T13:24:07Z]] name:name2 resourceVersion:34370 uid:d6acb6e3-681d-4762-913e-5ee782cd6005] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 05/04/24 13:24:17.21
  May  4 13:24:17.217: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-04T13:23:57Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-04T13:24:17Z]] name:name1 resourceVersion:34390 uid:43be3046-1eb4-4cfd-84c9-7b99f51b3010] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 05/04/24 13:24:27.218
  May  4 13:24:27.224: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-04T13:24:07Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-04T13:24:27Z]] name:name2 resourceVersion:34410 uid:d6acb6e3-681d-4762-913e-5ee782cd6005] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 05/04/24 13:24:37.224
  May  4 13:24:37.235: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-04T13:23:57Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-04T13:24:17Z]] name:name1 resourceVersion:34431 uid:43be3046-1eb4-4cfd-84c9-7b99f51b3010] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 05/04/24 13:24:47.237
  May  4 13:24:47.245: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-04T13:24:07Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-04T13:24:27Z]] name:name2 resourceVersion:34451 uid:d6acb6e3-681d-4762-913e-5ee782cd6005] num:map[num1:9223372036854775807 num2:1000000]]}
  May  4 13:24:57.762: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-7982" for this suite. @ 05/04/24 13:24:57.769
• [63.142 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 05/04/24 13:24:57.779
  May  4 13:24:57.779: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename discovery @ 05/04/24 13:24:57.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:24:57.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:24:57.801
  STEP: Setting up server cert @ 05/04/24 13:24:57.805
  May  4 13:24:57.978: INFO: Checking APIGroup: apiregistration.k8s.io
  May  4 13:24:57.979: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  May  4 13:24:57.979: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  May  4 13:24:57.979: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  May  4 13:24:57.979: INFO: Checking APIGroup: apps
  May  4 13:24:57.980: INFO: PreferredVersion.GroupVersion: apps/v1
  May  4 13:24:57.980: INFO: Versions found [{apps/v1 v1}]
  May  4 13:24:57.980: INFO: apps/v1 matches apps/v1
  May  4 13:24:57.980: INFO: Checking APIGroup: events.k8s.io
  May  4 13:24:57.981: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  May  4 13:24:57.981: INFO: Versions found [{events.k8s.io/v1 v1}]
  May  4 13:24:57.981: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  May  4 13:24:57.981: INFO: Checking APIGroup: authentication.k8s.io
  May  4 13:24:57.982: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  May  4 13:24:57.982: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  May  4 13:24:57.982: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  May  4 13:24:57.982: INFO: Checking APIGroup: authorization.k8s.io
  May  4 13:24:57.983: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  May  4 13:24:57.983: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  May  4 13:24:57.983: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  May  4 13:24:57.983: INFO: Checking APIGroup: autoscaling
  May  4 13:24:57.984: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  May  4 13:24:57.984: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  May  4 13:24:57.984: INFO: autoscaling/v2 matches autoscaling/v2
  May  4 13:24:57.984: INFO: Checking APIGroup: batch
  May  4 13:24:57.985: INFO: PreferredVersion.GroupVersion: batch/v1
  May  4 13:24:57.985: INFO: Versions found [{batch/v1 v1}]
  May  4 13:24:57.985: INFO: batch/v1 matches batch/v1
  May  4 13:24:57.985: INFO: Checking APIGroup: certificates.k8s.io
  May  4 13:24:57.985: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  May  4 13:24:57.985: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  May  4 13:24:57.985: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  May  4 13:24:57.985: INFO: Checking APIGroup: networking.k8s.io
  May  4 13:24:57.986: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  May  4 13:24:57.986: INFO: Versions found [{networking.k8s.io/v1 v1}]
  May  4 13:24:57.986: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  May  4 13:24:57.986: INFO: Checking APIGroup: policy
  May  4 13:24:57.987: INFO: PreferredVersion.GroupVersion: policy/v1
  May  4 13:24:57.987: INFO: Versions found [{policy/v1 v1}]
  May  4 13:24:57.987: INFO: policy/v1 matches policy/v1
  May  4 13:24:57.987: INFO: Checking APIGroup: rbac.authorization.k8s.io
  May  4 13:24:57.988: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  May  4 13:24:57.988: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  May  4 13:24:57.988: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  May  4 13:24:57.988: INFO: Checking APIGroup: storage.k8s.io
  May  4 13:24:57.989: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  May  4 13:24:57.989: INFO: Versions found [{storage.k8s.io/v1 v1}]
  May  4 13:24:57.989: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  May  4 13:24:57.989: INFO: Checking APIGroup: admissionregistration.k8s.io
  May  4 13:24:57.990: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  May  4 13:24:57.990: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  May  4 13:24:57.990: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  May  4 13:24:57.990: INFO: Checking APIGroup: apiextensions.k8s.io
  May  4 13:24:57.991: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  May  4 13:24:57.991: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  May  4 13:24:57.991: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  May  4 13:24:57.991: INFO: Checking APIGroup: scheduling.k8s.io
  May  4 13:24:57.991: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  May  4 13:24:57.991: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  May  4 13:24:57.991: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  May  4 13:24:57.991: INFO: Checking APIGroup: coordination.k8s.io
  May  4 13:24:57.992: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  May  4 13:24:57.992: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  May  4 13:24:57.992: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  May  4 13:24:57.992: INFO: Checking APIGroup: node.k8s.io
  May  4 13:24:57.993: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  May  4 13:24:57.993: INFO: Versions found [{node.k8s.io/v1 v1}]
  May  4 13:24:57.993: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  May  4 13:24:57.993: INFO: Checking APIGroup: discovery.k8s.io
  May  4 13:24:57.994: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  May  4 13:24:57.994: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  May  4 13:24:57.994: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  May  4 13:24:57.994: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  May  4 13:24:57.995: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  May  4 13:24:57.995: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  May  4 13:24:57.995: INFO: flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  May  4 13:24:57.995: INFO: Checking APIGroup: metrics.k8s.io
  May  4 13:24:57.996: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  May  4 13:24:57.996: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  May  4 13:24:57.996: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  May  4 13:24:57.996: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-7997" for this suite. @ 05/04/24 13:24:58.001
• [0.229 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 05/04/24 13:24:58.009
  May  4 13:24:58.009: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 05/04/24 13:24:58.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:24:58.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:24:58.032
  STEP: creating a target pod @ 05/04/24 13:24:58.035
  STEP: adding an ephemeral container @ 05/04/24 13:25:00.055
  STEP: checking pod container endpoints @ 05/04/24 13:25:02.075
  May  4 13:25:02.075: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-5046 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  4 13:25:02.075: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 13:25:02.076: INFO: ExecWithOptions: Clientset creation
  May  4 13:25:02.076: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-5046/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  May  4 13:25:02.130: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 05/04/24 13:25:02.138
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 05/04/24 13:25:02.142
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 05/04/24 13:25:02.156
  May  4 13:25:02.160: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-5046" for this suite. @ 05/04/24 13:25:02.165
• [4.166 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 05/04/24 13:25:02.175
  May  4 13:25:02.175: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename namespaces @ 05/04/24 13:25:02.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:25:02.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:25:02.195
  STEP: Creating namespace "e2e-ns-s7xcs" @ 05/04/24 13:25:02.197
  May  4 13:25:02.217: INFO: Namespace "e2e-ns-s7xcs-7567" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-s7xcs-7567" @ 05/04/24 13:25:02.217
  May  4 13:25:02.225: INFO: Namespace "e2e-ns-s7xcs-7567" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-s7xcs-7567" @ 05/04/24 13:25:02.225
  May  4 13:25:02.234: INFO: Namespace "e2e-ns-s7xcs-7567" has []v1.FinalizerName{"kubernetes"}
  May  4 13:25:02.234: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2813" for this suite. @ 05/04/24 13:25:02.237
  STEP: Destroying namespace "e2e-ns-s7xcs-7567" for this suite. @ 05/04/24 13:25:02.243
• [0.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 05/04/24 13:25:02.251
  May  4 13:25:02.251: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename replication-controller @ 05/04/24 13:25:02.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:25:02.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:25:02.273
  STEP: creating a ReplicationController @ 05/04/24 13:25:02.279
  STEP: waiting for RC to be added @ 05/04/24 13:25:02.283
  STEP: waiting for available Replicas @ 05/04/24 13:25:02.283
  STEP: patching ReplicationController @ 05/04/24 13:25:03.698
  STEP: waiting for RC to be modified @ 05/04/24 13:25:03.707
  STEP: patching ReplicationController status @ 05/04/24 13:25:03.707
  STEP: waiting for RC to be modified @ 05/04/24 13:25:03.713
  STEP: waiting for available Replicas @ 05/04/24 13:25:03.713
  STEP: fetching ReplicationController status @ 05/04/24 13:25:03.717
  STEP: patching ReplicationController scale @ 05/04/24 13:25:03.719
  STEP: waiting for RC to be modified @ 05/04/24 13:25:03.727
  STEP: waiting for ReplicationController's scale to be the max amount @ 05/04/24 13:25:03.727
  STEP: fetching ReplicationController; ensuring that it's patched @ 05/04/24 13:25:04.917
  STEP: updating ReplicationController status @ 05/04/24 13:25:04.921
  STEP: waiting for RC to be modified @ 05/04/24 13:25:04.925
  STEP: listing all ReplicationControllers @ 05/04/24 13:25:04.926
  STEP: checking that ReplicationController has expected values @ 05/04/24 13:25:04.932
  STEP: deleting ReplicationControllers by collection @ 05/04/24 13:25:04.932
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 05/04/24 13:25:04.941
  May  4 13:25:04.987: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0504 13:25:04.987937      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-7109" for this suite. @ 05/04/24 13:25:04.992
• [2.748 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 05/04/24 13:25:04.999
  May  4 13:25:04.999: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename events @ 05/04/24 13:25:05
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:25:05.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:25:05.019
  STEP: Create set of events @ 05/04/24 13:25:05.022
  May  4 13:25:05.026: INFO: created test-event-1
  May  4 13:25:05.032: INFO: created test-event-2
  May  4 13:25:05.037: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 05/04/24 13:25:05.038
  STEP: delete collection of events @ 05/04/24 13:25:05.041
  May  4 13:25:05.041: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 05/04/24 13:25:05.065
  May  4 13:25:05.065: INFO: requesting list of events to confirm quantity
  May  4 13:25:05.069: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8042" for this suite. @ 05/04/24 13:25:05.073
• [0.080 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1798
  STEP: Creating a kubernetes client @ 05/04/24 13:25:05.08
  May  4 13:25:05.080: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename kubectl @ 05/04/24 13:25:05.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:25:05.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:25:05.1
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/04/24 13:25:05.103
  May  4 13:25:05.103: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-423 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  May  4 13:25:05.156: INFO: stderr: ""
  May  4 13:25:05.156: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 05/04/24 13:25:05.156
  E0504 13:25:05.988101      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:25:06.989147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:25:07.989265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:25:08.990347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:25:09.990425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 05/04/24 13:25:10.207
  May  4 13:25:10.207: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-423 get pod e2e-test-httpd-pod -o json'
  May  4 13:25:10.301: INFO: stderr: ""
  May  4 13:25:10.301: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-05-04T13:25:05Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-423\",\n        \"resourceVersion\": \"34628\",\n        \"uid\": \"4a9bfd61-d655-41e4-9f41-a19fbc439d98\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-qmvr6\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-18-228\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-qmvr6\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-04T13:25:05Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-04T13:25:05Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-04T13:25:05Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-04T13:25:05Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-04T13:25:05Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://d2faaa74a9eaec8a24914465a426f29dbf011c6cbc2bc54ae3659303c3ca9408\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-05-04T13:25:05Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.18.228\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.18.228\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.149.56\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.149.56\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-05-04T13:25:05Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 05/04/24 13:25:10.301
  May  4 13:25:10.301: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-423 replace -f -'
  May  4 13:25:10.404: INFO: stderr: ""
  May  4 13:25:10.404: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 05/04/24 13:25:10.404
  May  4 13:25:10.410: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-423 delete pods e2e-test-httpd-pod'
  E0504 13:25:10.990531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:25:11.948: INFO: stderr: ""
  May  4 13:25:11.948: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  May  4 13:25:11.949: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-423" for this suite. @ 05/04/24 13:25:11.952
• [6.878 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 05/04/24 13:25:11.959
  May  4 13:25:11.959: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename discovery @ 05/04/24 13:25:11.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:25:11.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:25:11.979
  STEP: Setting up server cert @ 05/04/24 13:25:11.982
  E0504 13:25:11.991064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Requesting APIResourceList from "/api/v1" @ 05/04/24 13:25:12.103
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 05/04/24 13:25:12.105
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 05/04/24 13:25:12.106
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 05/04/24 13:25:12.107
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 05/04/24 13:25:12.108
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 05/04/24 13:25:12.109
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 05/04/24 13:25:12.11
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 05/04/24 13:25:12.111
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 05/04/24 13:25:12.112
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 05/04/24 13:25:12.113
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 05/04/24 13:25:12.114
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 05/04/24 13:25:12.114
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 05/04/24 13:25:12.115
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 05/04/24 13:25:12.116
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 05/04/24 13:25:12.117
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 05/04/24 13:25:12.118
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 05/04/24 13:25:12.119
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 05/04/24 13:25:12.12
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 05/04/24 13:25:12.121
  May  4 13:25:12.122: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-2693" for this suite. @ 05/04/24 13:25:12.127
• [0.175 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 05/04/24 13:25:12.134
  May  4 13:25:12.134: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 05/04/24 13:25:12.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:25:12.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:25:12.157
  STEP: creating a target pod @ 05/04/24 13:25:12.16
  E0504 13:25:12.991332      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:25:13.992003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 05/04/24 13:25:14.186
  E0504 13:25:14.992959      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:25:15.993087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 05/04/24 13:25:16.207
  May  4 13:25:16.207: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-1012 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  4 13:25:16.207: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 13:25:16.207: INFO: ExecWithOptions: Clientset creation
  May  4 13:25:16.207: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-1012/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  May  4 13:25:16.249: INFO: Exec stderr: ""
  May  4 13:25:16.255: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-1012" for this suite. @ 05/04/24 13:25:16.26
• [4.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 05/04/24 13:25:16.268
  May  4 13:25:16.268: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename projected @ 05/04/24 13:25:16.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:25:16.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:25:16.293
  STEP: Creating a pod to test downward API volume plugin @ 05/04/24 13:25:16.296
  E0504 13:25:16.993197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:25:17.993433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:25:18.994160      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:25:19.995034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/04/24 13:25:20.318
  May  4 13:25:20.323: INFO: Trying to get logs from node ip-172-31-72-79 pod downwardapi-volume-182aaa56-c8e0-4a16-92d5-019bc95ded46 container client-container: <nil>
  STEP: delete the pod @ 05/04/24 13:25:20.335
  May  4 13:25:20.350: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7453" for this suite. @ 05/04/24 13:25:20.353
• [4.092 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 05/04/24 13:25:20.36
  May  4 13:25:20.360: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename kubectl-logs @ 05/04/24 13:25:20.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:25:20.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:25:20.381
  STEP: creating an pod @ 05/04/24 13:25:20.384
  May  4 13:25:20.384: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-logs-4666 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  May  4 13:25:20.434: INFO: stderr: ""
  May  4 13:25:20.434: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 05/04/24 13:25:20.434
  May  4 13:25:20.435: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0504 13:25:20.995230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:25:21.995430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:25:22.447: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 05/04/24 13:25:22.447
  May  4 13:25:22.447: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-logs-4666 logs logs-generator logs-generator'
  May  4 13:25:22.506: INFO: stderr: ""
  May  4 13:25:22.506: INFO: stdout: "I0504 13:25:21.016507       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/4x5 341\nI0504 13:25:21.217067       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/jnrd 422\nI0504 13:25:21.417343       1 logs_generator.go:76] 2 POST /api/v1/namespaces/kube-system/pods/wxpz 555\nI0504 13:25:21.616594       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/ns/pods/n7s 259\nI0504 13:25:21.816903       1 logs_generator.go:76] 4 GET /api/v1/namespaces/kube-system/pods/5zk8 295\nI0504 13:25:22.017330       1 logs_generator.go:76] 5 GET /api/v1/namespaces/kube-system/pods/74ph 510\nI0504 13:25:22.217492       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/25m 234\nI0504 13:25:22.416628       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/842 319\n"
  STEP: limiting log lines @ 05/04/24 13:25:22.506
  May  4 13:25:22.506: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-logs-4666 logs logs-generator logs-generator --tail=1'
  May  4 13:25:22.558: INFO: stderr: ""
  May  4 13:25:22.558: INFO: stdout: "I0504 13:25:22.416628       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/842 319\n"
  May  4 13:25:22.558: INFO: got output "I0504 13:25:22.416628       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/842 319\n"
  STEP: limiting log bytes @ 05/04/24 13:25:22.558
  May  4 13:25:22.558: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-logs-4666 logs logs-generator logs-generator --limit-bytes=1'
  May  4 13:25:22.613: INFO: stderr: ""
  May  4 13:25:22.613: INFO: stdout: "I"
  May  4 13:25:22.613: INFO: got output "I"
  STEP: exposing timestamps @ 05/04/24 13:25:22.613
  May  4 13:25:22.613: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-logs-4666 logs logs-generator logs-generator --tail=1 --timestamps'
  May  4 13:25:22.668: INFO: stderr: ""
  May  4 13:25:22.668: INFO: stdout: "2024-05-04T13:25:22.616859759Z I0504 13:25:22.616764       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/x8th 353\n"
  May  4 13:25:22.668: INFO: got output "2024-05-04T13:25:22.616859759Z I0504 13:25:22.616764       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/x8th 353\n"
  STEP: restricting to a time range @ 05/04/24 13:25:22.668
  E0504 13:25:22.995619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:25:23.995796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:25:24.995979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:25:25.169: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-logs-4666 logs logs-generator logs-generator --since=1s'
  May  4 13:25:25.222: INFO: stderr: ""
  May  4 13:25:25.222: INFO: stdout: "I0504 13:25:24.416877       1 logs_generator.go:76] 17 POST /api/v1/namespaces/kube-system/pods/2pr8 541\nI0504 13:25:24.617181       1 logs_generator.go:76] 18 POST /api/v1/namespaces/default/pods/9kzn 476\nI0504 13:25:24.817353       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/srg 397\nI0504 13:25:25.016612       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/kube-system/pods/p8g 595\nI0504 13:25:25.216899       1 logs_generator.go:76] 21 POST /api/v1/namespaces/kube-system/pods/p7hs 465\n"
  May  4 13:25:25.223: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-logs-4666 logs logs-generator logs-generator --since=24h'
  May  4 13:25:25.277: INFO: stderr: ""
  May  4 13:25:25.277: INFO: stdout: "I0504 13:25:21.016507       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/4x5 341\nI0504 13:25:21.217067       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/jnrd 422\nI0504 13:25:21.417343       1 logs_generator.go:76] 2 POST /api/v1/namespaces/kube-system/pods/wxpz 555\nI0504 13:25:21.616594       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/ns/pods/n7s 259\nI0504 13:25:21.816903       1 logs_generator.go:76] 4 GET /api/v1/namespaces/kube-system/pods/5zk8 295\nI0504 13:25:22.017330       1 logs_generator.go:76] 5 GET /api/v1/namespaces/kube-system/pods/74ph 510\nI0504 13:25:22.217492       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/25m 234\nI0504 13:25:22.416628       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/842 319\nI0504 13:25:22.616764       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/x8th 353\nI0504 13:25:22.817422       1 logs_generator.go:76] 9 GET /api/v1/namespaces/default/pods/nbd 276\nI0504 13:25:23.016653       1 logs_generator.go:76] 10 POST /api/v1/namespaces/kube-system/pods/t5l 347\nI0504 13:25:23.217076       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/kube-system/pods/72p 459\nI0504 13:25:23.417334       1 logs_generator.go:76] 12 GET /api/v1/namespaces/kube-system/pods/2zsw 531\nI0504 13:25:23.616581       1 logs_generator.go:76] 13 GET /api/v1/namespaces/ns/pods/x9xg 353\nI0504 13:25:23.817066       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/default/pods/tn9x 257\nI0504 13:25:24.017337       1 logs_generator.go:76] 15 POST /api/v1/namespaces/kube-system/pods/2q5 475\nI0504 13:25:24.217508       1 logs_generator.go:76] 16 POST /api/v1/namespaces/default/pods/2tdx 440\nI0504 13:25:24.416877       1 logs_generator.go:76] 17 POST /api/v1/namespaces/kube-system/pods/2pr8 541\nI0504 13:25:24.617181       1 logs_generator.go:76] 18 POST /api/v1/namespaces/default/pods/9kzn 476\nI0504 13:25:24.817353       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/srg 397\nI0504 13:25:25.016612       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/kube-system/pods/p8g 595\nI0504 13:25:25.216899       1 logs_generator.go:76] 21 POST /api/v1/namespaces/kube-system/pods/p7hs 465\n"
  May  4 13:25:25.277: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-logs-4666 delete pod logs-generator'
  May  4 13:25:25.763: INFO: stderr: ""
  May  4 13:25:25.763: INFO: stdout: "pod \"logs-generator\" deleted\n"
  May  4 13:25:25.764: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-4666" for this suite. @ 05/04/24 13:25:25.767
• [5.413 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 05/04/24 13:25:25.774
  May  4 13:25:25.774: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename replicaset @ 05/04/24 13:25:25.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:25:25.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:25:25.796
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 05/04/24 13:25:25.799
  May  4 13:25:25.808: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0504 13:25:25.996186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:25:26.996458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:25:27.996489      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:25:28.996627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:25:29.997219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:25:30.812: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/04/24 13:25:30.812
  STEP: getting scale subresource @ 05/04/24 13:25:30.812
  STEP: updating a scale subresource @ 05/04/24 13:25:30.817
  STEP: verifying the replicaset Spec.Replicas was modified @ 05/04/24 13:25:30.822
  STEP: Patch a scale subresource @ 05/04/24 13:25:30.824
  May  4 13:25:30.837: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8064" for this suite. @ 05/04/24 13:25:30.84
• [5.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 05/04/24 13:25:30.848
  May  4 13:25:30.848: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename downward-api @ 05/04/24 13:25:30.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:25:30.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:25:30.875
  STEP: Creating a pod to test downward API volume plugin @ 05/04/24 13:25:30.877
  E0504 13:25:30.997492      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:25:31.997535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:25:32.998474      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:25:33.999251      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/04/24 13:25:34.9
  May  4 13:25:34.905: INFO: Trying to get logs from node ip-172-31-72-79 pod downwardapi-volume-7741c071-ff65-49c4-ba1a-15a4017b7788 container client-container: <nil>
  STEP: delete the pod @ 05/04/24 13:25:34.911
  May  4 13:25:34.927: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4907" for this suite. @ 05/04/24 13:25:34.932
• [4.092 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 05/04/24 13:25:34.94
  May  4 13:25:34.940: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename projected @ 05/04/24 13:25:34.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:25:34.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:25:34.962
  STEP: Creating the pod @ 05/04/24 13:25:34.965
  E0504 13:25:35.000371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:25:36.000385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:25:37.001349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:25:37.509: INFO: Successfully updated pod "labelsupdate9addc528-f5e5-46d9-a04c-5e50b7712cf1"
  E0504 13:25:38.001525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:25:39.002349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:25:40.002921      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:25:41.003028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:25:41.538: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6028" for this suite. @ 05/04/24 13:25:41.542
• [6.610 seconds]
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 05/04/24 13:25:41.55
  May  4 13:25:41.550: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename dns @ 05/04/24 13:25:41.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:25:41.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:25:41.572
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-1396.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-1396.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 05/04/24 13:25:41.575
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-1396.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-1396.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 05/04/24 13:25:41.575
  STEP: creating a pod to probe /etc/hosts @ 05/04/24 13:25:41.575
  STEP: submitting the pod to kubernetes @ 05/04/24 13:25:41.575
  E0504 13:25:42.003956      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:25:43.004467      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/04/24 13:25:43.598
  STEP: looking for the results for each expected name from probers @ 05/04/24 13:25:43.602
  May  4 13:25:43.617: INFO: DNS probes using dns-1396/dns-test-1a4fa1af-583a-4c3d-9a7d-6f121573ca96 succeeded

  STEP: deleting the pod @ 05/04/24 13:25:43.617
  May  4 13:25:43.634: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1396" for this suite. @ 05/04/24 13:25:43.639
• [2.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 05/04/24 13:25:43.648
  May  4 13:25:43.648: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename var-expansion @ 05/04/24 13:25:43.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:25:43.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:25:43.669
  STEP: creating the pod @ 05/04/24 13:25:43.672
  STEP: waiting for pod running @ 05/04/24 13:25:43.683
  E0504 13:25:44.004608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:25:45.004689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 05/04/24 13:25:45.693
  May  4 13:25:45.698: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-8476 PodName:var-expansion-3e0459b2-b6c0-4aaf-962d-07a7164a694b ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  4 13:25:45.698: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 13:25:45.698: INFO: ExecWithOptions: Clientset creation
  May  4 13:25:45.698: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-8476/pods/var-expansion-3e0459b2-b6c0-4aaf-962d-07a7164a694b/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 05/04/24 13:25:45.742
  May  4 13:25:45.746: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-8476 PodName:var-expansion-3e0459b2-b6c0-4aaf-962d-07a7164a694b ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  4 13:25:45.746: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 13:25:45.746: INFO: ExecWithOptions: Clientset creation
  May  4 13:25:45.746: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-8476/pods/var-expansion-3e0459b2-b6c0-4aaf-962d-07a7164a694b/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 05/04/24 13:25:45.789
  E0504 13:25:46.005226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:25:46.301: INFO: Successfully updated pod "var-expansion-3e0459b2-b6c0-4aaf-962d-07a7164a694b"
  STEP: waiting for annotated pod running @ 05/04/24 13:25:46.302
  STEP: deleting the pod gracefully @ 05/04/24 13:25:46.306
  May  4 13:25:46.306: INFO: Deleting pod "var-expansion-3e0459b2-b6c0-4aaf-962d-07a7164a694b" in namespace "var-expansion-8476"
  May  4 13:25:46.312: INFO: Wait up to 5m0s for pod "var-expansion-3e0459b2-b6c0-4aaf-962d-07a7164a694b" to be fully deleted
  E0504 13:25:47.005437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:25:48.005537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:25:49.006309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:25:50.006771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:25:51.006924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:25:52.007005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:25:53.007112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:25:54.007256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:25:55.007745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:25:56.008701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:25:57.009334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:25:58.009577      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:25:59.010571      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:00.011543      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:01.011768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:02.011911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:03.012353      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:04.012604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:05.013466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:06.013693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:07.013761      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:08.013841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:09.014269      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:10.015121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:11.016163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:12.016590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:13.016696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:14.017610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:15.018483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:16.019224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:17.019312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:18.019402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:26:18.403: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8476" for this suite. @ 05/04/24 13:26:18.408
• [34.766 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:793
  STEP: Creating a kubernetes client @ 05/04/24 13:26:18.415
  May  4 13:26:18.415: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename statefulset @ 05/04/24 13:26:18.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:26:18.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:26:18.437
  STEP: Creating service test in namespace statefulset-8593 @ 05/04/24 13:26:18.439
  STEP: Looking for a node to schedule stateful set and pod @ 05/04/24 13:26:18.444
  STEP: Creating pod with conflicting port in namespace statefulset-8593 @ 05/04/24 13:26:18.447
  STEP: Waiting until pod test-pod will start running in namespace statefulset-8593 @ 05/04/24 13:26:18.456
  E0504 13:26:19.020350      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:20.020987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-8593 @ 05/04/24 13:26:20.467
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-8593 @ 05/04/24 13:26:20.472
  May  4 13:26:20.498: INFO: Observed stateful pod in namespace: statefulset-8593, name: ss-0, uid: b3585d65-ada3-4ecf-b919-2800258edcae, status phase: Pending. Waiting for statefulset controller to delete.
  May  4 13:26:20.515: INFO: Observed stateful pod in namespace: statefulset-8593, name: ss-0, uid: b3585d65-ada3-4ecf-b919-2800258edcae, status phase: Failed. Waiting for statefulset controller to delete.
  May  4 13:26:20.526: INFO: Observed stateful pod in namespace: statefulset-8593, name: ss-0, uid: b3585d65-ada3-4ecf-b919-2800258edcae, status phase: Failed. Waiting for statefulset controller to delete.
  May  4 13:26:20.531: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-8593
  STEP: Removing pod with conflicting port in namespace statefulset-8593 @ 05/04/24 13:26:20.531
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-8593 and will be in running state @ 05/04/24 13:26:20.545
  E0504 13:26:21.021108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:22.021591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:26:22.554: INFO: Deleting all statefulset in ns statefulset-8593
  May  4 13:26:22.559: INFO: Scaling statefulset ss to 0
  E0504 13:26:23.021653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:24.021752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:25.022037      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:26.022265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:27.022468      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:28.022607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:29.022755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:30.023042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:31.023320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:32.023388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:26:32.573: INFO: Waiting for statefulset status.replicas updated to 0
  May  4 13:26:32.577: INFO: Deleting statefulset ss
  May  4 13:26:32.590: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8593" for this suite. @ 05/04/24 13:26:32.595
• [14.188 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 05/04/24 13:26:32.603
  May  4 13:26:32.603: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename webhook @ 05/04/24 13:26:32.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:26:32.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:26:32.627
  STEP: Setting up server cert @ 05/04/24 13:26:32.654
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/04/24 13:26:32.806
  STEP: Deploying the webhook pod @ 05/04/24 13:26:32.816
  STEP: Wait for the deployment to be ready @ 05/04/24 13:26:32.828
  May  4 13:26:32.840: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0504 13:26:33.024442      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:34.024874      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/04/24 13:26:34.852
  STEP: Verifying the service has paired with the endpoint @ 05/04/24 13:26:34.863
  E0504 13:26:35.025821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:26:35.863: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 05/04/24 13:26:35.874
  STEP: create a namespace for the webhook @ 05/04/24 13:26:35.888
  STEP: create a configmap should be unconditionally rejected by the webhook @ 05/04/24 13:26:35.905
  May  4 13:26:35.954: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9593" for this suite. @ 05/04/24 13:26:35.962
  STEP: Destroying namespace "webhook-markers-9071" for this suite. @ 05/04/24 13:26:35.97
  STEP: Destroying namespace "fail-closed-namespace-5456" for this suite. @ 05/04/24 13:26:35.976
• [3.380 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 05/04/24 13:26:35.984
  May  4 13:26:35.984: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename resourcequota @ 05/04/24 13:26:35.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:26:36.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:26:36.006
  STEP: Counting existing ResourceQuota @ 05/04/24 13:26:36.01
  E0504 13:26:36.026098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:37.027074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:38.027624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:39.028258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:40.028666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/04/24 13:26:41.016
  STEP: Ensuring resource quota status is calculated @ 05/04/24 13:26:41.023
  E0504 13:26:41.029548      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:42.029661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 05/04/24 13:26:43.027
  E0504 13:26:43.030030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota status captures replication controller creation @ 05/04/24 13:26:43.057
  E0504 13:26:44.030508      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:45.030604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 05/04/24 13:26:45.062
  STEP: Ensuring resource quota status released usage @ 05/04/24 13:26:45.068
  E0504 13:26:46.030706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:47.030926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:26:47.072: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9944" for this suite. @ 05/04/24 13:26:47.075
• [11.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 05/04/24 13:26:47.083
  May  4 13:26:47.083: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename runtimeclass @ 05/04/24 13:26:47.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:26:47.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:26:47.105
  E0504 13:26:48.031187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:49.031332      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:26:49.136: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3520" for this suite. @ 05/04/24 13:26:49.141
• [2.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:170
  STEP: Creating a kubernetes client @ 05/04/24 13:26:49.151
  May  4 13:26:49.151: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename configmap @ 05/04/24 13:26:49.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:26:49.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:26:49.173
  STEP: creating a ConfigMap @ 05/04/24 13:26:49.178
  STEP: fetching the ConfigMap @ 05/04/24 13:26:49.182
  STEP: patching the ConfigMap @ 05/04/24 13:26:49.186
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 05/04/24 13:26:49.191
  STEP: deleting the ConfigMap by collection with a label selector @ 05/04/24 13:26:49.194
  STEP: listing all ConfigMaps in test namespace @ 05/04/24 13:26:49.206
  May  4 13:26:49.210: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8773" for this suite. @ 05/04/24 13:26:49.214
• [0.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 05/04/24 13:26:49.225
  May  4 13:26:49.225: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename pods @ 05/04/24 13:26:49.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:26:49.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:26:49.245
  STEP: Create set of pods @ 05/04/24 13:26:49.248
  May  4 13:26:49.258: INFO: created test-pod-1
  May  4 13:26:49.266: INFO: created test-pod-2
  May  4 13:26:49.274: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 05/04/24 13:26:49.274
  E0504 13:26:50.031937      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:51.032150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 05/04/24 13:26:51.335
  May  4 13:26:51.338: INFO: Pod quantity 3 is different from expected quantity 0
  E0504 13:26:52.032364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:26:52.340: INFO: Pod quantity 2 is different from expected quantity 0
  E0504 13:26:53.032415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:26:53.341: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2865" for this suite. @ 05/04/24 13:26:53.345
• [4.127 seconds]
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 05/04/24 13:26:53.353
  May  4 13:26:53.353: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename sched-preemption @ 05/04/24 13:26:53.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:26:53.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:26:53.375
  May  4 13:26:53.392: INFO: Waiting up to 1m0s for all nodes to be ready
  E0504 13:26:54.032796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:55.032895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:56.032995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:57.033531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:58.034107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:26:59.034537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:00.035251      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:01.035451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:02.035559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:03.035662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:04.035793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:05.035881      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:06.036948      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:07.037954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:08.038059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:09.038726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:10.039496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:11.039571      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:12.039690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:13.039809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:14.040366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:15.040928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:16.041442      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:17.041546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:18.042465      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:19.043427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:20.044242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:21.044418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:22.044522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:23.044595      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:24.045403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:25.045861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:26.046533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:27.046643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:28.046727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:29.047006      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:30.048021      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:31.048142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:32.048331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:33.048538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:34.049398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:35.049501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:36.049764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:37.050032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:38.050791      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:39.051821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:40.051982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:41.052221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:42.052326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:43.052405      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:44.052513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:45.052817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:46.053396      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:47.053572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:48.053659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:49.053897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:50.054882      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:51.055095      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:52.055188      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:53.055366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:27:53.397: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 05/04/24 13:27:53.4
  May  4 13:27:53.401: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename sched-preemption-path @ 05/04/24 13:27:53.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:27:53.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:27:53.422
  STEP: Finding an available node @ 05/04/24 13:27:53.424
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/04/24 13:27:53.424
  E0504 13:27:54.055549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:55.056011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/04/24 13:27:55.45
  May  4 13:27:55.461: INFO: found a healthy node: ip-172-31-18-228
  E0504 13:27:56.056993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:57.057439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:58.057506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:27:59.058412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:28:00.058673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:28:01.059152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:28:01.524: INFO: pods created so far: [1 1 1]
  May  4 13:28:01.524: INFO: length of pods created so far: 3
  E0504 13:28:02.059433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:28:03.059895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:28:03.539: INFO: pods created so far: [2 2 1]
  E0504 13:28:04.060765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:28:05.060831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:28:06.060928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:28:07.061032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:28:08.061434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:28:09.062422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:28:10.062490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:28:10.615: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-2909" for this suite. @ 05/04/24 13:28:10.618
  May  4 13:28:10.625: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3439" for this suite. @ 05/04/24 13:28:10.629
• [77.286 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 05/04/24 13:28:10.639
  May  4 13:28:10.639: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename container-probe @ 05/04/24 13:28:10.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:28:10.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:28:10.661
  STEP: Creating pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674 @ 05/04/24 13:28:10.664
  E0504 13:28:11.063610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:28:12.063745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/04/24 13:28:12.682
  May  4 13:28:12.685: INFO: Initial restart count of pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 is 0
  May  4 13:28:12.689: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:28:13.064242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:28:14.064358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:28:14.693: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:28:15.065313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:28:16.065581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:28:16.697: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:28:17.066246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:28:18.066340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:28:18.702: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:28:19.066736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:28:20.067004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:28:20.709: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:28:21.067987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:28:22.068093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:28:22.715: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:28:23.068745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:28:24.068831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:28:24.720: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:28:25.069445      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:28:26.069646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:28:26.726: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:28:27.069741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:28:28.070053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:28:28.730: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:28:29.071034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:28:30.071052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:28:30.737: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:28:31.071158      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:28:32.071441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:28:32.741: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  May  4 13:28:32.741: INFO: Restart count of pod container-probe-5674/liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 is now 1 (20.055759173s elapsed)
  E0504 13:28:33.071662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:28:34.071884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:28:34.747: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:28:35.072352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:28:36.072433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:28:36.752: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:28:37.073434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:28:38.073514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:28:38.756: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:28:39.073695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:28:40.073778      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:28:40.762: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:28:41.073994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:28:42.074069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:28:42.767: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:28:43.074203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:28:44.074279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:28:44.772: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:28:45.074410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:28:46.074601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:28:46.778: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:28:47.075525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:28:48.075764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:28:48.782: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:28:49.075941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:28:50.075994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:28:50.788: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:28:51.076746      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:28:52.076724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:28:52.793: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  May  4 13:28:52.793: INFO: Restart count of pod container-probe-5674/liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 is now 2 (40.107906573s elapsed)
  E0504 13:28:53.077409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:28:54.077517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:28:54.799: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:28:55.078192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:28:56.078698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:28:56.805: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:28:57.079211      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:28:58.079406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:28:58.810: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:28:59.079862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:29:00.080252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:29:00.817: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:29:01.080349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:29:02.080512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:29:02.823: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:29:03.080827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:29:04.081432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:29:04.828: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:29:05.081639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:29:06.081747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:29:06.834: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:29:07.082558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:29:08.082654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:29:08.840: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:29:09.082882      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:29:10.082979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:29:10.846: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:29:11.084038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:29:12.084359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:29:12.852: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  May  4 13:29:12.852: INFO: Restart count of pod container-probe-5674/liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 is now 3 (1m0.167149986s elapsed)
  E0504 13:29:13.084775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:29:14.085702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:29:14.857: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:29:15.086579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:29:16.086692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:29:16.861: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:29:17.086855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:29:18.087248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:29:18.868: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:29:19.087281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:29:20.087373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:29:20.873: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:29:21.087500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:29:22.087868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:29:22.877: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:29:23.087786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:29:24.088033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:29:24.884: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:29:25.088386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:29:26.088505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:29:26.889: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:29:27.089394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:29:28.089894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:29:28.895: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:29:29.089991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:29:30.090135      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:29:30.901: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:29:31.091157      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:29:32.092157      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:29:32.907: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  May  4 13:29:32.907: INFO: Restart count of pod container-probe-5674/liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 is now 4 (1m20.222209678s elapsed)
  E0504 13:29:33.092782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:29:34.093397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:29:34.913: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:29:35.093483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:29:36.093651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:29:36.917: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:29:37.094658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:29:38.095318      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:29:38.924: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:29:39.095696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:29:40.095795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:29:40.930: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:29:41.096549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:29:42.096655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:29:42.934: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:29:43.097716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:29:44.097820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:29:44.940: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:29:45.098862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:29:46.099139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:29:46.946: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:29:47.099215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:29:48.099387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:29:48.951: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:29:49.099772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:29:50.100016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:29:50.956: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:29:51.100182      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:29:52.100438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:29:52.962: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:29:53.101531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:29:54.101628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:29:54.968: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:29:55.102743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:29:56.102869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:29:56.973: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:29:57.103738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:29:58.104121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:29:58.979: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:29:59.104840      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:30:00.104925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:30:00.986: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:30:01.105217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:30:02.105317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:30:02.989: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:30:03.106274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:30:04.106361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:30:04.996: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:30:05.106690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:30:06.106885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:30:07.001: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:30:07.107770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:30:08.107909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:30:09.007: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:30:09.108602      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:30:10.108687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:30:11.012: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:30:11.109064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:30:12.109611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:30:13.016: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:30:13.110061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:30:14.110296      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:30:15.023: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:30:15.110708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:30:16.110805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:30:17.028: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:30:17.111534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:30:18.111806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:30:19.032: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:30:19.112760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:30:20.112856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:30:21.039: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:30:21.113909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:30:22.114016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:30:23.044: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:30:23.114804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:30:24.114995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:30:25.049: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:30:25.115274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:30:26.115374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:30:27.055: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:30:27.115811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:30:28.115899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:30:29.059: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:30:29.116956      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:30:30.117000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:30:31.066: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:30:31.117276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:30:32.117366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:30:33.071: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  E0504 13:30:33.117812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:30:34.118049      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:30:35.077: INFO: Get pod liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 in namespace container-probe-5674
  May  4 13:30:35.077: INFO: Restart count of pod container-probe-5674/liveness-3c3ce99e-3ead-48ef-9891-8c8a56f28f77 is now 5 (2m22.392616126s elapsed)
  STEP: deleting the pod @ 05/04/24 13:30:35.078
  May  4 13:30:35.095: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5674" for this suite. @ 05/04/24 13:30:35.099
• [144.468 seconds]
------------------------------
SS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 05/04/24 13:30:35.107
  May  4 13:30:35.107: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename csistoragecapacity @ 05/04/24 13:30:35.108
  E0504 13:30:35.118397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:30:35.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:30:35.128
  STEP: getting /apis @ 05/04/24 13:30:35.131
  STEP: getting /apis/storage.k8s.io @ 05/04/24 13:30:35.134
  STEP: getting /apis/storage.k8s.io/v1 @ 05/04/24 13:30:35.135
  STEP: creating @ 05/04/24 13:30:35.136
  STEP: watching @ 05/04/24 13:30:35.152
  May  4 13:30:35.152: INFO: starting watch
  STEP: getting @ 05/04/24 13:30:35.158
  STEP: listing in namespace @ 05/04/24 13:30:35.162
  STEP: listing across namespaces @ 05/04/24 13:30:35.165
  STEP: patching @ 05/04/24 13:30:35.168
  STEP: updating @ 05/04/24 13:30:35.173
  May  4 13:30:35.178: INFO: waiting for watch events with expected annotations in namespace
  May  4 13:30:35.179: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 05/04/24 13:30:35.179
  STEP: deleting a collection @ 05/04/24 13:30:35.19
  May  4 13:30:35.207: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-5144" for this suite. @ 05/04/24 13:30:35.21
• [0.112 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 05/04/24 13:30:35.219
  May  4 13:30:35.219: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename proxy @ 05/04/24 13:30:35.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:30:35.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:30:35.242
  STEP: starting an echo server on multiple ports @ 05/04/24 13:30:35.257
  STEP: creating replication controller proxy-service-cmqf9 in namespace proxy-4898 @ 05/04/24 13:30:35.257
  I0504 13:30:35.266393      19 runners.go:197] Created replication controller with name: proxy-service-cmqf9, namespace: proxy-4898, replica count: 1
  E0504 13:30:36.119151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0504 13:30:36.318400      19 runners.go:197] proxy-service-cmqf9 Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0504 13:30:37.120134      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0504 13:30:37.319552      19 runners.go:197] proxy-service-cmqf9 Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May  4 13:30:37.325: INFO: setup took 2.080587182s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 05/04/24 13:30:37.325
  May  4 13:30:37.330: INFO: (0) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 4.485601ms)
  May  4 13:30:37.331: INFO: (0) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 5.262569ms)
  May  4 13:30:37.331: INFO: (0) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/rewriteme">test</a> (200; 5.528708ms)
  May  4 13:30:37.331: INFO: (0) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">... (200; 5.534835ms)
  May  4 13:30:37.333: INFO: (0) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 7.070175ms)
  May  4 13:30:37.333: INFO: (0) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">test<... (200; 7.292582ms)
  May  4 13:30:37.333: INFO: (0) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname2/proxy/: bar (200; 7.454651ms)
  May  4 13:30:37.334: INFO: (0) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname1/proxy/: foo (200; 8.479717ms)
  May  4 13:30:37.334: INFO: (0) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname2/proxy/: bar (200; 8.475949ms)
  May  4 13:30:37.335: INFO: (0) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 8.852711ms)
  May  4 13:30:37.335: INFO: (0) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname1/proxy/: foo (200; 9.417486ms)
  May  4 13:30:37.337: INFO: (0) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:462/proxy/: tls qux (200; 11.109419ms)
  May  4 13:30:37.337: INFO: (0) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname1/proxy/: tls baz (200; 11.308242ms)
  May  4 13:30:37.337: INFO: (0) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:460/proxy/: tls baz (200; 11.596295ms)
  May  4 13:30:37.337: INFO: (0) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/tlsrewritem... (200; 11.381368ms)
  May  4 13:30:37.337: INFO: (0) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname2/proxy/: tls qux (200; 11.364689ms)
  May  4 13:30:37.341: INFO: (1) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/rewriteme">test</a> (200; 3.015345ms)
  May  4 13:30:37.341: INFO: (1) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/tlsrewritem... (200; 3.604082ms)
  May  4 13:30:37.342: INFO: (1) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:462/proxy/: tls qux (200; 3.781636ms)
  May  4 13:30:37.342: INFO: (1) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:460/proxy/: tls baz (200; 4.69737ms)
  May  4 13:30:37.343: INFO: (1) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 5.359241ms)
  May  4 13:30:37.343: INFO: (1) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 5.731728ms)
  May  4 13:30:37.343: INFO: (1) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname1/proxy/: tls baz (200; 5.684522ms)
  May  4 13:30:37.343: INFO: (1) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 5.582525ms)
  May  4 13:30:37.344: INFO: (1) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname1/proxy/: foo (200; 6.770289ms)
  May  4 13:30:37.344: INFO: (1) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 6.964101ms)
  May  4 13:30:37.344: INFO: (1) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">test<... (200; 6.880422ms)
  May  4 13:30:37.345: INFO: (1) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">... (200; 7.135448ms)
  May  4 13:30:37.345: INFO: (1) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname2/proxy/: bar (200; 7.414695ms)
  May  4 13:30:37.345: INFO: (1) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname2/proxy/: bar (200; 7.528356ms)
  May  4 13:30:37.345: INFO: (1) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname2/proxy/: tls qux (200; 7.744356ms)
  May  4 13:30:37.347: INFO: (1) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname1/proxy/: foo (200; 8.764511ms)
  May  4 13:30:37.349: INFO: (2) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:460/proxy/: tls baz (200; 2.767963ms)
  May  4 13:30:37.350: INFO: (2) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:462/proxy/: tls qux (200; 3.45746ms)
  May  4 13:30:37.351: INFO: (2) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 3.970887ms)
  May  4 13:30:37.351: INFO: (2) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/tlsrewritem... (200; 4.232881ms)
  May  4 13:30:37.351: INFO: (2) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 4.485319ms)
  May  4 13:30:37.352: INFO: (2) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname2/proxy/: tls qux (200; 5.086236ms)
  May  4 13:30:37.352: INFO: (2) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/rewriteme">test</a> (200; 5.0242ms)
  May  4 13:30:37.352: INFO: (2) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 5.47857ms)
  May  4 13:30:37.352: INFO: (2) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">test<... (200; 5.625552ms)
  May  4 13:30:37.353: INFO: (2) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">... (200; 5.834476ms)
  May  4 13:30:37.353: INFO: (2) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 6.125386ms)
  May  4 13:30:37.353: INFO: (2) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname1/proxy/: foo (200; 6.656851ms)
  May  4 13:30:37.353: INFO: (2) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname2/proxy/: bar (200; 6.601501ms)
  May  4 13:30:37.354: INFO: (2) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname1/proxy/: foo (200; 7.261696ms)
  May  4 13:30:37.355: INFO: (2) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname2/proxy/: bar (200; 7.906341ms)
  May  4 13:30:37.356: INFO: (2) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname1/proxy/: tls baz (200; 8.79277ms)
  May  4 13:30:37.358: INFO: (3) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 2.765884ms)
  May  4 13:30:37.360: INFO: (3) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 4.391793ms)
  May  4 13:30:37.362: INFO: (3) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname1/proxy/: foo (200; 6.595185ms)
  May  4 13:30:37.362: INFO: (3) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 6.460222ms)
  May  4 13:30:37.362: INFO: (3) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">... (200; 6.497815ms)
  May  4 13:30:37.363: INFO: (3) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/tlsrewritem... (200; 6.826324ms)
  May  4 13:30:37.363: INFO: (3) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/rewriteme">test</a> (200; 6.927127ms)
  May  4 13:30:37.363: INFO: (3) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname2/proxy/: tls qux (200; 6.784708ms)
  May  4 13:30:37.363: INFO: (3) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:460/proxy/: tls baz (200; 6.972496ms)
  May  4 13:30:37.363: INFO: (3) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname2/proxy/: bar (200; 7.16381ms)
  May  4 13:30:37.363: INFO: (3) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:462/proxy/: tls qux (200; 7.082882ms)
  May  4 13:30:37.363: INFO: (3) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">test<... (200; 6.970981ms)
  May  4 13:30:37.363: INFO: (3) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 6.87573ms)
  May  4 13:30:37.363: INFO: (3) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname1/proxy/: foo (200; 7.21951ms)
  May  4 13:30:37.364: INFO: (3) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname2/proxy/: bar (200; 8.137711ms)
  May  4 13:30:37.364: INFO: (3) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname1/proxy/: tls baz (200; 8.194917ms)
  May  4 13:30:37.368: INFO: (4) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 4.350048ms)
  May  4 13:30:37.369: INFO: (4) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">... (200; 4.442822ms)
  May  4 13:30:37.369: INFO: (4) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 4.408962ms)
  May  4 13:30:37.369: INFO: (4) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">test<... (200; 4.738756ms)
  May  4 13:30:37.371: INFO: (4) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 6.357319ms)
  May  4 13:30:37.371: INFO: (4) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 6.40929ms)
  May  4 13:30:37.371: INFO: (4) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/rewriteme">test</a> (200; 6.238314ms)
  May  4 13:30:37.371: INFO: (4) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:462/proxy/: tls qux (200; 6.299718ms)
  May  4 13:30:37.371: INFO: (4) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/tlsrewritem... (200; 6.404126ms)
  May  4 13:30:37.371: INFO: (4) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname2/proxy/: tls qux (200; 6.365846ms)
  May  4 13:30:37.371: INFO: (4) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:460/proxy/: tls baz (200; 6.324017ms)
  May  4 13:30:37.371: INFO: (4) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname1/proxy/: foo (200; 6.317486ms)
  May  4 13:30:37.372: INFO: (4) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname2/proxy/: bar (200; 7.249037ms)
  May  4 13:30:37.372: INFO: (4) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname1/proxy/: foo (200; 7.307623ms)
  May  4 13:30:37.372: INFO: (4) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname1/proxy/: tls baz (200; 7.509652ms)
  May  4 13:30:37.373: INFO: (4) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname2/proxy/: bar (200; 8.338637ms)
  May  4 13:30:37.375: INFO: (5) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:460/proxy/: tls baz (200; 2.80054ms)
  May  4 13:30:37.376: INFO: (5) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:462/proxy/: tls qux (200; 3.217006ms)
  May  4 13:30:37.376: INFO: (5) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 3.334178ms)
  May  4 13:30:37.377: INFO: (5) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 4.281028ms)
  May  4 13:30:37.377: INFO: (5) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname2/proxy/: tls qux (200; 4.74065ms)
  May  4 13:30:37.379: INFO: (5) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 6.164563ms)
  May  4 13:30:37.379: INFO: (5) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname2/proxy/: bar (200; 6.465071ms)
  May  4 13:30:37.379: INFO: (5) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/rewriteme">test</a> (200; 6.317447ms)
  May  4 13:30:37.379: INFO: (5) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">test<... (200; 6.310611ms)
  May  4 13:30:37.380: INFO: (5) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 7.353831ms)
  May  4 13:30:37.381: INFO: (5) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">... (200; 8.121184ms)
  May  4 13:30:37.381: INFO: (5) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname1/proxy/: tls baz (200; 8.202788ms)
  May  4 13:30:37.381: INFO: (5) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname1/proxy/: foo (200; 8.769461ms)
  May  4 13:30:37.382: INFO: (5) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname2/proxy/: bar (200; 9.177459ms)
  May  4 13:30:37.383: INFO: (5) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/tlsrewritem... (200; 9.76738ms)
  May  4 13:30:37.384: INFO: (5) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname1/proxy/: foo (200; 11.184589ms)
  May  4 13:30:37.392: INFO: (6) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/rewriteme">test</a> (200; 7.531452ms)
  May  4 13:30:37.392: INFO: (6) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/tlsrewritem... (200; 8.129283ms)
  May  4 13:30:37.392: INFO: (6) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 8.045591ms)
  May  4 13:30:37.394: INFO: (6) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 9.632315ms)
  May  4 13:30:37.394: INFO: (6) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">test<... (200; 9.649548ms)
  May  4 13:30:37.394: INFO: (6) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:462/proxy/: tls qux (200; 9.525167ms)
  May  4 13:30:37.394: INFO: (6) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname2/proxy/: bar (200; 9.865968ms)
  May  4 13:30:37.395: INFO: (6) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:460/proxy/: tls baz (200; 10.813698ms)
  May  4 13:30:37.395: INFO: (6) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 10.623888ms)
  May  4 13:30:37.396: INFO: (6) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname1/proxy/: foo (200; 12.000419ms)
  May  4 13:30:37.396: INFO: (6) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">... (200; 12.122453ms)
  May  4 13:30:37.396: INFO: (6) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname2/proxy/: bar (200; 12.123523ms)
  May  4 13:30:37.397: INFO: (6) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 12.42107ms)
  May  4 13:30:37.397: INFO: (6) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname1/proxy/: tls baz (200; 12.714513ms)
  May  4 13:30:37.398: INFO: (6) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname1/proxy/: foo (200; 13.473317ms)
  May  4 13:30:37.399: INFO: (6) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname2/proxy/: tls qux (200; 14.460359ms)
  May  4 13:30:37.405: INFO: (7) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 6.053282ms)
  May  4 13:30:37.406: INFO: (7) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/tlsrewritem... (200; 7.176628ms)
  May  4 13:30:37.408: INFO: (7) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/rewriteme">test</a> (200; 9.311141ms)
  May  4 13:30:37.408: INFO: (7) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname1/proxy/: tls baz (200; 9.277587ms)
  May  4 13:30:37.409: INFO: (7) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 9.764308ms)
  May  4 13:30:37.411: INFO: (7) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">... (200; 11.864048ms)
  May  4 13:30:37.412: INFO: (7) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 13.130077ms)
  May  4 13:30:37.412: INFO: (7) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname2/proxy/: bar (200; 13.010225ms)
  May  4 13:30:37.412: INFO: (7) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:460/proxy/: tls baz (200; 13.127753ms)
  May  4 13:30:37.412: INFO: (7) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname2/proxy/: bar (200; 13.409895ms)
  May  4 13:30:37.412: INFO: (7) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">test<... (200; 13.241933ms)
  May  4 13:30:37.412: INFO: (7) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:462/proxy/: tls qux (200; 13.549249ms)
  May  4 13:30:37.412: INFO: (7) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 13.458416ms)
  May  4 13:30:37.412: INFO: (7) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname1/proxy/: foo (200; 13.504926ms)
  May  4 13:30:37.413: INFO: (7) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname1/proxy/: foo (200; 13.473582ms)
  May  4 13:30:37.413: INFO: (7) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname2/proxy/: tls qux (200; 13.729442ms)
  May  4 13:30:37.416: INFO: (8) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 3.435254ms)
  May  4 13:30:37.417: INFO: (8) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/rewriteme">test</a> (200; 4.26785ms)
  May  4 13:30:37.418: INFO: (8) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 5.502942ms)
  May  4 13:30:37.420: INFO: (8) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:460/proxy/: tls baz (200; 6.467348ms)
  May  4 13:30:37.421: INFO: (8) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 7.775321ms)
  May  4 13:30:37.421: INFO: (8) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname1/proxy/: foo (200; 8.397093ms)
  May  4 13:30:37.422: INFO: (8) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 8.623874ms)
  May  4 13:30:37.422: INFO: (8) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/tlsrewritem... (200; 8.799158ms)
  May  4 13:30:37.422: INFO: (8) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:462/proxy/: tls qux (200; 9.057325ms)
  May  4 13:30:37.423: INFO: (8) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">... (200; 10.036402ms)
  May  4 13:30:37.423: INFO: (8) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">test<... (200; 10.210513ms)
  May  4 13:30:37.425: INFO: (8) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname2/proxy/: bar (200; 11.497912ms)
  May  4 13:30:37.425: INFO: (8) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname2/proxy/: bar (200; 11.64917ms)
  May  4 13:30:37.425: INFO: (8) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname2/proxy/: tls qux (200; 11.742407ms)
  May  4 13:30:37.425: INFO: (8) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname1/proxy/: tls baz (200; 12.207479ms)
  May  4 13:30:37.432: INFO: (8) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname1/proxy/: foo (200; 18.906091ms)
  May  4 13:30:37.438: INFO: (9) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">test<... (200; 6.376927ms)
  May  4 13:30:37.440: INFO: (9) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 7.693372ms)
  May  4 13:30:37.442: INFO: (9) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 9.927324ms)
  May  4 13:30:37.442: INFO: (9) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname1/proxy/: tls baz (200; 9.901883ms)
  May  4 13:30:37.443: INFO: (9) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">... (200; 11.298909ms)
  May  4 13:30:37.444: INFO: (9) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:460/proxy/: tls baz (200; 12.219106ms)
  May  4 13:30:37.445: INFO: (9) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 13.276239ms)
  May  4 13:30:37.446: INFO: (9) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/rewriteme">test</a> (200; 13.565757ms)
  May  4 13:30:37.446: INFO: (9) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:462/proxy/: tls qux (200; 13.948245ms)
  May  4 13:30:37.446: INFO: (9) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 14.226832ms)
  May  4 13:30:37.446: INFO: (9) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname1/proxy/: foo (200; 14.236325ms)
  May  4 13:30:37.447: INFO: (9) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname2/proxy/: bar (200; 14.654657ms)
  May  4 13:30:37.447: INFO: (9) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname2/proxy/: bar (200; 14.549808ms)
  May  4 13:30:37.447: INFO: (9) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/tlsrewritem... (200; 14.685762ms)
  May  4 13:30:37.447: INFO: (9) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname1/proxy/: foo (200; 14.913603ms)
  May  4 13:30:37.447: INFO: (9) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname2/proxy/: tls qux (200; 14.928453ms)
  May  4 13:30:37.453: INFO: (10) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 5.985185ms)
  May  4 13:30:37.455: INFO: (10) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/tlsrewritem... (200; 7.645443ms)
  May  4 13:30:37.457: INFO: (10) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 9.736439ms)
  May  4 13:30:37.457: INFO: (10) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">... (200; 9.625652ms)
  May  4 13:30:37.457: INFO: (10) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:462/proxy/: tls qux (200; 10.127058ms)
  May  4 13:30:37.461: INFO: (10) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname2/proxy/: bar (200; 13.873575ms)
  May  4 13:30:37.461: INFO: (10) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/rewriteme">test</a> (200; 13.469716ms)
  May  4 13:30:37.461: INFO: (10) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:460/proxy/: tls baz (200; 13.683575ms)
  May  4 13:30:37.462: INFO: (10) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 13.907709ms)
  May  4 13:30:37.462: INFO: (10) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">test<... (200; 14.267961ms)
  May  4 13:30:37.462: INFO: (10) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname1/proxy/: foo (200; 14.528619ms)
  May  4 13:30:37.462: INFO: (10) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname2/proxy/: tls qux (200; 14.817902ms)
  May  4 13:30:37.462: INFO: (10) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname2/proxy/: bar (200; 14.947654ms)
  May  4 13:30:37.463: INFO: (10) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 15.340983ms)
  May  4 13:30:37.463: INFO: (10) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname1/proxy/: foo (200; 15.458614ms)
  May  4 13:30:37.463: INFO: (10) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname1/proxy/: tls baz (200; 15.460661ms)
  May  4 13:30:37.468: INFO: (11) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 5.109637ms)
  May  4 13:30:37.469: INFO: (11) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">test<... (200; 6.128657ms)
  May  4 13:30:37.471: INFO: (11) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/rewriteme">test</a> (200; 7.633605ms)
  May  4 13:30:37.471: INFO: (11) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 7.683411ms)
  May  4 13:30:37.472: INFO: (11) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">... (200; 8.856885ms)
  May  4 13:30:37.472: INFO: (11) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 9.213234ms)
  May  4 13:30:37.473: INFO: (11) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 9.445565ms)
  May  4 13:30:37.475: INFO: (11) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname1/proxy/: tls baz (200; 11.845134ms)
  May  4 13:30:37.475: INFO: (11) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname2/proxy/: bar (200; 11.803066ms)
  May  4 13:30:37.476: INFO: (11) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:460/proxy/: tls baz (200; 12.414519ms)
  May  4 13:30:37.476: INFO: (11) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname1/proxy/: foo (200; 12.90171ms)
  May  4 13:30:37.476: INFO: (11) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:462/proxy/: tls qux (200; 12.694507ms)
  May  4 13:30:37.477: INFO: (11) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname2/proxy/: tls qux (200; 13.469416ms)
  May  4 13:30:37.477: INFO: (11) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname2/proxy/: bar (200; 14.111774ms)
  May  4 13:30:37.478: INFO: (11) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/tlsrewritem... (200; 14.710515ms)
  May  4 13:30:37.479: INFO: (11) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname1/proxy/: foo (200; 15.114638ms)
  May  4 13:30:37.485: INFO: (12) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 5.92996ms)
  May  4 13:30:37.486: INFO: (12) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/rewriteme">test</a> (200; 6.785976ms)
  May  4 13:30:37.486: INFO: (12) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 7.667494ms)
  May  4 13:30:37.489: INFO: (12) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:462/proxy/: tls qux (200; 10.344345ms)
  May  4 13:30:37.489: INFO: (12) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:460/proxy/: tls baz (200; 10.529438ms)
  May  4 13:30:37.489: INFO: (12) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">test<... (200; 10.835648ms)
  May  4 13:30:37.490: INFO: (12) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 10.87361ms)
  May  4 13:30:37.490: INFO: (12) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/tlsrewritem... (200; 11.019954ms)
  May  4 13:30:37.490: INFO: (12) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">... (200; 10.875667ms)
  May  4 13:30:37.491: INFO: (12) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname2/proxy/: bar (200; 11.904299ms)
  May  4 13:30:37.491: INFO: (12) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname2/proxy/: bar (200; 12.120009ms)
  May  4 13:30:37.491: INFO: (12) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 12.40266ms)
  May  4 13:30:37.491: INFO: (12) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname2/proxy/: tls qux (200; 12.522928ms)
  May  4 13:30:37.492: INFO: (12) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname1/proxy/: foo (200; 13.306917ms)
  May  4 13:30:37.492: INFO: (12) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname1/proxy/: tls baz (200; 13.423636ms)
  May  4 13:30:37.492: INFO: (12) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname1/proxy/: foo (200; 13.602965ms)
  May  4 13:30:37.501: INFO: (13) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/rewriteme">test</a> (200; 7.622119ms)
  May  4 13:30:37.501: INFO: (13) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">... (200; 7.667255ms)
  May  4 13:30:37.501: INFO: (13) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/tlsrewritem... (200; 7.558816ms)
  May  4 13:30:37.501: INFO: (13) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:460/proxy/: tls baz (200; 8.04702ms)
  May  4 13:30:37.502: INFO: (13) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 7.961216ms)
  May  4 13:30:37.502: INFO: (13) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">test<... (200; 8.165681ms)
  May  4 13:30:37.502: INFO: (13) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 8.263259ms)
  May  4 13:30:37.502: INFO: (13) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:462/proxy/: tls qux (200; 8.022647ms)
  May  4 13:30:37.502: INFO: (13) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 8.795635ms)
  May  4 13:30:37.504: INFO: (13) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 9.992077ms)
  May  4 13:30:37.504: INFO: (13) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname2/proxy/: bar (200; 10.635292ms)
  May  4 13:30:37.504: INFO: (13) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname1/proxy/: foo (200; 10.678802ms)
  May  4 13:30:37.505: INFO: (13) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname2/proxy/: bar (200; 11.018882ms)
  May  4 13:30:37.505: INFO: (13) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname1/proxy/: tls baz (200; 11.001243ms)
  May  4 13:30:37.505: INFO: (13) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname1/proxy/: foo (200; 11.340735ms)
  May  4 13:30:37.506: INFO: (13) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname2/proxy/: tls qux (200; 11.677065ms)
  May  4 13:30:37.511: INFO: (14) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/rewriteme">test</a> (200; 5.180016ms)
  May  4 13:30:37.514: INFO: (14) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:460/proxy/: tls baz (200; 7.884838ms)
  May  4 13:30:37.514: INFO: (14) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:462/proxy/: tls qux (200; 8.265309ms)
  May  4 13:30:37.514: INFO: (14) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 8.650044ms)
  May  4 13:30:37.515: INFO: (14) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 8.364151ms)
  May  4 13:30:37.515: INFO: (14) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname2/proxy/: bar (200; 8.271789ms)
  May  4 13:30:37.516: INFO: (14) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">... (200; 9.229671ms)
  May  4 13:30:37.516: INFO: (14) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 9.478927ms)
  May  4 13:30:37.516: INFO: (14) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/tlsrewritem... (200; 9.981944ms)
  May  4 13:30:37.518: INFO: (14) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 11.958678ms)
  May  4 13:30:37.518: INFO: (14) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname1/proxy/: foo (200; 12.010114ms)
  May  4 13:30:37.518: INFO: (14) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname1/proxy/: tls baz (200; 11.882666ms)
  May  4 13:30:37.518: INFO: (14) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">test<... (200; 12.079379ms)
  May  4 13:30:37.519: INFO: (14) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname2/proxy/: bar (200; 12.393584ms)
  May  4 13:30:37.519: INFO: (14) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname1/proxy/: foo (200; 13.015028ms)
  May  4 13:30:37.525: INFO: (14) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname2/proxy/: tls qux (200; 18.84824ms)
  May  4 13:30:37.531: INFO: (15) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:462/proxy/: tls qux (200; 6.010414ms)
  May  4 13:30:37.534: INFO: (15) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 8.343716ms)
  May  4 13:30:37.534: INFO: (15) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">... (200; 8.393055ms)
  May  4 13:30:37.534: INFO: (15) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:460/proxy/: tls baz (200; 8.796909ms)
  May  4 13:30:37.534: INFO: (15) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 8.845251ms)
  May  4 13:30:37.534: INFO: (15) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/rewriteme">test</a> (200; 8.866709ms)
  May  4 13:30:37.534: INFO: (15) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname1/proxy/: tls baz (200; 8.809749ms)
  May  4 13:30:37.534: INFO: (15) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">test<... (200; 9.224085ms)
  May  4 13:30:37.535: INFO: (15) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname2/proxy/: tls qux (200; 9.685137ms)
  May  4 13:30:37.535: INFO: (15) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/tlsrewritem... (200; 9.812843ms)
  May  4 13:30:37.535: INFO: (15) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname1/proxy/: foo (200; 10.001482ms)
  May  4 13:30:37.535: INFO: (15) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 9.951107ms)
  May  4 13:30:37.535: INFO: (15) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 10.136073ms)
  May  4 13:30:37.536: INFO: (15) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname1/proxy/: foo (200; 10.712334ms)
  May  4 13:30:37.537: INFO: (15) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname2/proxy/: bar (200; 11.393927ms)
  May  4 13:30:37.537: INFO: (15) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname2/proxy/: bar (200; 12.117264ms)
  May  4 13:30:37.544: INFO: (16) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:460/proxy/: tls baz (200; 6.911828ms)
  May  4 13:30:37.544: INFO: (16) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 6.871944ms)
  May  4 13:30:37.547: INFO: (16) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 9.143284ms)
  May  4 13:30:37.548: INFO: (16) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/rewriteme">test</a> (200; 10.550277ms)
  May  4 13:30:37.549: INFO: (16) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 11.217395ms)
  May  4 13:30:37.549: INFO: (16) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname2/proxy/: bar (200; 11.60405ms)
  May  4 13:30:37.549: INFO: (16) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">test<... (200; 11.62062ms)
  May  4 13:30:37.549: INFO: (16) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/tlsrewritem... (200; 11.896513ms)
  May  4 13:30:37.550: INFO: (16) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">... (200; 12.031471ms)
  May  4 13:30:37.550: INFO: (16) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname2/proxy/: bar (200; 12.118087ms)
  May  4 13:30:37.550: INFO: (16) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:462/proxy/: tls qux (200; 12.770934ms)
  May  4 13:30:37.551: INFO: (16) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname1/proxy/: foo (200; 13.854336ms)
  May  4 13:30:37.551: INFO: (16) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname1/proxy/: foo (200; 13.821927ms)
  May  4 13:30:37.552: INFO: (16) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname2/proxy/: tls qux (200; 14.369299ms)
  May  4 13:30:37.553: INFO: (16) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname1/proxy/: tls baz (200; 15.040518ms)
  May  4 13:30:37.553: INFO: (16) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 15.099558ms)
  May  4 13:30:37.563: INFO: (17) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 10.14967ms)
  May  4 13:30:37.566: INFO: (17) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 12.910506ms)
  May  4 13:30:37.566: INFO: (17) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:462/proxy/: tls qux (200; 12.84004ms)
  May  4 13:30:37.566: INFO: (17) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname1/proxy/: foo (200; 12.839698ms)
  May  4 13:30:37.566: INFO: (17) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">... (200; 12.670382ms)
  May  4 13:30:37.566: INFO: (17) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">test<... (200; 12.823054ms)
  May  4 13:30:37.566: INFO: (17) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 12.814894ms)
  May  4 13:30:37.566: INFO: (17) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:460/proxy/: tls baz (200; 12.88107ms)
  May  4 13:30:37.566: INFO: (17) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname1/proxy/: tls baz (200; 12.920617ms)
  May  4 13:30:37.566: INFO: (17) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/rewriteme">test</a> (200; 13.175098ms)
  May  4 13:30:37.566: INFO: (17) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/tlsrewritem... (200; 13.028212ms)
  May  4 13:30:37.566: INFO: (17) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname2/proxy/: tls qux (200; 13.078002ms)
  May  4 13:30:37.566: INFO: (17) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 13.069517ms)
  May  4 13:30:37.566: INFO: (17) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname1/proxy/: foo (200; 13.207098ms)
  May  4 13:30:37.566: INFO: (17) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname2/proxy/: bar (200; 13.127338ms)
  May  4 13:30:37.566: INFO: (17) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname2/proxy/: bar (200; 13.075433ms)
  May  4 13:30:37.573: INFO: (18) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">test<... (200; 6.886823ms)
  May  4 13:30:37.575: INFO: (18) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">... (200; 8.421584ms)
  May  4 13:30:37.575: INFO: (18) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/rewriteme">test</a> (200; 8.667523ms)
  May  4 13:30:37.575: INFO: (18) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname1/proxy/: foo (200; 8.445664ms)
  May  4 13:30:37.577: INFO: (18) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/tlsrewritem... (200; 10.093259ms)
  May  4 13:30:37.577: INFO: (18) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:460/proxy/: tls baz (200; 10.130105ms)
  May  4 13:30:37.578: INFO: (18) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:462/proxy/: tls qux (200; 11.855281ms)
  May  4 13:30:37.578: INFO: (18) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname1/proxy/: tls baz (200; 12.001694ms)
  May  4 13:30:37.579: INFO: (18) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname2/proxy/: bar (200; 13.115193ms)
  May  4 13:30:37.580: INFO: (18) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 13.333518ms)
  May  4 13:30:37.580: INFO: (18) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname1/proxy/: foo (200; 13.835245ms)
  May  4 13:30:37.580: INFO: (18) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 13.684693ms)
  May  4 13:30:37.581: INFO: (18) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 14.201014ms)
  May  4 13:30:37.582: INFO: (18) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 15.007674ms)
  May  4 13:30:37.582: INFO: (18) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname2/proxy/: bar (200; 15.131423ms)
  May  4 13:30:37.582: INFO: (18) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname2/proxy/: tls qux (200; 15.101121ms)
  May  4 13:30:37.589: INFO: (19) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:462/proxy/: tls qux (200; 6.789686ms)
  May  4 13:30:37.589: INFO: (19) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 6.834415ms)
  May  4 13:30:37.589: INFO: (19) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 6.936226ms)
  May  4 13:30:37.590: INFO: (19) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:160/proxy/: foo (200; 8.321852ms)
  May  4 13:30:37.590: INFO: (19) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname1/proxy/: foo (200; 8.589023ms)
  May  4 13:30:37.595: INFO: (19) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">test<... (200; 12.713496ms)
  May  4 13:30:37.595: INFO: (19) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:162/proxy/: bar (200; 12.711047ms)
  May  4 13:30:37.595: INFO: (19) /api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/proxy-service-cmqf9-q6mlx/proxy/rewriteme">test</a> (200; 12.866819ms)
  May  4 13:30:37.595: INFO: (19) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname2/proxy/: bar (200; 12.709126ms)
  May  4 13:30:37.595: INFO: (19) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname1/proxy/: tls baz (200; 12.803086ms)
  May  4 13:30:37.595: INFO: (19) /api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/http:proxy-service-cmqf9-q6mlx:1080/proxy/rewriteme">... (200; 12.831551ms)
  May  4 13:30:37.595: INFO: (19) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:460/proxy/: tls baz (200; 12.837696ms)
  May  4 13:30:37.595: INFO: (19) /api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/: <a href="/api/v1/namespaces/proxy-4898/pods/https:proxy-service-cmqf9-q6mlx:443/proxy/tlsrewritem... (200; 13.187766ms)
  May  4 13:30:37.595: INFO: (19) /api/v1/namespaces/proxy-4898/services/http:proxy-service-cmqf9:portname1/proxy/: foo (200; 13.061045ms)
  May  4 13:30:37.595: INFO: (19) /api/v1/namespaces/proxy-4898/services/proxy-service-cmqf9:portname2/proxy/: bar (200; 12.896215ms)
  May  4 13:30:37.595: INFO: (19) /api/v1/namespaces/proxy-4898/services/https:proxy-service-cmqf9:tlsportname2/proxy/: tls qux (200; 13.336765ms)
  STEP: deleting ReplicationController proxy-service-cmqf9 in namespace proxy-4898, will wait for the garbage collector to delete the pods @ 05/04/24 13:30:37.595
  May  4 13:30:37.659: INFO: Deleting ReplicationController proxy-service-cmqf9 took: 10.415192ms
  May  4 13:30:37.760: INFO: Terminating ReplicationController proxy-service-cmqf9 pods took: 101.102371ms
  E0504 13:30:38.120392      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:30:39.120877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:30:40.121391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:30:40.560: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4898" for this suite. @ 05/04/24 13:30:40.566
• [5.355 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 05/04/24 13:30:40.576
  May  4 13:30:40.576: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename svcaccounts @ 05/04/24 13:30:40.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:30:40.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:30:40.599
  STEP: Creating a pod to test service account token:  @ 05/04/24 13:30:40.602
  E0504 13:30:41.121514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:30:42.121614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:30:43.121734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:30:44.121968      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/04/24 13:30:44.627
  May  4 13:30:44.630: INFO: Trying to get logs from node ip-172-31-18-228 pod test-pod-9da01249-631a-49b4-9364-382cf19266a9 container agnhost-container: <nil>
  STEP: delete the pod @ 05/04/24 13:30:44.647
  May  4 13:30:44.665: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8072" for this suite. @ 05/04/24 13:30:44.669
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 05/04/24 13:30:44.676
  May  4 13:30:44.676: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename deployment @ 05/04/24 13:30:44.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:30:44.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:30:44.698
  STEP: creating a Deployment @ 05/04/24 13:30:44.705
  May  4 13:30:44.705: INFO: Creating simple deployment test-deployment-tcqds
  May  4 13:30:44.718: INFO: deployment "test-deployment-tcqds" doesn't have the required revision set
  E0504 13:30:45.122190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:30:46.122460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Getting /status @ 05/04/24 13:30:46.733
  May  4 13:30:46.737: INFO: Deployment test-deployment-tcqds has Conditions: [{Available True 2024-05-04 13:30:45 +0000 UTC 2024-05-04 13:30:45 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-05-04 13:30:45 +0000 UTC 2024-05-04 13:30:44 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-tcqds-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 05/04/24 13:30:46.737
  May  4 13:30:46.748: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 4, 13, 30, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 4, 13, 30, 45, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 4, 13, 30, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 4, 13, 30, 44, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-tcqds-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 05/04/24 13:30:46.748
  May  4 13:30:46.750: INFO: Observed &Deployment event: ADDED
  May  4 13:30:46.750: INFO: Observed Deployment test-deployment-tcqds in namespace deployment-8317 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-04 13:30:44 +0000 UTC 2024-05-04 13:30:44 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-tcqds-5d576bd769"}
  May  4 13:30:46.750: INFO: Observed &Deployment event: MODIFIED
  May  4 13:30:46.750: INFO: Observed Deployment test-deployment-tcqds in namespace deployment-8317 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-04 13:30:44 +0000 UTC 2024-05-04 13:30:44 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-tcqds-5d576bd769"}
  May  4 13:30:46.750: INFO: Observed Deployment test-deployment-tcqds in namespace deployment-8317 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-04 13:30:44 +0000 UTC 2024-05-04 13:30:44 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  May  4 13:30:46.750: INFO: Observed &Deployment event: MODIFIED
  May  4 13:30:46.750: INFO: Observed Deployment test-deployment-tcqds in namespace deployment-8317 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-04 13:30:44 +0000 UTC 2024-05-04 13:30:44 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  May  4 13:30:46.750: INFO: Observed Deployment test-deployment-tcqds in namespace deployment-8317 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-04 13:30:44 +0000 UTC 2024-05-04 13:30:44 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-tcqds-5d576bd769" is progressing.}
  May  4 13:30:46.750: INFO: Observed &Deployment event: MODIFIED
  May  4 13:30:46.750: INFO: Observed Deployment test-deployment-tcqds in namespace deployment-8317 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-04 13:30:45 +0000 UTC 2024-05-04 13:30:45 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  May  4 13:30:46.750: INFO: Observed Deployment test-deployment-tcqds in namespace deployment-8317 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-04 13:30:45 +0000 UTC 2024-05-04 13:30:44 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-tcqds-5d576bd769" has successfully progressed.}
  May  4 13:30:46.750: INFO: Observed &Deployment event: MODIFIED
  May  4 13:30:46.750: INFO: Observed Deployment test-deployment-tcqds in namespace deployment-8317 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-04 13:30:45 +0000 UTC 2024-05-04 13:30:45 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  May  4 13:30:46.750: INFO: Observed Deployment test-deployment-tcqds in namespace deployment-8317 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-04 13:30:45 +0000 UTC 2024-05-04 13:30:44 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-tcqds-5d576bd769" has successfully progressed.}
  May  4 13:30:46.750: INFO: Found Deployment test-deployment-tcqds in namespace deployment-8317 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May  4 13:30:46.750: INFO: Deployment test-deployment-tcqds has an updated status
  STEP: patching the Statefulset Status @ 05/04/24 13:30:46.75
  May  4 13:30:46.750: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  May  4 13:30:46.756: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 05/04/24 13:30:46.756
  May  4 13:30:46.758: INFO: Observed &Deployment event: ADDED
  May  4 13:30:46.758: INFO: Observed deployment test-deployment-tcqds in namespace deployment-8317 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-04 13:30:44 +0000 UTC 2024-05-04 13:30:44 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-tcqds-5d576bd769"}
  May  4 13:30:46.758: INFO: Observed &Deployment event: MODIFIED
  May  4 13:30:46.758: INFO: Observed deployment test-deployment-tcqds in namespace deployment-8317 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-04 13:30:44 +0000 UTC 2024-05-04 13:30:44 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-tcqds-5d576bd769"}
  May  4 13:30:46.758: INFO: Observed deployment test-deployment-tcqds in namespace deployment-8317 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-04 13:30:44 +0000 UTC 2024-05-04 13:30:44 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  May  4 13:30:46.758: INFO: Observed &Deployment event: MODIFIED
  May  4 13:30:46.758: INFO: Observed deployment test-deployment-tcqds in namespace deployment-8317 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-04 13:30:44 +0000 UTC 2024-05-04 13:30:44 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  May  4 13:30:46.758: INFO: Observed deployment test-deployment-tcqds in namespace deployment-8317 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-04 13:30:44 +0000 UTC 2024-05-04 13:30:44 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-tcqds-5d576bd769" is progressing.}
  May  4 13:30:46.758: INFO: Observed &Deployment event: MODIFIED
  May  4 13:30:46.759: INFO: Observed deployment test-deployment-tcqds in namespace deployment-8317 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-04 13:30:45 +0000 UTC 2024-05-04 13:30:45 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  May  4 13:30:46.759: INFO: Observed deployment test-deployment-tcqds in namespace deployment-8317 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-04 13:30:45 +0000 UTC 2024-05-04 13:30:44 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-tcqds-5d576bd769" has successfully progressed.}
  May  4 13:30:46.759: INFO: Observed &Deployment event: MODIFIED
  May  4 13:30:46.759: INFO: Observed deployment test-deployment-tcqds in namespace deployment-8317 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-04 13:30:45 +0000 UTC 2024-05-04 13:30:45 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  May  4 13:30:46.759: INFO: Observed deployment test-deployment-tcqds in namespace deployment-8317 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-04 13:30:45 +0000 UTC 2024-05-04 13:30:44 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-tcqds-5d576bd769" has successfully progressed.}
  May  4 13:30:46.759: INFO: Observed deployment test-deployment-tcqds in namespace deployment-8317 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  May  4 13:30:46.759: INFO: Observed &Deployment event: MODIFIED
  May  4 13:30:46.759: INFO: Found deployment test-deployment-tcqds in namespace deployment-8317 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  May  4 13:30:46.759: INFO: Deployment test-deployment-tcqds has a patched status
  May  4 13:30:46.764: INFO: Deployment "test-deployment-tcqds":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-tcqds",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8317",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d6b1fa91-7b6c-42ef-b0f0-fa6518716b4f",
      ResourceVersion: (string) (len=5) "36464",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850426244,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850426244,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850426245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=224) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |ions":{},"f:obse|
              00000090  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              000000a0  7b 7d 2c 22 66 3a 72 65  61 64 79 52 65 70 6c 69  |{},"f:readyRepli|
              000000b0  63 61 73 22 3a 7b 7d 2c  22 66 3a 72 65 70 6c 69  |cas":{},"f:repli|
              000000c0  63 61 73 22 3a 7b 7d 2c  22 66 3a 75 70 64 61 74  |cas":{},"f:updat|
              000000d0  65 64 52 65 70 6c 69 63  61 73 22 3a 7b 7d 7d 7d  |edReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850426246,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=1) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  May  4 13:30:46.768: INFO: New ReplicaSet "test-deployment-tcqds-5d576bd769" of Deployment "test-deployment-tcqds":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-tcqds-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8317",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a00d713b-6852-4462-b862-c67d01220340",
      ResourceVersion: (string) (len=5) "36444",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850426244,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-tcqds",
          UID: (types.UID) (len=36) "d6b1fa91-7b6c-42ef-b0f0-fa6518716b4f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850426244,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 64 36 62  |k:{\"uid\":\"d6b|
              00000120  31 66 61 39 31 2d 37 62  36 63 2d 34 32 65 66 2d  |1fa91-7b6c-42ef-|
              00000130  62 30 66 30 2d 66 61 36  35 31 38 37 31 36 62 34  |b0f0-fa6518716b4|
              00000140  66 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |f\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850426245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  May  4 13:30:46.772: INFO: Pod "test-deployment-tcqds-5d576bd769-qr979" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-tcqds-5d576bd769-qr979",
      GenerateName: (string) (len=33) "test-deployment-tcqds-5d576bd769-",
      Namespace: (string) (len=15) "deployment-8317",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ec2759e2-1107-431d-a18c-e24bb93d6c73",
      ResourceVersion: (string) (len=5) "36443",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850426244,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-tcqds-5d576bd769",
          UID: (types.UID) (len=36) "a00d713b-6852-4462-b862-c67d01220340",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850426244,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 61 30 30 64 37 31 33  62 2d 36 38 35 32 2d 34  |"a00d713b-6852-4|
              000000a0  34 36 32 2d 62 38 36 32  2d 63 36 37 64 30 31 32  |462-b862-c67d012|
              000000b0  32 30 33 34 30 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |20340\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850426245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 31 34  39 2e 35 34 5c 22 7d 22  |2.168.149.54\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-njbcq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-njbcq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-18-228",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850426245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850426244,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850426245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850426245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850426244,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.18.228",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.18.228"
        }
      },
      PodIP: (string) (len=14) "192.168.149.54",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.149.54"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850426244,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850426245,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9d2be0c3d33c6b7a8a746feee6686a5ba19454af38b27c8b0c1fa361216cb3f3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  May  4 13:30:46.774: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8317" for this suite. @ 05/04/24 13:30:46.779
• [2.111 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 05/04/24 13:30:46.787
  May  4 13:30:46.787: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename container-probe @ 05/04/24 13:30:46.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:30:46.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:30:46.808
  E0504 13:30:47.122968      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:30:48.123493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:30:49.123632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:30:50.123971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:30:51.124763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:30:52.124861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:30:53.124973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:30:54.125474      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:30:55.125563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:30:56.125682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:30:57.125918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:30:58.126708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:30:59.126823      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:00.126948      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:01.127817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:02.127874      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:03.127981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:04.128093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:05.128986      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:06.129436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:07.130044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:08.130153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:31:08.886: INFO: Container started at 2024-05-04 13:30:47 +0000 UTC, pod became ready at 2024-05-04 13:31:07 +0000 UTC
  May  4 13:31:08.887: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7637" for this suite. @ 05/04/24 13:31:08.89
• [22.112 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 05/04/24 13:31:08.899
  May  4 13:31:08.899: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename svcaccounts @ 05/04/24 13:31:08.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:31:08.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:31:08.922
  May  4 13:31:08.939: INFO: created pod
  E0504 13:31:09.131157      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:10.131344      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:11.132047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:12.132393      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/04/24 13:31:12.954
  E0504 13:31:13.132904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:14.133017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:15.133082      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:16.133209      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:17.133287      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:18.133414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:19.133922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:20.134037      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:21.134166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:22.134562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:23.134491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:24.134491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:25.134804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:26.134906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:27.135024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:28.135210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:29.135475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:30.135867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:31.135967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:32.136485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:33.136583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:34.137616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:35.137922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:36.138891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:37.139177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:38.139421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:39.139661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:40.139801      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:41.142011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:42.142222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:31:42.955: INFO: polling logs
  May  4 13:31:42.964: INFO: Pod logs: 
  I0504 13:31:09.521001       1 log.go:245] OK: Got token
  I0504 13:31:09.521066       1 log.go:245] validating with in-cluster discovery
  I0504 13:31:09.521320       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I0504 13:31:09.521339       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-1229:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0002a7570), NotBefore:(*jwt.NumericDate)(0xc0002a7658), IssuedAt:(*jwt.NumericDate)(0xc0002a7580), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-1229", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"f4f7f4d3-4b86-4e58-88f3-b63acbb70dde"}}}
  I0504 13:31:09.529599       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0504 13:31:09.532572       1 log.go:245] OK: Validated signature on JWT
  I0504 13:31:09.532684       1 log.go:245] OK: Got valid claims from token!
  I0504 13:31:09.532703       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-1229:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000012f28), NotBefore:(*jwt.NumericDate)(0xc000012f50), IssuedAt:(*jwt.NumericDate)(0xc000012f30), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-1229", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"f4f7f4d3-4b86-4e58-88f3-b63acbb70dde"}}}

  May  4 13:31:42.964: INFO: completed pod
  May  4 13:31:42.972: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1229" for this suite. @ 05/04/24 13:31:42.977
• [34.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 05/04/24 13:31:42.983
  May  4 13:31:42.983: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/04/24 13:31:42.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:31:43.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:31:43.006
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 05/04/24 13:31:43.009
  May  4 13:31:43.009: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  E0504 13:31:43.142283      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:44.142308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:31:44.217: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  E0504 13:31:45.142469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:46.142660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:47.142927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:48.143449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:49.158775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:31:49.259: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9035" for this suite. @ 05/04/24 13:31:49.276
• [6.301 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:446
  STEP: Creating a kubernetes client @ 05/04/24 13:31:49.285
  May  4 13:31:49.285: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename sched-pred @ 05/04/24 13:31:49.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:31:49.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:31:49.308
  May  4 13:31:49.312: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  May  4 13:31:49.323: INFO: Waiting for terminating namespaces to be deleted...
  May  4 13:31:49.326: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-18-228 before test
  May  4 13:31:49.332: INFO: nginx-ingress-controller-kubernetes-worker-w484v from ingress-nginx-kubernetes-worker started at 2024-05-04 13:22:51 +0000 UTC (1 container statuses recorded)
  May  4 13:31:49.332: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  May  4 13:31:49.332: INFO: calico-node-rvkmx from kube-system started at 2024-05-04 12:12:09 +0000 UTC (1 container statuses recorded)
  May  4 13:31:49.332: INFO: 	Container calico-node ready: true, restart count 0
  May  4 13:31:49.332: INFO: sonobuoy from sonobuoy started at 2024-05-04 12:12:07 +0000 UTC (1 container statuses recorded)
  May  4 13:31:49.332: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  May  4 13:31:49.332: INFO: sonobuoy-systemd-logs-daemon-set-12e57fb52bd44eb7-llzs6 from sonobuoy started at 2024-05-04 12:12:09 +0000 UTC (2 container statuses recorded)
  May  4 13:31:49.332: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May  4 13:31:49.332: INFO: 	Container systemd-logs ready: true, restart count 0
  May  4 13:31:49.332: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-33-38 before test
  May  4 13:31:49.338: INFO: nginx-ingress-controller-kubernetes-worker-6kjkz from ingress-nginx-kubernetes-worker started at 2024-05-04 11:56:20 +0000 UTC (1 container statuses recorded)
  May  4 13:31:49.338: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  May  4 13:31:49.338: INFO: calico-node-zvlhw from kube-system started at 2024-05-04 12:11:38 +0000 UTC (1 container statuses recorded)
  May  4 13:31:49.338: INFO: 	Container calico-node ready: true, restart count 0
  May  4 13:31:49.338: INFO: coredns-bddfd76d7-66zt7 from kube-system started at 2024-05-04 11:56:59 +0000 UTC (1 container statuses recorded)
  May  4 13:31:49.338: INFO: 	Container coredns ready: true, restart count 0
  May  4 13:31:49.338: INFO: kube-state-metrics-6f48cdd76-5zgtw from kube-system started at 2024-05-04 11:56:20 +0000 UTC (1 container statuses recorded)
  May  4 13:31:49.338: INFO: 	Container kube-state-metrics ready: true, restart count 4
  May  4 13:31:49.338: INFO: metrics-server-v0.6.3-69d7fbfdf8-hdjfr from kube-system started at 2024-05-04 11:56:59 +0000 UTC (2 container statuses recorded)
  May  4 13:31:49.338: INFO: 	Container metrics-server ready: true, restart count 6
  May  4 13:31:49.338: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  May  4 13:31:49.338: INFO: dashboard-metrics-scraper-5dd7cb5fc-kfwtl from kubernetes-dashboard started at 2024-05-04 11:56:59 +0000 UTC (1 container statuses recorded)
  May  4 13:31:49.338: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  May  4 13:31:49.338: INFO: kubernetes-dashboard-7b899cb9d9-7nz54 from kubernetes-dashboard started at 2024-05-04 11:56:59 +0000 UTC (1 container statuses recorded)
  May  4 13:31:49.338: INFO: 	Container kubernetes-dashboard ready: true, restart count 5
  May  4 13:31:49.338: INFO: sonobuoy-systemd-logs-daemon-set-12e57fb52bd44eb7-6g56f from sonobuoy started at 2024-05-04 12:12:09 +0000 UTC (2 container statuses recorded)
  May  4 13:31:49.338: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May  4 13:31:49.338: INFO: 	Container systemd-logs ready: true, restart count 0
  May  4 13:31:49.338: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-72-79 before test
  May  4 13:31:49.342: INFO: nginx-ingress-controller-kubernetes-worker-b5nwc from ingress-nginx-kubernetes-worker started at 2024-05-04 12:01:33 +0000 UTC (1 container statuses recorded)
  May  4 13:31:49.342: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 4
  May  4 13:31:49.342: INFO: calico-node-gt7z9 from kube-system started at 2024-05-04 12:11:48 +0000 UTC (1 container statuses recorded)
  May  4 13:31:49.342: INFO: 	Container calico-node ready: true, restart count 0
  May  4 13:31:49.342: INFO: sonobuoy-e2e-job-8f0e1aa0da094028 from sonobuoy started at 2024-05-04 12:12:09 +0000 UTC (2 container statuses recorded)
  May  4 13:31:49.342: INFO: 	Container e2e ready: true, restart count 0
  May  4 13:31:49.342: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May  4 13:31:49.342: INFO: sonobuoy-systemd-logs-daemon-set-12e57fb52bd44eb7-wfcjh from sonobuoy started at 2024-05-04 12:12:09 +0000 UTC (2 container statuses recorded)
  May  4 13:31:49.342: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May  4 13:31:49.342: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 05/04/24 13:31:49.342
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17cc4c5a6becfe63], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.] @ 05/04/24 13:31:49.373
  E0504 13:31:50.159802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:31:50.368: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-355" for this suite. @ 05/04/24 13:31:50.371
• [1.093 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 05/04/24 13:31:50.379
  May  4 13:31:50.379: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename disruption @ 05/04/24 13:31:50.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:31:50.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:31:50.395
  STEP: Waiting for the pdb to be processed @ 05/04/24 13:31:50.405
  STEP: Waiting for all pods to be running @ 05/04/24 13:31:50.442
  May  4 13:31:50.447: INFO: running pods: 0 < 3
  E0504 13:31:51.160286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:52.160380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:31:52.453: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3556" for this suite. @ 05/04/24 13:31:52.458
• [2.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:46
  STEP: Creating a kubernetes client @ 05/04/24 13:31:52.467
  May  4 13:31:52.467: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename configmap @ 05/04/24 13:31:52.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:31:52.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:31:52.484
  STEP: Creating configMap configmap-4577/configmap-test-8cc63e09-5701-4ff9-9e9f-efc3e06422ea @ 05/04/24 13:31:52.486
  STEP: Creating a pod to test consume configMaps @ 05/04/24 13:31:52.491
  E0504 13:31:53.160464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:54.160575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:55.161444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:56.161549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/04/24 13:31:56.516
  May  4 13:31:56.520: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-configmaps-67f23114-8a5e-4c2c-b4e9-cb468e330d35 container env-test: <nil>
  STEP: delete the pod @ 05/04/24 13:31:56.53
  May  4 13:31:56.549: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4577" for this suite. @ 05/04/24 13:31:56.553
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 05/04/24 13:31:56.559
  May  4 13:31:56.559: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename projected @ 05/04/24 13:31:56.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:31:56.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:31:56.578
  STEP: Creating a pod to test downward API volume plugin @ 05/04/24 13:31:56.581
  E0504 13:31:57.162324      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:58.162404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:31:59.163203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:00.163774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/04/24 13:32:00.609
  May  4 13:32:00.613: INFO: Trying to get logs from node ip-172-31-18-228 pod downwardapi-volume-f5cd9f89-c85a-498e-b711-2f19fb195076 container client-container: <nil>
  STEP: delete the pod @ 05/04/24 13:32:00.62
  May  4 13:32:00.642: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4385" for this suite. @ 05/04/24 13:32:00.647
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:399
  STEP: Creating a kubernetes client @ 05/04/24 13:32:00.654
  May  4 13:32:00.654: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename kubectl @ 05/04/24 13:32:00.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:32:00.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:32:00.676
  STEP: creating all guestbook components @ 05/04/24 13:32:00.679
  May  4 13:32:00.679: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  May  4 13:32:00.679: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-4270 create -f -'
  May  4 13:32:00.774: INFO: stderr: ""
  May  4 13:32:00.774: INFO: stdout: "service/agnhost-replica created\n"
  May  4 13:32:00.774: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  May  4 13:32:00.775: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-4270 create -f -'
  May  4 13:32:00.872: INFO: stderr: ""
  May  4 13:32:00.872: INFO: stdout: "service/agnhost-primary created\n"
  May  4 13:32:00.872: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  May  4 13:32:00.872: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-4270 create -f -'
  May  4 13:32:00.961: INFO: stderr: ""
  May  4 13:32:00.961: INFO: stdout: "service/frontend created\n"
  May  4 13:32:00.961: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  May  4 13:32:00.961: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-4270 create -f -'
  May  4 13:32:01.027: INFO: stderr: ""
  May  4 13:32:01.027: INFO: stdout: "deployment.apps/frontend created\n"
  May  4 13:32:01.027: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  May  4 13:32:01.027: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-4270 create -f -'
  May  4 13:32:01.101: INFO: stderr: ""
  May  4 13:32:01.101: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  May  4 13:32:01.101: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  May  4 13:32:01.101: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-4270 create -f -'
  May  4 13:32:01.163: INFO: stderr: ""
  May  4 13:32:01.163: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 05/04/24 13:32:01.163
  May  4 13:32:01.163: INFO: Waiting for all frontend pods to be Running.
  E0504 13:32:01.163739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:02.164581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:03.165451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:04.165546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:05.165651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:06.165733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:32:06.215: INFO: Waiting for frontend to serve content.
  May  4 13:32:06.227: INFO: Trying to add a new entry to the guestbook.
  May  4 13:32:06.240: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 05/04/24 13:32:06.249
  May  4 13:32:06.249: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-4270 delete --grace-period=0 --force -f -'
  May  4 13:32:06.311: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May  4 13:32:06.311: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 05/04/24 13:32:06.311
  May  4 13:32:06.311: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-4270 delete --grace-period=0 --force -f -'
  May  4 13:32:06.380: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May  4 13:32:06.380: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 05/04/24 13:32:06.38
  May  4 13:32:06.380: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-4270 delete --grace-period=0 --force -f -'
  May  4 13:32:06.440: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May  4 13:32:06.440: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 05/04/24 13:32:06.44
  May  4 13:32:06.440: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-4270 delete --grace-period=0 --force -f -'
  May  4 13:32:06.489: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May  4 13:32:06.489: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 05/04/24 13:32:06.489
  May  4 13:32:06.489: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-4270 delete --grace-period=0 --force -f -'
  May  4 13:32:06.551: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May  4 13:32:06.551: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 05/04/24 13:32:06.551
  May  4 13:32:06.551: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-4270 delete --grace-period=0 --force -f -'
  May  4 13:32:06.618: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  May  4 13:32:06.618: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  May  4 13:32:06.619: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4270" for this suite. @ 05/04/24 13:32:06.624
• [5.980 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 05/04/24 13:32:06.638
  May  4 13:32:06.638: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename limitrange @ 05/04/24 13:32:06.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:32:06.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:32:06.657
  STEP: Creating a LimitRange @ 05/04/24 13:32:06.659
  STEP: Setting up watch @ 05/04/24 13:32:06.659
  STEP: Submitting a LimitRange @ 05/04/24 13:32:06.764
  STEP: Verifying LimitRange creation was observed @ 05/04/24 13:32:06.771
  STEP: Fetching the LimitRange to ensure it has proper values @ 05/04/24 13:32:06.771
  May  4 13:32:06.774: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  May  4 13:32:06.774: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 05/04/24 13:32:06.774
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 05/04/24 13:32:06.78
  May  4 13:32:06.787: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  May  4 13:32:06.787: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 05/04/24 13:32:06.787
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 05/04/24 13:32:06.796
  May  4 13:32:06.800: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  May  4 13:32:06.800: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 05/04/24 13:32:06.8
  STEP: Failing to create a Pod with more than max resources @ 05/04/24 13:32:06.801
  STEP: Updating a LimitRange @ 05/04/24 13:32:06.803
  STEP: Verifying LimitRange updating is effective @ 05/04/24 13:32:06.81
  E0504 13:32:07.166524      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:08.166723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 05/04/24 13:32:08.815
  STEP: Failing to create a Pod with more than max resources @ 05/04/24 13:32:08.821
  STEP: Deleting a LimitRange @ 05/04/24 13:32:08.823
  STEP: Verifying the LimitRange was deleted @ 05/04/24 13:32:08.832
  E0504 13:32:09.167441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:10.167796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:11.167957      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:12.168077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:13.168219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:32:13.839: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 05/04/24 13:32:13.839
  May  4 13:32:13.848: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-4345" for this suite. @ 05/04/24 13:32:13.856
• [7.226 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:627
  STEP: Creating a kubernetes client @ 05/04/24 13:32:13.865
  May  4 13:32:13.865: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename job @ 05/04/24 13:32:13.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:32:13.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:32:13.881
  STEP: Creating a job @ 05/04/24 13:32:13.883
  STEP: Ensuring active pods == parallelism @ 05/04/24 13:32:13.89
  E0504 13:32:14.168562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:15.168975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete a job @ 05/04/24 13:32:15.896
  STEP: deleting Job.batch foo in namespace job-3739, will wait for the garbage collector to delete the pods @ 05/04/24 13:32:15.896
  May  4 13:32:15.958: INFO: Deleting Job.batch foo took: 8.392807ms
  May  4 13:32:16.059: INFO: Terminating Job.batch foo pods took: 101.012648ms
  E0504 13:32:16.169424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:17.169612      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:18.170354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 05/04/24 13:32:18.56
  May  4 13:32:18.564: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3739" for this suite. @ 05/04/24 13:32:18.567
• [4.708 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:141
  STEP: Creating a kubernetes client @ 05/04/24 13:32:18.573
  May  4 13:32:18.573: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename secrets @ 05/04/24 13:32:18.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:32:18.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:32:18.594
  STEP: Creating projection with secret that has name secret-emptykey-test-0207ace0-5783-4ebc-bf80-ec757cb894b8 @ 05/04/24 13:32:18.597
  May  4 13:32:18.598: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3765" for this suite. @ 05/04/24 13:32:18.603
• [0.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 05/04/24 13:32:18.609
  May  4 13:32:18.609: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename endpointslice @ 05/04/24 13:32:18.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:32:18.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:32:18.625
  STEP: getting /apis @ 05/04/24 13:32:18.628
  STEP: getting /apis/discovery.k8s.io @ 05/04/24 13:32:18.632
  STEP: getting /apis/discovery.k8s.iov1 @ 05/04/24 13:32:18.633
  STEP: creating @ 05/04/24 13:32:18.634
  STEP: getting @ 05/04/24 13:32:18.65
  STEP: listing @ 05/04/24 13:32:18.653
  STEP: watching @ 05/04/24 13:32:18.657
  May  4 13:32:18.657: INFO: starting watch
  STEP: cluster-wide listing @ 05/04/24 13:32:18.658
  STEP: cluster-wide watching @ 05/04/24 13:32:18.661
  May  4 13:32:18.661: INFO: starting watch
  STEP: patching @ 05/04/24 13:32:18.662
  STEP: updating @ 05/04/24 13:32:18.667
  May  4 13:32:18.675: INFO: waiting for watch events with expected annotations
  May  4 13:32:18.675: INFO: saw patched and updated annotations
  STEP: deleting @ 05/04/24 13:32:18.675
  STEP: deleting a collection @ 05/04/24 13:32:18.687
  May  4 13:32:18.704: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6610" for this suite. @ 05/04/24 13:32:18.708
• [0.105 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 05/04/24 13:32:18.715
  May  4 13:32:18.715: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename emptydir @ 05/04/24 13:32:18.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:32:18.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:32:18.733
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 05/04/24 13:32:18.736
  E0504 13:32:19.171446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:20.172075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:21.172777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:22.173549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/04/24 13:32:22.759
  May  4 13:32:22.763: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-06d8cf66-bef0-4c7d-a163-384df8eaecde container test-container: <nil>
  STEP: delete the pod @ 05/04/24 13:32:22.77
  May  4 13:32:22.794: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9370" for this suite. @ 05/04/24 13:32:22.799
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 05/04/24 13:32:22.807
  May  4 13:32:22.807: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename webhook @ 05/04/24 13:32:22.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:32:22.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:32:22.824
  STEP: Setting up server cert @ 05/04/24 13:32:22.845
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/04/24 13:32:23.149
  STEP: Deploying the webhook pod @ 05/04/24 13:32:23.159
  STEP: Wait for the deployment to be ready @ 05/04/24 13:32:23.173
  E0504 13:32:23.174008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:32:23.181: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0504 13:32:24.174374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:25.174476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/04/24 13:32:25.191
  STEP: Verifying the service has paired with the endpoint @ 05/04/24 13:32:25.211
  E0504 13:32:26.174745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:32:26.212: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 05/04/24 13:32:26.219
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 05/04/24 13:32:26.233
  STEP: Creating a dummy validating-webhook-configuration object @ 05/04/24 13:32:26.247
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 05/04/24 13:32:26.256
  STEP: Creating a dummy mutating-webhook-configuration object @ 05/04/24 13:32:26.261
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 05/04/24 13:32:26.27
  May  4 13:32:26.333: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3081" for this suite. @ 05/04/24 13:32:26.337
  STEP: Destroying namespace "webhook-markers-2637" for this suite. @ 05/04/24 13:32:26.344
• [3.545 seconds]
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 05/04/24 13:32:26.352
  May  4 13:32:26.352: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename server-version @ 05/04/24 13:32:26.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:32:26.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:32:26.371
  STEP: Request ServerVersion @ 05/04/24 13:32:26.373
  STEP: Confirm major version @ 05/04/24 13:32:26.374
  May  4 13:32:26.374: INFO: Major version: 1
  STEP: Confirm minor version @ 05/04/24 13:32:26.374
  May  4 13:32:26.374: INFO: cleanMinorVersion: 29
  May  4 13:32:26.374: INFO: Minor version: 29
  May  4 13:32:26.374: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-8032" for this suite. @ 05/04/24 13:32:26.377
• [0.032 seconds]
------------------------------
SSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 05/04/24 13:32:26.384
  May  4 13:32:26.384: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename init-container @ 05/04/24 13:32:26.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:32:26.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:32:26.402
  STEP: creating the pod @ 05/04/24 13:32:26.404
  May  4 13:32:26.404: INFO: PodSpec: initContainers in spec.initContainers
  E0504 13:32:27.174868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:28.175750      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:29.176733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:30.177239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:31.177308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:32.177443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:33.177556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:34.178378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:35.178645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:36.179161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:37.179334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:38.179588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:39.180546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:40.180635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:41.181404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:42.181552      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:43.181784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:44.181844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:45.181972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:46.182061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:47.182170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:48.182353      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:49.182472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:50.182568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:51.182885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:52.183060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:53.183414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:54.183509      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:55.183795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:56.183969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:57.184581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:58.184681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:32:59.185525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:33:00.185600      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:33:01.186653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:33:02.186733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:33:03.186984      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:33:04.187223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:33:05.187582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:33:06.188115      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:33:07.188268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:33:08.188353      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:33:08.784: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-50b59b48-81f9-477b-9d0d-2cf6741c86e3", GenerateName:"", Namespace:"init-container-8857", SelfLink:"", UID:"34c8fc0a-fb2c-478b-962b-ecbbbee81f6b", ResourceVersion:"37612", Generation:0, CreationTimestamp:time.Date(2024, time.May, 4, 13, 32, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"404988851"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 4, 13, 32, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050c1cf8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 4, 13, 33, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050c1d28), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-qn9m9", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc00583d8e0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-qn9m9", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-qn9m9", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-qn9m9", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc002c66c80), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-18-228", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0002778f0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc002c66d10)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc002c66d30)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc002c66d38), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc002c66d3c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc000dd7410), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 4, 13, 32, 27, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 4, 13, 32, 26, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 4, 13, 32, 26, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 4, 13, 32, 26, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 4, 13, 32, 26, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.18.228", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.18.228"}}, PodIP:"192.168.149.44", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.149.44"}}, StartTime:time.Date(2024, time.May, 4, 13, 32, 26, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0002779d0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000277ab0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://fe8183202407bd138397c886b039b080ad6cdbbe388789d6672d647ab73e6ed0", Started:(*bool)(0xc002c66ddf), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00583d960), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc002c66de5), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00583d940), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc002c66db4), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  May  4 13:33:08.784: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8857" for this suite. @ 05/04/24 13:33:08.789
• [42.415 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 05/04/24 13:33:08.799
  May  4 13:33:08.799: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename services @ 05/04/24 13:33:08.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:33:08.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:33:08.819
  STEP: creating service multi-endpoint-test in namespace services-407 @ 05/04/24 13:33:08.822
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-407 to expose endpoints map[] @ 05/04/24 13:33:08.831
  May  4 13:33:08.837: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0504 13:33:09.189085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:33:09.848: INFO: successfully validated that service multi-endpoint-test in namespace services-407 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-407 @ 05/04/24 13:33:09.848
  E0504 13:33:10.189764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:33:11.189869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-407 to expose endpoints map[pod1:[100]] @ 05/04/24 13:33:11.875
  May  4 13:33:11.886: INFO: successfully validated that service multi-endpoint-test in namespace services-407 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-407 @ 05/04/24 13:33:11.886
  E0504 13:33:12.190653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:33:13.190737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-407 to expose endpoints map[pod1:[100] pod2:[101]] @ 05/04/24 13:33:13.907
  May  4 13:33:13.920: INFO: successfully validated that service multi-endpoint-test in namespace services-407 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 05/04/24 13:33:13.92
  May  4 13:33:13.920: INFO: Creating new exec pod
  E0504 13:33:14.190843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:33:15.191133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:33:16.192213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:33:16.939: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-407 exec execpodzxc5v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  May  4 13:33:17.040: INFO: stderr: "+ nc -v -t -w 2 multi-endpoint-test 80\n+ echo hostName\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  May  4 13:33:17.040: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May  4 13:33:17.040: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-407 exec execpodzxc5v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.210 80'
  May  4 13:33:17.135: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.210 80\nConnection to 10.152.183.210 80 port [tcp/http] succeeded!\n"
  May  4 13:33:17.135: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May  4 13:33:17.135: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-407 exec execpodzxc5v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  E0504 13:33:17.192886      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:33:17.233: INFO: stderr: "+ nc -v -t -w 2 multi-endpoint-test 81\n+ echo hostName\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  May  4 13:33:17.233: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May  4 13:33:17.233: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-407 exec execpodzxc5v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.210 81'
  May  4 13:33:17.321: INFO: stderr: "+ nc -v -t -w 2 10.152.183.210 81\n+ echo hostName\nConnection to 10.152.183.210 81 port [tcp/*] succeeded!\n"
  May  4 13:33:17.321: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-407 @ 05/04/24 13:33:17.321
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-407 to expose endpoints map[pod2:[101]] @ 05/04/24 13:33:17.334
  May  4 13:33:17.354: INFO: successfully validated that service multi-endpoint-test in namespace services-407 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-407 @ 05/04/24 13:33:17.354
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-407 to expose endpoints map[] @ 05/04/24 13:33:17.371
  May  4 13:33:17.383: INFO: successfully validated that service multi-endpoint-test in namespace services-407 exposes endpoints map[]
  May  4 13:33:17.402: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-407" for this suite. @ 05/04/24 13:33:17.406
• [8.617 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 05/04/24 13:33:17.416
  May  4 13:33:17.416: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename secrets @ 05/04/24 13:33:17.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:33:17.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:33:17.432
  STEP: Creating secret with name secret-test-map-873d72b8-23fd-4532-9e45-e507de80b1a6 @ 05/04/24 13:33:17.434
  STEP: Creating a pod to test consume secrets @ 05/04/24 13:33:17.44
  E0504 13:33:18.193581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:33:19.194457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:33:20.194572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:33:21.194690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/04/24 13:33:21.46
  May  4 13:33:21.464: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-secrets-4a151f39-7265-4c03-b018-3bb2883c4a90 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/04/24 13:33:21.471
  May  4 13:33:21.490: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5503" for this suite. @ 05/04/24 13:33:21.493
• [4.084 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 05/04/24 13:33:21.5
  May  4 13:33:21.500: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename resourcequota @ 05/04/24 13:33:21.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:33:21.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:33:21.521
  STEP: Counting existing ResourceQuota @ 05/04/24 13:33:21.524
  E0504 13:33:22.194967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:33:23.195464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:33:24.196116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:33:25.197204      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:33:26.197313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/04/24 13:33:26.528
  STEP: Ensuring resource quota status is calculated @ 05/04/24 13:33:26.534
  E0504 13:33:27.198234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:33:28.198334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 05/04/24 13:33:28.539
  STEP: Ensuring ResourceQuota status captures the pod usage @ 05/04/24 13:33:28.555
  E0504 13:33:29.198664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:33:30.198846      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 05/04/24 13:33:30.562
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 05/04/24 13:33:30.565
  STEP: Ensuring a pod cannot update its resource requirements @ 05/04/24 13:33:30.567
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 05/04/24 13:33:30.571
  E0504 13:33:31.199706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:33:32.199793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 05/04/24 13:33:32.577
  STEP: Ensuring resource quota status released the pod usage @ 05/04/24 13:33:32.601
  E0504 13:33:33.199893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:33:34.200163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:33:34.606: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-387" for this suite. @ 05/04/24 13:33:34.609
• [13.116 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:572
  STEP: Creating a kubernetes client @ 05/04/24 13:33:34.616
  May  4 13:33:34.616: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename job @ 05/04/24 13:33:34.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:33:34.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:33:34.634
  STEP: Creating a job @ 05/04/24 13:33:34.637
  STEP: Ensuring job reaches completions @ 05/04/24 13:33:34.647
  E0504 13:33:35.200356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:33:36.200527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:33:37.201468      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:33:38.201651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:33:39.201893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:33:40.202001      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:33:41.202920      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:33:42.203040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:33:43.203158      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:33:44.203323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:33:44.651: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2344" for this suite. @ 05/04/24 13:33:44.655
• [10.049 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 05/04/24 13:33:44.665
  May  4 13:33:44.665: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename emptydir @ 05/04/24 13:33:44.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:33:44.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:33:44.687
  STEP: Creating Pod @ 05/04/24 13:33:44.69
  E0504 13:33:45.203467      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:33:46.203777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 05/04/24 13:33:46.707
  May  4 13:33:46.707: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-1107 PodName:pod-sharedvolume-ebb8180b-1c88-4359-9916-62637cd3ef8d ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  4 13:33:46.707: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 13:33:46.708: INFO: ExecWithOptions: Clientset creation
  May  4 13:33:46.708: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-1107/pods/pod-sharedvolume-ebb8180b-1c88-4359-9916-62637cd3ef8d/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  May  4 13:33:46.763: INFO: Exec stderr: ""
  May  4 13:33:46.763: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1107" for this suite. @ 05/04/24 13:33:46.767
• [2.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 05/04/24 13:33:46.775
  May  4 13:33:46.775: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename init-container @ 05/04/24 13:33:46.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:33:46.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:33:46.793
  STEP: creating the pod @ 05/04/24 13:33:46.795
  May  4 13:33:46.795: INFO: PodSpec: initContainers in spec.initContainers
  E0504 13:33:47.204469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:33:48.205413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:33:49.205780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:33:50.205584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:33:50.849: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-59" for this suite. @ 05/04/24 13:33:50.854
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 05/04/24 13:33:50.863
  May  4 13:33:50.863: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename svc-latency @ 05/04/24 13:33:50.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:33:50.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:33:50.883
  May  4 13:33:50.886: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-1372 @ 05/04/24 13:33:50.887
  I0504 13:33:50.894542      19 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-1372, replica count: 1
  E0504 13:33:51.205669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0504 13:33:51.946023      19 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May  4 13:33:52.056: INFO: Created: latency-svc-xxxwl
  May  4 13:33:52.066: INFO: Got endpoints: latency-svc-xxxwl [19.640654ms]
  May  4 13:33:52.077: INFO: Created: latency-svc-nm4nr
  May  4 13:33:52.087: INFO: Got endpoints: latency-svc-nm4nr [20.598649ms]
  May  4 13:33:52.088: INFO: Created: latency-svc-tb9tx
  May  4 13:33:52.097: INFO: Got endpoints: latency-svc-tb9tx [30.240876ms]
  May  4 13:33:52.099: INFO: Created: latency-svc-gcldw
  May  4 13:33:52.103: INFO: Got endpoints: latency-svc-gcldw [36.037136ms]
  May  4 13:33:52.106: INFO: Created: latency-svc-jfs57
  May  4 13:33:52.111: INFO: Got endpoints: latency-svc-jfs57 [44.955178ms]
  May  4 13:33:52.114: INFO: Created: latency-svc-rwk57
  May  4 13:33:52.121: INFO: Created: latency-svc-zxjst
  May  4 13:33:52.123: INFO: Got endpoints: latency-svc-rwk57 [56.748553ms]
  May  4 13:33:52.129: INFO: Created: latency-svc-cfkm7
  May  4 13:33:52.129: INFO: Got endpoints: latency-svc-zxjst [62.488792ms]
  May  4 13:33:52.136: INFO: Got endpoints: latency-svc-cfkm7 [69.61924ms]
  May  4 13:33:52.139: INFO: Created: latency-svc-qtdw8
  May  4 13:33:52.145: INFO: Created: latency-svc-7p9k5
  May  4 13:33:52.149: INFO: Got endpoints: latency-svc-qtdw8 [82.309939ms]
  May  4 13:33:52.152: INFO: Created: latency-svc-5kzzt
  May  4 13:33:52.154: INFO: Got endpoints: latency-svc-7p9k5 [87.558299ms]
  May  4 13:33:52.161: INFO: Got endpoints: latency-svc-5kzzt [94.564454ms]
  May  4 13:33:52.166: INFO: Created: latency-svc-wcxb4
  May  4 13:33:52.173: INFO: Created: latency-svc-k9nwj
  May  4 13:33:52.174: INFO: Got endpoints: latency-svc-wcxb4 [107.443415ms]
  May  4 13:33:52.180: INFO: Got endpoints: latency-svc-k9nwj [113.10563ms]
  E0504 13:33:52.206505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:33:52.249: INFO: Created: latency-svc-hlwd5
  May  4 13:33:52.249: INFO: Created: latency-svc-dtc99
  May  4 13:33:52.249: INFO: Created: latency-svc-ctb8w
  May  4 13:33:52.251: INFO: Created: latency-svc-s8j9s
  May  4 13:33:52.251: INFO: Created: latency-svc-8vr2t
  May  4 13:33:52.251: INFO: Created: latency-svc-6x59k
  May  4 13:33:52.252: INFO: Created: latency-svc-lp97s
  May  4 13:33:52.252: INFO: Created: latency-svc-zfrtq
  May  4 13:33:52.252: INFO: Created: latency-svc-27pmw
  May  4 13:33:52.261: INFO: Got endpoints: latency-svc-hlwd5 [164.648361ms]
  May  4 13:33:52.268: INFO: Created: latency-svc-4c7c6
  May  4 13:33:52.268: INFO: Created: latency-svc-vqpr6
  May  4 13:33:52.268: INFO: Created: latency-svc-r8fnh
  May  4 13:33:52.268: INFO: Created: latency-svc-mlmkw
  May  4 13:33:52.268: INFO: Created: latency-svc-2dx5r
  May  4 13:33:52.268: INFO: Created: latency-svc-tfm4l
  May  4 13:33:52.271: INFO: Got endpoints: latency-svc-s8j9s [204.5203ms]
  May  4 13:33:52.272: INFO: Got endpoints: latency-svc-8vr2t [117.41746ms]
  May  4 13:33:52.272: INFO: Got endpoints: latency-svc-dtc99 [122.610326ms]
  May  4 13:33:52.279: INFO: Got endpoints: latency-svc-zfrtq [98.656327ms]
  May  4 13:33:52.279: INFO: Got endpoints: latency-svc-ctb8w [117.686411ms]
  May  4 13:33:52.287: INFO: Got endpoints: latency-svc-27pmw [112.95458ms]
  May  4 13:33:52.293: INFO: Got endpoints: latency-svc-6x59k [163.713052ms]
  May  4 13:33:52.293: INFO: Got endpoints: latency-svc-lp97s [182.06679ms]
  May  4 13:33:52.294: INFO: Created: latency-svc-zl4rj
  May  4 13:33:52.294: INFO: Got endpoints: latency-svc-vqpr6 [227.270519ms]
  May  4 13:33:52.300: INFO: Got endpoints: latency-svc-2dx5r [197.254095ms]
  May  4 13:33:52.300: INFO: Got endpoints: latency-svc-tfm4l [212.931875ms]
  May  4 13:33:52.307: INFO: Created: latency-svc-6zgq6
  May  4 13:33:52.316: INFO: Got endpoints: latency-svc-4c7c6 [249.564445ms]
  May  4 13:33:52.317: INFO: Got endpoints: latency-svc-mlmkw [193.235795ms]
  May  4 13:33:52.317: INFO: Got endpoints: latency-svc-r8fnh [180.697099ms]
  May  4 13:33:52.321: INFO: Got endpoints: latency-svc-6zgq6 [49.178664ms]
  May  4 13:33:52.321: INFO: Got endpoints: latency-svc-zl4rj [59.325747ms]
  May  4 13:33:52.387: INFO: Created: latency-svc-knq5f
  May  4 13:33:52.388: INFO: Created: latency-svc-94fnd
  May  4 13:33:52.395: INFO: Created: latency-svc-26p28
  May  4 13:33:52.396: INFO: Created: latency-svc-mgqrw
  May  4 13:33:52.396: INFO: Created: latency-svc-4d55z
  May  4 13:33:52.397: INFO: Created: latency-svc-s4lwh
  May  4 13:33:52.396: INFO: Created: latency-svc-j9mc4
  May  4 13:33:52.396: INFO: Created: latency-svc-rvqtv
  May  4 13:33:52.397: INFO: Created: latency-svc-q94sj
  May  4 13:33:52.397: INFO: Created: latency-svc-w5fgk
  May  4 13:33:52.406: INFO: Created: latency-svc-kt866
  May  4 13:33:52.407: INFO: Created: latency-svc-l8cc9
  May  4 13:33:52.407: INFO: Created: latency-svc-7rv5v
  May  4 13:33:52.407: INFO: Created: latency-svc-2xsrh
  May  4 13:33:52.407: INFO: Created: latency-svc-kvflw
  May  4 13:33:52.409: INFO: Got endpoints: latency-svc-94fnd [121.505356ms]
  May  4 13:33:52.409: INFO: Got endpoints: latency-svc-knq5f [88.370996ms]
  May  4 13:33:52.416: INFO: Got endpoints: latency-svc-j9mc4 [94.691423ms]
  May  4 13:33:52.420: INFO: Got endpoints: latency-svc-26p28 [103.13043ms]
  May  4 13:33:52.421: INFO: Got endpoints: latency-svc-mgqrw [142.235896ms]
  May  4 13:33:52.425: INFO: Got endpoints: latency-svc-s4lwh [124.177865ms]
  May  4 13:33:52.426: INFO: Got endpoints: latency-svc-4d55z [109.680681ms]
  May  4 13:33:52.430: INFO: Created: latency-svc-cbzzm
  May  4 13:33:52.436: INFO: Created: latency-svc-t8p45
  May  4 13:33:52.445: INFO: Created: latency-svc-xt7kj
  May  4 13:33:52.448: INFO: Created: latency-svc-f2rhv
  May  4 13:33:52.453: INFO: Created: latency-svc-xrswt
  May  4 13:33:52.461: INFO: Created: latency-svc-smpmx
  May  4 13:33:52.463: INFO: Got endpoints: latency-svc-q94sj [162.182563ms]
  May  4 13:33:52.468: INFO: Created: latency-svc-7ptmt
  May  4 13:33:52.475: INFO: Created: latency-svc-dc92r
  May  4 13:33:52.513: INFO: Got endpoints: latency-svc-kt866 [196.076749ms]
  May  4 13:33:52.524: INFO: Created: latency-svc-q279n
  May  4 13:33:52.564: INFO: Got endpoints: latency-svc-w5fgk [270.913825ms]
  May  4 13:33:52.574: INFO: Created: latency-svc-nn5wf
  May  4 13:33:52.616: INFO: Got endpoints: latency-svc-l8cc9 [336.713258ms]
  May  4 13:33:52.627: INFO: Created: latency-svc-pdl4n
  May  4 13:33:52.665: INFO: Got endpoints: latency-svc-7rv5v [371.196066ms]
  May  4 13:33:52.679: INFO: Created: latency-svc-mt9fs
  May  4 13:33:52.714: INFO: Got endpoints: latency-svc-kvflw [442.07779ms]
  May  4 13:33:52.726: INFO: Created: latency-svc-zmpzf
  May  4 13:33:52.764: INFO: Got endpoints: latency-svc-2xsrh [492.188452ms]
  May  4 13:33:52.774: INFO: Created: latency-svc-5nvbj
  May  4 13:33:52.816: INFO: Got endpoints: latency-svc-rvqtv [522.172948ms]
  May  4 13:33:52.827: INFO: Created: latency-svc-ts65c
  May  4 13:33:52.866: INFO: Got endpoints: latency-svc-cbzzm [456.955703ms]
  May  4 13:33:52.878: INFO: Created: latency-svc-x5g4c
  May  4 13:33:52.913: INFO: Got endpoints: latency-svc-t8p45 [503.991941ms]
  May  4 13:33:52.924: INFO: Created: latency-svc-shqkm
  May  4 13:33:52.964: INFO: Got endpoints: latency-svc-xt7kj [548.230234ms]
  May  4 13:33:52.976: INFO: Created: latency-svc-r5flj
  May  4 13:33:53.016: INFO: Got endpoints: latency-svc-f2rhv [595.508562ms]
  May  4 13:33:53.026: INFO: Created: latency-svc-b7r69
  May  4 13:33:53.065: INFO: Got endpoints: latency-svc-xrswt [643.64119ms]
  May  4 13:33:53.077: INFO: Created: latency-svc-hght2
  May  4 13:33:53.116: INFO: Got endpoints: latency-svc-smpmx [691.153581ms]
  May  4 13:33:53.127: INFO: Created: latency-svc-hjmb4
  May  4 13:33:53.166: INFO: Got endpoints: latency-svc-7ptmt [739.449681ms]
  May  4 13:33:53.177: INFO: Created: latency-svc-r6d9j
  E0504 13:33:53.207264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:33:53.213: INFO: Got endpoints: latency-svc-dc92r [750.198297ms]
  May  4 13:33:53.225: INFO: Created: latency-svc-48gpp
  May  4 13:33:53.264: INFO: Got endpoints: latency-svc-q279n [750.746936ms]
  May  4 13:33:53.275: INFO: Created: latency-svc-6z5t9
  May  4 13:33:53.315: INFO: Got endpoints: latency-svc-nn5wf [751.034439ms]
  May  4 13:33:53.325: INFO: Created: latency-svc-4s4cq
  May  4 13:33:53.365: INFO: Got endpoints: latency-svc-pdl4n [749.718739ms]
  May  4 13:33:53.376: INFO: Created: latency-svc-4npkq
  May  4 13:33:53.414: INFO: Got endpoints: latency-svc-mt9fs [748.286986ms]
  May  4 13:33:53.427: INFO: Created: latency-svc-8tzrv
  May  4 13:33:53.464: INFO: Got endpoints: latency-svc-zmpzf [750.055592ms]
  May  4 13:33:53.475: INFO: Created: latency-svc-xv6dp
  May  4 13:33:53.516: INFO: Got endpoints: latency-svc-5nvbj [751.7661ms]
  May  4 13:33:53.527: INFO: Created: latency-svc-xt8qc
  May  4 13:33:53.565: INFO: Got endpoints: latency-svc-ts65c [749.526256ms]
  May  4 13:33:53.577: INFO: Created: latency-svc-jwt59
  May  4 13:33:53.616: INFO: Got endpoints: latency-svc-x5g4c [749.008384ms]
  May  4 13:33:53.627: INFO: Created: latency-svc-dhnp7
  May  4 13:33:53.664: INFO: Got endpoints: latency-svc-shqkm [750.295717ms]
  May  4 13:33:53.676: INFO: Created: latency-svc-r7dt4
  May  4 13:33:53.714: INFO: Got endpoints: latency-svc-r5flj [750.299447ms]
  May  4 13:33:53.727: INFO: Created: latency-svc-jpf6n
  May  4 13:33:53.764: INFO: Got endpoints: latency-svc-b7r69 [747.45024ms]
  May  4 13:33:53.774: INFO: Created: latency-svc-nq2zh
  May  4 13:33:53.815: INFO: Got endpoints: latency-svc-hght2 [749.831273ms]
  May  4 13:33:53.826: INFO: Created: latency-svc-jljdz
  May  4 13:33:53.865: INFO: Got endpoints: latency-svc-hjmb4 [749.049949ms]
  May  4 13:33:53.877: INFO: Created: latency-svc-7mwsn
  May  4 13:33:53.913: INFO: Got endpoints: latency-svc-r6d9j [747.489938ms]
  May  4 13:33:53.925: INFO: Created: latency-svc-w6jb8
  May  4 13:33:53.965: INFO: Got endpoints: latency-svc-48gpp [751.602345ms]
  May  4 13:33:53.976: INFO: Created: latency-svc-qphrn
  May  4 13:33:54.013: INFO: Got endpoints: latency-svc-6z5t9 [749.596063ms]
  May  4 13:33:54.025: INFO: Created: latency-svc-wsrj4
  May  4 13:33:54.064: INFO: Got endpoints: latency-svc-4s4cq [748.684405ms]
  May  4 13:33:54.077: INFO: Created: latency-svc-5q52p
  May  4 13:33:54.115: INFO: Got endpoints: latency-svc-4npkq [749.533677ms]
  May  4 13:33:54.125: INFO: Created: latency-svc-5ltvw
  May  4 13:33:54.165: INFO: Got endpoints: latency-svc-8tzrv [751.463877ms]
  May  4 13:33:54.176: INFO: Created: latency-svc-kz79v
  E0504 13:33:54.208325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:33:54.215: INFO: Got endpoints: latency-svc-xv6dp [751.008117ms]
  May  4 13:33:54.225: INFO: Created: latency-svc-ql764
  May  4 13:33:54.263: INFO: Got endpoints: latency-svc-xt8qc [747.283589ms]
  May  4 13:33:54.275: INFO: Created: latency-svc-8czbh
  May  4 13:33:54.315: INFO: Got endpoints: latency-svc-jwt59 [749.329718ms]
  May  4 13:33:54.326: INFO: Created: latency-svc-66fhj
  May  4 13:33:54.365: INFO: Got endpoints: latency-svc-dhnp7 [749.382189ms]
  May  4 13:33:54.375: INFO: Created: latency-svc-qx8hl
  May  4 13:33:54.415: INFO: Got endpoints: latency-svc-r7dt4 [751.263603ms]
  May  4 13:33:54.427: INFO: Created: latency-svc-c2thh
  May  4 13:33:54.463: INFO: Got endpoints: latency-svc-jpf6n [748.936312ms]
  May  4 13:33:54.477: INFO: Created: latency-svc-bh2ld
  May  4 13:33:54.514: INFO: Got endpoints: latency-svc-nq2zh [749.972965ms]
  May  4 13:33:54.524: INFO: Created: latency-svc-rtrs8
  May  4 13:33:54.563: INFO: Got endpoints: latency-svc-jljdz [748.072662ms]
  May  4 13:33:54.574: INFO: Created: latency-svc-lmrts
  May  4 13:33:54.615: INFO: Got endpoints: latency-svc-7mwsn [749.841383ms]
  May  4 13:33:54.627: INFO: Created: latency-svc-mq77w
  May  4 13:33:54.666: INFO: Got endpoints: latency-svc-w6jb8 [752.276664ms]
  May  4 13:33:54.678: INFO: Created: latency-svc-9pfd2
  May  4 13:33:54.714: INFO: Got endpoints: latency-svc-qphrn [749.567401ms]
  May  4 13:33:54.726: INFO: Created: latency-svc-qpxqs
  May  4 13:33:54.764: INFO: Got endpoints: latency-svc-wsrj4 [750.382757ms]
  May  4 13:33:54.776: INFO: Created: latency-svc-cpf86
  May  4 13:33:54.815: INFO: Got endpoints: latency-svc-5q52p [750.93801ms]
  May  4 13:33:54.826: INFO: Created: latency-svc-vjg2s
  May  4 13:33:54.865: INFO: Got endpoints: latency-svc-5ltvw [750.153606ms]
  May  4 13:33:54.878: INFO: Created: latency-svc-ddb9j
  May  4 13:33:54.913: INFO: Got endpoints: latency-svc-kz79v [747.822624ms]
  May  4 13:33:54.927: INFO: Created: latency-svc-ld2cw
  May  4 13:33:54.964: INFO: Got endpoints: latency-svc-ql764 [748.578344ms]
  May  4 13:33:54.974: INFO: Created: latency-svc-4m7f6
  May  4 13:33:55.015: INFO: Got endpoints: latency-svc-8czbh [751.400819ms]
  May  4 13:33:55.026: INFO: Created: latency-svc-nrn5h
  May  4 13:33:55.067: INFO: Got endpoints: latency-svc-66fhj [752.368359ms]
  May  4 13:33:55.081: INFO: Created: latency-svc-z5d6c
  May  4 13:33:55.115: INFO: Got endpoints: latency-svc-qx8hl [750.071027ms]
  May  4 13:33:55.126: INFO: Created: latency-svc-tnpnt
  May  4 13:33:55.163: INFO: Got endpoints: latency-svc-c2thh [747.53128ms]
  May  4 13:33:55.174: INFO: Created: latency-svc-5b4tb
  E0504 13:33:55.209292      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:33:55.213: INFO: Got endpoints: latency-svc-bh2ld [749.945104ms]
  May  4 13:33:55.224: INFO: Created: latency-svc-6hjdr
  May  4 13:33:55.265: INFO: Got endpoints: latency-svc-rtrs8 [750.685746ms]
  May  4 13:33:55.275: INFO: Created: latency-svc-6zfv6
  May  4 13:33:55.314: INFO: Got endpoints: latency-svc-lmrts [750.94911ms]
  May  4 13:33:55.326: INFO: Created: latency-svc-dzz25
  May  4 13:33:55.366: INFO: Got endpoints: latency-svc-mq77w [751.048579ms]
  May  4 13:33:55.378: INFO: Created: latency-svc-nwnx5
  May  4 13:33:55.414: INFO: Got endpoints: latency-svc-9pfd2 [748.467419ms]
  May  4 13:33:55.425: INFO: Created: latency-svc-w8j7x
  May  4 13:33:55.463: INFO: Got endpoints: latency-svc-qpxqs [749.075052ms]
  May  4 13:33:55.476: INFO: Created: latency-svc-wlccr
  May  4 13:33:55.515: INFO: Got endpoints: latency-svc-cpf86 [750.836416ms]
  May  4 13:33:55.527: INFO: Created: latency-svc-54jhn
  May  4 13:33:55.564: INFO: Got endpoints: latency-svc-vjg2s [748.717899ms]
  May  4 13:33:55.575: INFO: Created: latency-svc-m4mmb
  May  4 13:33:55.615: INFO: Got endpoints: latency-svc-ddb9j [749.198049ms]
  May  4 13:33:55.626: INFO: Created: latency-svc-59t5f
  May  4 13:33:55.664: INFO: Got endpoints: latency-svc-ld2cw [751.17949ms]
  May  4 13:33:55.679: INFO: Created: latency-svc-g5sfw
  May  4 13:33:55.714: INFO: Got endpoints: latency-svc-4m7f6 [749.984033ms]
  May  4 13:33:55.724: INFO: Created: latency-svc-fbt8p
  May  4 13:33:55.765: INFO: Got endpoints: latency-svc-nrn5h [750.371226ms]
  May  4 13:33:55.777: INFO: Created: latency-svc-4ntz2
  May  4 13:33:55.815: INFO: Got endpoints: latency-svc-z5d6c [747.350581ms]
  May  4 13:33:55.832: INFO: Created: latency-svc-hm8jm
  May  4 13:33:55.869: INFO: Got endpoints: latency-svc-tnpnt [753.693669ms]
  May  4 13:33:55.880: INFO: Created: latency-svc-tzk96
  May  4 13:33:55.913: INFO: Got endpoints: latency-svc-5b4tb [750.579393ms]
  May  4 13:33:55.926: INFO: Created: latency-svc-ql628
  May  4 13:33:55.964: INFO: Got endpoints: latency-svc-6hjdr [750.606212ms]
  May  4 13:33:55.975: INFO: Created: latency-svc-d5whd
  May  4 13:33:56.016: INFO: Got endpoints: latency-svc-6zfv6 [751.181029ms]
  May  4 13:33:56.026: INFO: Created: latency-svc-55cxd
  May  4 13:33:56.063: INFO: Got endpoints: latency-svc-dzz25 [749.003847ms]
  May  4 13:33:56.076: INFO: Created: latency-svc-ttdl4
  May  4 13:33:56.113: INFO: Got endpoints: latency-svc-nwnx5 [746.208746ms]
  May  4 13:33:56.125: INFO: Created: latency-svc-sh7v8
  May  4 13:33:56.164: INFO: Got endpoints: latency-svc-w8j7x [750.077974ms]
  May  4 13:33:56.175: INFO: Created: latency-svc-h6ksz
  E0504 13:33:56.209834      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:33:56.214: INFO: Got endpoints: latency-svc-wlccr [750.448924ms]
  May  4 13:33:56.225: INFO: Created: latency-svc-2lfbs
  May  4 13:33:56.265: INFO: Got endpoints: latency-svc-54jhn [750.332378ms]
  May  4 13:33:56.277: INFO: Created: latency-svc-w4twx
  May  4 13:33:56.313: INFO: Got endpoints: latency-svc-m4mmb [748.90163ms]
  May  4 13:33:56.325: INFO: Created: latency-svc-phldt
  May  4 13:33:56.364: INFO: Got endpoints: latency-svc-59t5f [749.128809ms]
  May  4 13:33:56.375: INFO: Created: latency-svc-jzcjg
  May  4 13:33:56.414: INFO: Got endpoints: latency-svc-g5sfw [749.055621ms]
  May  4 13:33:56.425: INFO: Created: latency-svc-g7g86
  May  4 13:33:56.465: INFO: Got endpoints: latency-svc-fbt8p [751.117379ms]
  May  4 13:33:56.476: INFO: Created: latency-svc-tbtg8
  May  4 13:33:56.515: INFO: Got endpoints: latency-svc-4ntz2 [749.85743ms]
  May  4 13:33:56.526: INFO: Created: latency-svc-f6bgm
  May  4 13:33:56.563: INFO: Got endpoints: latency-svc-hm8jm [747.510333ms]
  May  4 13:33:56.574: INFO: Created: latency-svc-xzlkx
  May  4 13:33:56.614: INFO: Got endpoints: latency-svc-tzk96 [744.270781ms]
  May  4 13:33:56.624: INFO: Created: latency-svc-b7gl8
  May  4 13:33:56.665: INFO: Got endpoints: latency-svc-ql628 [751.198146ms]
  May  4 13:33:56.676: INFO: Created: latency-svc-lv46c
  May  4 13:33:56.715: INFO: Got endpoints: latency-svc-d5whd [750.782666ms]
  May  4 13:33:56.726: INFO: Created: latency-svc-mgbzx
  May  4 13:33:56.765: INFO: Got endpoints: latency-svc-55cxd [748.809472ms]
  May  4 13:33:56.778: INFO: Created: latency-svc-s5zrw
  May  4 13:33:56.813: INFO: Got endpoints: latency-svc-ttdl4 [749.419404ms]
  May  4 13:33:56.826: INFO: Created: latency-svc-bqb92
  May  4 13:33:56.863: INFO: Got endpoints: latency-svc-sh7v8 [750.308964ms]
  May  4 13:33:56.873: INFO: Created: latency-svc-4fw8v
  May  4 13:33:56.916: INFO: Got endpoints: latency-svc-h6ksz [751.447259ms]
  May  4 13:33:56.925: INFO: Created: latency-svc-2cw7m
  May  4 13:33:56.966: INFO: Got endpoints: latency-svc-2lfbs [751.804789ms]
  May  4 13:33:56.978: INFO: Created: latency-svc-nmjl2
  May  4 13:33:57.014: INFO: Got endpoints: latency-svc-w4twx [748.365618ms]
  May  4 13:33:57.028: INFO: Created: latency-svc-v824g
  May  4 13:33:57.064: INFO: Got endpoints: latency-svc-phldt [750.35912ms]
  May  4 13:33:57.077: INFO: Created: latency-svc-zpd88
  May  4 13:33:57.114: INFO: Got endpoints: latency-svc-jzcjg [750.206914ms]
  May  4 13:33:57.125: INFO: Created: latency-svc-5w2zd
  May  4 13:33:57.166: INFO: Got endpoints: latency-svc-g7g86 [752.613785ms]
  May  4 13:33:57.177: INFO: Created: latency-svc-dhd6s
  E0504 13:33:57.210888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:33:57.215: INFO: Got endpoints: latency-svc-tbtg8 [749.741859ms]
  May  4 13:33:57.226: INFO: Created: latency-svc-f655m
  May  4 13:33:57.264: INFO: Got endpoints: latency-svc-f6bgm [749.023667ms]
  May  4 13:33:57.276: INFO: Created: latency-svc-tvknm
  May  4 13:33:57.313: INFO: Got endpoints: latency-svc-xzlkx [749.709248ms]
  May  4 13:33:57.325: INFO: Created: latency-svc-wbb9s
  May  4 13:33:57.365: INFO: Got endpoints: latency-svc-b7gl8 [751.313562ms]
  May  4 13:33:57.375: INFO: Created: latency-svc-sx62m
  May  4 13:33:57.416: INFO: Got endpoints: latency-svc-lv46c [751.703365ms]
  May  4 13:33:57.427: INFO: Created: latency-svc-qbfjw
  May  4 13:33:57.463: INFO: Got endpoints: latency-svc-mgbzx [747.508036ms]
  May  4 13:33:57.475: INFO: Created: latency-svc-t4xc8
  May  4 13:33:57.513: INFO: Got endpoints: latency-svc-s5zrw [748.05636ms]
  May  4 13:33:57.523: INFO: Created: latency-svc-84jb2
  May  4 13:33:57.563: INFO: Got endpoints: latency-svc-bqb92 [749.71644ms]
  May  4 13:33:57.574: INFO: Created: latency-svc-rvxth
  May  4 13:33:57.614: INFO: Got endpoints: latency-svc-4fw8v [750.960547ms]
  May  4 13:33:57.625: INFO: Created: latency-svc-cjqc4
  May  4 13:33:57.665: INFO: Got endpoints: latency-svc-2cw7m [748.997492ms]
  May  4 13:33:57.679: INFO: Created: latency-svc-pk79r
  May  4 13:33:57.714: INFO: Got endpoints: latency-svc-nmjl2 [747.558804ms]
  May  4 13:33:57.725: INFO: Created: latency-svc-bxwwg
  May  4 13:33:57.763: INFO: Got endpoints: latency-svc-v824g [749.371995ms]
  May  4 13:33:57.775: INFO: Created: latency-svc-xrvcl
  May  4 13:33:57.815: INFO: Got endpoints: latency-svc-zpd88 [751.227511ms]
  May  4 13:33:57.825: INFO: Created: latency-svc-xfb75
  May  4 13:33:57.865: INFO: Got endpoints: latency-svc-5w2zd [750.574565ms]
  May  4 13:33:57.877: INFO: Created: latency-svc-4mfwl
  May  4 13:33:57.916: INFO: Got endpoints: latency-svc-dhd6s [749.229195ms]
  May  4 13:33:57.928: INFO: Created: latency-svc-52tmm
  May  4 13:33:57.966: INFO: Got endpoints: latency-svc-f655m [751.336614ms]
  May  4 13:33:57.976: INFO: Created: latency-svc-d8pcc
  May  4 13:33:58.014: INFO: Got endpoints: latency-svc-tvknm [749.540848ms]
  May  4 13:33:58.026: INFO: Created: latency-svc-pzgsb
  May  4 13:33:58.064: INFO: Got endpoints: latency-svc-wbb9s [751.108284ms]
  May  4 13:33:58.079: INFO: Created: latency-svc-spwl4
  May  4 13:33:58.115: INFO: Got endpoints: latency-svc-sx62m [750.212165ms]
  May  4 13:33:58.125: INFO: Created: latency-svc-ngsxh
  May  4 13:33:58.169: INFO: Got endpoints: latency-svc-qbfjw [752.459879ms]
  May  4 13:33:58.181: INFO: Created: latency-svc-szwtp
  E0504 13:33:58.211747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:33:58.215: INFO: Got endpoints: latency-svc-t4xc8 [752.153371ms]
  May  4 13:33:58.227: INFO: Created: latency-svc-gtl4g
  May  4 13:33:58.266: INFO: Got endpoints: latency-svc-84jb2 [753.012964ms]
  May  4 13:33:58.278: INFO: Created: latency-svc-xfx2b
  May  4 13:33:58.313: INFO: Got endpoints: latency-svc-rvxth [749.926136ms]
  May  4 13:33:58.325: INFO: Created: latency-svc-j4thp
  May  4 13:33:58.363: INFO: Got endpoints: latency-svc-cjqc4 [749.189267ms]
  May  4 13:33:58.375: INFO: Created: latency-svc-jq75t
  May  4 13:33:58.417: INFO: Got endpoints: latency-svc-pk79r [751.407453ms]
  May  4 13:33:58.427: INFO: Created: latency-svc-jw6l4
  May  4 13:33:58.466: INFO: Got endpoints: latency-svc-bxwwg [751.970171ms]
  May  4 13:33:58.477: INFO: Created: latency-svc-l54nf
  May  4 13:33:58.514: INFO: Got endpoints: latency-svc-xrvcl [750.353401ms]
  May  4 13:33:58.528: INFO: Created: latency-svc-w5kxx
  May  4 13:33:58.564: INFO: Got endpoints: latency-svc-xfb75 [749.088013ms]
  May  4 13:33:58.575: INFO: Created: latency-svc-pmtfk
  May  4 13:33:58.615: INFO: Got endpoints: latency-svc-4mfwl [749.974845ms]
  May  4 13:33:58.627: INFO: Created: latency-svc-8jz67
  May  4 13:33:58.666: INFO: Got endpoints: latency-svc-52tmm [749.970838ms]
  May  4 13:33:58.678: INFO: Created: latency-svc-h6d52
  May  4 13:33:58.715: INFO: Got endpoints: latency-svc-d8pcc [748.701153ms]
  May  4 13:33:58.726: INFO: Created: latency-svc-qx84z
  May  4 13:33:58.764: INFO: Got endpoints: latency-svc-pzgsb [749.659713ms]
  May  4 13:33:58.776: INFO: Created: latency-svc-j8zsd
  May  4 13:33:58.813: INFO: Got endpoints: latency-svc-spwl4 [748.378895ms]
  May  4 13:33:58.825: INFO: Created: latency-svc-fkfx8
  May  4 13:33:58.866: INFO: Got endpoints: latency-svc-ngsxh [751.078844ms]
  May  4 13:33:58.876: INFO: Created: latency-svc-9s2mh
  May  4 13:33:58.916: INFO: Got endpoints: latency-svc-szwtp [746.337955ms]
  May  4 13:33:58.927: INFO: Created: latency-svc-mwh8n
  May  4 13:33:58.964: INFO: Got endpoints: latency-svc-gtl4g [748.786999ms]
  May  4 13:33:58.976: INFO: Created: latency-svc-zwpz9
  May  4 13:33:59.013: INFO: Got endpoints: latency-svc-xfx2b [746.638324ms]
  May  4 13:33:59.024: INFO: Created: latency-svc-zm4tk
  May  4 13:33:59.064: INFO: Got endpoints: latency-svc-j4thp [750.446224ms]
  May  4 13:33:59.076: INFO: Created: latency-svc-njxkm
  May  4 13:33:59.117: INFO: Got endpoints: latency-svc-jq75t [752.790547ms]
  May  4 13:33:59.129: INFO: Created: latency-svc-lbsv9
  May  4 13:33:59.165: INFO: Got endpoints: latency-svc-jw6l4 [747.707301ms]
  May  4 13:33:59.177: INFO: Created: latency-svc-wk4pk
  E0504 13:33:59.212433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:33:59.215: INFO: Got endpoints: latency-svc-l54nf [748.561174ms]
  May  4 13:33:59.226: INFO: Created: latency-svc-jrv7z
  May  4 13:33:59.267: INFO: Got endpoints: latency-svc-w5kxx [752.621925ms]
  May  4 13:33:59.283: INFO: Created: latency-svc-9pfcn
  May  4 13:33:59.316: INFO: Got endpoints: latency-svc-pmtfk [750.89532ms]
  May  4 13:33:59.326: INFO: Created: latency-svc-gzfm2
  May  4 13:33:59.365: INFO: Got endpoints: latency-svc-8jz67 [750.336672ms]
  May  4 13:33:59.377: INFO: Created: latency-svc-n9qh4
  May  4 13:33:59.414: INFO: Got endpoints: latency-svc-h6d52 [748.518198ms]
  May  4 13:33:59.429: INFO: Created: latency-svc-p4kkc
  May  4 13:33:59.463: INFO: Got endpoints: latency-svc-qx84z [747.905244ms]
  May  4 13:33:59.474: INFO: Created: latency-svc-hfw4n
  May  4 13:33:59.514: INFO: Got endpoints: latency-svc-j8zsd [749.392137ms]
  May  4 13:33:59.525: INFO: Created: latency-svc-4bc7p
  May  4 13:33:59.564: INFO: Got endpoints: latency-svc-fkfx8 [750.098913ms]
  May  4 13:33:59.576: INFO: Created: latency-svc-wlcxb
  May  4 13:33:59.616: INFO: Got endpoints: latency-svc-9s2mh [749.325408ms]
  May  4 13:33:59.627: INFO: Created: latency-svc-nckzg
  May  4 13:33:59.665: INFO: Got endpoints: latency-svc-mwh8n [749.392678ms]
  May  4 13:33:59.677: INFO: Created: latency-svc-c22hg
  May  4 13:33:59.714: INFO: Got endpoints: latency-svc-zwpz9 [750.333152ms]
  May  4 13:33:59.726: INFO: Created: latency-svc-c7x8p
  May  4 13:33:59.766: INFO: Got endpoints: latency-svc-zm4tk [752.312829ms]
  May  4 13:33:59.775: INFO: Created: latency-svc-t4npd
  May  4 13:33:59.819: INFO: Got endpoints: latency-svc-njxkm [754.708426ms]
  May  4 13:33:59.830: INFO: Created: latency-svc-fv2wg
  May  4 13:33:59.865: INFO: Got endpoints: latency-svc-lbsv9 [748.240808ms]
  May  4 13:33:59.876: INFO: Created: latency-svc-8vg5d
  May  4 13:33:59.914: INFO: Got endpoints: latency-svc-wk4pk [749.517863ms]
  May  4 13:33:59.964: INFO: Got endpoints: latency-svc-jrv7z [749.546792ms]
  May  4 13:34:00.013: INFO: Got endpoints: latency-svc-9pfcn [746.428662ms]
  May  4 13:34:00.072: INFO: Got endpoints: latency-svc-gzfm2 [755.877099ms]
  May  4 13:34:00.116: INFO: Got endpoints: latency-svc-n9qh4 [750.919455ms]
  May  4 13:34:00.163: INFO: Got endpoints: latency-svc-p4kkc [748.656195ms]
  E0504 13:34:00.212607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:34:00.214: INFO: Got endpoints: latency-svc-hfw4n [751.279545ms]
  May  4 13:34:00.265: INFO: Got endpoints: latency-svc-4bc7p [751.327254ms]
  May  4 13:34:00.317: INFO: Got endpoints: latency-svc-wlcxb [753.159541ms]
  May  4 13:34:00.468: INFO: Got endpoints: latency-svc-c22hg [802.574387ms]
  May  4 13:34:00.468: INFO: Got endpoints: latency-svc-nckzg [851.826945ms]
  May  4 13:34:00.471: INFO: Got endpoints: latency-svc-c7x8p [756.811463ms]
  May  4 13:34:00.515: INFO: Got endpoints: latency-svc-t4npd [749.256409ms]
  May  4 13:34:00.567: INFO: Got endpoints: latency-svc-fv2wg [748.187412ms]
  May  4 13:34:00.614: INFO: Got endpoints: latency-svc-8vg5d [749.33959ms]
  May  4 13:34:00.615: INFO: Latencies: [20.598649ms 30.240876ms 36.037136ms 44.955178ms 49.178664ms 56.748553ms 59.325747ms 62.488792ms 69.61924ms 82.309939ms 87.558299ms 88.370996ms 94.564454ms 94.691423ms 98.656327ms 103.13043ms 107.443415ms 109.680681ms 112.95458ms 113.10563ms 117.41746ms 117.686411ms 121.505356ms 122.610326ms 124.177865ms 142.235896ms 162.182563ms 163.713052ms 164.648361ms 180.697099ms 182.06679ms 193.235795ms 196.076749ms 197.254095ms 204.5203ms 212.931875ms 227.270519ms 249.564445ms 270.913825ms 336.713258ms 371.196066ms 442.07779ms 456.955703ms 492.188452ms 503.991941ms 522.172948ms 548.230234ms 595.508562ms 643.64119ms 691.153581ms 739.449681ms 744.270781ms 746.208746ms 746.337955ms 746.428662ms 746.638324ms 747.283589ms 747.350581ms 747.45024ms 747.489938ms 747.508036ms 747.510333ms 747.53128ms 747.558804ms 747.707301ms 747.822624ms 747.905244ms 748.05636ms 748.072662ms 748.187412ms 748.240808ms 748.286986ms 748.365618ms 748.378895ms 748.467419ms 748.518198ms 748.561174ms 748.578344ms 748.656195ms 748.684405ms 748.701153ms 748.717899ms 748.786999ms 748.809472ms 748.90163ms 748.936312ms 748.997492ms 749.003847ms 749.008384ms 749.023667ms 749.049949ms 749.055621ms 749.075052ms 749.088013ms 749.128809ms 749.189267ms 749.198049ms 749.229195ms 749.256409ms 749.325408ms 749.329718ms 749.33959ms 749.371995ms 749.382189ms 749.392137ms 749.392678ms 749.419404ms 749.517863ms 749.526256ms 749.533677ms 749.540848ms 749.546792ms 749.567401ms 749.596063ms 749.659713ms 749.709248ms 749.71644ms 749.718739ms 749.741859ms 749.831273ms 749.841383ms 749.85743ms 749.926136ms 749.945104ms 749.970838ms 749.972965ms 749.974845ms 749.984033ms 750.055592ms 750.071027ms 750.077974ms 750.098913ms 750.153606ms 750.198297ms 750.206914ms 750.212165ms 750.295717ms 750.299447ms 750.308964ms 750.332378ms 750.333152ms 750.336672ms 750.353401ms 750.35912ms 750.371226ms 750.382757ms 750.446224ms 750.448924ms 750.574565ms 750.579393ms 750.606212ms 750.685746ms 750.746936ms 750.782666ms 750.836416ms 750.89532ms 750.919455ms 750.93801ms 750.94911ms 750.960547ms 751.008117ms 751.034439ms 751.048579ms 751.078844ms 751.108284ms 751.117379ms 751.17949ms 751.181029ms 751.198146ms 751.227511ms 751.263603ms 751.279545ms 751.313562ms 751.327254ms 751.336614ms 751.400819ms 751.407453ms 751.447259ms 751.463877ms 751.602345ms 751.703365ms 751.7661ms 751.804789ms 751.970171ms 752.153371ms 752.276664ms 752.312829ms 752.368359ms 752.459879ms 752.613785ms 752.621925ms 752.790547ms 753.012964ms 753.159541ms 753.693669ms 754.708426ms 755.877099ms 756.811463ms 802.574387ms 851.826945ms]
  May  4 13:34:00.615: INFO: 50 %ile: 749.329718ms
  May  4 13:34:00.615: INFO: 90 %ile: 751.703365ms
  May  4 13:34:00.615: INFO: 99 %ile: 802.574387ms
  May  4 13:34:00.615: INFO: Total sample count: 200
  May  4 13:34:00.615: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-1372" for this suite. @ 05/04/24 13:34:00.621
• [9.767 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 05/04/24 13:34:00.63
  May  4 13:34:00.630: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename webhook @ 05/04/24 13:34:00.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:34:00.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:34:00.649
  STEP: Setting up server cert @ 05/04/24 13:34:00.673
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/04/24 13:34:00.764
  STEP: Deploying the webhook pod @ 05/04/24 13:34:00.774
  STEP: Wait for the deployment to be ready @ 05/04/24 13:34:00.787
  May  4 13:34:00.799: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0504 13:34:01.213441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:34:02.213649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/04/24 13:34:02.811
  STEP: Verifying the service has paired with the endpoint @ 05/04/24 13:34:02.821
  E0504 13:34:03.214430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:34:03.822: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 05/04/24 13:34:03.829
  STEP: Creating a custom resource definition that should be denied by the webhook @ 05/04/24 13:34:03.843
  May  4 13:34:03.843: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 13:34:03.912: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1041" for this suite. @ 05/04/24 13:34:03.917
  STEP: Destroying namespace "webhook-markers-5214" for this suite. @ 05/04/24 13:34:03.924
• [3.303 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 05/04/24 13:34:03.933
  May  4 13:34:03.933: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename daemonsets @ 05/04/24 13:34:03.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:34:03.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:34:03.951
  May  4 13:34:03.971: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 05/04/24 13:34:03.977
  May  4 13:34:03.980: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  4 13:34:03.980: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 05/04/24 13:34:03.98
  May  4 13:34:04.000: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  4 13:34:04.000: INFO: Node ip-172-31-33-38 is running 0 daemon pod, expected 1
  E0504 13:34:04.215447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:34:05.002: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  4 13:34:05.002: INFO: Node ip-172-31-33-38 is running 0 daemon pod, expected 1
  E0504 13:34:05.216063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:34:06.001: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May  4 13:34:06.001: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 05/04/24 13:34:06.005
  May  4 13:34:06.026: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May  4 13:34:06.026: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E0504 13:34:06.217040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:34:07.026: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  4 13:34:07.026: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 05/04/24 13:34:07.026
  May  4 13:34:07.036: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  4 13:34:07.036: INFO: Node ip-172-31-33-38 is running 0 daemon pod, expected 1
  E0504 13:34:07.217117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:34:08.040: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  4 13:34:08.040: INFO: Node ip-172-31-33-38 is running 0 daemon pod, expected 1
  E0504 13:34:08.217604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:34:09.040: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May  4 13:34:09.040: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/04/24 13:34:09.049
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7610, will wait for the garbage collector to delete the pods @ 05/04/24 13:34:09.049
  May  4 13:34:09.111: INFO: Deleting DaemonSet.extensions daemon-set took: 8.082239ms
  May  4 13:34:09.211: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.435259ms
  E0504 13:34:09.217957      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:34:10.217983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:34:10.316: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  4 13:34:10.316: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May  4 13:34:10.320: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"39950"},"items":null}

  May  4 13:34:10.325: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"39950"},"items":null}

  May  4 13:34:10.356: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7610" for this suite. @ 05/04/24 13:34:10.36
• [6.434 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 05/04/24 13:34:10.367
  May  4 13:34:10.367: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename daemonsets @ 05/04/24 13:34:10.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:34:10.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:34:10.392
  STEP: Creating simple DaemonSet "daemon-set" @ 05/04/24 13:34:10.439
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/04/24 13:34:10.458
  May  4 13:34:10.478: INFO: DaemonSet pods can't tolerate node ip-172-31-26-203 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 13:34:10.478: INFO: DaemonSet pods can't tolerate node ip-172-31-85-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 13:34:10.490: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  4 13:34:10.490: INFO: Node ip-172-31-18-228 is running 0 daemon pod, expected 1
  E0504 13:34:11.218925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:34:11.463: INFO: DaemonSet pods can't tolerate node ip-172-31-26-203 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 13:34:11.463: INFO: DaemonSet pods can't tolerate node ip-172-31-85-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 13:34:11.468: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May  4 13:34:11.469: INFO: Node ip-172-31-18-228 is running 0 daemon pod, expected 1
  E0504 13:34:12.219098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:34:12.463: INFO: DaemonSet pods can't tolerate node ip-172-31-26-203 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 13:34:12.463: INFO: DaemonSet pods can't tolerate node ip-172-31-85-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 13:34:12.466: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  May  4 13:34:12.466: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 05/04/24 13:34:12.471
  May  4 13:34:12.474: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 05/04/24 13:34:12.474
  May  4 13:34:12.483: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 05/04/24 13:34:12.483
  May  4 13:34:12.485: INFO: Observed &DaemonSet event: ADDED
  May  4 13:34:12.485: INFO: Observed &DaemonSet event: MODIFIED
  May  4 13:34:12.485: INFO: Observed &DaemonSet event: MODIFIED
  May  4 13:34:12.485: INFO: Observed &DaemonSet event: MODIFIED
  May  4 13:34:12.485: INFO: Observed &DaemonSet event: MODIFIED
  May  4 13:34:12.485: INFO: Observed &DaemonSet event: MODIFIED
  May  4 13:34:12.485: INFO: Found daemon set daemon-set in namespace daemonsets-1564 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  May  4 13:34:12.485: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 05/04/24 13:34:12.485
  STEP: watching for the daemon set status to be patched @ 05/04/24 13:34:12.494
  May  4 13:34:12.495: INFO: Observed &DaemonSet event: ADDED
  May  4 13:34:12.495: INFO: Observed &DaemonSet event: MODIFIED
  May  4 13:34:12.496: INFO: Observed &DaemonSet event: MODIFIED
  May  4 13:34:12.496: INFO: Observed &DaemonSet event: MODIFIED
  May  4 13:34:12.496: INFO: Observed &DaemonSet event: MODIFIED
  May  4 13:34:12.496: INFO: Observed &DaemonSet event: MODIFIED
  May  4 13:34:12.496: INFO: Observed daemon set daemon-set in namespace daemonsets-1564 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  May  4 13:34:12.496: INFO: Observed &DaemonSet event: MODIFIED
  May  4 13:34:12.496: INFO: Found daemon set daemon-set in namespace daemonsets-1564 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  May  4 13:34:12.496: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 05/04/24 13:34:12.501
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1564, will wait for the garbage collector to delete the pods @ 05/04/24 13:34:12.501
  May  4 13:34:12.568: INFO: Deleting DaemonSet.extensions daemon-set took: 13.334696ms
  May  4 13:34:12.669: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.574351ms
  E0504 13:34:13.219737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:34:13.973: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  4 13:34:13.973: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May  4 13:34:13.977: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"40065"},"items":null}

  May  4 13:34:13.981: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"40065"},"items":null}

  May  4 13:34:13.994: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1564" for this suite. @ 05/04/24 13:34:13.997
• [3.637 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 05/04/24 13:34:14.005
  May  4 13:34:14.005: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename pod-network-test @ 05/04/24 13:34:14.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:34:14.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:34:14.024
  STEP: Performing setup for networking test in namespace pod-network-test-5711 @ 05/04/24 13:34:14.026
  STEP: creating a selector @ 05/04/24 13:34:14.026
  STEP: Creating the service pods in kubernetes @ 05/04/24 13:34:14.026
  May  4 13:34:14.027: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0504 13:34:14.220340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:34:15.221349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:34:16.221470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:34:17.221924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:34:18.222678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:34:19.223803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:34:20.224087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:34:21.224349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:34:22.224815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:34:23.225442      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:34:24.226274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:34:25.226669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 05/04/24 13:34:26.115
  E0504 13:34:26.226929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:34:27.227108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:34:28.134: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  May  4 13:34:28.134: INFO: Breadth first check of 192.168.149.8 on host 172.31.18.228...
  May  4 13:34:28.138: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.149.5:9080/dial?request=hostname&protocol=udp&host=192.168.149.8&port=8081&tries=1'] Namespace:pod-network-test-5711 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  4 13:34:28.138: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 13:34:28.138: INFO: ExecWithOptions: Clientset creation
  May  4 13:34:28.138: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5711/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.149.5%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.149.8%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May  4 13:34:28.184: INFO: Waiting for responses: map[]
  May  4 13:34:28.184: INFO: reached 192.168.149.8 after 0/1 tries
  May  4 13:34:28.185: INFO: Breadth first check of 192.168.170.118 on host 172.31.33.38...
  May  4 13:34:28.190: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.149.5:9080/dial?request=hostname&protocol=udp&host=192.168.170.118&port=8081&tries=1'] Namespace:pod-network-test-5711 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  4 13:34:28.190: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 13:34:28.190: INFO: ExecWithOptions: Clientset creation
  May  4 13:34:28.190: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5711/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.149.5%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.170.118%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  E0504 13:34:28.227384      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:34:28.237: INFO: Waiting for responses: map[]
  May  4 13:34:28.237: INFO: reached 192.168.170.118 after 0/1 tries
  May  4 13:34:28.237: INFO: Breadth first check of 192.168.186.3 on host 172.31.72.79...
  May  4 13:34:28.246: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.149.5:9080/dial?request=hostname&protocol=udp&host=192.168.186.3&port=8081&tries=1'] Namespace:pod-network-test-5711 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  4 13:34:28.246: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 13:34:28.247: INFO: ExecWithOptions: Clientset creation
  May  4 13:34:28.247: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5711/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.149.5%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.186.3%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May  4 13:34:28.297: INFO: Waiting for responses: map[]
  May  4 13:34:28.297: INFO: reached 192.168.186.3 after 0/1 tries
  May  4 13:34:28.297: INFO: Going to retry 0 out of 3 pods....
  May  4 13:34:28.298: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5711" for this suite. @ 05/04/24 13:34:28.305
• [14.308 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 05/04/24 13:34:28.313
  May  4 13:34:28.313: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename secrets @ 05/04/24 13:34:28.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:34:28.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:34:28.331
  STEP: Creating secret with name s-test-opt-del-d2331f57-cd73-4fe9-b692-58322939cb2a @ 05/04/24 13:34:28.339
  STEP: Creating secret with name s-test-opt-upd-b4723fbb-4322-4957-9d88-e7f67d4f544f @ 05/04/24 13:34:28.342
  STEP: Creating the pod @ 05/04/24 13:34:28.349
  E0504 13:34:29.227564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:34:30.227663      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-d2331f57-cd73-4fe9-b692-58322939cb2a @ 05/04/24 13:34:30.392
  STEP: Updating secret s-test-opt-upd-b4723fbb-4322-4957-9d88-e7f67d4f544f @ 05/04/24 13:34:30.397
  STEP: Creating secret with name s-test-opt-create-b9054161-7496-4b95-b871-31c5b5dabd26 @ 05/04/24 13:34:30.403
  STEP: waiting to observe update in volume @ 05/04/24 13:34:30.408
  E0504 13:34:31.228247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:34:32.228405      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:34:33.229413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:34:34.229517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:34:34.447: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7162" for this suite. @ 05/04/24 13:34:34.451
• [6.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 05/04/24 13:34:34.459
  May  4 13:34:34.459: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename replication-controller @ 05/04/24 13:34:34.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:34:34.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:34:34.474
  STEP: Creating ReplicationController "e2e-rc-4jwqx" @ 05/04/24 13:34:34.478
  May  4 13:34:34.483: INFO: Get Replication Controller "e2e-rc-4jwqx" to confirm replicas
  E0504 13:34:35.229607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:34:35.484: INFO: Get Replication Controller "e2e-rc-4jwqx" to confirm replicas
  May  4 13:34:35.487: INFO: Found 1 replicas for "e2e-rc-4jwqx" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-4jwqx" @ 05/04/24 13:34:35.487
  STEP: Updating a scale subresource @ 05/04/24 13:34:35.492
  STEP: Verifying replicas where modified for replication controller "e2e-rc-4jwqx" @ 05/04/24 13:34:35.498
  May  4 13:34:35.498: INFO: Get Replication Controller "e2e-rc-4jwqx" to confirm replicas
  E0504 13:34:36.229702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:34:36.499: INFO: Get Replication Controller "e2e-rc-4jwqx" to confirm replicas
  May  4 13:34:36.504: INFO: Found 2 replicas for "e2e-rc-4jwqx" replication controller
  May  4 13:34:36.505: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9281" for this suite. @ 05/04/24 13:34:36.509
• [2.058 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:332
  STEP: Creating a kubernetes client @ 05/04/24 13:34:36.517
  May  4 13:34:36.517: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename statefulset @ 05/04/24 13:34:36.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:34:36.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:34:36.536
  STEP: Creating service test in namespace statefulset-7328 @ 05/04/24 13:34:36.539
  STEP: Creating a new StatefulSet @ 05/04/24 13:34:36.545
  May  4 13:34:36.562: INFO: Found 0 stateful pods, waiting for 3
  E0504 13:34:37.229933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:34:38.230355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:34:39.230643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:34:40.230864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:34:41.230979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:34:42.231069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:34:43.231312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:34:44.231436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:34:45.231681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:34:46.231906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:34:46.563: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  May  4 13:34:46.563: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  May  4 13:34:46.563: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 05/04/24 13:34:46.574
  May  4 13:34:46.594: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 05/04/24 13:34:46.594
  E0504 13:34:47.232908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:34:48.233429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:34:49.233552      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:34:50.234055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:34:51.234145      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:34:52.234334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:34:53.234413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:34:54.234506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:34:55.234650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:34:56.234739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 05/04/24 13:34:56.604
  STEP: Performing a canary update @ 05/04/24 13:34:56.604
  May  4 13:34:56.626: INFO: Updating stateful set ss2
  May  4 13:34:56.639: INFO: Waiting for Pod statefulset-7328/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0504 13:34:57.235172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:34:58.235769      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:34:59.236325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:00.236433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:01.236560      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:02.237504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:03.237741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:04.238112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:05.238659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:06.238732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 05/04/24 13:35:06.635
  May  4 13:35:06.684: INFO: Found 2 stateful pods, waiting for 3
  E0504 13:35:07.239197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:08.239437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:09.239539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:10.239955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:11.240272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:12.240356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:13.240591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:14.240696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:15.241580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:16.241687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:35:16.685: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  May  4 13:35:16.685: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  May  4 13:35:16.685: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 05/04/24 13:35:16.692
  May  4 13:35:16.712: INFO: Updating stateful set ss2
  May  4 13:35:16.725: INFO: Waiting for Pod statefulset-7328/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0504 13:35:17.242116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:18.242288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:19.242583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:20.243026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:21.243331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:22.243556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:23.243830      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:24.243916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:25.244045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:26.244570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:35:26.742: INFO: Updating stateful set ss2
  May  4 13:35:26.748: INFO: Waiting for StatefulSet statefulset-7328/ss2 to complete update
  May  4 13:35:26.748: INFO: Waiting for Pod statefulset-7328/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0504 13:35:27.245244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:28.245635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:29.245698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:30.245839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:31.246048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:32.246152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:33.246400      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:34.246657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:35.246784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:36.246891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:35:36.750: INFO: Deleting all statefulset in ns statefulset-7328
  May  4 13:35:36.755: INFO: Scaling statefulset ss2 to 0
  E0504 13:35:37.247033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:38.248038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:39.248248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:40.248649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:41.248742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:42.248840      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:43.249885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:44.250005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:45.250287      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:46.250458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:35:46.768: INFO: Waiting for statefulset status.replicas updated to 0
  May  4 13:35:46.771: INFO: Deleting statefulset ss2
  May  4 13:35:46.786: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7328" for this suite. @ 05/04/24 13:35:46.79
• [70.278 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 05/04/24 13:35:46.796
  May  4 13:35:46.796: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename svcaccounts @ 05/04/24 13:35:46.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:35:46.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:35:46.813
  STEP: Creating ServiceAccount "e2e-sa-f8ml8"  @ 05/04/24 13:35:46.815
  May  4 13:35:46.821: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-f8ml8"  @ 05/04/24 13:35:46.821
  May  4 13:35:46.829: INFO: AutomountServiceAccountToken: true
  May  4 13:35:46.829: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-492" for this suite. @ 05/04/24 13:35:46.833
• [0.044 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 05/04/24 13:35:46.84
  May  4 13:35:46.840: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename emptydir @ 05/04/24 13:35:46.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:35:46.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:35:46.859
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 05/04/24 13:35:46.861
  E0504 13:35:47.251184      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:48.251286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:49.251814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:50.251835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/04/24 13:35:50.886
  May  4 13:35:50.889: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-2a2659a9-e203-4af9-8923-660e846a2d2d container test-container: <nil>
  STEP: delete the pod @ 05/04/24 13:35:50.901
  May  4 13:35:50.921: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5562" for this suite. @ 05/04/24 13:35:50.926
• [4.094 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 05/04/24 13:35:50.934
  May  4 13:35:50.934: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename namespaces @ 05/04/24 13:35:50.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:35:50.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:35:50.95
  STEP: Creating a test namespace @ 05/04/24 13:35:50.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:35:50.965
  STEP: Creating a service in the namespace @ 05/04/24 13:35:50.968
  STEP: Deleting the namespace @ 05/04/24 13:35:50.983
  STEP: Waiting for the namespace to be removed. @ 05/04/24 13:35:50.992
  E0504 13:35:51.251954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:52.252813      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:53.253424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:54.253557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:55.254323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:56.254525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 05/04/24 13:35:56.998
  STEP: Verifying there is no service in the namespace @ 05/04/24 13:35:57.013
  May  4 13:35:57.017: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3954" for this suite. @ 05/04/24 13:35:57.021
  STEP: Destroying namespace "nsdeletetest-7330" for this suite. @ 05/04/24 13:35:57.028
  May  4 13:35:57.031: INFO: Namespace nsdeletetest-7330 was already deleted
  STEP: Destroying namespace "nsdeletetest-7863" for this suite. @ 05/04/24 13:35:57.031
• [6.105 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 05/04/24 13:35:57.039
  May  4 13:35:57.039: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename projected @ 05/04/24 13:35:57.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:35:57.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:35:57.059
  STEP: Creating configMap with name configmap-projected-all-test-volume-39fb665e-7685-4e46-991b-f0b4d4f1ceb7 @ 05/04/24 13:35:57.061
  STEP: Creating secret with name secret-projected-all-test-volume-792ba1b4-e53d-4e5b-83cc-27c4d903d5fe @ 05/04/24 13:35:57.065
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 05/04/24 13:35:57.07
  E0504 13:35:57.254644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:58.254728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:35:59.255702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:00.256441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/04/24 13:36:01.095
  May  4 13:36:01.098: INFO: Trying to get logs from node ip-172-31-18-228 pod projected-volume-4c4c7074-34b3-4d2a-ad14-37890a67edff container projected-all-volume-test: <nil>
  STEP: delete the pod @ 05/04/24 13:36:01.107
  May  4 13:36:01.128: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4730" for this suite. @ 05/04/24 13:36:01.131
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 05/04/24 13:36:01.14
  May  4 13:36:01.140: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename limitrange @ 05/04/24 13:36:01.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:36:01.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:36:01.16
  STEP: Creating LimitRange "e2e-limitrange-mm8dv" in namespace "limitrange-3736" @ 05/04/24 13:36:01.165
  STEP: Creating another limitRange in another namespace @ 05/04/24 13:36:01.169
  May  4 13:36:01.183: INFO: Namespace "e2e-limitrange-mm8dv-8787" created
  May  4 13:36:01.183: INFO: Creating LimitRange "e2e-limitrange-mm8dv" in namespace "e2e-limitrange-mm8dv-8787"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-mm8dv" @ 05/04/24 13:36:01.19
  May  4 13:36:01.193: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-mm8dv" in "limitrange-3736" namespace @ 05/04/24 13:36:01.193
  May  4 13:36:01.200: INFO: LimitRange "e2e-limitrange-mm8dv" has been patched
  STEP: Delete LimitRange "e2e-limitrange-mm8dv" by Collection with labelSelector: "e2e-limitrange-mm8dv=patched" @ 05/04/24 13:36:01.2
  STEP: Confirm that the limitRange "e2e-limitrange-mm8dv" has been deleted @ 05/04/24 13:36:01.212
  May  4 13:36:01.212: INFO: Requesting list of LimitRange to confirm quantity
  May  4 13:36:01.216: INFO: Found 0 LimitRange with label "e2e-limitrange-mm8dv=patched"
  May  4 13:36:01.216: INFO: LimitRange "e2e-limitrange-mm8dv" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-mm8dv" @ 05/04/24 13:36:01.216
  May  4 13:36:01.219: INFO: Found 1 limitRange
  May  4 13:36:01.219: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-3736" for this suite. @ 05/04/24 13:36:01.222
  STEP: Destroying namespace "e2e-limitrange-mm8dv-8787" for this suite. @ 05/04/24 13:36:01.227
• [0.095 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 05/04/24 13:36:01.235
  May  4 13:36:01.235: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename projected @ 05/04/24 13:36:01.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:36:01.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:36:01.254
  E0504 13:36:01.256620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating projection with secret that has name projected-secret-test-map-887c2f50-e01e-407a-b7d1-c43b0d3bd699 @ 05/04/24 13:36:01.256
  STEP: Creating a pod to test consume secrets @ 05/04/24 13:36:01.261
  E0504 13:36:02.256968      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:03.257059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:04.257184      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:05.258188      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/04/24 13:36:05.285
  May  4 13:36:05.289: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-projected-secrets-e98044ec-c4cb-432e-9b2e-40e946a31a95 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/04/24 13:36:05.295
  May  4 13:36:05.316: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8055" for this suite. @ 05/04/24 13:36:05.319
• [4.091 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 05/04/24 13:36:05.326
  May  4 13:36:05.326: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename events @ 05/04/24 13:36:05.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:36:05.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:36:05.344
  STEP: Create set of events @ 05/04/24 13:36:05.346
  STEP: get a list of Events with a label in the current namespace @ 05/04/24 13:36:05.36
  STEP: delete a list of events @ 05/04/24 13:36:05.363
  May  4 13:36:05.363: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 05/04/24 13:36:05.386
  May  4 13:36:05.390: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1058" for this suite. @ 05/04/24 13:36:05.395
• [0.074 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:641
  STEP: Creating a kubernetes client @ 05/04/24 13:36:05.401
  May  4 13:36:05.401: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename statefulset @ 05/04/24 13:36:05.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:36:05.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:36:05.421
  STEP: Creating service test in namespace statefulset-1677 @ 05/04/24 13:36:05.424
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 05/04/24 13:36:05.428
  STEP: Creating stateful set ss in namespace statefulset-1677 @ 05/04/24 13:36:05.431
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-1677 @ 05/04/24 13:36:05.439
  May  4 13:36:05.441: INFO: Found 0 stateful pods, waiting for 1
  E0504 13:36:06.258931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:07.259538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:08.259625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:09.263610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:10.264096      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:11.264375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:12.265411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:13.265646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:14.265775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:15.266241      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:36:15.444: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 05/04/24 13:36:15.444
  May  4 13:36:15.447: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=statefulset-1677 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May  4 13:36:15.545: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May  4 13:36:15.545: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May  4 13:36:15.545: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May  4 13:36:15.550: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0504 13:36:16.266931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:17.267056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:18.267298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:19.267814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:20.268044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:21.268161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:22.268347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:23.268417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:24.268528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:25.268597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:36:25.551: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  May  4 13:36:25.551: INFO: Waiting for statefulset status.readyReplicas updated to 0
  May  4 13:36:25.570: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999767s
  E0504 13:36:26.269608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:36:26.575: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.993788995s
  E0504 13:36:27.270622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:36:27.580: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.988847852s
  E0504 13:36:28.270767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:36:28.586: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.983666579s
  E0504 13:36:29.271607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:36:29.591: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.977850314s
  E0504 13:36:30.272036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:36:30.601: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.972377417s
  E0504 13:36:31.272756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:36:31.605: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.963714089s
  E0504 13:36:32.272850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:36:32.610: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.958481898s
  E0504 13:36:33.273829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:36:33.615: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.953561757s
  E0504 13:36:34.273928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:36:34.622: INFO: Verifying statefulset ss doesn't scale past 1 for another 948.39489ms
  E0504 13:36:35.274363      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-1677 @ 05/04/24 13:36:35.622
  May  4 13:36:35.627: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=statefulset-1677 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May  4 13:36:35.716: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May  4 13:36:35.716: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May  4 13:36:35.716: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May  4 13:36:35.721: INFO: Found 1 stateful pods, waiting for 3
  E0504 13:36:36.275328      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:37.275401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:38.275615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:39.276264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:40.277213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:41.277399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:42.277523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:43.277654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:44.277997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:45.278127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:36:45.721: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  May  4 13:36:45.721: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  May  4 13:36:45.721: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 05/04/24 13:36:45.721
  STEP: Scale down will halt with unhealthy stateful pod @ 05/04/24 13:36:45.721
  May  4 13:36:45.728: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=statefulset-1677 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May  4 13:36:45.831: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May  4 13:36:45.831: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May  4 13:36:45.831: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May  4 13:36:45.831: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=statefulset-1677 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May  4 13:36:45.928: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May  4 13:36:45.928: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May  4 13:36:45.928: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May  4 13:36:45.928: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=statefulset-1677 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May  4 13:36:46.037: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May  4 13:36:46.037: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May  4 13:36:46.037: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May  4 13:36:46.037: INFO: Waiting for statefulset status.readyReplicas updated to 0
  May  4 13:36:46.042: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  E0504 13:36:46.278600      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:47.279203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:48.279304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:49.279441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:50.279665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:51.279802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:52.279963      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:53.280146      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:54.280390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:36:55.280506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:36:56.046: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  May  4 13:36:56.046: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  May  4 13:36:56.046: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  May  4 13:36:56.064: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999702s
  E0504 13:36:56.281339      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:36:57.069: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.99369326s
  E0504 13:36:57.281438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:36:58.074: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.988623427s
  E0504 13:36:58.281745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:36:59.081: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.982620879s
  E0504 13:36:59.284476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:37:00.085: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.976606698s
  E0504 13:37:00.285030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:37:01.091: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.972219407s
  E0504 13:37:01.285416      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:37:02.096: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.966482846s
  E0504 13:37:02.285565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:37:03.100: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.960632133s
  E0504 13:37:03.286270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:37:04.108: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.956459804s
  E0504 13:37:04.287204      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:37:05.112: INFO: Verifying statefulset ss doesn't scale past 3 for another 949.710826ms
  E0504 13:37:05.287696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-1677 @ 05/04/24 13:37:06.113
  May  4 13:37:06.119: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=statefulset-1677 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May  4 13:37:06.216: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May  4 13:37:06.216: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May  4 13:37:06.216: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May  4 13:37:06.216: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=statefulset-1677 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0504 13:37:06.289929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:37:06.314: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May  4 13:37:06.314: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May  4 13:37:06.314: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May  4 13:37:06.314: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=statefulset-1677 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May  4 13:37:06.410: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May  4 13:37:06.410: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May  4 13:37:06.410: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May  4 13:37:06.410: INFO: Scaling statefulset ss to 0
  E0504 13:37:07.290401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:08.290762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:09.293988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:10.294132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:11.294240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:12.294363      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:13.294634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:14.294692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:15.294825      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:16.295703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 05/04/24 13:37:16.424
  May  4 13:37:16.424: INFO: Deleting all statefulset in ns statefulset-1677
  May  4 13:37:16.428: INFO: Scaling statefulset ss to 0
  May  4 13:37:16.439: INFO: Waiting for statefulset status.replicas updated to 0
  May  4 13:37:16.442: INFO: Deleting statefulset ss
  May  4 13:37:16.458: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1677" for this suite. @ 05/04/24 13:37:16.464
• [71.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:707
  STEP: Creating a kubernetes client @ 05/04/24 13:37:16.471
  May  4 13:37:16.471: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename sched-pred @ 05/04/24 13:37:16.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:37:16.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:37:16.487
  May  4 13:37:16.490: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  May  4 13:37:16.498: INFO: Waiting for terminating namespaces to be deleted...
  May  4 13:37:16.503: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-18-228 before test
  May  4 13:37:16.509: INFO: nginx-ingress-controller-kubernetes-worker-w484v from ingress-nginx-kubernetes-worker started at 2024-05-04 13:22:51 +0000 UTC (1 container statuses recorded)
  May  4 13:37:16.509: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  May  4 13:37:16.509: INFO: calico-node-rvkmx from kube-system started at 2024-05-04 12:12:09 +0000 UTC (1 container statuses recorded)
  May  4 13:37:16.509: INFO: 	Container calico-node ready: true, restart count 0
  May  4 13:37:16.509: INFO: sonobuoy from sonobuoy started at 2024-05-04 12:12:07 +0000 UTC (1 container statuses recorded)
  May  4 13:37:16.509: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  May  4 13:37:16.509: INFO: sonobuoy-systemd-logs-daemon-set-12e57fb52bd44eb7-llzs6 from sonobuoy started at 2024-05-04 12:12:09 +0000 UTC (2 container statuses recorded)
  May  4 13:37:16.509: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May  4 13:37:16.509: INFO: 	Container systemd-logs ready: true, restart count 0
  May  4 13:37:16.509: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-33-38 before test
  May  4 13:37:16.514: INFO: nginx-ingress-controller-kubernetes-worker-6kjkz from ingress-nginx-kubernetes-worker started at 2024-05-04 11:56:20 +0000 UTC (1 container statuses recorded)
  May  4 13:37:16.514: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  May  4 13:37:16.514: INFO: calico-node-zvlhw from kube-system started at 2024-05-04 12:11:38 +0000 UTC (1 container statuses recorded)
  May  4 13:37:16.514: INFO: 	Container calico-node ready: true, restart count 0
  May  4 13:37:16.514: INFO: coredns-bddfd76d7-66zt7 from kube-system started at 2024-05-04 11:56:59 +0000 UTC (1 container statuses recorded)
  May  4 13:37:16.514: INFO: 	Container coredns ready: true, restart count 0
  May  4 13:37:16.514: INFO: kube-state-metrics-6f48cdd76-5zgtw from kube-system started at 2024-05-04 11:56:20 +0000 UTC (1 container statuses recorded)
  May  4 13:37:16.514: INFO: 	Container kube-state-metrics ready: true, restart count 4
  May  4 13:37:16.514: INFO: metrics-server-v0.6.3-69d7fbfdf8-hdjfr from kube-system started at 2024-05-04 11:56:59 +0000 UTC (2 container statuses recorded)
  May  4 13:37:16.514: INFO: 	Container metrics-server ready: true, restart count 6
  May  4 13:37:16.514: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  May  4 13:37:16.514: INFO: dashboard-metrics-scraper-5dd7cb5fc-kfwtl from kubernetes-dashboard started at 2024-05-04 11:56:59 +0000 UTC (1 container statuses recorded)
  May  4 13:37:16.514: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  May  4 13:37:16.514: INFO: kubernetes-dashboard-7b899cb9d9-7nz54 from kubernetes-dashboard started at 2024-05-04 11:56:59 +0000 UTC (1 container statuses recorded)
  May  4 13:37:16.514: INFO: 	Container kubernetes-dashboard ready: true, restart count 5
  May  4 13:37:16.514: INFO: sonobuoy-systemd-logs-daemon-set-12e57fb52bd44eb7-6g56f from sonobuoy started at 2024-05-04 12:12:09 +0000 UTC (2 container statuses recorded)
  May  4 13:37:16.514: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May  4 13:37:16.514: INFO: 	Container systemd-logs ready: true, restart count 0
  May  4 13:37:16.514: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-72-79 before test
  May  4 13:37:16.518: INFO: nginx-ingress-controller-kubernetes-worker-b5nwc from ingress-nginx-kubernetes-worker started at 2024-05-04 12:01:33 +0000 UTC (1 container statuses recorded)
  May  4 13:37:16.518: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 4
  May  4 13:37:16.518: INFO: calico-node-gt7z9 from kube-system started at 2024-05-04 12:11:48 +0000 UTC (1 container statuses recorded)
  May  4 13:37:16.518: INFO: 	Container calico-node ready: true, restart count 0
  May  4 13:37:16.518: INFO: sonobuoy-e2e-job-8f0e1aa0da094028 from sonobuoy started at 2024-05-04 12:12:09 +0000 UTC (2 container statuses recorded)
  May  4 13:37:16.518: INFO: 	Container e2e ready: true, restart count 0
  May  4 13:37:16.518: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May  4 13:37:16.518: INFO: sonobuoy-systemd-logs-daemon-set-12e57fb52bd44eb7-wfcjh from sonobuoy started at 2024-05-04 12:12:09 +0000 UTC (2 container statuses recorded)
  May  4 13:37:16.518: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  May  4 13:37:16.518: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/04/24 13:37:16.518
  E0504 13:37:17.295921      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:18.296183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/04/24 13:37:18.543
  STEP: Trying to apply a random label on the found node. @ 05/04/24 13:37:18.561
  STEP: verifying the node has the label kubernetes.io/e2e-acca57b7-3bce-47c6-abc6-c5ffcc345d8a 95 @ 05/04/24 13:37:18.57
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 05/04/24 13:37:18.573
  E0504 13:37:19.297946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:20.297991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.18.228 on the node which pod4 resides and expect not scheduled @ 05/04/24 13:37:20.592
  E0504 13:37:21.298982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:22.299072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:23.299603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:24.299713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:25.299933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:26.300220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:27.300348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:28.300451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:29.302088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:30.302219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:31.302388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:32.302502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:33.303497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:34.303692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:35.303807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:36.303896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:37.304362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:38.304487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:39.310327      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:40.310383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:41.310542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:42.311148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:43.311420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:44.311640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:45.311759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:46.311845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:47.312396      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:48.312519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:49.312679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:50.312870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:51.313420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:52.313687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:53.314274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:54.314362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:55.314880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:56.315067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:57.315919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:58.316052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:37:59.316887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:00.317145      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:01.317243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:02.317338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:03.317719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:04.317803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:05.318039      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:06.318160      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:07.318937      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:08.319030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:09.319911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:10.320134      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:11.320257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:12.320344      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:13.321230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:14.321462      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:15.322048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:16.322158      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:17.322330      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:18.322644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:19.322780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:20.322890      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:21.323901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:22.324055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:23.324151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:24.324323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:25.325233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:26.325337      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:27.325402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:28.326029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:29.326812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:30.326891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:31.327008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:32.327301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:33.327516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:34.327959      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:35.328237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:36.328334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:37.329390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:38.329628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:39.329754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:40.329848      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:41.330744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:42.331499      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:43.332532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:44.332640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:45.333405      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:46.333664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:47.334422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:48.334550      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:49.335601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:50.335718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:51.335782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:52.336817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:53.337453      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:54.338110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:55.339091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:56.339176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:57.340060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:58.340284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:38:59.341207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:00.341445      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:01.342496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:02.342593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:03.342781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:04.342885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:05.343707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:06.343814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:07.344605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:08.344711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:09.344799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:10.345223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:11.346285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:12.346523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:13.347250      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:14.348268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:15.348328      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:16.348422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:17.348768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:18.348866      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:19.349065      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:20.349156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:21.349257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:22.349438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:23.349538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:24.350003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:25.350099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:26.350997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:27.351226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:28.351453      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:29.351578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:30.351854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:31.351928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:32.352331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:33.353009      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:34.353105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:35.354014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:36.354382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:37.354584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:38.354814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:39.355638      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:40.355735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:41.356702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:42.356830      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:43.357413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:44.358103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:45.358441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:46.359202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:47.359603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:48.359691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:49.360387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:50.360784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:51.361521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:52.361725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:53.362360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:54.362558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:55.363081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:56.363181      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:57.364153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:58.364331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:39:59.364382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:00.365433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:01.366359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:02.366469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:03.366805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:04.367058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:05.367851      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:06.368911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:07.369004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:08.369429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:09.369537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:10.369622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:11.370645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:12.370905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:13.371921      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:14.372843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:15.373688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:16.373787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:17.373898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:18.374093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:19.375103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:20.375193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:21.376047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:22.376343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:23.377110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:24.377251      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:25.377276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:26.377461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:27.377749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:28.378644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:29.379508      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:30.379839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:31.379866      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:32.380287      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:33.380785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:34.381387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:35.381864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:36.382105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:37.382301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:38.382512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:39.383112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:40.383208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:41.383819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:42.384077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:43.385097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:44.385181      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:45.385718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:46.385887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:47.386713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:48.386810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:49.387712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:50.387955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:51.388315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:52.388340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:53.389391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:54.389586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:55.390427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:56.390630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:57.391642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:58.391754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:40:59.391844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:00.391970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:01.392624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:02.392721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:03.393376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:04.393472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:05.394218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:06.394320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:07.394619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:08.394720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:09.395286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:10.395418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:11.396368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:12.396574      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:13.396677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:14.396774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:15.396841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:16.396893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:17.397140      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:18.397239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:19.398125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:20.398216      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:21.398743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:22.398812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:23.399854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:24.399942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:25.400311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:26.400399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:27.400823      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:28.401649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:29.402188      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:30.402295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:31.402933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:32.403314      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:33.404084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:34.404129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:35.404604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:36.404703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:37.405497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:38.405596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:39.406582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:40.406940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:41.407928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:42.408004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:43.408058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:44.408618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:45.409394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:46.409494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:47.410173      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:48.410268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:49.411102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:50.411549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:51.411295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:52.411493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:53.412012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:54.412295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:55.412444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:56.413390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:57.413702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:58.413798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:41:59.413877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:00.414633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:01.415374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:02.415504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:03.416323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:04.416419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:05.417248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:06.417349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:07.417905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:08.418131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:09.418599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:10.419520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:11.420321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:12.420400      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:13.420979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:14.421070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:15.422111      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:16.422200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:17.422462      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:18.422631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:19.423315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:20.423630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-acca57b7-3bce-47c6-abc6-c5ffcc345d8a off the node ip-172-31-18-228 @ 05/04/24 13:42:20.6
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-acca57b7-3bce-47c6-abc6-c5ffcc345d8a @ 05/04/24 13:42:20.616
  May  4 13:42:20.623: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3231" for this suite. @ 05/04/24 13:42:20.627
• [304.165 seconds]
------------------------------
SSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 05/04/24 13:42:20.636
  May  4 13:42:20.636: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename pv @ 05/04/24 13:42:20.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:42:20.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:42:20.658
  STEP: Creating initial PV and PVC @ 05/04/24 13:42:20.66
  May  4 13:42:20.660: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-3076" @ 05/04/24 13:42:20.683
  STEP: Listing PVCs in namespace "pv-3076" @ 05/04/24 13:42:20.688
  STEP: Patching the PV "pv-3076-l6bvt" @ 05/04/24 13:42:20.692
  STEP: Patching the PVC "pvc-7zljl" @ 05/04/24 13:42:20.702
  STEP: Getting PV "pv-3076-l6bvt" @ 05/04/24 13:42:20.709
  STEP: Getting PVC "pvc-7zljl" @ 05/04/24 13:42:20.711
  STEP: Deleting PVC "pvc-7zljl" @ 05/04/24 13:42:20.716
  STEP: Confirm deletion of PVC "pvc-7zljl" @ 05/04/24 13:42:20.726
  E0504 13:42:21.424448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:22.424512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-3076-l6bvt" @ 05/04/24 13:42:22.733
  STEP: Confirm deletion of PV "pv-3076-l6bvt" @ 05/04/24 13:42:22.74
  E0504 13:42:23.424690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:24.424764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 05/04/24 13:42:24.751
  May  4 13:42:24.751: INFO: Creating a PV followed by a PVC
  STEP: Updating the PV "pv-3076-xmqfr" @ 05/04/24 13:42:24.763
  STEP: Updating the PVC "pvc-pzt89" @ 05/04/24 13:42:24.794
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-pzt89=updated" @ 05/04/24 13:42:24.803
  STEP: Deleting PVC "pvc-pzt89" via DeleteCollection @ 05/04/24 13:42:24.805
  STEP: Confirm deletion of PVC "pvc-pzt89" @ 05/04/24 13:42:24.821
  E0504 13:42:25.424858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:26.424958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-3076-xmqfr" via DeleteCollection @ 05/04/24 13:42:26.832
  STEP: Confirm deletion of PV "pv-3076-xmqfr" @ 05/04/24 13:42:26.845
  E0504 13:42:27.425065      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:28.425516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:42:28.853: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  May  4 13:42:28.853: INFO: Deleting PersistentVolumeClaim "pvc-pzt89"
  May  4 13:42:28.857: INFO: Deleting PersistentVolume "pv-3076-xmqfr"
  May  4 13:42:28.861: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-3076" for this suite. @ 05/04/24 13:42:28.865
• [8.237 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 05/04/24 13:42:28.873
  May  4 13:42:28.873: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename runtimeclass @ 05/04/24 13:42:28.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:42:28.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:42:28.891
  STEP: Deleting RuntimeClass runtimeclass-3892-delete-me @ 05/04/24 13:42:28.897
  STEP: Waiting for the RuntimeClass to disappear @ 05/04/24 13:42:28.903
  May  4 13:42:28.914: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3892" for this suite. @ 05/04/24 13:42:28.917
• [0.054 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 05/04/24 13:42:28.927
  May  4 13:42:28.927: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename emptydir @ 05/04/24 13:42:28.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:42:28.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:42:28.942
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 05/04/24 13:42:28.945
  E0504 13:42:29.426276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:30.426696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/04/24 13:42:30.964
  May  4 13:42:30.967: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-3ed2257f-254f-42e4-a38e-7b4d3f870d38 container test-container: <nil>
  STEP: delete the pod @ 05/04/24 13:42:30.982
  May  4 13:42:30.999: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8285" for this suite. @ 05/04/24 13:42:31.002
• [2.082 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 05/04/24 13:42:31.009
  May  4 13:42:31.009: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename services @ 05/04/24 13:42:31.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:42:31.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:42:31.028
  STEP: creating service endpoint-test2 in namespace services-2627 @ 05/04/24 13:42:31.031
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2627 to expose endpoints map[] @ 05/04/24 13:42:31.049
  May  4 13:42:31.061: INFO: successfully validated that service endpoint-test2 in namespace services-2627 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-2627 @ 05/04/24 13:42:31.061
  E0504 13:42:31.426915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:32.427161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2627 to expose endpoints map[pod1:[80]] @ 05/04/24 13:42:33.09
  May  4 13:42:33.102: INFO: successfully validated that service endpoint-test2 in namespace services-2627 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 05/04/24 13:42:33.102
  May  4 13:42:33.102: INFO: Creating new exec pod
  E0504 13:42:33.427612      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:34.427718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:35.428569      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:42:36.122: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-2627 exec execpod5dvtq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  May  4 13:42:36.222: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  May  4 13:42:36.222: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May  4 13:42:36.222: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-2627 exec execpod5dvtq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.201 80'
  May  4 13:42:36.311: INFO: stderr: "+ nc -v -t -w 2 10.152.183.201 80\n+ echo hostName\nConnection to 10.152.183.201 80 port [tcp/http] succeeded!\n"
  May  4 13:42:36.311: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-2627 @ 05/04/24 13:42:36.311
  E0504 13:42:36.429167      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:37.429414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2627 to expose endpoints map[pod1:[80] pod2:[80]] @ 05/04/24 13:42:38.331
  May  4 13:42:38.345: INFO: successfully validated that service endpoint-test2 in namespace services-2627 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 05/04/24 13:42:38.345
  E0504 13:42:38.429875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:42:39.345: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-2627 exec execpod5dvtq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0504 13:42:39.430502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:42:39.448: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  May  4 13:42:39.448: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May  4 13:42:39.448: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-2627 exec execpod5dvtq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.201 80'
  May  4 13:42:39.535: INFO: stderr: "+ nc -v -t -w 2 10.152.183.201 80\nConnection to 10.152.183.201 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  May  4 13:42:39.535: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-2627 @ 05/04/24 13:42:39.535
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2627 to expose endpoints map[pod2:[80]] @ 05/04/24 13:42:39.558
  May  4 13:42:39.568: INFO: successfully validated that service endpoint-test2 in namespace services-2627 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 05/04/24 13:42:39.568
  E0504 13:42:40.431230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:42:40.569: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-2627 exec execpod5dvtq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  May  4 13:42:40.664: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  May  4 13:42:40.664: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May  4 13:42:40.664: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-2627 exec execpod5dvtq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.201 80'
  May  4 13:42:40.759: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.201 80\nConnection to 10.152.183.201 80 port [tcp/http] succeeded!\n"
  May  4 13:42:40.759: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-2627 @ 05/04/24 13:42:40.759
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2627 to expose endpoints map[] @ 05/04/24 13:42:40.776
  May  4 13:42:40.790: INFO: successfully validated that service endpoint-test2 in namespace services-2627 exposes endpoints map[]
  May  4 13:42:40.808: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2627" for this suite. @ 05/04/24 13:42:40.813
• [9.810 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 05/04/24 13:42:40.819
  May  4 13:42:40.819: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename pv @ 05/04/24 13:42:40.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:42:40.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:42:40.838
  STEP: Creating initial PV and PVC @ 05/04/24 13:42:40.841
  May  4 13:42:40.841: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-1853" @ 05/04/24 13:42:40.854
  STEP: Listing PVCs in namespace "pv-1853" @ 05/04/24 13:42:40.861
  STEP: Reading "pvc-xhfjk" Status @ 05/04/24 13:42:40.867
  STEP: Reading "pv-1853-6lpz4" Status @ 05/04/24 13:42:40.872
  STEP: Patching "pvc-xhfjk" Status @ 05/04/24 13:42:40.88
  STEP: Patching "pv-1853-6lpz4" Status @ 05/04/24 13:42:40.887
  STEP: Updating "pvc-xhfjk" Status @ 05/04/24 13:42:40.891
  STEP: Updating "pv-1853-6lpz4" Status @ 05/04/24 13:42:40.902
  May  4 13:42:40.915: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  May  4 13:42:40.915: INFO: Deleting PersistentVolumeClaim "pvc-xhfjk"
  May  4 13:42:40.924: INFO: Deleting PersistentVolume "pv-1853-6lpz4"
  May  4 13:42:40.940: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-1853" for this suite. @ 05/04/24 13:42:40.948
• [0.136 seconds]
------------------------------
SSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 05/04/24 13:42:40.955
  May  4 13:42:40.955: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename disruption @ 05/04/24 13:42:40.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:42:40.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:42:40.978
  STEP: Creating a kubernetes client @ 05/04/24 13:42:40.981
  May  4 13:42:40.981: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename disruption-2 @ 05/04/24 13:42:40.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:42:40.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:42:40.999
  STEP: Waiting for the pdb to be processed @ 05/04/24 13:42:41.005
  E0504 13:42:41.431534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:42.431669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 05/04/24 13:42:43.015
  STEP: Waiting for the pdb to be processed @ 05/04/24 13:42:43.025
  E0504 13:42:43.431880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:44.431886      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 05/04/24 13:42:45.032
  STEP: listing a collection of PDBs in namespace disruption-3024 @ 05/04/24 13:42:45.036
  STEP: deleting a collection of PDBs @ 05/04/24 13:42:45.039
  STEP: Waiting for the PDB collection to be deleted @ 05/04/24 13:42:45.054
  May  4 13:42:45.057: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-4785" for this suite. @ 05/04/24 13:42:45.06
  May  4 13:42:45.068: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3024" for this suite. @ 05/04/24 13:42:45.072
• [4.124 seconds]
------------------------------
S
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 05/04/24 13:42:45.079
  May  4 13:42:45.079: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename kubelet-test @ 05/04/24 13:42:45.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:42:45.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:42:45.099
  E0504 13:42:45.432154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:46.432449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:42:47.130: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9105" for this suite. @ 05/04/24 13:42:47.135
• [2.064 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 05/04/24 13:42:47.144
  May  4 13:42:47.144: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename prestop @ 05/04/24 13:42:47.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:42:47.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:42:47.16
  STEP: Creating server pod server in namespace prestop-6188 @ 05/04/24 13:42:47.162
  STEP: Waiting for pods to come up. @ 05/04/24 13:42:47.172
  E0504 13:42:47.433439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:48.433738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-6188 @ 05/04/24 13:42:49.185
  E0504 13:42:49.434404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:50.434513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 05/04/24 13:42:51.2
  E0504 13:42:51.434579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:52.434738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:53.435045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:54.435249      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:55.435694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:42:56.216: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 05/04/24 13:42:56.216
  May  4 13:42:56.232: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-6188" for this suite. @ 05/04/24 13:42:56.237
• [9.102 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1838
  STEP: Creating a kubernetes client @ 05/04/24 13:42:56.246
  May  4 13:42:56.246: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename kubectl @ 05/04/24 13:42:56.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:42:56.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:42:56.265
  STEP: starting the proxy server @ 05/04/24 13:42:56.268
  May  4 13:42:56.268: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-616 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 05/04/24 13:42:56.319
  May  4 13:42:56.325: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-616" for this suite. @ 05/04/24 13:42:56.331
• [0.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3338
  STEP: Creating a kubernetes client @ 05/04/24 13:42:56.339
  May  4 13:42:56.339: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename services @ 05/04/24 13:42:56.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:42:56.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:42:56.358
  STEP: creating a Service @ 05/04/24 13:42:56.371
  STEP: watching for the Service to be added @ 05/04/24 13:42:56.403
  May  4 13:42:56.410: INFO: Found Service test-service-hfbn5 in namespace services-86 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 30647}]
  May  4 13:42:56.410: INFO: Service test-service-hfbn5 created
  STEP: Getting /status @ 05/04/24 13:42:56.411
  May  4 13:42:56.416: INFO: Service test-service-hfbn5 has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 05/04/24 13:42:56.416
  STEP: watching for the Service to be patched @ 05/04/24 13:42:56.426
  May  4 13:42:56.430: INFO: observed Service test-service-hfbn5 in namespace services-86 with annotations: map[] & LoadBalancer: {[]}
  May  4 13:42:56.430: INFO: Found Service test-service-hfbn5 in namespace services-86 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  <nil> []}]}
  May  4 13:42:56.430: INFO: Service test-service-hfbn5 has service status patched
  STEP: updating the ServiceStatus @ 05/04/24 13:42:56.43
  E0504 13:42:56.437663      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:42:56.444: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 05/04/24 13:42:56.444
  May  4 13:42:56.449: INFO: Observed Service test-service-hfbn5 in namespace services-86 with annotations: map[] & Conditions: {[]}
  May  4 13:42:56.449: INFO: Observed event: &Service{ObjectMeta:{test-service-hfbn5  services-86  2dd84d93-ebce-4bdc-acaf-c6de7293146b 42561 0 2024-05-04 13:42:56 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-05-04 13:42:56 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-05-04 13:42:56 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:30647,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.152.183.172,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.152.183.172],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:nil,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  May  4 13:42:56.449: INFO: Found Service test-service-hfbn5 in namespace services-86 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  May  4 13:42:56.449: INFO: Service test-service-hfbn5 has service status updated
  STEP: patching the service @ 05/04/24 13:42:56.449
  STEP: watching for the Service to be patched @ 05/04/24 13:42:56.463
  May  4 13:42:56.465: INFO: observed Service test-service-hfbn5 in namespace services-86 with labels: map[test-service-static:true]
  May  4 13:42:56.465: INFO: observed Service test-service-hfbn5 in namespace services-86 with labels: map[test-service-static:true]
  May  4 13:42:56.465: INFO: observed Service test-service-hfbn5 in namespace services-86 with labels: map[test-service-static:true]
  May  4 13:42:56.465: INFO: Found Service test-service-hfbn5 in namespace services-86 with labels: map[test-service:patched test-service-static:true]
  May  4 13:42:56.465: INFO: Service test-service-hfbn5 patched
  STEP: deleting the service @ 05/04/24 13:42:56.466
  STEP: watching for the Service to be deleted @ 05/04/24 13:42:56.491
  May  4 13:42:56.492: INFO: Observed event: ADDED
  May  4 13:42:56.492: INFO: Observed event: MODIFIED
  May  4 13:42:56.492: INFO: Observed event: MODIFIED
  May  4 13:42:56.492: INFO: Observed event: MODIFIED
  May  4 13:42:56.492: INFO: Found Service test-service-hfbn5 in namespace services-86 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  May  4 13:42:56.492: INFO: Service test-service-hfbn5 deleted
  May  4 13:42:56.493: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-86" for this suite. @ 05/04/24 13:42:56.496
• [0.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3649
  STEP: Creating a kubernetes client @ 05/04/24 13:42:56.504
  May  4 13:42:56.504: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename services @ 05/04/24 13:42:56.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:42:56.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:42:56.52
  STEP: creating service multiprotocol-test in namespace services-4801 @ 05/04/24 13:42:56.522
  STEP: creating pod pod1 in namespace services-4801 @ 05/04/24 13:42:56.532
  STEP: Creating pod pod1 in namespace services-4801 @ 05/04/24 13:42:56.532
  E0504 13:42:57.437277      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:42:58.437353      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-4801 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 05/04/24 13:42:58.558
  May  4 13:42:58.569: INFO: successfully validated that service multiprotocol-test in namespace services-4801 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 05/04/24 13:42:58.569
  May  4 13:42:58.569: INFO: Creating new exec pod
  E0504 13:42:59.438316      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:43:00.438442      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:43:00.584: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-4801 exec execpod6hfwx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.125 80'
  May  4 13:43:00.687: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.125 80\nConnection to 10.152.183.125 80 port [tcp/http] succeeded!\n"
  May  4 13:43:00.687: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May  4 13:43:00.687: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-4801 exec execpod6hfwx -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.125 80'
  E0504 13:43:01.438845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:43:02.439033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:43:03.439687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:43:04.439855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:43:04.781: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.125 80\nConnection to 10.152.183.125 80 port [udp/*] succeeded!\n"
  May  4 13:43:04.781: INFO: stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 05/04/24 13:43:04.781
  May  4 13:43:04.792: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-4801 exec execpod6hfwx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.125 80'
  May  4 13:43:04.898: INFO: stderr: "+ nc -v -t -w 2 10.152.183.125 80\n+ echo hostName\nConnection to 10.152.183.125 80 port [tcp/http] succeeded!\n"
  May  4 13:43:04.898: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  May  4 13:43:04.898: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-4801 exec execpod6hfwx -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.125 80'
  E0504 13:43:05.439958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:43:06.440031      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:43:07.440229      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:43:08.440357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:43:08.992: INFO: stderr: "+ + ncecho -v hostName -u\n -w 2 10.152.183.125 80\nConnection to 10.152.183.125 80 port [udp/*] succeeded!\n"
  May  4 13:43:08.992: INFO: stdout: ""
  May  4 13:43:08.992: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-4801 exec execpod6hfwx -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.125 80'
  E0504 13:43:09.440549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:43:10.440628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:43:11.440753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:43:12.441414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:43:13.088: INFO: stderr: "+ nc -v -u -w 2 10.152.183.125 80\n+ echo hostName\nConnection to 10.152.183.125 80 port [udp/*] succeeded!\n"
  May  4 13:43:13.088: INFO: stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 05/04/24 13:43:13.088
  May  4 13:43:13.100: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-4801 exec execpod6hfwx -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.125 80'
  E0504 13:43:13.442036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:43:14.442266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:43:15.442381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:43:16.443413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:43:17.201: INFO: stderr: "+ nc -v -u -w 2 10.152.183.125 80\n+ echo hostName\nConnection to 10.152.183.125 80 port [udp/*] succeeded!\n"
  May  4 13:43:17.201: INFO: stdout: "pod1"
  May  4 13:43:17.201: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-4801 exec execpod6hfwx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.125 80'
  E0504 13:43:17.444253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:43:18.444333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:43:19.302: INFO: rc: 1
  May  4 13:43:19.302: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-4801 exec execpod6hfwx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.125 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.152.183.125 80
  + echo hostName
  nc: connect to 10.152.183.125 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  May  4 13:43:19.302: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-4801 exec execpod6hfwx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.125 80'
  E0504 13:43:19.444460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:43:20.445475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:43:21.420: INFO: rc: 1
  May  4 13:43:21.420: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-4801 exec execpod6hfwx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.125 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.152.183.125 80
  + echo hostName
  nc: connect to 10.152.183.125 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  May  4 13:43:21.420: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-4801 exec execpod6hfwx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.125 80'
  E0504 13:43:21.445845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:43:22.445933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:43:23.447018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:43:23.520: INFO: rc: 1
  May  4 13:43:23.520: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-4801 exec execpod6hfwx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.125 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.152.183.125 80
  + echo hostName
  nc: connect to 10.152.183.125 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  May  4 13:43:23.520: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4801" for this suite. @ 05/04/24 13:43:23.526
• [27.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 05/04/24 13:43:23.535
  May  4 13:43:23.535: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename downward-api @ 05/04/24 13:43:23.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:43:23.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:43:23.554
  STEP: Creating a pod to test downward API volume plugin @ 05/04/24 13:43:23.557
  E0504 13:43:24.447110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:43:25.447528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:43:26.447655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:43:27.447875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/04/24 13:43:27.582
  May  4 13:43:27.587: INFO: Trying to get logs from node ip-172-31-18-228 pod downwardapi-volume-fcb9188d-fb7d-4fc5-a99a-a0ec18548d48 container client-container: <nil>
  STEP: delete the pod @ 05/04/24 13:43:27.593
  May  4 13:43:27.607: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8413" for this suite. @ 05/04/24 13:43:27.611
• [4.084 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 05/04/24 13:43:27.619
  May  4 13:43:27.619: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename projected @ 05/04/24 13:43:27.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:43:27.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:43:27.635
  STEP: Creating configMap with name projected-configmap-test-volume-map-2c0fe46b-0bfe-4a5f-8596-041813033551 @ 05/04/24 13:43:27.638
  STEP: Creating a pod to test consume configMaps @ 05/04/24 13:43:27.643
  E0504 13:43:28.448351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:43:29.449423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:43:30.449669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:43:31.449747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/04/24 13:43:31.666
  May  4 13:43:31.670: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-projected-configmaps-2a3fcabe-b497-4127-b7a3-b966111bf228 container agnhost-container: <nil>
  STEP: delete the pod @ 05/04/24 13:43:31.678
  May  4 13:43:31.697: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8582" for this suite. @ 05/04/24 13:43:31.701
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 05/04/24 13:43:31.71
  May  4 13:43:31.710: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename kubelet-test @ 05/04/24 13:43:31.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:43:31.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:43:31.728
  E0504 13:43:32.450744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:43:33.450926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:43:33.760: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5741" for this suite. @ 05/04/24 13:43:33.763
• [2.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 05/04/24 13:43:33.771
  May  4 13:43:33.771: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename kubelet-test @ 05/04/24 13:43:33.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:43:33.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:43:33.789
  STEP: Waiting for pod completion @ 05/04/24 13:43:33.801
  E0504 13:43:34.451094      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:43:35.451318      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:43:36.451433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:43:37.451572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:43:37.832: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6407" for this suite. @ 05/04/24 13:43:37.835
• [4.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 05/04/24 13:43:37.843
  May  4 13:43:37.843: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename csi-storageclass @ 05/04/24 13:43:37.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:43:37.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:43:37.865
  STEP: Creating a StorageClass @ 05/04/24 13:43:37.867
  STEP: Get StorageClass "e2e-zfzlj" @ 05/04/24 13:43:37.873
  STEP: Patching the StorageClass "e2e-zfzlj" @ 05/04/24 13:43:37.876
  STEP: Delete StorageClass "e2e-zfzlj" @ 05/04/24 13:43:37.884
  STEP: Confirm deletion of StorageClass "e2e-zfzlj" @ 05/04/24 13:43:37.889
  STEP: Create a replacement StorageClass @ 05/04/24 13:43:37.893
  STEP: Updating StorageClass "e2e-v2-pxbtz" @ 05/04/24 13:43:37.898
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-pxbtz=updated" @ 05/04/24 13:43:37.905
  STEP: Deleting StorageClass "e2e-v2-pxbtz" via DeleteCollection @ 05/04/24 13:43:37.908
  STEP: Confirm deletion of StorageClass "e2e-v2-pxbtz" @ 05/04/24 13:43:37.916
  May  4 13:43:37.919: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-2100" for this suite. @ 05/04/24 13:43:37.923
• [0.086 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 05/04/24 13:43:37.93
  May  4 13:43:37.930: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename pods @ 05/04/24 13:43:37.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:43:37.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:43:37.947
  STEP: Create a pod @ 05/04/24 13:43:37.949
  E0504 13:43:38.452489      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:43:39.453429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 05/04/24 13:43:39.968
  May  4 13:43:39.977: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  May  4 13:43:39.977: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2567" for this suite. @ 05/04/24 13:43:39.981
• [2.057 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 05/04/24 13:43:39.987
  May  4 13:43:39.987: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename crd-webhook @ 05/04/24 13:43:39.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:43:40.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:43:40.004
  STEP: Setting up server cert @ 05/04/24 13:43:40.007
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/04/24 13:43:40.102
  STEP: Deploying the custom resource conversion webhook pod @ 05/04/24 13:43:40.111
  STEP: Wait for the deployment to be ready @ 05/04/24 13:43:40.126
  May  4 13:43:40.140: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0504 13:43:40.454231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:43:41.454543      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/04/24 13:43:42.152
  STEP: Verifying the service has paired with the endpoint @ 05/04/24 13:43:42.161
  E0504 13:43:42.454811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:43:43.161: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  May  4 13:43:43.169: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  E0504 13:43:43.455537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:43:44.456041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:43:45.456880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 05/04/24 13:43:45.722
  STEP: v2 custom resource should be converted @ 05/04/24 13:43:45.727
  May  4 13:43:46.290: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-4628" for this suite. @ 05/04/24 13:43:46.293
• [6.314 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 05/04/24 13:43:46.302
  May  4 13:43:46.302: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename field-validation @ 05/04/24 13:43:46.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:43:46.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:43:46.32
  STEP: apply creating a deployment @ 05/04/24 13:43:46.323
  May  4 13:43:46.337: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9387" for this suite. @ 05/04/24 13:43:46.341
• [0.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 05/04/24 13:43:46.349
  May  4 13:43:46.350: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename gc @ 05/04/24 13:43:46.35
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:43:46.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:43:46.366
  STEP: create the rc @ 05/04/24 13:43:46.372
  W0504 13:43:46.377975      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0504 13:43:46.457268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:43:47.458550      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:43:48.458852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:43:49.459904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:43:50.460379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:43:51.461063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 05/04/24 13:43:52.382
  STEP: wait for the rc to be deleted @ 05/04/24 13:43:52.399
  E0504 13:43:52.464209      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:43:53.414: INFO: 80 pods remaining
  May  4 13:43:53.414: INFO: 80 pods has nil DeletionTimestamp
  May  4 13:43:53.414: INFO: 
  E0504 13:43:53.464370      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:43:54.414: INFO: 70 pods remaining
  May  4 13:43:54.415: INFO: 70 pods has nil DeletionTimestamp
  May  4 13:43:54.415: INFO: 
  E0504 13:43:54.465438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:43:55.419: INFO: 60 pods remaining
  May  4 13:43:55.419: INFO: 60 pods has nil DeletionTimestamp
  May  4 13:43:55.419: INFO: 
  E0504 13:43:55.467382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:43:56.409: INFO: 40 pods remaining
  May  4 13:43:56.409: INFO: 40 pods has nil DeletionTimestamp
  May  4 13:43:56.409: INFO: 
  E0504 13:43:56.467876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:43:57.415: INFO: 31 pods remaining
  May  4 13:43:57.415: INFO: 30 pods has nil DeletionTimestamp
  May  4 13:43:57.415: INFO: 
  E0504 13:43:57.468310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:43:58.408: INFO: 20 pods remaining
  May  4 13:43:58.408: INFO: 20 pods has nil DeletionTimestamp
  May  4 13:43:58.408: INFO: 
  E0504 13:43:58.468579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/04/24 13:43:59.406
  W0504 13:43:59.411835      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  May  4 13:43:59.411: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  May  4 13:43:59.411: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7533" for this suite. @ 05/04/24 13:43:59.416
• [13.074 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 05/04/24 13:43:59.423
  May  4 13:43:59.423: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename container-probe @ 05/04/24 13:43:59.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:43:59.439
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:43:59.443
  STEP: Creating pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974 @ 05/04/24 13:43:59.446
  E0504 13:43:59.469529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:44:00.469649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:44:01.469810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/04/24 13:44:01.469
  May  4 13:44:01.473: INFO: Initial restart count of pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd is 0
  May  4 13:44:01.476: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:44:02.469939      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:44:03.470165      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:44:03.480: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:44:04.471078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:44:05.471170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:44:05.485: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:44:06.472271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:44:07.472369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:44:07.490: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:44:08.472482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:44:09.472634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:44:09.495: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:44:10.473426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:44:11.473718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:44:11.500: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:44:12.473891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:44:13.473957      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:44:13.505: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:44:14.474042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:44:15.474138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:44:15.510: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:44:16.474511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:44:17.474743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:44:17.514: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:44:18.474849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:44:19.474936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:44:19.519: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:44:20.475187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:44:21.475299      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:44:21.524: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:44:22.476154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:44:23.476393      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:44:23.529: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:44:24.477481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:44:25.477573      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:44:25.535: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:44:26.478584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:44:27.479192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:44:27.541: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:44:28.479325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:44:29.479420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:44:29.545: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:44:30.479804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:44:31.479905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:44:31.550: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:44:32.480059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:44:33.480228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:44:33.555: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:44:34.480366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:44:35.480568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:44:35.561: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:44:36.481059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:44:37.481162      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:44:37.565: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:44:38.481329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:44:39.481435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:44:39.570: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:44:40.481549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:44:41.481883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:44:41.575: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:44:42.482419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:44:43.482491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:44:43.580: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:44:44.482884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:44:45.483100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:44:45.585: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:44:46.483385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:44:47.483472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:44:47.591: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:44:48.483941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:44:49.484023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:44:49.595: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:44:50.484132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:44:51.484451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:44:51.600: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:44:52.485459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:44:53.485572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:44:53.607: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:44:54.485651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:44:55.485750      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:44:55.612: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:44:56.485976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:44:57.486078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:44:57.616: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:44:58.486232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:44:59.486579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:44:59.621: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:45:00.487154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:45:01.487355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:45:01.625: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:45:02.487456      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:45:03.487646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:45:03.629: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:45:04.488351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:45:05.488459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:45:05.635: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:45:06.489426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:45:07.489505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:45:07.641: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:45:08.489922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:45:09.490019      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:45:09.645: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:45:10.490138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:45:11.491115      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:45:11.650: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:45:12.491433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:45:13.491892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:45:13.657: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:45:14.492361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:45:15.493427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:45:15.662: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:45:16.493542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:45:17.493605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:45:17.667: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:45:18.493723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:45:19.493791      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:45:19.672: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:45:20.494757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:45:21.495821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:45:21.677: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:45:22.496359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:45:23.496465      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:45:23.682: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:45:24.497420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:45:25.497589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:45:25.687: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:45:26.498658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:45:27.498759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:45:27.691: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:45:28.499291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:45:29.499382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:45:29.698: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:45:30.500139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:45:31.501016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:45:31.702: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:45:32.501716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:45:33.501778      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:45:33.708: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:45:34.502329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:45:35.502829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:45:35.715: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:45:36.503256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:45:37.503487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:45:37.721: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:45:38.503743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:45:39.503836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:45:39.727: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:45:40.504044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:45:41.504333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:45:41.733: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:45:42.505422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:45:43.505815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:45:43.738: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:45:44.505876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:45:45.505962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:45:45.743: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:45:46.506985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:45:47.507210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:45:47.748: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:45:48.507396      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:45:49.507669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:45:49.753: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:45:50.508656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:45:51.508839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:45:51.758: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:45:52.508952      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:45:53.509846      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:45:53.764: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:45:54.509936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:45:55.510369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:45:55.769: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:45:56.511290      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:45:57.511389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:45:57.775: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:45:58.511576      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:45:59.511855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:45:59.781: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:46:00.512338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:46:01.513405      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:46:01.786: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:46:02.513906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:46:03.514193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:46:03.791: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:46:04.515194      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:46:05.515459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:46:05.798: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:46:06.515830      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:46:07.516032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:46:07.803: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:46:08.516345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:46:09.516442      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:46:09.807: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:46:10.516503      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:46:11.517536      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:46:11.813: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:46:12.517638      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:46:13.518598      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:46:13.821: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:46:14.518692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:46:15.518966      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:46:15.827: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:46:16.519743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:46:17.519940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:46:17.831: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:46:18.520338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:46:19.520443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:46:19.835: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:46:20.520502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:46:21.521386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:46:21.839: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:46:22.521579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:46:23.521760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:46:23.843: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:46:24.522637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:46:25.522759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:46:25.848: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:46:26.522889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:46:27.523187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:46:27.854: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:46:28.523883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:46:29.524299      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:46:29.858: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:46:30.524450      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:46:31.524562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:46:31.864: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:46:32.525495      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:46:33.525930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:46:33.868: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:46:34.526896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:46:35.526994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:46:35.873: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:46:36.527121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:46:37.527237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:46:37.878: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:46:38.527398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:46:39.527670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:46:39.885: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:46:40.527992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:46:41.528064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:46:41.890: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:46:42.529073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:46:43.529174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:46:43.896: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:46:44.529631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:46:45.529712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:46:45.901: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:46:46.530596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:46:47.530775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:46:47.906: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:46:48.531374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:46:49.531571      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:46:49.910: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:46:50.531630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:46:51.531894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:46:51.916: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:46:52.532804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:46:53.532986      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:46:53.920: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:46:54.533575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:46:55.533705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:46:55.926: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:46:56.533729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:46:57.533829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:46:57.930: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:46:58.533920      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:46:59.534175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:46:59.934: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:47:00.534276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:47:01.534483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:47:01.939: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:47:02.534554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:47:03.535042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:47:03.946: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:47:04.535955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:47:05.536336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:47:05.951: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:47:06.536376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:47:07.537422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:47:07.956: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:47:08.537540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:47:09.537689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:47:09.960: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:47:10.538046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:47:11.538159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:47:11.967: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:47:12.538855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:47:13.538952      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:47:13.972: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:47:14.539143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:47:15.539676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:47:15.978: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:47:16.539952      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:47:17.540154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:47:17.982: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:47:18.540380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:47:19.540699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:47:19.986: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:47:20.541389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:47:21.541505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:47:21.991: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:47:22.541639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:47:23.541752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:47:23.996: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:47:24.541877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:47:25.541989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:47:26.001: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:47:26.542566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:47:27.542694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:47:28.007: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:47:28.542767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:47:29.542818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:47:30.010: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:47:30.542999      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:47:31.543063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:47:32.017: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:47:32.543365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:47:33.543609      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:47:34.022: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:47:34.543721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:47:35.544157      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:47:36.027: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:47:36.544314      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:47:37.544478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:47:38.032: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:47:38.545413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:47:39.545767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:47:40.037: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:47:40.546545      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:47:41.546769      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:47:42.042: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:47:42.547291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:47:43.547490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:47:44.046: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:47:44.548474      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:47:45.548900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:47:46.052: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:47:46.549087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:47:47.549145      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:47:48.059: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:47:48.549660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:47:49.549805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:47:50.062: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:47:50.550101      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:47:51.550469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:47:52.067: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:47:52.550325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:47:53.550634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:47:54.072: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:47:54.550751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:47:55.550827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:47:56.078: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:47:56.551126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:47:57.551304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:47:58.083: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:47:58.551434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:47:59.551892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:48:00.087: INFO: Get pod test-webserver-e67b5160-fe32-4ee7-97a0-a77f294f15dd in namespace container-probe-9974
  E0504 13:48:00.551957      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:48:01.552158      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 05/04/24 13:48:02.087
  May  4 13:48:02.106: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9974" for this suite. @ 05/04/24 13:48:02.112
• [242.696 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 05/04/24 13:48:02.12
  May  4 13:48:02.120: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename pod-network-test @ 05/04/24 13:48:02.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:48:02.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:48:02.135
  STEP: Performing setup for networking test in namespace pod-network-test-6337 @ 05/04/24 13:48:02.138
  STEP: creating a selector @ 05/04/24 13:48:02.138
  STEP: Creating the service pods in kubernetes @ 05/04/24 13:48:02.138
  May  4 13:48:02.138: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0504 13:48:02.553101      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:48:03.553165      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:48:04.554139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:48:05.554289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:48:06.554397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:48:07.554490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:48:08.555204      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:48:09.555488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:48:10.555558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:48:11.556325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:48:12.557293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:48:13.557542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 05/04/24 13:48:14.224
  E0504 13:48:14.557658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:48:15.557771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:48:16.242: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  May  4 13:48:16.242: INFO: Breadth first check of 192.168.149.45 on host 172.31.18.228...
  May  4 13:48:16.246: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.149.44:9080/dial?request=hostname&protocol=http&host=192.168.149.45&port=8083&tries=1'] Namespace:pod-network-test-6337 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  4 13:48:16.246: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 13:48:16.247: INFO: ExecWithOptions: Clientset creation
  May  4 13:48:16.247: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6337/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.149.44%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.149.45%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May  4 13:48:16.305: INFO: Waiting for responses: map[]
  May  4 13:48:16.305: INFO: reached 192.168.149.45 after 0/1 tries
  May  4 13:48:16.305: INFO: Breadth first check of 192.168.170.115 on host 172.31.33.38...
  May  4 13:48:16.308: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.149.44:9080/dial?request=hostname&protocol=http&host=192.168.170.115&port=8083&tries=1'] Namespace:pod-network-test-6337 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  4 13:48:16.308: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 13:48:16.309: INFO: ExecWithOptions: Clientset creation
  May  4 13:48:16.309: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6337/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.149.44%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.170.115%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May  4 13:48:16.362: INFO: Waiting for responses: map[]
  May  4 13:48:16.362: INFO: reached 192.168.170.115 after 0/1 tries
  May  4 13:48:16.362: INFO: Breadth first check of 192.168.186.24 on host 172.31.72.79...
  May  4 13:48:16.367: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.149.44:9080/dial?request=hostname&protocol=http&host=192.168.186.24&port=8083&tries=1'] Namespace:pod-network-test-6337 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  May  4 13:48:16.367: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  May  4 13:48:16.367: INFO: ExecWithOptions: Clientset creation
  May  4 13:48:16.367: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6337/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.149.44%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.186.24%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  May  4 13:48:16.418: INFO: Waiting for responses: map[]
  May  4 13:48:16.418: INFO: reached 192.168.186.24 after 0/1 tries
  May  4 13:48:16.418: INFO: Going to retry 0 out of 3 pods....
  May  4 13:48:16.418: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6337" for this suite. @ 05/04/24 13:48:16.424
• [14.311 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 05/04/24 13:48:16.431
  May  4 13:48:16.431: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename container-probe @ 05/04/24 13:48:16.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:48:16.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:48:16.456
  STEP: Creating pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728 @ 05/04/24 13:48:16.459
  E0504 13:48:16.558165      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:48:17.558265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/04/24 13:48:18.476
  May  4 13:48:18.481: INFO: Initial restart count of pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 is 0
  May  4 13:48:18.484: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:48:18.559201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:48:19.559691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:48:20.491: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:48:20.560479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:48:21.561478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:48:22.496: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:48:22.562271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:48:23.562726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:48:24.500: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:48:24.563657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:48:25.564015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:48:26.505: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:48:26.564312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:48:27.564620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:48:28.511: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:48:28.565309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:48:29.565402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:48:30.515: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:48:30.566079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:48:31.566270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:48:32.519: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:48:32.566899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:48:33.567068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:48:34.524: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:48:34.567505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:48:35.567614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:48:36.530: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:48:36.568324      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:48:37.568509      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:48:38.537: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:48:38.569351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:48:39.569457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:48:40.542: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:48:40.570362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:48:41.570556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:48:42.547: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:48:42.571033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:48:43.571270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:48:44.552: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:48:44.571768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:48:45.572100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:48:46.558: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:48:46.572934      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:48:47.573034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:48:48.564: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:48:48.573732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:48:49.573832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:48:50.569: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:48:50.574138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:48:51.574279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:48:52.574363      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:48:52.575: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:48:53.575291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:48:54.575392      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:48:54.579: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:48:55.575459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:48:56.575705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:48:56.584: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:48:57.576026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:48:58.576259      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:48:58.589: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:48:59.576450      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:49:00.576550      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:49:00.593: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:49:01.577593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:49:02.577811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:49:02.599: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:49:03.578424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:49:04.579031      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:49:04.604: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:49:05.579190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:49:06.579285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:49:06.609: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:49:07.580353      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:49:08.580431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:49:08.614: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:49:09.581339      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:49:10.581745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:49:10.620: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:49:11.582523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:49:12.582628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:49:12.624: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:49:13.582755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:49:14.582920      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:49:14.630: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:49:15.583162      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:49:16.583343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:49:16.635: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:49:17.583841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:49:18.584052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:49:18.641: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:49:19.584369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:49:20.584460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:49:20.647: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:49:21.584568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:49:22.585447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:49:22.653: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:49:23.586076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:49:24.586174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:49:24.657: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:49:25.586274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:49:26.586379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:49:26.663: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:49:27.587255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:49:28.587447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:49:28.668: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:49:29.587548      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:49:30.587856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:49:30.673: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:49:31.588360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:49:32.588440      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:49:32.678: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:49:33.588582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:49:34.589435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:49:34.684: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:49:35.589553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:49:36.589642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:49:36.688: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:49:37.589731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:49:38.589840      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:49:38.693: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:49:39.589900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:49:40.590016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:49:40.699: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:49:41.590922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:49:42.590991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:49:42.705: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:49:43.591903      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:49:44.592733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:49:44.709: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:49:45.592835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:49:46.592936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:49:46.715: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:49:47.593249      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:49:48.594175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:49:48.721: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:49:49.594293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:49:50.594689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:49:50.726: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:49:51.595265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:49:52.594952      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:49:52.733: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:49:53.595011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:49:54.595130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:49:54.739: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:49:55.595291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:49:56.595542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:49:56.744: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:49:57.595659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:49:58.595884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:49:58.748: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:49:59.595943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:50:00.596341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:50:00.754: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:50:01.596435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:50:02.597428      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:50:02.760: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:50:03.597904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:50:04.598002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:50:04.765: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:50:05.598473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:50:06.598570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:50:06.770: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:50:07.599163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:50:08.599407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:50:08.775: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:50:09.600409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:50:10.600517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:50:10.781: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:50:11.601403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:50:12.601645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:50:12.785: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:50:13.601747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:50:14.601997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:50:14.790: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:50:15.602097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:50:16.602207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:50:16.796: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:50:17.603294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:50:18.603425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:50:18.801: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:50:19.603631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:50:20.603774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:50:20.807: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:50:21.604371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:50:22.604470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:50:22.813: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:50:23.605248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:50:24.605351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:50:24.818: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:50:25.606382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:50:26.606488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:50:26.823: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:50:27.606566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:50:28.606860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:50:28.827: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:50:29.607878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:50:30.608345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:50:30.833: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:50:31.609112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:50:32.609205      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:50:32.839: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:50:33.609838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:50:34.610037      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:50:34.845: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:50:35.610125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:50:36.611215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:50:36.849: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:50:37.611303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:50:38.611427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:50:38.854: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:50:39.611584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:50:40.611745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:50:40.859: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:50:41.612649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:50:42.613368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:50:42.865: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:50:43.613968      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:50:44.614163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:50:44.870: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:50:45.614491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:50:46.614716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:50:46.876: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:50:47.615593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:50:48.615839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:50:48.881: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:50:49.616777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:50:50.616904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:50:50.888: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:50:51.617412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:50:52.617692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:50:52.892: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:50:53.617761      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:50:54.617958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:50:54.898: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:50:55.618959      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:50:56.619087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:50:56.902: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:50:57.619460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:50:58.619555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:50:58.908: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:50:59.620071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:51:00.620315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:51:00.912: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:51:01.620676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:51:02.620803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:51:02.919: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:51:03.621566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:51:04.621645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:51:04.924: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:51:05.622434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:51:06.622620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:51:06.931: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:51:07.622805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:51:08.623128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:51:08.935: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:51:09.623226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:51:10.623715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:51:10.941: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:51:11.624164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:51:12.624342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:51:12.946: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:51:13.624442      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:51:14.625462      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:51:14.952: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:51:15.626030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:51:16.626233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:51:16.956: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:51:17.626398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:51:18.626593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:51:18.962: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:51:19.627626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:51:20.627965      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:51:20.967: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:51:21.628564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:51:22.628655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:51:22.974: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:51:23.628756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:51:24.629487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:51:24.979: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:51:25.629580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:51:26.629819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:51:26.984: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:51:27.630393      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:51:28.630620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:51:28.990: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:51:29.631357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:51:30.631480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:51:30.995: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:51:31.631608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:51:32.631868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:51:32.999: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:51:33.631966      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:51:34.632650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:51:35.004: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:51:35.633382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:51:36.633494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:51:37.010: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:51:37.633567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:51:38.633750      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:51:39.015: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:51:39.634296      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:51:40.634767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:51:41.020: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:51:41.634915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:51:42.635130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:51:43.027: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:51:43.635752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:51:44.635932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:51:45.031: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:51:45.636341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:51:46.637419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:51:47.037: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:51:47.638246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:51:48.638359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:51:49.043: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:51:49.639121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:51:50.639224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:51:51.048: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:51:51.639658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:51:52.639562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:51:53.054: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:51:53.639861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:51:54.640044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:51:55.059: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:51:55.640322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:51:56.641386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:51:57.065: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:51:57.641526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:51:58.641678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:51:59.069: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:51:59.642677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:52:00.642782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:52:01.073: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:52:01.642885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:52:02.643465      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:52:03.079: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:52:03.643601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:52:04.644497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:52:05.084: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:52:05.644597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:52:06.644714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:52:07.090: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:52:07.645430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:52:08.645520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:52:09.095: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:52:09.646100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:52:10.646235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:52:11.100: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:52:11.646329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:52:12.646567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:52:13.104: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:52:13.647522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:52:14.647752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:52:15.110: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:52:15.647846      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:52:16.648826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:52:17.114: INFO: Get pod liveness-6ba01f83-450f-4b0b-a181-aed8d13e0ae1 in namespace container-probe-9728
  E0504 13:52:17.649385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:52:18.650558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 05/04/24 13:52:19.115
  May  4 13:52:19.133: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9728" for this suite. @ 05/04/24 13:52:19.138
• [242.713 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 05/04/24 13:52:19.144
  May  4 13:52:19.144: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename configmap @ 05/04/24 13:52:19.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:52:19.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:52:19.169
  STEP: Creating configMap with name cm-test-opt-del-353f1079-84a0-495d-ad7a-9394a131b1b3 @ 05/04/24 13:52:19.177
  STEP: Creating configMap with name cm-test-opt-upd-65f1970f-401b-4750-9ac1-be73f5a3f5a2 @ 05/04/24 13:52:19.182
  STEP: Creating the pod @ 05/04/24 13:52:19.187
  E0504 13:52:19.651518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:52:20.651619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-353f1079-84a0-495d-ad7a-9394a131b1b3 @ 05/04/24 13:52:21.249
  STEP: Updating configmap cm-test-opt-upd-65f1970f-401b-4750-9ac1-be73f5a3f5a2 @ 05/04/24 13:52:21.255
  STEP: Creating configMap with name cm-test-opt-create-8a7e796e-b5ae-4d83-b6d6-a8ef3090a279 @ 05/04/24 13:52:21.262
  STEP: waiting to observe update in volume @ 05/04/24 13:52:21.266
  E0504 13:52:21.651847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:52:22.651939      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:52:23.652055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:52:24.652178      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:52:25.301: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8592" for this suite. @ 05/04/24 13:52:25.306
• [6.171 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 05/04/24 13:52:25.315
  May  4 13:52:25.315: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename var-expansion @ 05/04/24 13:52:25.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:52:25.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:52:25.334
  STEP: Creating a pod to test substitution in container's command @ 05/04/24 13:52:25.337
  E0504 13:52:25.652731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:52:26.652834      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:52:27.653795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:52:28.653922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/04/24 13:52:29.362
  May  4 13:52:29.365: INFO: Trying to get logs from node ip-172-31-72-79 pod var-expansion-2c98fcba-a214-4df5-8291-32c7921375c5 container dapi-container: <nil>
  STEP: delete the pod @ 05/04/24 13:52:29.381
  May  4 13:52:29.399: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7703" for this suite. @ 05/04/24 13:52:29.404
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 05/04/24 13:52:29.41
  May  4 13:52:29.410: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename pods @ 05/04/24 13:52:29.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:52:29.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:52:29.428
  STEP: creating the pod @ 05/04/24 13:52:29.431
  STEP: setting up watch @ 05/04/24 13:52:29.431
  STEP: submitting the pod to kubernetes @ 05/04/24 13:52:29.535
  STEP: verifying the pod is in kubernetes @ 05/04/24 13:52:29.546
  STEP: verifying pod creation was observed @ 05/04/24 13:52:29.551
  E0504 13:52:29.654434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:52:30.654553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 05/04/24 13:52:31.567
  STEP: verifying pod deletion was observed @ 05/04/24 13:52:31.574
  E0504 13:52:31.654969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:52:32.655079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:52:32.856: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5247" for this suite. @ 05/04/24 13:52:32.86
• [3.457 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 05/04/24 13:52:32.868
  May  4 13:52:32.868: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename containers @ 05/04/24 13:52:32.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:52:32.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:52:32.886
  STEP: Creating a pod to test override arguments @ 05/04/24 13:52:32.889
  E0504 13:52:33.655197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:52:34.655391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:52:35.655472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:52:36.655631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/04/24 13:52:36.912
  May  4 13:52:36.917: INFO: Trying to get logs from node ip-172-31-18-228 pod client-containers-8a6c85ba-2c2d-49e4-ad80-dac2dc31d38a container agnhost-container: <nil>
  STEP: delete the pod @ 05/04/24 13:52:36.925
  May  4 13:52:36.943: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1072" for this suite. @ 05/04/24 13:52:36.946
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 05/04/24 13:52:36.956
  May  4 13:52:36.956: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename downward-api @ 05/04/24 13:52:36.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:52:36.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:52:36.974
  STEP: Creating a pod to test downward api env vars @ 05/04/24 13:52:36.977
  E0504 13:52:37.656629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:52:38.656680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/04/24 13:52:38.993
  May  4 13:52:38.996: INFO: Trying to get logs from node ip-172-31-18-228 pod downward-api-ae03be92-221f-4035-a64c-30f8e92b731e container dapi-container: <nil>
  STEP: delete the pod @ 05/04/24 13:52:39.004
  May  4 13:52:39.026: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3241" for this suite. @ 05/04/24 13:52:39.029
• [2.081 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 05/04/24 13:52:39.037
  May  4 13:52:39.037: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename webhook @ 05/04/24 13:52:39.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:52:39.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:52:39.054
  STEP: Setting up server cert @ 05/04/24 13:52:39.079
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/04/24 13:52:39.443
  STEP: Deploying the webhook pod @ 05/04/24 13:52:39.454
  STEP: Wait for the deployment to be ready @ 05/04/24 13:52:39.466
  May  4 13:52:39.473: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0504 13:52:39.657741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:52:40.658511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/04/24 13:52:41.487
  STEP: Verifying the service has paired with the endpoint @ 05/04/24 13:52:41.499
  E0504 13:52:41.658840      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:52:42.499: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  May  4 13:52:42.507: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  E0504 13:52:42.659250      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5896-crds.webhook.example.com via the AdmissionRegistration API @ 05/04/24 13:52:43.019
  STEP: Creating a custom resource that should be mutated by the webhook @ 05/04/24 13:52:43.032
  E0504 13:52:43.659604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:52:44.659788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:52:45.629: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4460" for this suite. @ 05/04/24 13:52:45.633
  STEP: Destroying namespace "webhook-markers-1939" for this suite. @ 05/04/24 13:52:45.64
• [6.610 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 05/04/24 13:52:45.647
  May  4 13:52:45.647: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename emptydir @ 05/04/24 13:52:45.648
  E0504 13:52:45.660471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:52:45.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:52:45.664
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 05/04/24 13:52:45.669
  E0504 13:52:46.660635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:52:47.660735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:52:48.661745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:52:49.661826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/04/24 13:52:49.691
  May  4 13:52:49.696: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-b4f1d265-491e-4e48-87d6-861170693af8 container test-container: <nil>
  STEP: delete the pod @ 05/04/24 13:52:49.704
  May  4 13:52:49.720: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2626" for this suite. @ 05/04/24 13:52:49.724
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 05/04/24 13:52:49.732
  May  4 13:52:49.732: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename webhook @ 05/04/24 13:52:49.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:52:49.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:52:49.749
  STEP: Setting up server cert @ 05/04/24 13:52:49.772
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/04/24 13:52:50.028
  STEP: Deploying the webhook pod @ 05/04/24 13:52:50.036
  STEP: Wait for the deployment to be ready @ 05/04/24 13:52:50.05
  May  4 13:52:50.061: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0504 13:52:50.662918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:52:51.662995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/04/24 13:52:52.07
  STEP: Verifying the service has paired with the endpoint @ 05/04/24 13:52:52.081
  E0504 13:52:52.663098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:52:53.081: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 05/04/24 13:52:53.089
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 05/04/24 13:52:53.09
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 05/04/24 13:52:53.09
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 05/04/24 13:52:53.09
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 05/04/24 13:52:53.091
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 05/04/24 13:52:53.091
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 05/04/24 13:52:53.092
  May  4 13:52:53.144: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3246" for this suite. @ 05/04/24 13:52:53.148
  STEP: Destroying namespace "webhook-markers-2386" for this suite. @ 05/04/24 13:52:53.155
• [3.430 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 05/04/24 13:52:53.162
  May  4 13:52:53.162: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename runtimeclass @ 05/04/24 13:52:53.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:52:53.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:52:53.181
  E0504 13:52:53.663765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:52:54.664022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:52:55.214: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3517" for this suite. @ 05/04/24 13:52:55.217
• [2.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 05/04/24 13:52:55.225
  May  4 13:52:55.225: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename projected @ 05/04/24 13:52:55.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:52:55.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:52:55.24
  STEP: Creating secret with name s-test-opt-del-0888ef58-57e8-465d-a7b0-9429594e5360 @ 05/04/24 13:52:55.247
  STEP: Creating secret with name s-test-opt-upd-401569b0-fc11-4801-bf69-768489ce2176 @ 05/04/24 13:52:55.251
  STEP: Creating the pod @ 05/04/24 13:52:55.255
  E0504 13:52:55.664364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:52:56.664430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-0888ef58-57e8-465d-a7b0-9429594e5360 @ 05/04/24 13:52:57.301
  STEP: Updating secret s-test-opt-upd-401569b0-fc11-4801-bf69-768489ce2176 @ 05/04/24 13:52:57.308
  STEP: Creating secret with name s-test-opt-create-38ba0163-b496-4a0a-b350-feae79810156 @ 05/04/24 13:52:57.313
  STEP: waiting to observe update in volume @ 05/04/24 13:52:57.318
  E0504 13:52:57.665266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:52:58.665633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:52:59.666410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:53:00.666580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:53:01.356: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-19" for this suite. @ 05/04/24 13:53:01.361
• [6.142 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 05/04/24 13:53:01.367
  May  4 13:53:01.367: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename daemonsets @ 05/04/24 13:53:01.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:53:01.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:53:01.386
  STEP: Creating simple DaemonSet "daemon-set" @ 05/04/24 13:53:01.406
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/04/24 13:53:01.413
  May  4 13:53:01.418: INFO: DaemonSet pods can't tolerate node ip-172-31-26-203 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 13:53:01.418: INFO: DaemonSet pods can't tolerate node ip-172-31-85-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 13:53:01.422: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  4 13:53:01.422: INFO: Node ip-172-31-18-228 is running 0 daemon pod, expected 1
  E0504 13:53:01.666713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:53:02.417: INFO: DaemonSet pods can't tolerate node ip-172-31-26-203 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 13:53:02.417: INFO: DaemonSet pods can't tolerate node ip-172-31-85-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 13:53:02.422: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  4 13:53:02.422: INFO: Node ip-172-31-18-228 is running 0 daemon pod, expected 1
  E0504 13:53:02.666889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:53:03.419: INFO: DaemonSet pods can't tolerate node ip-172-31-26-203 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 13:53:03.419: INFO: DaemonSet pods can't tolerate node ip-172-31-85-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 13:53:03.423: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  May  4 13:53:03.423: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 05/04/24 13:53:03.426
  May  4 13:53:03.441: INFO: DaemonSet pods can't tolerate node ip-172-31-26-203 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 13:53:03.441: INFO: DaemonSet pods can't tolerate node ip-172-31-85-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 13:53:03.444: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  May  4 13:53:03.444: INFO: Node ip-172-31-18-228 is running 0 daemon pod, expected 1
  E0504 13:53:03.666972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:53:04.443: INFO: DaemonSet pods can't tolerate node ip-172-31-26-203 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 13:53:04.443: INFO: DaemonSet pods can't tolerate node ip-172-31-85-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 13:53:04.447: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  May  4 13:53:04.447: INFO: Node ip-172-31-18-228 is running 0 daemon pod, expected 1
  E0504 13:53:04.667995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:53:05.451: INFO: DaemonSet pods can't tolerate node ip-172-31-26-203 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 13:53:05.451: INFO: DaemonSet pods can't tolerate node ip-172-31-85-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 13:53:05.454: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  May  4 13:53:05.454: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/04/24 13:53:05.457
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8870, will wait for the garbage collector to delete the pods @ 05/04/24 13:53:05.457
  May  4 13:53:05.520: INFO: Deleting DaemonSet.extensions daemon-set took: 7.824122ms
  May  4 13:53:05.621: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.998492ms
  E0504 13:53:05.668793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:53:06.669253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:53:06.925: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  4 13:53:06.925: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May  4 13:53:06.929: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"47226"},"items":null}

  May  4 13:53:06.934: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"47226"},"items":null}

  May  4 13:53:06.948: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8870" for this suite. @ 05/04/24 13:53:06.951
• [5.589 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 05/04/24 13:53:06.957
  May  4 13:53:06.957: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename projected @ 05/04/24 13:53:06.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:53:06.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:53:06.974
  STEP: Creating configMap with name projected-configmap-test-volume-87de950a-16bb-4aa1-8599-e4d5845b623d @ 05/04/24 13:53:06.977
  STEP: Creating a pod to test consume configMaps @ 05/04/24 13:53:06.983
  E0504 13:53:07.669892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:53:08.670008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:53:09.671078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:53:10.671275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/04/24 13:53:11.011
  May  4 13:53:11.015: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-projected-configmaps-75327de7-829f-4b1c-966f-3811b960c250 container agnhost-container: <nil>
  STEP: delete the pod @ 05/04/24 13:53:11.023
  May  4 13:53:11.041: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1794" for this suite. @ 05/04/24 13:53:11.045
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1399
  STEP: Creating a kubernetes client @ 05/04/24 13:53:11.055
  May  4 13:53:11.055: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename kubectl @ 05/04/24 13:53:11.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:53:11.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:53:11.072
  May  4 13:53:11.075: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-3796 create -f -'
  May  4 13:53:11.162: INFO: stderr: ""
  May  4 13:53:11.162: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  May  4 13:53:11.162: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-3796 create -f -'
  May  4 13:53:11.254: INFO: stderr: ""
  May  4 13:53:11.254: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/04/24 13:53:11.254
  E0504 13:53:11.671358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:53:12.259: INFO: Selector matched 1 pods for map[app:agnhost]
  May  4 13:53:12.259: INFO: Found 1 / 1
  May  4 13:53:12.259: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  May  4 13:53:12.263: INFO: Selector matched 1 pods for map[app:agnhost]
  May  4 13:53:12.263: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  May  4 13:53:12.263: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-3796 describe pod agnhost-primary-grh9h'
  May  4 13:53:12.320: INFO: stderr: ""
  May  4 13:53:12.320: INFO: stdout: "Name:             agnhost-primary-grh9h\nNamespace:        kubectl-3796\nPriority:         0\nService Account:  default\nNode:             ip-172-31-18-228/172.31.18.228\nStart Time:       Sat, 04 May 2024 13:53:11 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.149.12\nIPs:\n  IP:           192.168.149.12\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://b528af4537c365f87da6e0902c18a9a28e2c4c91b2a2187a85220cb73affc01d\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 04 May 2024 13:53:11 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-nd2mr (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-nd2mr:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-3796/agnhost-primary-grh9h to ip-172-31-18-228\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  May  4 13:53:12.320: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-3796 describe rc agnhost-primary'
  May  4 13:53:12.381: INFO: stderr: ""
  May  4 13:53:12.381: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-3796\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-grh9h\n"
  May  4 13:53:12.381: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-3796 describe service agnhost-primary'
  May  4 13:53:12.436: INFO: stderr: ""
  May  4 13:53:12.436: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-3796\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.152.183.227\nIPs:               10.152.183.227\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         192.168.149.12:6379\nSession Affinity:  None\nEvents:            <none>\n"
  May  4 13:53:12.439: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-3796 describe node ip-172-31-18-228'
  May  4 13:53:12.506: INFO: stderr: ""
  May  4 13:53:12.506: INFO: stdout: "Name:               ip-172-31-18-228\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-worker\n                    juju-charm=kubernetes-worker\n                    juju.io/cloud=ec2\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-18-228\n                    kubernetes.io/os=linux\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 04 May 2024 11:55:23 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-18-228\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 04 May 2024 13:53:05 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 04 May 2024 12:12:14 +0000   Sat, 04 May 2024 12:12:14 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 04 May 2024 13:51:13 +0000   Sat, 04 May 2024 11:55:23 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 04 May 2024 13:51:13 +0000   Sat, 04 May 2024 11:55:23 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 04 May 2024 13:51:13 +0000   Sat, 04 May 2024 11:55:23 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 04 May 2024 13:51:13 +0000   Sat, 04 May 2024 11:57:11 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  172.31.18.228\n  Hostname:    ip-172-31-18-228\nCapacity:\n  cpu:                  2\n  ephemeral-storage:    16069568Ki\n  example.com/fakecpu:  1k\n  hugepages-1Gi:        0\n  hugepages-2Mi:        0\n  memory:               7958124Ki\n  pods:                 110\nAllocatable:\n  cpu:                  2\n  ephemeral-storage:    14809713845\n  example.com/fakecpu:  1k\n  hugepages-1Gi:        0\n  hugepages-2Mi:        0\n  memory:               7855724Ki\n  pods:                 110\nSystem Info:\n  Machine ID:                      ec210d7e3f9e60a74e43df0c654379a6\n  System UUID:                     ec210d7e-3f9e-60a7-4e43-df0c654379a6\n  Boot ID:                         5e10c4bc-8cf7-461c-9cc3-8b5e1c4cd290\n  Kernel Version:                  6.5.0-1018-aws\n  OS Image:                        Ubuntu 22.04.4 LTS\n  Operating System:                linux\n  Architecture:                    amd64\n  Container Runtime Version:       containerd://1.6.8\n  Kubelet Version:                 v1.29.4\n  Kube-Proxy Version:              v1.29.4\nNon-terminated Pods:               (5 in total)\n  Namespace                        Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                        ----                                                       ------------  ----------  ---------------  -------------  ---\n  ingress-nginx-kubernetes-worker  nginx-ingress-controller-kubernetes-worker-w484v           0 (0%)        0 (0%)      0 (0%)           0 (0%)         30m\n  kube-system                      calico-node-rvkmx                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         101m\n  kubectl-3796                     agnhost-primary-grh9h                                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         1s\n  sonobuoy                         sonobuoy                                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         101m\n  sonobuoy                         sonobuoy-systemd-logs-daemon-set-12e57fb52bd44eb7-llzs6    0 (0%)        0 (0%)      0 (0%)           0 (0%)         101m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource             Requests    Limits\n  --------             --------    ------\n  cpu                  250m (12%)  0 (0%)\n  memory               0 (0%)      0 (0%)\n  ephemeral-storage    0 (0%)      0 (0%)\n  hugepages-1Gi        0 (0%)      0 (0%)\n  hugepages-2Mi        0 (0%)      0 (0%)\n  example.com/fakecpu  0           0\nEvents:                <none>\n"
  May  4 13:53:12.506: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-3796 describe namespace kubectl-3796'
  May  4 13:53:12.567: INFO: stderr: ""
  May  4 13:53:12.567: INFO: stdout: "Name:         kubectl-3796\nLabels:       e2e-framework=kubectl\n              e2e-run=4b941899-c088-4611-9880-f7dd13864479\n              kubernetes.io/metadata.name=kubectl-3796\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  May  4 13:53:12.567: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3796" for this suite. @ 05/04/24 13:53:12.572
• [1.524 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 05/04/24 13:53:12.579
  May  4 13:53:12.579: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename namespaces @ 05/04/24 13:53:12.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:53:12.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:53:12.598
  STEP: creating a Namespace @ 05/04/24 13:53:12.601
  STEP: patching the Namespace @ 05/04/24 13:53:12.612
  STEP: get the Namespace and ensuring it has the label @ 05/04/24 13:53:12.62
  May  4 13:53:12.627: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3044" for this suite. @ 05/04/24 13:53:12.631
  STEP: Destroying namespace "nspatchtest-a9ab28b9-94d4-4365-8fc6-fe9f8417430e-2705" for this suite. @ 05/04/24 13:53:12.639
• [0.066 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 05/04/24 13:53:12.645
  May  4 13:53:12.645: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename secrets @ 05/04/24 13:53:12.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:53:12.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:53:12.664
  STEP: Creating secret with name secret-test-map-4216dcde-b313-4811-935a-9d6d16ac38e8 @ 05/04/24 13:53:12.667
  E0504 13:53:12.671893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a pod to test consume secrets @ 05/04/24 13:53:12.673
  E0504 13:53:13.672964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:53:14.673566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:53:15.673590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:53:16.673714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/04/24 13:53:16.698
  May  4 13:53:16.702: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-secrets-e649071d-e7fd-403d-a229-fe99d388b2a6 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/04/24 13:53:16.71
  May  4 13:53:16.730: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4148" for this suite. @ 05/04/24 13:53:16.733
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 05/04/24 13:53:16.739
  May  4 13:53:16.739: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename daemonsets @ 05/04/24 13:53:16.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:53:16.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:53:16.767
  May  4 13:53:16.792: INFO: Create a RollingUpdate DaemonSet
  May  4 13:53:16.797: INFO: Check that daemon pods launch on every node of the cluster
  May  4 13:53:16.802: INFO: DaemonSet pods can't tolerate node ip-172-31-26-203 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 13:53:16.802: INFO: DaemonSet pods can't tolerate node ip-172-31-85-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 13:53:16.806: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  4 13:53:16.806: INFO: Node ip-172-31-18-228 is running 0 daemon pod, expected 1
  E0504 13:53:17.674695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:53:17.804: INFO: DaemonSet pods can't tolerate node ip-172-31-26-203 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 13:53:17.804: INFO: DaemonSet pods can't tolerate node ip-172-31-85-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 13:53:17.808: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  May  4 13:53:17.808: INFO: Node ip-172-31-18-228 is running 0 daemon pod, expected 1
  E0504 13:53:18.674983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:53:18.807: INFO: DaemonSet pods can't tolerate node ip-172-31-26-203 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 13:53:18.807: INFO: DaemonSet pods can't tolerate node ip-172-31-85-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 13:53:18.812: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  May  4 13:53:18.812: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  May  4 13:53:18.812: INFO: Update the DaemonSet to trigger a rollout
  May  4 13:53:18.822: INFO: Updating DaemonSet daemon-set
  E0504 13:53:19.674933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:53:19.835: INFO: Roll back the DaemonSet before rollout is complete
  May  4 13:53:19.847: INFO: Updating DaemonSet daemon-set
  May  4 13:53:19.847: INFO: Make sure DaemonSet rollback is complete
  May  4 13:53:19.852: INFO: Wrong image for pod: daemon-set-jpcnw. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  May  4 13:53:19.852: INFO: Pod daemon-set-jpcnw is not available
  May  4 13:53:19.857: INFO: DaemonSet pods can't tolerate node ip-172-31-26-203 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 13:53:19.857: INFO: DaemonSet pods can't tolerate node ip-172-31-85-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0504 13:53:20.675103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:53:20.854: INFO: DaemonSet pods can't tolerate node ip-172-31-26-203 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 13:53:20.854: INFO: DaemonSet pods can't tolerate node ip-172-31-85-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0504 13:53:21.675601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:53:21.852: INFO: Pod daemon-set-qs2ms is not available
  May  4 13:53:21.856: INFO: DaemonSet pods can't tolerate node ip-172-31-26-203 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  May  4 13:53:21.856: INFO: DaemonSet pods can't tolerate node ip-172-31-85-184 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 05/04/24 13:53:21.863
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5701, will wait for the garbage collector to delete the pods @ 05/04/24 13:53:21.863
  May  4 13:53:21.926: INFO: Deleting DaemonSet.extensions daemon-set took: 7.234981ms
  May  4 13:53:22.027: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.596901ms
  E0504 13:53:22.676506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:53:23.677141      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:53:24.032: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  May  4 13:53:24.032: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  May  4 13:53:24.034: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"47578"},"items":null}

  May  4 13:53:24.037: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"47578"},"items":null}

  May  4 13:53:24.049: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5701" for this suite. @ 05/04/24 13:53:24.052
• [7.320 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 05/04/24 13:53:24.06
  May  4 13:53:24.060: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename container-runtime @ 05/04/24 13:53:24.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:53:24.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:53:24.078
  STEP: create the container @ 05/04/24 13:53:24.081
  W0504 13:53:24.091996      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/04/24 13:53:24.092
  E0504 13:53:24.677422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:53:25.678026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 05/04/24 13:53:26.105
  STEP: the container should be terminated @ 05/04/24 13:53:26.108
  STEP: the termination message should be set @ 05/04/24 13:53:26.108
  May  4 13:53:26.108: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 05/04/24 13:53:26.108
  May  4 13:53:26.126: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2125" for this suite. @ 05/04/24 13:53:26.13
• [2.077 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:751
  STEP: Creating a kubernetes client @ 05/04/24 13:53:26.137
  May  4 13:53:26.137: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename statefulset @ 05/04/24 13:53:26.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:53:26.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:53:26.154
  STEP: Creating service test in namespace statefulset-5821 @ 05/04/24 13:53:26.156
  STEP: Creating stateful set ss in namespace statefulset-5821 @ 05/04/24 13:53:26.161
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-5821 @ 05/04/24 13:53:26.168
  May  4 13:53:26.172: INFO: Found 0 stateful pods, waiting for 1
  E0504 13:53:26.678644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:53:27.678739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:53:28.678877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:53:29.678941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:53:30.679817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:53:31.679940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:53:32.680014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:53:33.680154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:53:34.680368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:53:35.680468      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:53:36.174: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 05/04/24 13:53:36.174
  May  4 13:53:36.177: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=statefulset-5821 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May  4 13:53:36.283: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May  4 13:53:36.283: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May  4 13:53:36.283: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May  4 13:53:36.287: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0504 13:53:36.681504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:53:37.681587      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:53:38.681798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:53:39.682282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:53:40.682405      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:53:41.682610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:53:42.682852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:53:43.683054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:53:44.683523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:53:45.683685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:53:46.288: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  May  4 13:53:46.288: INFO: Waiting for statefulset status.readyReplicas updated to 0
  May  4 13:53:46.308: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
  May  4 13:53:46.308: INFO: ss-0  ip-172-31-18-228  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-04 13:53:26 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-04 13:53:26 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-04 13:53:36 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-04 13:53:36 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-04 13:53:26 +0000 UTC  }]
  May  4 13:53:46.308: INFO: 
  May  4 13:53:46.308: INFO: StatefulSet ss has not reached scale 3, at 1
  E0504 13:53:46.683807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:53:47.315: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.992117918s
  E0504 13:53:47.684752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:53:48.320: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.986056682s
  E0504 13:53:48.684819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:53:49.325: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.980759309s
  E0504 13:53:49.685456      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:53:50.332: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.975092484s
  E0504 13:53:50.685560      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:53:51.337: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.968102857s
  E0504 13:53:51.685955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:53:52.342: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.96391266s
  E0504 13:53:52.686546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:53:53.347: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.958283054s
  E0504 13:53:53.686642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:53:54.352: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.954030183s
  E0504 13:53:54.687483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:53:55.356: INFO: Verifying statefulset ss doesn't scale past 3 for another 949.179031ms
  E0504 13:53:55.687578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-5821 @ 05/04/24 13:53:56.357
  May  4 13:53:56.363: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=statefulset-5821 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May  4 13:53:56.475: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  May  4 13:53:56.475: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May  4 13:53:56.475: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May  4 13:53:56.476: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=statefulset-5821 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May  4 13:53:56.578: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  May  4 13:53:56.578: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May  4 13:53:56.578: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May  4 13:53:56.579: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=statefulset-5821 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  May  4 13:53:56.679: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  May  4 13:53:56.679: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  May  4 13:53:56.679: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  May  4 13:53:56.684: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  May  4 13:53:56.684: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  May  4 13:53:56.684: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 05/04/24 13:53:56.684
  E0504 13:53:56.687828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:53:56.688: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=statefulset-5821 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May  4 13:53:56.783: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May  4 13:53:56.783: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May  4 13:53:56.783: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May  4 13:53:56.783: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=statefulset-5821 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May  4 13:53:56.876: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May  4 13:53:56.876: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May  4 13:53:56.876: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May  4 13:53:56.876: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=statefulset-5821 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  May  4 13:53:56.981: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  May  4 13:53:56.981: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  May  4 13:53:56.981: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  May  4 13:53:56.981: INFO: Waiting for statefulset status.readyReplicas updated to 0
  May  4 13:53:56.985: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0504 13:53:57.688688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:53:58.688774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:53:59.689734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:00.689827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:01.689929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:02.690083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:03.690169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:04.690541      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:05.690636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:06.690880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:54:06.989: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  May  4 13:54:06.989: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  May  4 13:54:06.989: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  May  4 13:54:07.005: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
  May  4 13:54:07.005: INFO: ss-0  ip-172-31-18-228  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-04 13:53:26 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-04 13:53:26 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-04 13:53:57 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-04 13:53:57 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-04 13:53:26 +0000 UTC  }]
  May  4 13:54:07.005: INFO: ss-1  ip-172-31-33-38   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-04 13:53:47 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-04 13:53:46 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-04 13:53:57 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-04 13:53:57 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-04 13:53:46 +0000 UTC  }]
  May  4 13:54:07.005: INFO: ss-2  ip-172-31-72-79   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-04 13:53:46 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-04 13:53:46 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-04 13:53:57 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-04 13:53:57 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-04 13:53:46 +0000 UTC  }]
  May  4 13:54:07.005: INFO: 
  May  4 13:54:07.005: INFO: StatefulSet ss has not reached scale 0, at 3
  E0504 13:54:07.691024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:54:08.011: INFO: POD   NODE             PHASE      GRACE  CONDITIONS
  May  4 13:54:08.011: INFO: ss-2  ip-172-31-72-79  Succeeded  0s     [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-05-04 13:54:07 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-04 13:53:46 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-04 13:53:57 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-04 13:53:57 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-04 13:53:46 +0000 UTC  }]
  May  4 13:54:08.011: INFO: 
  May  4 13:54:08.011: INFO: StatefulSet ss has not reached scale 0, at 1
  E0504 13:54:08.691121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:54:09.017: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.98953968s
  E0504 13:54:09.692048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:54:10.022: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.983549276s
  E0504 13:54:10.692121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:54:11.027: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.97862448s
  E0504 13:54:11.692354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:54:12.033: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.97255781s
  E0504 13:54:12.692481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:54:13.037: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.967425318s
  E0504 13:54:13.693425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:54:14.044: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.962348577s
  E0504 13:54:14.694108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:54:15.049: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.955426021s
  E0504 13:54:15.695104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:54:16.055: INFO: Verifying statefulset ss doesn't scale past 0 for another 951.779886ms
  E0504 13:54:16.695381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-5821 @ 05/04/24 13:54:17.055
  May  4 13:54:17.061: INFO: Scaling statefulset ss to 0
  May  4 13:54:17.072: INFO: Waiting for statefulset status.replicas updated to 0
  May  4 13:54:17.074: INFO: Deleting all statefulset in ns statefulset-5821
  May  4 13:54:17.078: INFO: Scaling statefulset ss to 0
  May  4 13:54:17.088: INFO: Waiting for statefulset status.replicas updated to 0
  May  4 13:54:17.093: INFO: Deleting statefulset ss
  May  4 13:54:17.108: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5821" for this suite. @ 05/04/24 13:54:17.112
• [50.983 seconds]
------------------------------
SSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 05/04/24 13:54:17.12
  May  4 13:54:17.120: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename kubelet-test @ 05/04/24 13:54:17.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:54:17.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:54:17.139
  May  4 13:54:17.169: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-381" for this suite. @ 05/04/24 13:54:17.175
• [0.063 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 05/04/24 13:54:17.183
  May  4 13:54:17.183: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename replicaset @ 05/04/24 13:54:17.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:54:17.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:54:17.199
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 05/04/24 13:54:17.202
  E0504 13:54:17.696285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:18.696357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 05/04/24 13:54:19.227
  STEP: Then the orphan pod is adopted @ 05/04/24 13:54:19.233
  E0504 13:54:19.696756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 05/04/24 13:54:20.244
  May  4 13:54:20.248: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 05/04/24 13:54:20.258
  E0504 13:54:20.696813      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:54:21.268: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4809" for this suite. @ 05/04/24 13:54:21.271
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 05/04/24 13:54:21.28
  May  4 13:54:21.280: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename emptydir @ 05/04/24 13:54:21.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:54:21.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:54:21.294
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 05/04/24 13:54:21.297
  E0504 13:54:21.696942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:22.697430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/04/24 13:54:23.317
  May  4 13:54:23.321: INFO: Trying to get logs from node ip-172-31-72-79 pod pod-3ec19aa5-56ba-490a-bcb8-1b4637a9e44f container test-container: <nil>
  STEP: delete the pod @ 05/04/24 13:54:23.333
  May  4 13:54:23.351: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1069" for this suite. @ 05/04/24 13:54:23.354
• [2.082 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 05/04/24 13:54:23.362
  May  4 13:54:23.362: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename container-probe @ 05/04/24 13:54:23.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:54:23.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:54:23.377
  E0504 13:54:23.697478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:24.698291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:25.699128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:26.699805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:27.700775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:28.700844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:29.701670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:30.702602      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:31.703106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:32.703934      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:33.704433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:34.705008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:35.705380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:36.705466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:37.706085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:38.706196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:39.706659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:40.707267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:41.707720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:42.708340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:43.709316      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:44.709856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:45.710017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:46.710760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:47.711218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:48.712299      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:49.712728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:50.713647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:51.714650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:52.715045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:53.715491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:54.715894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:55.716543      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:56.716909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:57.717586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:58.717660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:54:59.717977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:00.718618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:01.719015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:02.719786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:03.719833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:04.720262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:05.720366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:06.721200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:07.721788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:08.722720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:09.722900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:10.723507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:11.724499      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:12.725548      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:13.725965      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:14.726517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:15.727075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:16.727090      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:17.727384      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:18.727846      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:19.728054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:20.728421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:21.728688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:22.729539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:55:23.394: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7210" for this suite. @ 05/04/24 13:55:23.399
• [60.050 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 05/04/24 13:55:23.412
  May  4 13:55:23.412: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename disruption @ 05/04/24 13:55:23.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:55:23.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:55:23.434
  STEP: Creating a pdb that targets all three pods in a test replica set @ 05/04/24 13:55:23.441
  STEP: Waiting for the pdb to be processed @ 05/04/24 13:55:23.448
  E0504 13:55:23.730197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:24.730610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 05/04/24 13:55:25.461
  STEP: Waiting for all pods to be running @ 05/04/24 13:55:25.461
  May  4 13:55:25.465: INFO: pods: 0 < 3
  E0504 13:55:25.731477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:26.731665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 05/04/24 13:55:27.467
  STEP: Updating the pdb to allow a pod to be evicted @ 05/04/24 13:55:27.478
  STEP: Waiting for the pdb to be processed @ 05/04/24 13:55:27.488
  E0504 13:55:27.731792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:28.731893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 05/04/24 13:55:29.494
  STEP: Waiting for all pods to be running @ 05/04/24 13:55:29.494
  STEP: Waiting for the pdb to observed all healthy pods @ 05/04/24 13:55:29.498
  STEP: Patching the pdb to disallow a pod to be evicted @ 05/04/24 13:55:29.524
  STEP: Waiting for the pdb to be processed @ 05/04/24 13:55:29.538
  E0504 13:55:29.732709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:30.732805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 05/04/24 13:55:31.543
  STEP: locating a running pod @ 05/04/24 13:55:31.546
  STEP: Deleting the pdb to allow a pod to be evicted @ 05/04/24 13:55:31.557
  STEP: Waiting for the pdb to be deleted @ 05/04/24 13:55:31.564
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 05/04/24 13:55:31.568
  STEP: Waiting for all pods to be running @ 05/04/24 13:55:31.568
  May  4 13:55:31.595: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4403" for this suite. @ 05/04/24 13:55:31.598
• [8.193 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 05/04/24 13:55:31.606
  May  4 13:55:31.606: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/04/24 13:55:31.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:55:31.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:55:31.627
  STEP: set up a multi version CRD @ 05/04/24 13:55:31.63
  May  4 13:55:31.630: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  E0504 13:55:31.733630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:32.734097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:33.734645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:34.734667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 05/04/24 13:55:34.749
  STEP: check the unserved version gets removed @ 05/04/24 13:55:34.766
  STEP: check the other version is not changed @ 05/04/24 13:55:35.49
  E0504 13:55:35.734901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:36.735636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:37.736660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:55:37.929: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3718" for this suite. @ 05/04/24 13:55:37.935
• [6.336 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 05/04/24 13:55:37.949
  May  4 13:55:37.949: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename downward-api @ 05/04/24 13:55:37.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:55:37.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:55:37.971
  STEP: Creating a pod to test downward API volume plugin @ 05/04/24 13:55:37.974
  E0504 13:55:38.736926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:39.737510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:40.737993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:41.738927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/04/24 13:55:41.996
  May  4 13:55:41.999: INFO: Trying to get logs from node ip-172-31-18-228 pod downwardapi-volume-1cbb0b79-882c-4420-b4f2-1f7863f558a5 container client-container: <nil>
  STEP: delete the pod @ 05/04/24 13:55:42.011
  May  4 13:55:42.031: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4069" for this suite. @ 05/04/24 13:55:42.035
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 05/04/24 13:55:42.042
  May  4 13:55:42.042: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename webhook @ 05/04/24 13:55:42.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:55:42.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:55:42.071
  STEP: Setting up server cert @ 05/04/24 13:55:42.103
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/04/24 13:55:42.463
  STEP: Deploying the webhook pod @ 05/04/24 13:55:42.472
  STEP: Wait for the deployment to be ready @ 05/04/24 13:55:42.483
  May  4 13:55:42.491: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0504 13:55:42.739557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:43.739666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/04/24 13:55:44.502
  STEP: Verifying the service has paired with the endpoint @ 05/04/24 13:55:44.515
  E0504 13:55:44.739892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:55:45.516: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 05/04/24 13:55:45.591
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/04/24 13:55:45.614
  STEP: Deleting the collection of validation webhooks @ 05/04/24 13:55:45.637
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/04/24 13:55:45.694
  E0504 13:55:45.740540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:55:45.741: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7029" for this suite. @ 05/04/24 13:55:45.743
  STEP: Destroying namespace "webhook-markers-5069" for this suite. @ 05/04/24 13:55:45.752
• [3.720 seconds]
------------------------------
SS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:96
  STEP: Creating a kubernetes client @ 05/04/24 13:55:45.762
  May  4 13:55:45.762: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename secrets @ 05/04/24 13:55:45.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:55:45.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:55:45.784
  STEP: creating secret secrets-4809/secret-test-9cd533b3-a11c-436f-a6ed-5265107fb999 @ 05/04/24 13:55:45.786
  STEP: Creating a pod to test consume secrets @ 05/04/24 13:55:45.791
  E0504 13:55:46.740678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:47.740798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:48.740919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:49.741814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/04/24 13:55:49.813
  May  4 13:55:49.816: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-configmaps-6c99345b-554e-4ec9-9cb5-49301dfe9ad2 container env-test: <nil>
  STEP: delete the pod @ 05/04/24 13:55:49.825
  May  4 13:55:49.842: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4809" for this suite. @ 05/04/24 13:55:49.846
• [4.090 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1373
  STEP: Creating a kubernetes client @ 05/04/24 13:55:49.852
  May  4 13:55:49.852: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename kubectl @ 05/04/24 13:55:49.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:55:49.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:55:49.883
  STEP: validating cluster-info @ 05/04/24 13:55:49.886
  May  4 13:55:49.886: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=kubectl-4951 cluster-info'
  May  4 13:55:49.931: INFO: stderr: ""
  May  4 13:55:49.931: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  May  4 13:55:49.931: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4951" for this suite. @ 05/04/24 13:55:49.934
• [0.089 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 05/04/24 13:55:49.941
  May  4 13:55:49.941: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename configmap @ 05/04/24 13:55:49.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:55:49.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:55:49.962
  STEP: Creating configMap with name configmap-test-volume-f4a38581-21f8-4a6e-a48a-539ad930b494 @ 05/04/24 13:55:49.965
  STEP: Creating a pod to test consume configMaps @ 05/04/24 13:55:49.97
  E0504 13:55:50.742476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:51.742579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:52.742682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:53.742779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/04/24 13:55:53.995
  May  4 13:55:53.999: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-configmaps-8649a87c-4a8c-4ec8-ba3f-b4b35326504e container agnhost-container: <nil>
  STEP: delete the pod @ 05/04/24 13:55:54.006
  May  4 13:55:54.027: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4520" for this suite. @ 05/04/24 13:55:54.03
• [4.095 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 05/04/24 13:55:54.036
  May  4 13:55:54.036: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename dns @ 05/04/24 13:55:54.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:55:54.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:55:54.059
  STEP: Creating a test headless service @ 05/04/24 13:55:54.063
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3099 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-3099;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3099 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-3099;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3099.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-3099.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3099.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-3099.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3099.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-3099.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3099.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-3099.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3099.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-3099.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3099.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-3099.svc;check="$$(dig +notcp +noall +answer +search 104.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.104_udp@PTR;check="$$(dig +tcp +noall +answer +search 104.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.104_tcp@PTR;sleep 1; done
   @ 05/04/24 13:55:54.078
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3099 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-3099;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3099 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-3099;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3099.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-3099.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3099.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-3099.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3099.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-3099.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3099.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-3099.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3099.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-3099.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3099.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-3099.svc;check="$$(dig +notcp +noall +answer +search 104.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.104_udp@PTR;check="$$(dig +tcp +noall +answer +search 104.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.104_tcp@PTR;sleep 1; done
   @ 05/04/24 13:55:54.079
  STEP: creating a pod to probe DNS @ 05/04/24 13:55:54.079
  STEP: submitting the pod to kubernetes @ 05/04/24 13:55:54.079
  E0504 13:55:54.743865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:55.744081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/04/24 13:55:56.099
  STEP: looking for the results for each expected name from probers @ 05/04/24 13:55:56.104
  May  4 13:55:56.107: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-3099/dns-test-b9aa8047-6a32-45e6-914c-896de0140811: the server could not find the requested resource (get pods dns-test-b9aa8047-6a32-45e6-914c-896de0140811)
  May  4 13:55:56.112: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-3099/dns-test-b9aa8047-6a32-45e6-914c-896de0140811: the server could not find the requested resource (get pods dns-test-b9aa8047-6a32-45e6-914c-896de0140811)
  May  4 13:55:56.116: INFO: Unable to read wheezy_udp@dns-test-service.dns-3099 from pod dns-3099/dns-test-b9aa8047-6a32-45e6-914c-896de0140811: the server could not find the requested resource (get pods dns-test-b9aa8047-6a32-45e6-914c-896de0140811)
  May  4 13:55:56.118: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3099 from pod dns-3099/dns-test-b9aa8047-6a32-45e6-914c-896de0140811: the server could not find the requested resource (get pods dns-test-b9aa8047-6a32-45e6-914c-896de0140811)
  May  4 13:55:56.123: INFO: Unable to read wheezy_udp@dns-test-service.dns-3099.svc from pod dns-3099/dns-test-b9aa8047-6a32-45e6-914c-896de0140811: the server could not find the requested resource (get pods dns-test-b9aa8047-6a32-45e6-914c-896de0140811)
  May  4 13:55:56.126: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3099.svc from pod dns-3099/dns-test-b9aa8047-6a32-45e6-914c-896de0140811: the server could not find the requested resource (get pods dns-test-b9aa8047-6a32-45e6-914c-896de0140811)
  May  4 13:55:56.128: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3099.svc from pod dns-3099/dns-test-b9aa8047-6a32-45e6-914c-896de0140811: the server could not find the requested resource (get pods dns-test-b9aa8047-6a32-45e6-914c-896de0140811)
  May  4 13:55:56.133: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3099.svc from pod dns-3099/dns-test-b9aa8047-6a32-45e6-914c-896de0140811: the server could not find the requested resource (get pods dns-test-b9aa8047-6a32-45e6-914c-896de0140811)
  May  4 13:55:56.150: INFO: Unable to read jessie_udp@dns-test-service from pod dns-3099/dns-test-b9aa8047-6a32-45e6-914c-896de0140811: the server could not find the requested resource (get pods dns-test-b9aa8047-6a32-45e6-914c-896de0140811)
  May  4 13:55:56.154: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-3099/dns-test-b9aa8047-6a32-45e6-914c-896de0140811: the server could not find the requested resource (get pods dns-test-b9aa8047-6a32-45e6-914c-896de0140811)
  May  4 13:55:56.157: INFO: Unable to read jessie_udp@dns-test-service.dns-3099 from pod dns-3099/dns-test-b9aa8047-6a32-45e6-914c-896de0140811: the server could not find the requested resource (get pods dns-test-b9aa8047-6a32-45e6-914c-896de0140811)
  May  4 13:55:56.160: INFO: Unable to read jessie_tcp@dns-test-service.dns-3099 from pod dns-3099/dns-test-b9aa8047-6a32-45e6-914c-896de0140811: the server could not find the requested resource (get pods dns-test-b9aa8047-6a32-45e6-914c-896de0140811)
  May  4 13:55:56.165: INFO: Unable to read jessie_udp@dns-test-service.dns-3099.svc from pod dns-3099/dns-test-b9aa8047-6a32-45e6-914c-896de0140811: the server could not find the requested resource (get pods dns-test-b9aa8047-6a32-45e6-914c-896de0140811)
  May  4 13:55:56.169: INFO: Unable to read jessie_tcp@dns-test-service.dns-3099.svc from pod dns-3099/dns-test-b9aa8047-6a32-45e6-914c-896de0140811: the server could not find the requested resource (get pods dns-test-b9aa8047-6a32-45e6-914c-896de0140811)
  May  4 13:55:56.172: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3099.svc from pod dns-3099/dns-test-b9aa8047-6a32-45e6-914c-896de0140811: the server could not find the requested resource (get pods dns-test-b9aa8047-6a32-45e6-914c-896de0140811)
  May  4 13:55:56.176: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3099.svc from pod dns-3099/dns-test-b9aa8047-6a32-45e6-914c-896de0140811: the server could not find the requested resource (get pods dns-test-b9aa8047-6a32-45e6-914c-896de0140811)
  May  4 13:55:56.190: INFO: Lookups using dns-3099/dns-test-b9aa8047-6a32-45e6-914c-896de0140811 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-3099 wheezy_tcp@dns-test-service.dns-3099 wheezy_udp@dns-test-service.dns-3099.svc wheezy_tcp@dns-test-service.dns-3099.svc wheezy_udp@_http._tcp.dns-test-service.dns-3099.svc wheezy_tcp@_http._tcp.dns-test-service.dns-3099.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3099 jessie_tcp@dns-test-service.dns-3099 jessie_udp@dns-test-service.dns-3099.svc jessie_tcp@dns-test-service.dns-3099.svc jessie_udp@_http._tcp.dns-test-service.dns-3099.svc jessie_tcp@_http._tcp.dns-test-service.dns-3099.svc]

  May  4 13:55:56.197: INFO: Pod client logs for webserver: 
  May  4 13:55:56.205: INFO: Pod client logs for querier: 
  May  4 13:55:56.210: INFO: Pod client logs for jessie-querier: 
  E0504 13:55:56.744254      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:57.744402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:58.744536      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:55:59.745030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:56:00.745580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:56:01.192: INFO: DNS probes using dns-3099/dns-test-b9aa8047-6a32-45e6-914c-896de0140811 succeeded

  STEP: deleting the pod @ 05/04/24 13:56:01.192
  STEP: deleting the test service @ 05/04/24 13:56:01.207
  STEP: deleting the test headless service @ 05/04/24 13:56:01.236
  May  4 13:56:01.250: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3099" for this suite. @ 05/04/24 13:56:01.255
• [7.225 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 05/04/24 13:56:01.261
  May  4 13:56:01.261: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename configmap @ 05/04/24 13:56:01.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:56:01.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:56:01.282
  STEP: Creating configMap with name configmap-test-volume-bd6e4efb-21cd-4127-afd5-d0fcb0c2b5e2 @ 05/04/24 13:56:01.285
  STEP: Creating a pod to test consume configMaps @ 05/04/24 13:56:01.291
  E0504 13:56:01.745799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:56:02.745852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:56:03.746528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:56:04.747052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/04/24 13:56:05.315
  May  4 13:56:05.321: INFO: Trying to get logs from node ip-172-31-18-228 pod pod-configmaps-39b54c12-9248-41fc-a19c-8a2928a2fc8b container agnhost-container: <nil>
  STEP: delete the pod @ 05/04/24 13:56:05.327
  May  4 13:56:05.342: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1538" for this suite. @ 05/04/24 13:56:05.345
• [4.089 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 05/04/24 13:56:05.35
  May  4 13:56:05.350: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename services @ 05/04/24 13:56:05.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:56:05.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:56:05.372
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-8367 @ 05/04/24 13:56:05.375
  STEP: changing the ExternalName service to type=ClusterIP @ 05/04/24 13:56:05.381
  STEP: creating replication controller externalname-service in namespace services-8367 @ 05/04/24 13:56:05.394
  I0504 13:56:05.403581      19 runners.go:197] Created replication controller with name: externalname-service, namespace: services-8367, replica count: 2
  E0504 13:56:05.747336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:56:06.748363      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:56:07.748976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0504 13:56:08.455148      19 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  May  4 13:56:08.455: INFO: Creating new exec pod
  E0504 13:56:08.749108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:56:09.749513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:56:10.750249      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:56:11.477: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-8367 exec execpodkhhx7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  May  4 13:56:11.569: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  May  4 13:56:11.569: INFO: stdout: ""
  E0504 13:56:11.751174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:56:12.478: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-8367 exec execpodkhhx7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  May  4 13:56:12.574: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  May  4 13:56:12.574: INFO: stdout: "externalname-service-7j95w"
  May  4 13:56:12.574: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-8367 exec execpodkhhx7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.232 80'
  May  4 13:56:12.663: INFO: stderr: "+ nc -v -t -w 2 10.152.183.232 80\nConnection to 10.152.183.232 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  May  4 13:56:12.663: INFO: stdout: ""
  E0504 13:56:12.752224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:56:13.575: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-8367 exec execpodkhhx7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.232 80'
  May  4 13:56:13.668: INFO: stderr: "+ nc -v -t -w 2 10.152.183.232 80\nConnection to 10.152.183.232 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  May  4 13:56:13.668: INFO: stdout: ""
  E0504 13:56:13.752361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  May  4 13:56:14.575: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-400129891 --namespace=services-8367 exec execpodkhhx7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.232 80'
  May  4 13:56:14.675: INFO: stderr: "+ nc -v -t -w 2 10.152.183.232 80\nConnection to 10.152.183.232 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  May  4 13:56:14.675: INFO: stdout: "externalname-service-7wmzm"
  May  4 13:56:14.676: INFO: Cleaning up the ExternalName to ClusterIP test service
  May  4 13:56:14.694: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8367" for this suite. @ 05/04/24 13:56:14.698
• [9.357 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 05/04/24 13:56:14.708
  May  4 13:56:14.708: INFO: >>> kubeConfig: /tmp/kubeconfig-400129891
  STEP: Building a namespace api object, basename configmap @ 05/04/24 13:56:14.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/04/24 13:56:14.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/04/24 13:56:14.731
  STEP: Creating configMap with name configmap-test-volume-map-e93d04e4-21d9-4886-b252-173d7d7ae631 @ 05/04/24 13:56:14.733
  STEP: Creating a pod to test consume configMaps @ 05/04/24 13:56:14.738
  E0504 13:56:14.752625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:56:15.752706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:56:16.752693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:56:17.752879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0504 13:56:18.753457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/04/24 13:56:18.764
  May  4 13:56:18.767: INFO: Trying to get logs from node ip-172-31-72-79 pod pod-configmaps-a7a0ee46-ab44-44a8-8009-80bf64d880c2 container agnhost-container: <nil>
  STEP: delete the pod @ 05/04/24 13:56:18.778
  May  4 13:56:18.797: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3669" for this suite. @ 05/04/24 13:56:18.801
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:88
  May  4 13:56:18.809: INFO: Running AfterSuite actions on node 1
  May  4 13:56:18.809: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:621
[ReportAfterSuite] PASSED [0.030 seconds]
------------------------------

Ran 388 of 7407 Specs in 6238.851 seconds
SUCCESS! -- 388 Passed | 0 Failed | 0 Pending | 7019 Skipped
PASS

Ginkgo ran 1 suite in 1h44m0.088659669s
Test Suite Passed
